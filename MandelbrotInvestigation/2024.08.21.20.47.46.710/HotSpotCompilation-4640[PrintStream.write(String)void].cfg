begin_compilation
  name " HotSpotCompilation-4640[java.io.PrintStream.write(String)]"
  method "HotSpotCompilation-4640[java.io.PrintStream.write(String)]"
  date 1724269734691
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a478 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a478  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.io.PrintStream
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v516 v524 ?33 ?14 v520 ?147 v522 v521 ?126 ?138 ?130 ?427 ?428 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a478 a489 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a478 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# jdk.internal.misc.InternalLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.lock
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:787) [bci: 1]
stamp: n# jdk.internal.misc.InternalLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v516 
lastLocationAccess: - 
=== Succesors ===
next: a479 
=== Usages ===
a237 v517 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v516 lastLocationAccess: - #next: a479  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?138 ?14 v259 ?126 ?130 ?427 ?428 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<PrintStream.write(String)>
localsSize: 4
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 787
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v505 a479 a480 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a478 
=== Succesors ===
=== Usages ===
a479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a479 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: int[-60939|0xffffffffffff11f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: InternalLock.lock
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 1]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v517 
lastLocationAccess: - 
=== Succesors ===
next: a480 
=== Usages ===
v518 
=== Predecessor ===
a478 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v517 lastLocationAccess: - #next: a480  <|@  <|@
f <@~|@floating>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a479 
=== Succesors ===
=== Usages ===
a480 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a479  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a480 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-61963|0xffffffffffff0df5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 1]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v518 
lastLocationAccess: - 
=== Succesors ===
next: v505 
=== Usages ===
a245 v519 v533 v535 
=== Predecessor ===
a479 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v518 lastLocationAccess: - #next: v505  <|@  <|@
f <@~|@floating>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a480 
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a480  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?3 
object: v535 
=== Succesors ===
next: j481 
=== Usages ===
=== Predecessor ===
a480 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: v535 #next: j481  <|@  <|@
f <@~|@floating>@ <|@
tid j89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
- >@ <|@
instruction <@CurrentJavaThread|@jdk.graal.compiler.hotspot.nodes.CurrentJavaThreadNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
displacement: 896
stamp: void*
stride: S1
=== Inputs ===
base: j89 
index: - 
=== Succesors ===
=== Usages ===
j481 j494 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j89 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j481 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: JavaThread::_vthread
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v513 
lastLocationAccess: - 
=== Succesors ===
next: a482 
=== Usages ===
v514 
=== Predecessor ===
v505 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v513 lastLocationAccess: - #next: a482  <|@  <|@
f <@~|@floating>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j481 
index: - 
=== Succesors ===
=== Usages ===
a482 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j481 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a482 <|@
d <@d|@=== Debug Properties ===
accessStamp: a! java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: _vthread OopHandle contents
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: a! java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v514 
lastLocationAccess: - 
=== Succesors ===
next: i248 
=== Usages ===
v107 a329 v476 
=== Predecessor ===
j481 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v514 lastLocationAccess: - #next: i248  <|@  <|@
f <@~|@floating>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a480 
=== Succesors ===
=== Usages ===
i248 i325 v326 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a480  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 5]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v213 v195 v74 v328 v328 v328 i248 v99 v115 ?212 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i39 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 4]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v158 ?208 v327 ?425 v328 i248 i114 ?150 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i248 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.compareAndSetInt(Object, long, int, int) [bci: -1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState(AbstractQueuedSynchronizer.java:569) [bci: 9]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 7]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v519 
lastLocationAccess: - 
expectedValue: i49 
newValue: i39 
stateAfter: - 
=== Succesors ===
next: v102 
=== Usages ===
v99 
=== Predecessor ===
a482 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v519 lastLocationAccess: - expectedValue: i49 newValue: i39 stateAfter: - #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 10]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i248 
y: i49 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i248 y: i49  <|@  <|@
f <@~|@floating>@ <|@
tid a245 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 1]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a480 
=== Succesors ===
=== Usages ===
v476 ?120 v327 ?72 ?425 v328 ?113 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a480  <|@  <|@
f <@~|@floating>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a480 
=== Succesors ===
=== Usages ===
a483 v330 v474 v476 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a480  <|@  <|@
tid ?14 <|@
d <@d|@=== Debug Properties ===
bci: 11
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.write(String)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
sourceFile: PrintStream.java
sourceLine: 788
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
?22 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid a237 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:787) [bci: 1]
op: Uncompress
stamp: a# jdk.internal.misc.InternalLock
=== Inputs ===
value: a478 
=== Succesors ===
=== Usages ===
?22 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a478  <|@  <|@
tid ?22 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<InternalLock.lock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
sourceFile: InternalLock.java
sourceLine: 74
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?14 
values: a237 
=== Succesors ===
=== Usages ===
?122 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?14 values: a237  <|@  <|@
tid ?122 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 322
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?22 
=== Succesors ===
=== Usages ===
?72 ?86 ?120 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?22  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 10]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
profileData: PROFILED designatedSuccessorProbability: 0.13475912048564476
stamp: void
=== Inputs ===
condition: v99 
=== Succesors ===
trueSuccessor: v101 
falseSuccessor: v100 
=== Usages ===
=== Predecessor ===
i248 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v99 #trueSuccessor: v101 #falseSuccessor: v100  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 20]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a483 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a483  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a483 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 21]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v533 
lastLocationAccess: - 
=== Succesors ===
next: v110 
=== Usages ===
a324 
=== Predecessor ===
v101 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v533 lastLocationAccess: - #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid a324 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 21]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a483 
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a483  <|@  <|@
f <@~|@floating>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 25]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a324 
y: a482 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a324 y: a482  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 25]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
profileData: PROFILED designatedSuccessorProbability: 0.9997028739455198
stamp: void
=== Inputs ===
condition: v107 
=== Succesors ===
trueSuccessor: v109 
falseSuccessor: v108 
=== Usages ===
=== Predecessor ===
a483 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v107 #trueSuccessor: v109 #falseSuccessor: v108  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 28]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: i325 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i325 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 29]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v519 
lastLocationAccess: - 
=== Succesors ===
next: v424 
=== Usages ===
i114 ?113 
=== Predecessor ===
v109 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v519 lastLocationAccess: - #next: v424  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 33]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: i32
=== Inputs ===
x: i325 
y: i39 
=== Succesors ===
=== Usages ===
v115 v326 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i325 y: i39  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i114 
y: i49 
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i114 y: i49  <|@  <|@
f <@*|@fixed>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v115 
=== Succesors ===
trueSuccessor: v422 
falseSuccessor: v423 
=== Usages ===
=== Predecessor ===
i325 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v115 #trueSuccessor: v422 #falseSuccessor: v423  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v421  <|@  <|@
tid ?120 <|@
d <@d|@=== Debug Properties ===
bci: 1
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 152
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?122 
values: a245 
=== Succesors ===
=== Usages ===
?113 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?122 values: a245  <|@  <|@
tid ?113 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<ReentrantLock$NonfairSync.initialTryLock()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 29]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
sourceFile: ReentrantLock.java
sourceLine: 229
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?120 
values: i325 a245 
=== Succesors ===
=== Usages ===
v421 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?120 values: i325 a245  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0xbb20e35b]: UnreachedCode@6[HotSpotMethod<ReentrantLock$NonfairSync.initialTryLock()>, 39]}
stamp: void
=== Inputs ===
stateBefore: ?113 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v422 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?113  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:232) [bci: 49]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v326  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractQueuedSynchronizer.state
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:554) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:232) [bci: 51]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v519 
lastLocationAccess: - 
value: i114 
stateAfter: - 
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v519 lastLocationAccess: - value: i114 stateAfter: - #next: v121  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 4]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
v326 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:235) [bci: 56]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: i71 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i71  <|@  <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/concurrent/locks/ReentrantLock$NonfairSync;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)>
=== Inputs ===
arguments: a245 i39 
=== Succesors ===
=== Usages ===
i71 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a245 i39  <|@  <|@
tid ?72 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
sourceFile: ReentrantLock.java
sourceLine: 153
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?122 
values: a245 
=== Succesors ===
=== Usages ===
?425 ?426 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?122 values: a245  <|@  <|@
tid ?425 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.acquire(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 989
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?72 
values: a245 i39 
=== Succesors ===
=== Usages ===
i71 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?72 values: a245 i39  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i71 <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#ReentrantLock$NonfairSync.tryAcquire
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v327 
stateDuring: ?425 
=== Succesors ===
next: v77 
=== Usages ===
v74 
=== Predecessor ===
v108 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v327 stateDuring: ?425 #next: v77  <|@  <|@
f <@~|@floating>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 5]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i71 
y: i49 
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i71 y: i49  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 5]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
profileData: PROFILED designatedSuccessorProbability: 0.7298301486199575
stamp: void
=== Inputs ===
condition: v74 
=== Succesors ===
trueSuccessor: v76 
falseSuccessor: v75 
=== Usages ===
=== Predecessor ===
i71 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v74 #trueSuccessor: v76 #falseSuccessor: v75  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539246251051830922
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 8]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: i81 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i81  <|@  <|@
f <@~|@floating>@ <|@
tid a78 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 9]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j79 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 14]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;, resolved>, UnresolvedJavaType<Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<long>]
stamp: void
targetMethod: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)>
=== Inputs ===
arguments: a245 a78 i39 i49 i49 i49 j79 
=== Succesors ===
=== Usages ===
i81 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a245 a78 i39 i49 i49 i49 j79  <|@  <|@
tid ?426 <|@
d <@d|@=== Debug Properties ===
bci: 15
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.acquire(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 990
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?72 
=== Succesors ===
=== Usages ===
i81 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?72  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i81 <|@
d <@d|@=== Debug Properties ===
bci: 15
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractQueuedSynchronizer.acquire
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v328 
stateDuring: ?426 
=== Succesors ===
next: v88 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v328 stateDuring: ?426 #next: v88  <|@  <|@
f <@*|@fixed>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:991) [bci: 19]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
i81 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532503281059072088
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:991) [bci: 19]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v85  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
v75 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 13]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v474 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
precise: true
stamp: void
=== Inputs ===
address: v533 
value: - 
stateBefore: - 
=== Succesors ===
next: v330 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v533 value: - stateBefore: - #next: v330  <|@  <|@
f <@~|@floating>@ <|@
tid a329 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
op: Compress
stamp: n! java.lang.Thread
=== Inputs ===
value: a482 
=== Succesors ===
=== Usages ===
v330 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractOwnableSynchronizer.exclusiveOwnerThread
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v533 
lastLocationAccess: - 
value: a329 
stateAfter: - 
=== Succesors ===
next: v476 
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v533 lastLocationAccess: - value: a329 stateAfter: - #next: v476  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
precise: false
stamp: void
=== Inputs ===
address: v533 
value: a482 
object: a245 
=== Succesors ===
next: v83 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v533 value: a482 object: a245 #next: v83  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
v476 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v83 v85 v88 v121 
=== Succesors ===
next: a484 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v83 v85 v88 v121 #next: a484  <|@  <|@
f <@~|@floating>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a484 a486 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a484 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.io.BufferedWriter
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.textOut
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 5]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
stamp: n# java.io.BufferedWriter
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v521 
lastLocationAccess: - 
=== Succesors ===
next: v507 
=== Usages ===
a255 v536 
=== Predecessor ===
v84 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v521 lastLocationAccess: - #next: v507  <|@  <|@
tid ?86 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: return
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 154
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?122 
=== Succesors ===
=== Usages ===
v508 v507 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?122  <|@  <|@
f <@~|@floating>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a484 
=== Succesors ===
=== Usages ===
v507 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a484  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?86 
object: v536 
=== Succesors ===
next: a485 
=== Usages ===
=== Predecessor ===
a484 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?86 object: v536 #next: a485  <|@  <|@
f <@~|@floating>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a485 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a485 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.io.OutputStream
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: FilterOutputStream.out
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.ensureOpen(PrintStream.java:435) [bci: 1]
at java.io.PrintStream.implWrite(PrintStream.java:809) [bci: 1]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
stamp: n java.io.OutputStream
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v520 
lastLocationAccess: - 
=== Succesors ===
next: v508 
=== Usages ===
v508 
=== Predecessor ===
v507 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v520 lastLocationAccess: - #next: v508  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-104467|0xfffffffffffe67ed]
deoptSpeculation: long[8980|0x2314]
stamp: void
=== Inputs ===
stateBefore: ?86 
object: a485 
=== Succesors ===
next: v125 
=== Usages ===
=== Predecessor ===
a485 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?86 object: a485 #next: v125  <|@  <|@
f <@~|@floating>@ <|@
tid a255 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 5]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
op: Uncompress
stamp: a# java.io.BufferedWriter
=== Inputs ===
value: a484 
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a484  <|@  <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/io/Writer;, resolved>, UnresolvedJavaType<Ljava/lang/String;>]
stamp: void
targetMethod: HotSpotMethod<Writer.write(String)>
=== Inputs ===
arguments: a255 a2 
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a255 a2  <|@  <|@
tid ?147 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.write(String)>
localsSize: 4
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 790
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?126 ?130 ?138 ?427 ?428 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
tid ?427 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(String)>
localsSize: 2
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 810
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?147 
values: a1 a2 
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?147 values: a1 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
bci: 9
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
polymorphic: false
stamp: void
targetMethod: Direct#Writer.write
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v259 
stateDuring: ?427 
=== Succesors ===
next: a486 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v259 stateDuring: ?427 #next: a486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a486 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.io.BufferedWriter
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.textOut
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 13]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
stamp: n# java.io.BufferedWriter
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v521 
lastLocationAccess: - 
=== Succesors ===
next: v499 
=== Usages ===
a261 v534 
=== Predecessor ===
v125 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v521 lastLocationAccess: - #next: v499  <|@  <|@
tid ?126 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: aload_0
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(String)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
sourceFile: PrintStream.java
sourceLine: 811
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?147 
values: a1 a2 
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?147 values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a486 
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?126 
object: v534 
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
a486 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?126 object: v534 #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid a261 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 13]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
op: Uncompress
stamp: a# java.io.BufferedWriter
=== Inputs ===
value: a486 
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a486  <|@  <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/io/BufferedWriter;, resolved>]
stamp: void
targetMethod: HotSpotMethod<BufferedWriter.flushBuffer()>
=== Inputs ===
arguments: a261 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a261  <|@  <|@
tid ?428 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(String)>
localsSize: 2
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 811
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?147 
values: a1 a2 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?147 values: a1 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
bci: 16
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
polymorphic: false
stamp: void
targetMethod: Direct#BufferedWriter.flushBuffer
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v265 
stateDuring: ?428 
=== Succesors ===
next: a487 
=== Usages ===
=== Predecessor ===
v499 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v265 stateDuring: ?428 #next: a487  <|@  <|@
f <@~|@floating>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a487 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a487 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.io.OutputStreamWriter
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.charOut
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 20]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
stamp: n# java.io.OutputStreamWriter
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v522 
lastLocationAccess: - 
=== Succesors ===
next: a488 
=== Usages ===
v523 
=== Predecessor ===
v129 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v522 lastLocationAccess: - #next: a488  <|@  <|@
tid ?130 <|@
d <@d|@=== Debug Properties ===
bci: 19
bytecode: aload_0
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(String)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
sourceFile: PrintStream.java
sourceLine: 812
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?147 
values: a1 a2 
=== Succesors ===
=== Usages ===
v510 a488 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?147 values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a487 
=== Succesors ===
=== Usages ===
a488 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a487  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a488 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# sun.nio.cs.StreamEncoder
barrierType: NONE
deoptReasonAndAction: int[-69131|0xfffffffffffef1f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: OutputStreamWriter.se
memoryOrder: PLAIN
nodeSourcePosition: at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 1]
at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
stamp: n# sun.nio.cs.StreamEncoder
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?130 
guard: - 
address: v523 
lastLocationAccess: - 
=== Succesors ===
next: v510 
=== Usages ===
a274 v537 
=== Predecessor ===
a487 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?130 guard: - address: v523 lastLocationAccess: - #next: v510  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a488 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?130 
object: v537 
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
a488 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?130 object: v537 #next: v137  <|@  <|@
f <@~|@floating>@ <|@
tid a274 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 1]
at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
op: Uncompress
stamp: a# sun.nio.cs.StreamEncoder
=== Inputs ===
value: a488 
=== Succesors ===
=== Usages ===
v278 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a488  <|@  <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Lsun/nio/cs/StreamEncoder;, resolved>]
stamp: void
targetMethod: HotSpotMethod<StreamEncoder.flushBuffer()>
=== Inputs ===
arguments: a274 
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a274  <|@  <|@
tid ?138 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(String)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
sourceFile: PrintStream.java
sourceLine: 812
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?147 
values: a1 a2 
=== Succesors ===
=== Usages ===
?139 ?429 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?147 values: a1 a2  <|@  <|@
tid ?429 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<OutputStreamWriter.flushBuffer()>
localsSize: 1
locksSize: 0
sourceFile: OutputStreamWriter.java
sourceLine: 192
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?138 
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?138  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
bci: 4
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
polymorphic: false
stamp: void
targetMethod: Direct#StreamEncoder.flushBuffer
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v278 
stateDuring: ?429 
=== Succesors ===
next: a489 
=== Usages ===
=== Predecessor ===
v510 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v278 stateDuring: ?429 #next: a489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a489 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# jdk.internal.misc.InternalLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.lock
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:792) [bci: 20]
stamp: n# jdk.internal.misc.InternalLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v516 
lastLocationAccess: - 
=== Succesors ===
next: a490 
=== Usages ===
a284 v525 
=== Predecessor ===
v137 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v516 lastLocationAccess: - #next: a490  <|@  <|@
tid ?139 <|@
d <@d|@=== Debug Properties ===
bci: 7
bytecode: return
code: ResolvedJavaMethodBytecode<OutputStreamWriter.flushBuffer()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
sourceFile: OutputStreamWriter.java
sourceLine: 193
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?138 
=== Succesors ===
=== Usages ===
v539 a490 a491 v512 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?138  <|@  <|@
f <@~|@floating>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a489 
=== Succesors ===
=== Usages ===
a490 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a490 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: int[-72971|0xfffffffffffee2f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: InternalLock.lock
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 1]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?139 
guard: - 
address: v525 
lastLocationAccess: - 
=== Succesors ===
next: a491 
=== Usages ===
a288 v526 
=== Predecessor ===
a489 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?139 guard: - address: v525 lastLocationAccess: - #next: a491  <|@  <|@
f <@~|@floating>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a490 
=== Succesors ===
=== Usages ===
a491 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a490  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a491 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-73995|0xfffffffffffedef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?139 
guard: - 
address: v526 
lastLocationAccess: - 
=== Succesors ===
next: v512 
=== Usages ===
a292 v527 v528 v529 v538 
=== Predecessor ===
a490 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?139 guard: - address: v526 lastLocationAccess: - #next: v512  <|@  <|@
f <@~|@floating>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a491 
=== Succesors ===
=== Usages ===
v512 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a491  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?139 
object: v538 
=== Succesors ===
next: i492 
=== Usages ===
=== Predecessor ===
a491 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?139 object: v538 #next: i492  <|@  <|@
f <@~|@floating>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
displacement: 13
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i492 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i492 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.autoFlush
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:813) [bci: 27]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v524 
lastLocationAccess: - 
=== Succesors ===
next: v415 
=== Usages ===
v337 
=== Predecessor ===
v512 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v524 lastLocationAccess: - #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid i336 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:813) [bci: 30]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:813) [bci: 30]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i492 
y: i336 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i492 y: i336  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:813) [bci: 30]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v337 
=== Succesors ===
trueSuccessor: v413 
falseSuccessor: v414 
=== Usages ===
=== Predecessor ===
i492 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v337 #trueSuccessor: v413 #falseSuccessor: v414  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:815) [bci: 49]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i295 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i295  <|@  <|@
f <@~|@floating>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a491 
=== Succesors ===
=== Usages ===
i295 v299 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a491  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i295 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v527 
lastLocationAccess: - 
=== Succesors ===
next: a493 
=== Usages ===
i175 v158 ?150 
=== Predecessor ===
v413 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v527 lastLocationAccess: - #next: a493  <|@  <|@
f <@~|@floating>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a491 
=== Succesors ===
=== Usages ===
a493 v321 v473 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a491  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a493 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 8]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v528 
lastLocationAccess: - 
=== Succesors ===
next: j494 
=== Usages ===
a298 
=== Predecessor ===
i295 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v528 lastLocationAccess: - #next: j494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j494 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: JavaThread::_vthread
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v513 
lastLocationAccess: - 
=== Succesors ===
next: a495 
=== Usages ===
v515 
=== Predecessor ===
a493 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v513 lastLocationAccess: - #next: a495  <|@  <|@
f <@~|@floating>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j494 
index: - 
=== Succesors ===
=== Usages ===
a495 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j494 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a495 <|@
d <@d|@=== Debug Properties ===
accessStamp: a! java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: _vthread OopHandle contents
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: a! java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v515 
lastLocationAccess: - 
=== Succesors ===
next: v419 
=== Usages ===
v156 
=== Predecessor ===
j494 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v515 lastLocationAccess: - #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid a298 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 8]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a493 
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a493  <|@  <|@
f <@~|@floating>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a298 
y: a495 
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a298 y: a495  <|@  <|@
f <@~|@floating>@ <|@
tid a288 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 1]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
op: Uncompress
stamp: a java.util.concurrent.locks.ReentrantLock
=== Inputs ===
value: a490 
=== Succesors ===
=== Usages ===
?47 ?56 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a490  <|@  <|@
tid ?33 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.write(String)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
sourceFile: PrintStream.java
sourceLine: 792
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?40 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid a284 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:792) [bci: 20]
op: Uncompress
stamp: a# jdk.internal.misc.InternalLock
=== Inputs ===
value: a489 
=== Succesors ===
=== Usages ===
?40 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a489  <|@  <|@
tid ?40 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<InternalLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
sourceFile: InternalLock.java
sourceLine: 78
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?33 
values: a284 
=== Succesors ===
=== Usages ===
?56 ?47 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?33 values: a284  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v156 
=== Succesors ===
trueSuccessor: v417 
falseSuccessor: v418 
=== Usages ===
=== Predecessor ===
a495 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v156 #trueSuccessor: v417 #falseSuccessor: v418  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176) [bci: 25]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v162  <|@  <|@
f <@~|@floating>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176) [bci: 26]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i295 
y: i39 
=== Succesors ===
=== Usages ===
v53 v162 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i295 y: i39  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:177) [bci: 36]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
profileData: PROFILED designatedSuccessorProbability: 0.8652302759969847
stamp: void
=== Inputs ===
condition: v158 
=== Succesors ===
trueSuccessor: v161 
falseSuccessor: v160 
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v158 #trueSuccessor: v161 #falseSuccessor: v160  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 39]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v473 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v473  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
precise: true
stamp: void
=== Inputs ===
address: v528 
value: - 
stateBefore: - 
=== Succesors ===
next: v321 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v528 value: - stateBefore: - #next: v321  <|@  <|@
f <@~|@floating>@ <|@
tid a341 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
rawvalue: null
stableDimension: 0
stamp: n java.lang.Object NULL
stampKind: n java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractOwnableSynchronizer.exclusiveOwnerThread
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v528 
lastLocationAccess: - 
value: a341 
stateAfter: - 
=== Succesors ===
next: v168 
=== Usages ===
=== Predecessor ===
v473 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v528 lastLocationAccess: - value: a341 stateAfter: - #next: v168  <|@  <|@
f <@*|@fixed>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
v321 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v166 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v166  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
v160 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B15" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v166 v168 
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v166 v168 #next: v299  <|@  <|@
f <@~|@floating>@ <|@
tid i174 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i175 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i175 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: i32
=== Inputs ===
x: i295 
y: i174 
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i295 y: i174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractQueuedSynchronizer.state
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:554) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 46]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v527 
lastLocationAccess: - 
value: i175 
stateAfter: - 
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v527 lastLocationAccess: - value: i175 stateAfter: - #next: v53  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 5]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
profileData: PROFILED designatedSuccessorProbability: 0.862731903000712
stamp: void
=== Inputs ===
condition: v158 
=== Succesors ===
trueSuccessor: v51 
falseSuccessor: v52 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v158 #trueSuccessor: v51 #falseSuccessor: v52  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605946017699025707
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 8]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a301 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a301  <|@  <|@
f <@~|@floating>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a491 
=== Succesors ===
=== Usages ===
a301 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a491  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a301 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.head
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v529 
lastLocationAccess: - 
=== Succesors ===
next: v181 
=== Usages ===
v530 v471 
=== Predecessor ===
v51 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v529 lastLocationAccess: - #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a301 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a301  <|@  <|@
f <@*|@fixed>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
profileData: PROFILED designatedSuccessorProbability: 0.9993015402267503
stamp: void
=== Inputs ===
condition: v471 
=== Succesors ===
trueSuccessor: v180 
falseSuccessor: v179 
=== Usages ===
=== Predecessor ===
a301 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v471 #trueSuccessor: v180 #falseSuccessor: v179  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605940590109109270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v62 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v62  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
v180 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4558697075346002629
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 4]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a306 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a306  <|@  <|@
f <@~|@floating>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a301 
=== Succesors ===
=== Usages ===
a306 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a301  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a306 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.next
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v530 
lastLocationAccess: - 
=== Succesors ===
next: v191 
=== Usages ===
a307 v472 v531 v532 
=== Predecessor ===
v179 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v530 lastLocationAccess: - #next: v191  <|@  <|@
f <@~|@floating>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a306 
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a306  <|@  <|@
f <@*|@fixed>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
profileData: PROFILED designatedSuccessorProbability: 0.899215972285532
stamp: void
=== Inputs ===
condition: v472 
=== Succesors ===
trueSuccessor: v190 
falseSuccessor: v186 
=== Usages ===
=== Predecessor ===
a306 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v472 #trueSuccessor: v190 #falseSuccessor: v186  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4558136932628500244
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v232 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v232  <|@  <|@
f <@*|@fixed>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
v190 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4544087108242127632
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 13]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: i311 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i311  <|@  <|@
f <@~|@floating>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a306 
=== Succesors ===
=== Usages ===
i313 i314 i311 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i311 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.status
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v531 
lastLocationAccess: - 
=== Succesors ===
next: v199 
=== Usages ===
v195 
=== Predecessor ===
v186 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v531 lastLocationAccess: - #next: v199  <|@  <|@
f <@~|@floating>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i311 
y: i49 
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i311 y: i49  <|@  <|@
f <@*|@fixed>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
profileData: PROFILED designatedSuccessorProbability: 0.89280868385346
stamp: void
=== Inputs ===
condition: v195 
=== Succesors ===
trueSuccessor: v198 
falseSuccessor: v196 
=== Usages ===
=== Predecessor ===
i311 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v195 #trueSuccessor: v198 #falseSuccessor: v196  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4543126429280223949
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v231  <|@  <|@
f <@*|@fixed>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
v198 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 20]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v206 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v206  <|@  <|@
tid ?56 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?40 
values: a288 
=== Succesors ===
=== Usages ===
?229 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?40 values: a288  <|@  <|@
tid ?229 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1060
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?56 
=== Succesors ===
=== Usages ===
?205 ?430 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?56  <|@  <|@
f <@~|@floating>@ <|@
tid a307 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
op: Uncompress
stamp: a java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
=== Inputs ===
value: a306 
=== Succesors ===
=== Usages ===
?205 ?212 ?208 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a306  <|@  <|@
tid ?205 <|@
d <@d|@=== Debug Properties ===
bci: 22
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 644
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?229 
values: - a307 
=== Succesors ===
=== Usages ===
?208 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?229 values: - a307  <|@  <|@
tid ?208 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer$Node.getAndUnsetStatus(int)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 481
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?205 
values: a307 i39 
=== Succesors ===
=== Usages ===
?212 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?205 values: a307 i39  <|@  <|@
f <@~|@floating>@ <|@
tid a202 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
rawvalue: Unsafe@679697080
stableDimension: 0
stamp: a!# jdk.internal.misc.Unsafe
stampKind: a java.lang.Object
value: Object[Unsafe@679697080]
=== Inputs ===
=== Succesors ===
=== Usages ===
?212 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j203 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 4]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
rawvalue: 12
stableDimension: 0
stamp: i64 [12]
stampKind: i64
value: long[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
?212 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i204 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 9]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2]
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
?212 i210 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
v196 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533803057202577944
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 39
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v206 
=== Succesors ===
next: i313 
=== Usages ===
v214 v218 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v206 #next: i313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i313 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.status
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.getIntVolatile(Object, long) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 3]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v531 
lastLocationAccess: - 
=== Succesors ===
next: i314 
=== Usages ===
i210 i314 ?212 
=== Predecessor ===
v207 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v531 lastLocationAccess: - #next: i314  <|@  <|@
f <@~|@floating>@ <|@
tid i210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i313 
y: i204 
=== Succesors ===
=== Usages ===
i314 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i313 y: i204  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i314 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.weakCompareAndSetInt(Object, long, int, int) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 18]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v531 
lastLocationAccess: - 
expectedValue: i313 
newValue: i210 
stateAfter: - 
=== Succesors ===
next: v220 
=== Usages ===
v213 
=== Predecessor ===
i313 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v531 lastLocationAccess: - expectedValue: i313 newValue: i210 stateAfter: - #next: v220  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i314 
y: i49 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i314 y: i49  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v213 
=== Succesors ===
trueSuccessor: v219 
falseSuccessor: v214 
=== Usages ===
=== Predecessor ===
i314 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v213 #trueSuccessor: v219 #falseSuccessor: v214  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529299457575207448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v407  <|@  <|@
tid ?212 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: ifeq
code: ResolvedJavaMethodBytecode<Unsafe.getAndBitwiseAndInt(Object, long, int)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.Unsafe.weakCompareAndSetInt(Object, long, int, int) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 18]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
sourceFile: Unsafe.java
sourceLine: 3233
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?208 
values: i49 a202 a307 j203 - i204 i313 
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?208 values: i49 a202 a307 j203 - i204 i313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
stateBefore: ?212 
=== Succesors ===
next: v218 
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?212 #next: v218  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
loopBegin: v207 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v207  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3235) [bci: 24]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v207 
=== Succesors ===
next: a496 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v207 #next: a496  <|@  <|@
f <@~|@floating>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a306 
=== Succesors ===
=== Usages ===
a496 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a496 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.waiter
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 27]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v532 
lastLocationAccess: - 
=== Succesors ===
next: v223 
=== Usages ===
a318 
=== Predecessor ===
v214 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v532 lastLocationAccess: - #next: v223  <|@  <|@
f <@~|@floating>@ <|@
tid a318 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 27]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a496 
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a496  <|@  <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
referencedType: [null]
returnStamp: void
signature: [UnresolvedJavaType<Ljava/lang/Thread;>]
stamp: void
targetMethod: HotSpotMethod<LockSupport.unpark(Thread)>
=== Inputs ===
arguments: a318 
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a318  <|@  <|@
tid ?430 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 645
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?229 
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?229  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
bci: 30
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
polymorphic: false
stamp: void
targetMethod: Direct#LockSupport.unpark
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v319 
stateDuring: ?430 
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
a496 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v319 stateDuring: ?430 #next: v230  <|@  <|@
f <@*|@fixed>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
v223 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4594113624694502228
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1063) [bci: 17]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v64  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
v52 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B24" "B20" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v62 v64 v230 v231 v232 
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v62 v64 v230 v231 v232 #next: v66  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:806) [bci: 80]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v416 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v416  <|@  <|@
tid ?47 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?40 
values: a288 
=== Succesors ===
=== Usages ===
?176 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?40 values: a288  <|@  <|@
f <@~|@floating>@ <|@
tid a292 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a491 
=== Succesors ===
=== Usages ===
?176 ?150 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a491  <|@  <|@
tid ?176 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1059
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?47 
values: a292 
=== Succesors ===
=== Usages ===
?150 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?47 values: a292  <|@  <|@
tid ?150 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: iload_1
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.tryRelease(int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
sourceFile: ReentrantLock.java
sourceLine: 173
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?176 
values: i295 a292 i39 
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?176 values: i295 a292 i39  <|@  <|@
f <@*|@fixed>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
reason: UnreachedCode
speculation: {0x0000000000006194[index: 780, len: 20, hash: 0xadceab53]: UnreachedCode@6[HotSpotMethod<ReentrantLock$Sync.tryRelease(int)>, 17]}
stamp: void
=== Inputs ===
stateBefore: ?150 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?150  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:813) [bci: 30]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v539 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v539  <|@  <|@
f <@*|@fixed>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 412
mayConvertToGuard: true
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
reason: UnreachedCode
speculation: {0x0000000000002094[index: 260, len: 20, hash: 0x9c96d22a]: UnreachedCode@6[HotSpotMethod<PrintStream.implWrite(String)>, 33]}
stamp: void
=== Inputs ===
stateBefore: ?139 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?139  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7a64b983 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v4|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOV input: [v5|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v4|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v9|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v4|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 12], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v7|QWORD[.], ~newValue: v6|QWORD[.]) {temp: v19|QWORD, temp2: v20|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|QWORD[.], y: v11|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 16], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v21|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v22|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v24|DWORD[_] * 8] state [bci:12, 16] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v27|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v27|DWORD[_] * 8] state [bci:19, 16] <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16] <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v30|DWORD[_] = MOV input: [v29|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v31|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v31|DWORD[_] * 8] state [bci:7, 23, 16] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B28 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOV input: [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v35|QWORD[.], y: [v34|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v31|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v38|QWORD, temp2: v39|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v31|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B15" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = DEC value: v32|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|DWORD[_] * 8 + 16], y: v40|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.862731903000712 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605946017699025707
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v41|DWORD[_], y: v41|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605940590109109270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4594113624694502228
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B24" "B20" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4558697075346002629
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|DWORD[_], y: v42|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4558136932628500244
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4544087108242127632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v42|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4543126429280223949
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v7|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.7298301486199575 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539246251051830922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532503281059072088
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533803057202577944
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = AND x: v44|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v42|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v45|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529299457575207448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v43|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v44|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v43|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v43|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT temp: v46|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -107795 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v12|DWORD 
locals: v7|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105491 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106515 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24980 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v32|DWORD 
locals: v49|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v49|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        42
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: invokevirtual #50         // implWrite:(java.lang.String)void
    19: aload_0       
    20: getfield      #17         // lock:jdk.internal.misc.InternalLock
    23: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    26: goto          39
    29: astore_2      
    30: aload_0       
    31: getfield      #17         // lock:jdk.internal.misc.InternalLock
    34: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_2       
    38: athrow        
    39: goto          61
    42: aload_0       
    43: dup           
    44: astore_2      
    45: monitorenter  
    46: aload_0       
    47: aload_1       
    48: invokevirtual #50         // implWrite:(java.lang.String)void
    51: aload_2       
    52: monitorexit   
    53: goto          61
    56: astore_3      
    57: aload_2       
    58: monitorexit   
    59: aload_3       
    60: athrow        
    61: goto          80
    64: astore_2      
    65: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    68: invokevirtual #39         // java.lang.Thread.interrupt:()void
    71: goto          80
    74: astore_2      
    75: aload_0       
    76: iconst_1      
    77: putfield      #5          // trouble:boolean
    80: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a478 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a478  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.io.PrintStream
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v516 v524 ?33 ?14 v520 ?147 v522 v521 ?126 ?138 ?130 ?427 ?428 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v516 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a478 a489 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a478 <|@
result v2|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# jdk.internal.misc.InternalLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.lock
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:787) [bci: 1]
stamp: n# jdk.internal.misc.InternalLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v516 
lastLocationAccess: - 
=== Succesors ===
next: a479 
=== Usages ===
a237 v517 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v516 lastLocationAccess: - #next: a479  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?138 ?14 v259 ?126 ?130 ?427 ?428 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<PrintStream.write(String)>
localsSize: 4
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 787
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v505 a479 a480 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v517 <|@
result [v2|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a478 
=== Succesors ===
=== Usages ===
a479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a479 <|@
result v3|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: int[-60939|0xffffffffffff11f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: InternalLock.lock
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 1]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v517 
lastLocationAccess: - 
=== Succesors ===
next: a480 
=== Usages ===
v518 
=== Predecessor ===
a478 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v517 lastLocationAccess: - #next: a480  <|@  <|@
f <@~|@floating>@ <|@
tid v518 <|@
result [v3|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a479 
=== Succesors ===
=== Usages ===
a480 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a479  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a480 <|@
result v4|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-61963|0xffffffffffff0df5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 1]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v518 
lastLocationAccess: - 
=== Succesors ===
next: v505 
=== Usages ===
a245 v519 v533 v535 
=== Predecessor ===
a479 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v518 lastLocationAccess: - #next: v505  <|@  <|@
f <@~|@floating>@ <|@
tid v535 <|@
result [v4|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a480 
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a480  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?3 
object: v535 
=== Succesors ===
next: j481 
=== Usages ===
=== Predecessor ===
a480 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: v535 #next: j481  <|@  <|@
f <@~|@floating>@ <|@
tid j89 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
- >@ <|@
instruction <@CurrentJavaThread|@jdk.graal.compiler.hotspot.nodes.CurrentJavaThreadNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v513 <|@
result [r15|QWORD + 896] <|@
d <@d|@=== Debug Properties ===
displacement: 896
stamp: void*
stride: S1
=== Inputs ===
base: j89 
index: - 
=== Succesors ===
=== Usages ===
j481 j494 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j89 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j481 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: JavaThread::_vthread
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v513 
lastLocationAccess: - 
=== Succesors ===
next: a482 
=== Usages ===
v514 
=== Predecessor ===
v505 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v513 lastLocationAccess: - #next: a482  <|@  <|@
f <@~|@floating>@ <|@
tid v514 <|@
result [v5|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j481 
index: - 
=== Succesors ===
=== Usages ===
a482 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j481 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a482 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
accessStamp: a! java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: _vthread OopHandle contents
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: a! java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v514 
lastLocationAccess: - 
=== Succesors ===
next: i248 
=== Usages ===
v107 a329 v476 
=== Predecessor ===
j481 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v514 lastLocationAccess: - #next: i248  <|@  <|@
f <@~|@floating>@ <|@
tid v519 <|@
result [v4|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a480 
=== Succesors ===
=== Usages ===
i248 i325 v326 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a480  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 5]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v213 v195 v74 v328 v328 v328 i248 v99 v115 ?212 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i39 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 4]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v158 ?208 v327 ?425 v328 i248 i114 ?150 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i248 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.compareAndSetInt(Object, long, int, int) [bci: -1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState(AbstractQueuedSynchronizer.java:569) [bci: 9]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 7]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v519 
lastLocationAccess: - 
expectedValue: i49 
newValue: i39 
stateAfter: - 
=== Succesors ===
next: v102 
=== Usages ===
v99 
=== Predecessor ===
a482 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v519 lastLocationAccess: - expectedValue: i49 newValue: i39 stateAfter: - #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 10]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i248 
y: i49 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i248 y: i49  <|@  <|@
f <@~|@floating>@ <|@
tid a245 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 1]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a480 
=== Succesors ===
=== Usages ===
v476 ?120 v327 ?72 ?425 v328 ?113 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a480  <|@  <|@
f <@~|@floating>@ <|@
tid v533 <|@
result [v4|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a480 
=== Succesors ===
=== Usages ===
a483 v330 v474 v476 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a480  <|@  <|@
tid ?14 <|@
d <@d|@=== Debug Properties ===
bci: 11
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.write(String)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
sourceFile: PrintStream.java
sourceLine: 788
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
?22 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid a237 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:787) [bci: 1]
op: Uncompress
stamp: a# jdk.internal.misc.InternalLock
=== Inputs ===
value: a478 
=== Succesors ===
=== Usages ===
?22 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a478  <|@  <|@
tid ?22 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<InternalLock.lock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
sourceFile: InternalLock.java
sourceLine: 74
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?14 
values: a237 
=== Succesors ===
=== Usages ===
?122 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?14 values: a237  <|@  <|@
tid ?122 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 322
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?22 
=== Succesors ===
=== Usages ===
?72 ?86 ?120 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?22  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 10]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
profileData: PROFILED designatedSuccessorProbability: 0.13475912048564476
stamp: void
=== Inputs ===
condition: v99 
=== Succesors ===
trueSuccessor: v101 
falseSuccessor: v100 
=== Usages ===
=== Predecessor ===
i248 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v99 #trueSuccessor: v101 #falseSuccessor: v100  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7a64b983 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v4|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOV input: [v5|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v4|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v9|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 20]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a483 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a483  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a483 <|@
result v10|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 21]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v533 
lastLocationAccess: - 
=== Succesors ===
next: v110 
=== Usages ===
a324 
=== Predecessor ===
v101 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v533 lastLocationAccess: - #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid a324 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 21]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a483 
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a483  <|@  <|@
f <@~|@floating>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 25]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a324 
y: a482 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a324 y: a482  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 25]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
profileData: PROFILED designatedSuccessorProbability: 0.9997028739455198
stamp: void
=== Inputs ===
condition: v107 
=== Succesors ===
trueSuccessor: v109 
falseSuccessor: v108 
=== Usages ===
=== Predecessor ===
a483 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v107 #trueSuccessor: v109 #falseSuccessor: v108  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|QWORD[.], y: v11|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 28]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: i325 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i325 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 29]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v519 
lastLocationAccess: - 
=== Succesors ===
next: v424 
=== Usages ===
i114 ?113 
=== Predecessor ===
v109 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v519 lastLocationAccess: - #next: v424  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 33]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: i32
=== Inputs ===
x: i325 
y: i39 
=== Succesors ===
=== Usages ===
v115 v326 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i325 y: i39  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i114 
y: i49 
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i114 y: i49  <|@  <|@
f <@*|@fixed>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v115 
=== Succesors ===
trueSuccessor: v422 
falseSuccessor: v423 
=== Usages ===
=== Predecessor ===
i325 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v115 #trueSuccessor: v422 #falseSuccessor: v423  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v421  <|@  <|@
tid ?120 <|@
d <@d|@=== Debug Properties ===
bci: 1
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 152
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?122 
values: a245 
=== Succesors ===
=== Usages ===
?113 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?122 values: a245  <|@  <|@
tid ?113 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<ReentrantLock$NonfairSync.initialTryLock()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 29]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
sourceFile: ReentrantLock.java
sourceLine: 229
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?120 
values: i325 a245 
=== Succesors ===
=== Usages ===
v421 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?120 values: i325 a245  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0xbb20e35b]: UnreachedCode@6[HotSpotMethod<ReentrantLock$NonfairSync.initialTryLock()>, 39]}
stamp: void
=== Inputs ===
stateBefore: ?113 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v422 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?113  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -107795 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v12|DWORD 
locals: v7|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:232) [bci: 49]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v326  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractQueuedSynchronizer.state
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:554) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:232) [bci: 51]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v519 
lastLocationAccess: - 
value: i114 
stateAfter: - 
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v519 lastLocationAccess: - value: i114 stateAfter: - #next: v121  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 4]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
v326 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 16], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:235) [bci: 56]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: i71 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i71  <|@  <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/concurrent/locks/ReentrantLock$NonfairSync;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)>
=== Inputs ===
arguments: a245 i39 
=== Succesors ===
=== Usages ===
i71 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a245 i39  <|@  <|@
tid ?72 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
sourceFile: ReentrantLock.java
sourceLine: 153
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?122 
values: a245 
=== Succesors ===
=== Usages ===
?425 ?426 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?122 values: a245  <|@  <|@
tid ?425 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.acquire(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 989
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?72 
values: a245 i39 
=== Succesors ===
=== Usages ===
i71 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?72 values: a245 i39  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i71 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#ReentrantLock$NonfairSync.tryAcquire
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v327 
stateDuring: ?425 
=== Succesors ===
next: v77 
=== Usages ===
v74 
=== Predecessor ===
v108 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v327 stateDuring: ?425 #next: v77  <|@  <|@
f <@~|@floating>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 5]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i71 
y: i49 
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i71 y: i49  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 5]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
profileData: PROFILED designatedSuccessorProbability: 0.7298301486199575
stamp: void
=== Inputs ===
condition: v74 
=== Succesors ===
trueSuccessor: v76 
falseSuccessor: v75 
=== Usages ===
=== Predecessor ===
i71 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v74 #trueSuccessor: v76 #falseSuccessor: v75  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v7|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.7298301486199575 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539246251051830922
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 8]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: i81 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i81  <|@  <|@
f <@~|@floating>@ <|@
tid a78 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 9]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j79 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 14]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;, resolved>, UnresolvedJavaType<Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<long>]
stamp: void
targetMethod: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)>
=== Inputs ===
arguments: a245 a78 i39 i49 i49 i49 j79 
=== Succesors ===
=== Usages ===
i81 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a245 a78 i39 i49 i49 i49 j79  <|@  <|@
tid ?426 <|@
d <@d|@=== Debug Properties ===
bci: 15
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.acquire(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 990
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?72 
=== Succesors ===
=== Usages ===
i81 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?72  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i81 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 15
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractQueuedSynchronizer.acquire
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v328 
stateDuring: ?426 
=== Succesors ===
next: v88 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v328 stateDuring: ?426 #next: v88  <|@  <|@
f <@*|@fixed>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:991) [bci: 19]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
i81 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532503281059072088
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:991) [bci: 19]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v85  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
v75 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 13]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v474 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
precise: true
stamp: void
=== Inputs ===
address: v533 
value: - 
stateBefore: - 
=== Succesors ===
next: v330 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v533 value: - stateBefore: - #next: v330  <|@  <|@
f <@~|@floating>@ <|@
tid a329 <|@
result v18|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
op: Compress
stamp: n! java.lang.Thread
=== Inputs ===
value: a482 
=== Succesors ===
=== Usages ===
v330 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractOwnableSynchronizer.exclusiveOwnerThread
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v533 
lastLocationAccess: - 
value: a329 
stateAfter: - 
=== Succesors ===
next: v476 
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v533 lastLocationAccess: - value: a329 stateAfter: - #next: v476  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
precise: false
stamp: void
=== Inputs ===
address: v533 
value: a482 
object: a245 
=== Succesors ===
next: v83 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v533 value: a482 object: a245 #next: v83  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
v476 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v4|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 12], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v7|QWORD[.], ~newValue: v6|QWORD[.]) {temp: v19|QWORD, temp2: v20|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v83 v85 v88 v121 
=== Succesors ===
next: a484 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v83 v85 v88 v121 #next: a484  <|@  <|@
f <@~|@floating>@ <|@
tid v521 <|@
result [v0|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a484 a486 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a484 <|@
result v21|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.io.BufferedWriter
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.textOut
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 5]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
stamp: n# java.io.BufferedWriter
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v521 
lastLocationAccess: - 
=== Succesors ===
next: v507 
=== Usages ===
a255 v536 
=== Predecessor ===
v84 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v521 lastLocationAccess: - #next: v507  <|@  <|@
tid ?86 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: return
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 154
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?122 
=== Succesors ===
=== Usages ===
v508 v507 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?122  <|@  <|@
f <@~|@floating>@ <|@
tid v536 <|@
result [v21|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a484 
=== Succesors ===
=== Usages ===
v507 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a484  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?86 
object: v536 
=== Succesors ===
next: a485 
=== Usages ===
=== Predecessor ===
a484 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?86 object: v536 #next: a485  <|@  <|@
f <@~|@floating>@ <|@
tid v520 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a485 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a485 <|@
result v22|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.io.OutputStream
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: FilterOutputStream.out
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.ensureOpen(PrintStream.java:435) [bci: 1]
at java.io.PrintStream.implWrite(PrintStream.java:809) [bci: 1]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
stamp: n java.io.OutputStream
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v520 
lastLocationAccess: - 
=== Succesors ===
next: v508 
=== Usages ===
v508 
=== Predecessor ===
v507 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v520 lastLocationAccess: - #next: v508  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-104467|0xfffffffffffe67ed]
deoptSpeculation: long[8980|0x2314]
stamp: void
=== Inputs ===
stateBefore: ?86 
object: a485 
=== Succesors ===
next: v125 
=== Usages ===
=== Predecessor ===
a485 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?86 object: a485 #next: v125  <|@  <|@
f <@~|@floating>@ <|@
tid a255 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 5]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
op: Uncompress
stamp: a# java.io.BufferedWriter
=== Inputs ===
value: a484 
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a484  <|@  <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/io/Writer;, resolved>, UnresolvedJavaType<Ljava/lang/String;>]
stamp: void
targetMethod: HotSpotMethod<Writer.write(String)>
=== Inputs ===
arguments: a255 a2 
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a255 a2  <|@  <|@
tid ?147 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.write(String)>
localsSize: 4
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 790
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?126 ?130 ?138 ?427 ?428 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
tid ?427 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(String)>
localsSize: 2
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 810
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?147 
values: a1 a2 
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?147 values: a1 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
bci: 9
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
polymorphic: false
stamp: void
targetMethod: Direct#Writer.write
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v259 
stateDuring: ?427 
=== Succesors ===
next: a486 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v259 stateDuring: ?427 #next: a486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a486 <|@
result v24|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.io.BufferedWriter
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.textOut
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 13]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
stamp: n# java.io.BufferedWriter
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v521 
lastLocationAccess: - 
=== Succesors ===
next: v499 
=== Usages ===
a261 v534 
=== Predecessor ===
v125 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v521 lastLocationAccess: - #next: v499  <|@  <|@
tid ?126 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: aload_0
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(String)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
sourceFile: PrintStream.java
sourceLine: 811
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?147 
values: a1 a2 
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?147 values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v534 <|@
result [v24|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a486 
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?126 
object: v534 
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
a486 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?126 object: v534 #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid a261 <|@
result v25|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 13]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
op: Uncompress
stamp: a# java.io.BufferedWriter
=== Inputs ===
value: a486 
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a486  <|@  <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/io/BufferedWriter;, resolved>]
stamp: void
targetMethod: HotSpotMethod<BufferedWriter.flushBuffer()>
=== Inputs ===
arguments: a261 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a261  <|@  <|@
tid ?428 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(String)>
localsSize: 2
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 811
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?147 
values: a1 a2 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?147 values: a1 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
bci: 16
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
polymorphic: false
stamp: void
targetMethod: Direct#BufferedWriter.flushBuffer
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v265 
stateDuring: ?428 
=== Succesors ===
next: a487 
=== Usages ===
=== Predecessor ===
v499 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v265 stateDuring: ?428 #next: a487  <|@  <|@
f <@~|@floating>@ <|@
tid v522 <|@
result [v0|QWORD[.] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a487 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a487 <|@
result v26|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.io.OutputStreamWriter
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.charOut
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 20]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
stamp: n# java.io.OutputStreamWriter
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v522 
lastLocationAccess: - 
=== Succesors ===
next: a488 
=== Usages ===
v523 
=== Predecessor ===
v129 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v522 lastLocationAccess: - #next: a488  <|@  <|@
tid ?130 <|@
d <@d|@=== Debug Properties ===
bci: 19
bytecode: aload_0
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(String)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
sourceFile: PrintStream.java
sourceLine: 812
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?147 
values: a1 a2 
=== Succesors ===
=== Usages ===
v510 a488 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?147 values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v523 <|@
result [v26|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a487 
=== Succesors ===
=== Usages ===
a488 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a487  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a488 <|@
result v27|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# sun.nio.cs.StreamEncoder
barrierType: NONE
deoptReasonAndAction: int[-69131|0xfffffffffffef1f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: OutputStreamWriter.se
memoryOrder: PLAIN
nodeSourcePosition: at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 1]
at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
stamp: n# sun.nio.cs.StreamEncoder
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?130 
guard: - 
address: v523 
lastLocationAccess: - 
=== Succesors ===
next: v510 
=== Usages ===
a274 v537 
=== Predecessor ===
a487 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?130 guard: - address: v523 lastLocationAccess: - #next: v510  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
result [v27|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a488 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?130 
object: v537 
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
a488 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?130 object: v537 #next: v137  <|@  <|@
f <@~|@floating>@ <|@
tid a274 <|@
result v28|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 1]
at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
op: Uncompress
stamp: a# sun.nio.cs.StreamEncoder
=== Inputs ===
value: a488 
=== Succesors ===
=== Usages ===
v278 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a488  <|@  <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Lsun/nio/cs/StreamEncoder;, resolved>]
stamp: void
targetMethod: HotSpotMethod<StreamEncoder.flushBuffer()>
=== Inputs ===
arguments: a274 
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a274  <|@  <|@
tid ?138 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(String)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
sourceFile: PrintStream.java
sourceLine: 812
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?147 
values: a1 a2 
=== Succesors ===
=== Usages ===
?139 ?429 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?147 values: a1 a2  <|@  <|@
tid ?429 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<OutputStreamWriter.flushBuffer()>
localsSize: 1
locksSize: 0
sourceFile: OutputStreamWriter.java
sourceLine: 192
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?138 
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?138  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
bci: 4
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
polymorphic: false
stamp: void
targetMethod: Direct#StreamEncoder.flushBuffer
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v278 
stateDuring: ?429 
=== Succesors ===
next: a489 
=== Usages ===
=== Predecessor ===
v510 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v278 stateDuring: ?429 #next: a489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a489 <|@
result v29|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# jdk.internal.misc.InternalLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.lock
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:792) [bci: 20]
stamp: n# jdk.internal.misc.InternalLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v516 
lastLocationAccess: - 
=== Succesors ===
next: a490 
=== Usages ===
a284 v525 
=== Predecessor ===
v137 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v516 lastLocationAccess: - #next: a490  <|@  <|@
tid ?139 <|@
d <@d|@=== Debug Properties ===
bci: 7
bytecode: return
code: ResolvedJavaMethodBytecode<OutputStreamWriter.flushBuffer()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
sourceFile: OutputStreamWriter.java
sourceLine: 193
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?138 
=== Succesors ===
=== Usages ===
v539 a490 a491 v512 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?138  <|@  <|@
f <@~|@floating>@ <|@
tid v525 <|@
result [v29|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a489 
=== Succesors ===
=== Usages ===
a490 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a490 <|@
result v30|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: int[-72971|0xfffffffffffee2f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: InternalLock.lock
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 1]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?139 
guard: - 
address: v525 
lastLocationAccess: - 
=== Succesors ===
next: a491 
=== Usages ===
a288 v526 
=== Predecessor ===
a489 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?139 guard: - address: v525 lastLocationAccess: - #next: a491  <|@  <|@
f <@~|@floating>@ <|@
tid v526 <|@
result [v30|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a490 
=== Succesors ===
=== Usages ===
a491 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a490  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a491 <|@
result v31|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-73995|0xfffffffffffedef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?139 
guard: - 
address: v526 
lastLocationAccess: - 
=== Succesors ===
next: v512 
=== Usages ===
a292 v527 v528 v529 v538 
=== Predecessor ===
a490 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?139 guard: - address: v526 lastLocationAccess: - #next: v512  <|@  <|@
f <@~|@floating>@ <|@
tid v538 <|@
result [v31|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a491 
=== Succesors ===
=== Usages ===
v512 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a491  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?139 
object: v538 
=== Succesors ===
next: i492 
=== Usages ===
=== Predecessor ===
a491 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?139 object: v538 #next: i492  <|@  <|@
f <@~|@floating>@ <|@
tid v524 <|@
result [v0|QWORD[.] + 13] <|@
d <@d|@=== Debug Properties ===
displacement: 13
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i492 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i492 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.autoFlush
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:813) [bci: 27]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v524 
lastLocationAccess: - 
=== Succesors ===
next: v415 
=== Usages ===
v337 
=== Predecessor ===
v512 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v524 lastLocationAccess: - #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid i336 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:813) [bci: 30]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:813) [bci: 30]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i492 
y: i336 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i492 y: i336  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:813) [bci: 30]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v337 
=== Succesors ===
trueSuccessor: v413 
falseSuccessor: v414 
=== Usages ===
=== Predecessor ===
i492 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v337 #trueSuccessor: v413 #falseSuccessor: v414  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v21|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v22|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v24|DWORD[_] * 8] state [bci:12, 16] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v27|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v27|DWORD[_] * 8] state [bci:19, 16] <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16] <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v30|DWORD[_] = MOV input: [v29|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v31|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v31|DWORD[_] * 8] state [bci:7, 23, 16] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B28 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:815) [bci: 49]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i295 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i295  <|@  <|@
f <@~|@floating>@ <|@
tid v527 <|@
result [v31|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a491 
=== Succesors ===
=== Usages ===
i295 v299 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a491  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i295 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v527 
lastLocationAccess: - 
=== Succesors ===
next: a493 
=== Usages ===
i175 v158 ?150 
=== Predecessor ===
v413 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v527 lastLocationAccess: - #next: a493  <|@  <|@
f <@~|@floating>@ <|@
tid v528 <|@
result [v31|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a491 
=== Succesors ===
=== Usages ===
a493 v321 v473 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a491  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a493 <|@
result v33|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 8]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v528 
lastLocationAccess: - 
=== Succesors ===
next: j494 
=== Usages ===
a298 
=== Predecessor ===
i295 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v528 lastLocationAccess: - #next: j494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j494 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: JavaThread::_vthread
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v513 
lastLocationAccess: - 
=== Succesors ===
next: a495 
=== Usages ===
v515 
=== Predecessor ===
a493 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v513 lastLocationAccess: - #next: a495  <|@  <|@
f <@~|@floating>@ <|@
tid v515 <|@
result [v34|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j494 
index: - 
=== Succesors ===
=== Usages ===
a495 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j494 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a495 <|@
d <@d|@=== Debug Properties ===
accessStamp: a! java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: _vthread OopHandle contents
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: a! java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v515 
lastLocationAccess: - 
=== Succesors ===
next: v419 
=== Usages ===
v156 
=== Predecessor ===
j494 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v515 lastLocationAccess: - #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid a298 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 8]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a493 
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a493  <|@  <|@
f <@~|@floating>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a298 
y: a495 
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a298 y: a495  <|@  <|@
f <@~|@floating>@ <|@
tid a288 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 1]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
op: Uncompress
stamp: a java.util.concurrent.locks.ReentrantLock
=== Inputs ===
value: a490 
=== Succesors ===
=== Usages ===
?47 ?56 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a490  <|@  <|@
tid ?33 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.write(String)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
sourceFile: PrintStream.java
sourceLine: 792
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?40 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid a284 <|@
result v37|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:792) [bci: 20]
op: Uncompress
stamp: a# jdk.internal.misc.InternalLock
=== Inputs ===
value: a489 
=== Succesors ===
=== Usages ===
?40 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a489  <|@  <|@
tid ?40 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<InternalLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
sourceFile: InternalLock.java
sourceLine: 78
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?33 
values: a284 
=== Succesors ===
=== Usages ===
?56 ?47 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?33 values: a284  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v156 
=== Succesors ===
trueSuccessor: v417 
falseSuccessor: v418 
=== Usages ===
=== Predecessor ===
a495 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v156 #trueSuccessor: v417 #falseSuccessor: v418  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOV input: [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v35|QWORD[.], y: [v34|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176) [bci: 25]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v162  <|@  <|@
f <@~|@floating>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176) [bci: 26]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i295 
y: i39 
=== Succesors ===
=== Usages ===
v53 v162 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i295 y: i39  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:177) [bci: 36]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
profileData: PROFILED designatedSuccessorProbability: 0.8652302759969847
stamp: void
=== Inputs ===
condition: v158 
=== Succesors ===
trueSuccessor: v161 
falseSuccessor: v160 
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v158 #trueSuccessor: v161 #falseSuccessor: v160  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 39]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v473 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v473  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
precise: true
stamp: void
=== Inputs ===
address: v528 
value: - 
stateBefore: - 
=== Succesors ===
next: v321 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v528 value: - stateBefore: - #next: v321  <|@  <|@
f <@~|@floating>@ <|@
tid a341 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
rawvalue: null
stableDimension: 0
stamp: n java.lang.Object NULL
stampKind: n java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractOwnableSynchronizer.exclusiveOwnerThread
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v528 
lastLocationAccess: - 
value: a341 
stateAfter: - 
=== Succesors ===
next: v168 
=== Usages ===
=== Predecessor ===
v473 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v528 lastLocationAccess: - value: a341 stateAfter: - #next: v168  <|@  <|@
f <@*|@fixed>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
v321 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v31|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v38|QWORD, temp2: v39|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v31|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v166 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v166  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
v160 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B15" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v166 v168 
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v166 v168 #next: v299  <|@  <|@
f <@~|@floating>@ <|@
tid i174 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i175 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i175 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: i32
=== Inputs ===
x: i295 
y: i174 
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i295 y: i174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractQueuedSynchronizer.state
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:554) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 46]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v527 
lastLocationAccess: - 
value: i175 
stateAfter: - 
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v527 lastLocationAccess: - value: i175 stateAfter: - #next: v53  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 5]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
profileData: PROFILED designatedSuccessorProbability: 0.862731903000712
stamp: void
=== Inputs ===
condition: v158 
=== Succesors ===
trueSuccessor: v51 
falseSuccessor: v52 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v158 #trueSuccessor: v51 #falseSuccessor: v52  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = DEC value: v32|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|DWORD[_] * 8 + 16], y: v40|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.862731903000712 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605946017699025707
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 8]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a301 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a301  <|@  <|@
f <@~|@floating>@ <|@
tid v529 <|@
result [v31|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a491 
=== Succesors ===
=== Usages ===
a301 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a491  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a301 <|@
result v41|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.head
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v529 
lastLocationAccess: - 
=== Succesors ===
next: v181 
=== Usages ===
v530 v471 
=== Predecessor ===
v51 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v529 lastLocationAccess: - #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a301 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a301  <|@  <|@
f <@*|@fixed>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
profileData: PROFILED designatedSuccessorProbability: 0.9993015402267503
stamp: void
=== Inputs ===
condition: v471 
=== Succesors ===
trueSuccessor: v180 
falseSuccessor: v179 
=== Usages ===
=== Predecessor ===
a301 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v471 #trueSuccessor: v180 #falseSuccessor: v179  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v41|DWORD[_], y: v41|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605940590109109270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v62 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v62  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
v180 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4558697075346002629
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 4]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a306 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a306  <|@  <|@
f <@~|@floating>@ <|@
tid v530 <|@
result [v41|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a301 
=== Succesors ===
=== Usages ===
a306 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a301  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a306 <|@
result v42|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.next
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v530 
lastLocationAccess: - 
=== Succesors ===
next: v191 
=== Usages ===
a307 v472 v531 v532 
=== Predecessor ===
v179 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v530 lastLocationAccess: - #next: v191  <|@  <|@
f <@~|@floating>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a306 
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a306  <|@  <|@
f <@*|@fixed>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
profileData: PROFILED designatedSuccessorProbability: 0.899215972285532
stamp: void
=== Inputs ===
condition: v472 
=== Succesors ===
trueSuccessor: v190 
falseSuccessor: v186 
=== Usages ===
=== Predecessor ===
a306 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v472 #trueSuccessor: v190 #falseSuccessor: v186  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|DWORD[_], y: v42|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4558136932628500244
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v232 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v232  <|@  <|@
f <@*|@fixed>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
v190 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4544087108242127632
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 13]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: i311 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i311  <|@  <|@
f <@~|@floating>@ <|@
tid v531 <|@
result [v42|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a306 
=== Succesors ===
=== Usages ===
i313 i314 i311 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i311 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.status
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v531 
lastLocationAccess: - 
=== Succesors ===
next: v199 
=== Usages ===
v195 
=== Predecessor ===
v186 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v531 lastLocationAccess: - #next: v199  <|@  <|@
f <@~|@floating>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i311 
y: i49 
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i311 y: i49  <|@  <|@
f <@*|@fixed>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
profileData: PROFILED designatedSuccessorProbability: 0.89280868385346
stamp: void
=== Inputs ===
condition: v195 
=== Succesors ===
trueSuccessor: v198 
falseSuccessor: v196 
=== Usages ===
=== Predecessor ===
i311 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v195 #trueSuccessor: v198 #falseSuccessor: v196  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v42|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4543126429280223949
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v231  <|@  <|@
f <@*|@fixed>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
v198 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 20]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v206 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v206  <|@  <|@
tid ?56 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?40 
values: a288 
=== Succesors ===
=== Usages ===
?229 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?40 values: a288  <|@  <|@
tid ?229 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1060
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?56 
=== Succesors ===
=== Usages ===
?205 ?430 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?56  <|@  <|@
f <@~|@floating>@ <|@
tid a307 <|@
result v43|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
op: Uncompress
stamp: a java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
=== Inputs ===
value: a306 
=== Succesors ===
=== Usages ===
?205 ?212 ?208 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a306  <|@  <|@
tid ?205 <|@
d <@d|@=== Debug Properties ===
bci: 22
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 644
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?229 
values: - a307 
=== Succesors ===
=== Usages ===
?208 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?229 values: - a307  <|@  <|@
tid ?208 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer$Node.getAndUnsetStatus(int)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 481
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?205 
values: a307 i39 
=== Succesors ===
=== Usages ===
?212 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?205 values: a307 i39  <|@  <|@
f <@~|@floating>@ <|@
tid a202 <|@
result Object[Unsafe@679697080] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
rawvalue: Unsafe@679697080
stableDimension: 0
stamp: a!# jdk.internal.misc.Unsafe
stampKind: a java.lang.Object
value: Object[Unsafe@679697080]
=== Inputs ===
=== Succesors ===
=== Usages ===
?212 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j203 <|@
result long[12|0xc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 4]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
rawvalue: 12
stableDimension: 0
stamp: i64 [12]
stampKind: i64
value: long[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
?212 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i204 <|@
result int[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 9]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2]
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
?212 i210 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
v196 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533803057202577944
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 39
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v206 
=== Succesors ===
next: i313 
=== Usages ===
v214 v218 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v206 #next: i313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i313 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.status
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.getIntVolatile(Object, long) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 3]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v531 
lastLocationAccess: - 
=== Succesors ===
next: i314 
=== Usages ===
i210 i314 ?212 
=== Predecessor ===
v207 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v531 lastLocationAccess: - #next: i314  <|@  <|@
f <@~|@floating>@ <|@
tid i210 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i313 
y: i204 
=== Succesors ===
=== Usages ===
i314 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i313 y: i204  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i314 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.weakCompareAndSetInt(Object, long, int, int) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 18]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v531 
lastLocationAccess: - 
expectedValue: i313 
newValue: i210 
stateAfter: - 
=== Succesors ===
next: v220 
=== Usages ===
v213 
=== Predecessor ===
i313 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v531 lastLocationAccess: - expectedValue: i313 newValue: i210 stateAfter: - #next: v220  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i314 
y: i49 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i314 y: i49  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v213 
=== Succesors ===
trueSuccessor: v219 
falseSuccessor: v214 
=== Usages ===
=== Predecessor ===
i314 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v213 #trueSuccessor: v219 #falseSuccessor: v214  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = AND x: v44|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v42|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v45|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529299457575207448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v407  <|@  <|@
tid ?212 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: ifeq
code: ResolvedJavaMethodBytecode<Unsafe.getAndBitwiseAndInt(Object, long, int)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.Unsafe.weakCompareAndSetInt(Object, long, int, int) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 18]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
sourceFile: Unsafe.java
sourceLine: 3233
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?208 
values: i49 a202 a307 j203 - i204 i313 
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?208 values: i49 a202 a307 j203 - i204 i313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
stateBefore: ?212 
=== Succesors ===
next: v218 
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?212 #next: v218  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
loopBegin: v207 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v207  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v43|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v44|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v43|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v43|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT temp: v46|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3235) [bci: 24]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v207 
=== Succesors ===
next: a496 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v207 #next: a496  <|@  <|@
f <@~|@floating>@ <|@
tid v532 <|@
result [v42|DWORD[_] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a306 
=== Succesors ===
=== Usages ===
a496 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a496 <|@
result v47|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.waiter
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 27]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v532 
lastLocationAccess: - 
=== Succesors ===
next: v223 
=== Usages ===
a318 
=== Predecessor ===
v214 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v532 lastLocationAccess: - #next: v223  <|@  <|@
f <@~|@floating>@ <|@
tid a318 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 27]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a496 
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a496  <|@  <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
referencedType: [null]
returnStamp: void
signature: [UnresolvedJavaType<Ljava/lang/Thread;>]
stamp: void
targetMethod: HotSpotMethod<LockSupport.unpark(Thread)>
=== Inputs ===
arguments: a318 
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a318  <|@  <|@
tid ?430 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 645
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?229 
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?229  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
bci: 30
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
polymorphic: false
stamp: void
targetMethod: Direct#LockSupport.unpark
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v319 
stateDuring: ?430 
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
a496 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v319 stateDuring: ?430 #next: v230  <|@  <|@
f <@*|@fixed>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
v223 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4594113624694502228
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1063) [bci: 17]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v64  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
v52 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B24" "B20" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v62 v64 v230 v231 v232 
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v62 v64 v230 v231 v232 #next: v66  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:806) [bci: 80]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v416 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v416  <|@  <|@
tid ?47 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?40 
values: a288 
=== Succesors ===
=== Usages ===
?176 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?40 values: a288  <|@  <|@
f <@~|@floating>@ <|@
tid a292 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a491 
=== Succesors ===
=== Usages ===
?176 ?150 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a491  <|@  <|@
tid ?176 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1059
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?47 
values: a292 
=== Succesors ===
=== Usages ===
?150 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?47 values: a292  <|@  <|@
tid ?150 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: iload_1
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.tryRelease(int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
sourceFile: ReentrantLock.java
sourceLine: 173
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?176 
values: i295 a292 i39 
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?176 values: i295 a292 i39  <|@  <|@
f <@*|@fixed>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
reason: UnreachedCode
speculation: {0x0000000000006194[index: 780, len: 20, hash: 0xadceab53]: UnreachedCode@6[HotSpotMethod<ReentrantLock$Sync.tryRelease(int)>, 17]}
stamp: void
=== Inputs ===
stateBefore: ?150 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?150  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106515 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24980 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v32|DWORD 
locals: v49|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v49|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:813) [bci: 30]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v539 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v539  <|@  <|@
f <@*|@fixed>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 412
mayConvertToGuard: true
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
reason: UnreachedCode
speculation: {0x0000000000002094[index: 260, len: 20, hash: 0x9c96d22a]: UnreachedCode@6[HotSpotMethod<PrintStream.implWrite(String)>, 33]}
stamp: void
=== Inputs ===
stateBefore: ?139 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?139  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105491 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7a64b983 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v4|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOV input: [v5|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v4|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v9|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v4|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 12], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v7|QWORD[.], ~newValue: v6|QWORD[.]) {temp: v19|QWORD, temp2: v20|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|QWORD[.], y: v11|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 16], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v21|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v22|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v24|DWORD[_] * 8] state [bci:12, 16] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v27|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v27|DWORD[_] * 8] state [bci:19, 16] <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16] <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v30|DWORD[_] = MOV input: [v29|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v31|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v31|DWORD[_] * 8] state [bci:7, 23, 16] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B28 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOV input: [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v35|QWORD[.], y: [v34|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v31|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v38|QWORD, temp2: v39|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v31|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B15" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = DEC value: v32|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|DWORD[_] * 8 + 16], y: v40|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.862731903000712 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605946017699025707
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v41|DWORD[_], y: v41|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605940590109109270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4594113624694502228
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B24" "B20" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4558697075346002629
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|DWORD[_], y: v42|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4558136932628500244
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4544087108242127632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v42|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4543126429280223949
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v7|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.7298301486199575 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539246251051830922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532503281059072088
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533803057202577944
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = AND x: v44|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v42|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v45|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529299457575207448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v43|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v44|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v43|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v43|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT temp: v46|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -107795 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v12|DWORD 
locals: v7|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105491 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106515 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24980 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v32|DWORD 
locals: v49|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v49|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        42
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: invokevirtual #50         // implWrite:(java.lang.String)void
    19: aload_0       
    20: getfield      #17         // lock:jdk.internal.misc.InternalLock
    23: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    26: goto          39
    29: astore_2      
    30: aload_0       
    31: getfield      #17         // lock:jdk.internal.misc.InternalLock
    34: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_2       
    38: athrow        
    39: goto          61
    42: aload_0       
    43: dup           
    44: astore_2      
    45: monitorenter  
    46: aload_0       
    47: aload_1       
    48: invokevirtual #50         // implWrite:(java.lang.String)void
    51: aload_2       
    52: monitorexit   
    53: goto          61
    56: astore_3      
    57: aload_2       
    58: monitorexit   
    59: aload_3       
    60: athrow        
    61: goto          80
    64: astore_2      
    65: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    68: invokevirtual #39         // java.lang.Thread.interrupt:()void
    71: goto          80
    74: astore_2      
    75: aload_0       
    76: iconst_1      
    77: putfield      #5          // trouble:boolean
    80: return        
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7a64b983 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v4|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOV input: [v5|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v4|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v9|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v4|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 12], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v7|QWORD[.], ~newValue: v6|QWORD[.]) {temp: v19|QWORD, temp2: v20|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|QWORD[.], y: v11|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 16], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v21|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v22|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v24|DWORD[_] * 8] state [bci:12, 16] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v27|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v27|DWORD[_] * 8] state [bci:19, 16] <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16] <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v30|DWORD[_] = MOV input: [v29|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v31|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v31|DWORD[_] * 8] state [bci:7, 23, 16] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B28 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOV input: [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v35|QWORD[.], y: [v34|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v31|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v38|QWORD, temp2: v39|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v31|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B15" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = DEC value: v32|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|DWORD[_] * 8 + 16], y: v40|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.862731903000712 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605946017699025707
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v41|DWORD[_], y: v41|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605940590109109270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4594113624694502228
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B24" "B20" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4558697075346002629
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|DWORD[_], y: v42|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4558136932628500244
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4544087108242127632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v42|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4543126429280223949
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v7|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.7298301486199575 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539246251051830922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532503281059072088
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533803057202577944
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = AND x: v44|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v42|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v45|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529299457575207448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v43|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v44|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v43|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v43|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT temp: v46|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -107795 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v12|DWORD 
locals: v7|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105491 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106515 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24980 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v32|DWORD 
locals: v49|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v49|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        42
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: invokevirtual #50         // implWrite:(java.lang.String)void
    19: aload_0       
    20: getfield      #17         // lock:jdk.internal.misc.InternalLock
    23: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    26: goto          39
    29: astore_2      
    30: aload_0       
    31: getfield      #17         // lock:jdk.internal.misc.InternalLock
    34: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_2       
    38: athrow        
    39: goto          61
    42: aload_0       
    43: dup           
    44: astore_2      
    45: monitorenter  
    46: aload_0       
    47: aload_1       
    48: invokevirtual #50         // implWrite:(java.lang.String)void
    51: aload_2       
    52: monitorexit   
    53: goto          61
    56: astore_3      
    57: aload_2       
    58: monitorexit   
    59: aload_3       
    60: athrow        
    61: goto          80
    64: astore_2      
    65: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    68: invokevirtual #39         // java.lang.Thread.interrupt:()void
    71: goto          80
    74: astore_2      
    75: aload_0       
    76: iconst_1      
    77: putfield      #5          // trouble:boolean
    80: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7a64b983 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v4|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOV input: [v5|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v4|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v9|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v4|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 12], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v7|QWORD[.], ~newValue: v6|QWORD[.]) {temp: v19|QWORD, temp2: v20|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|QWORD[.], y: v11|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 16], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v21|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v22|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v24|DWORD[_] * 8] state [bci:12, 16] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v27|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v27|DWORD[_] * 8] state [bci:19, 16] <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16] <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v30|DWORD[_] = MOV input: [v29|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v31|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v31|DWORD[_] * 8] state [bci:7, 23, 16] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B28 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOV input: [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v35|QWORD[.], y: [v34|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v31|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v38|QWORD, temp2: v39|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v31|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B15" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = DEC value: v32|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|DWORD[_] * 8 + 16], y: v40|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.862731903000712 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605946017699025707
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v41|DWORD[_], y: v41|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605940590109109270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4594113624694502228
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B24" "B20" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4558697075346002629
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|DWORD[_], y: v42|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4558136932628500244
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4544087108242127632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v42|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4543126429280223949
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v7|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.7298301486199575 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539246251051830922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532503281059072088
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533803057202577944
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = AND x: v44|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v42|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v45|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529299457575207448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v43|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v44|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v43|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v43|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT temp: v46|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -107795 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v12|DWORD 
locals: v7|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105491 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106515 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24980 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v32|DWORD 
locals: v49|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v49|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        42
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: invokevirtual #50         // implWrite:(java.lang.String)void
    19: aload_0       
    20: getfield      #17         // lock:jdk.internal.misc.InternalLock
    23: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    26: goto          39
    29: astore_2      
    30: aload_0       
    31: getfield      #17         // lock:jdk.internal.misc.InternalLock
    34: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_2       
    38: athrow        
    39: goto          61
    42: aload_0       
    43: dup           
    44: astore_2      
    45: monitorenter  
    46: aload_0       
    47: aload_1       
    48: invokevirtual #50         // implWrite:(java.lang.String)void
    51: aload_2       
    52: monitorexit   
    53: goto          61
    56: astore_3      
    57: aload_2       
    58: monitorexit   
    59: aload_3       
    60: athrow        
    61: goto          80
    64: astore_2      
    65: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    68: invokevirtual #39         // java.lang.Thread.interrupt:()void
    71: goto          80
    74: astore_2      
    75: aload_0       
    76: iconst_1      
    77: putfield      #5          // trouble:boolean
    80: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7a64b983 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v4|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOV input: [v5|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v4|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v9|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v4|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 12], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v7|QWORD[.], ~newValue: v6|QWORD[.]) {temp: v19|QWORD, temp2: v20|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|QWORD[.], y: v11|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 16], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v21|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v22|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v24|DWORD[_] * 8] state [bci:12, 16] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v27|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v27|DWORD[_] * 8] state [bci:19, 16] <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16] <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v30|DWORD[_] = MOV input: [v29|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v31|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v31|DWORD[_] * 8] state [bci:7, 23, 16] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B28 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOV input: [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v35|QWORD[.], y: [v34|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v31|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v38|QWORD, temp2: v39|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v31|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B15" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = DEC value: v32|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|DWORD[_] * 8 + 16], y: v40|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.862731903000712 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605946017699025707
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v41|DWORD[_], y: v41|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605940590109109270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4594113624694502228
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B24" "B20" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4558697075346002629
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|DWORD[_], y: v42|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4558136932628500244
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4544087108242127632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v42|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4543126429280223949
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v7|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.7298301486199575 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539246251051830922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532503281059072088
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533803057202577944
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = AND x: v44|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v42|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v45|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529299457575207448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v43|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v44|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v43|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v43|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT temp: v46|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -107795 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v12|DWORD 
locals: v7|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105491 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106515 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24980 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v32|DWORD 
locals: v49|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v49|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        42
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: invokevirtual #50         // implWrite:(java.lang.String)void
    19: aload_0       
    20: getfield      #17         // lock:jdk.internal.misc.InternalLock
    23: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    26: goto          39
    29: astore_2      
    30: aload_0       
    31: getfield      #17         // lock:jdk.internal.misc.InternalLock
    34: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_2       
    38: athrow        
    39: goto          61
    42: aload_0       
    43: dup           
    44: astore_2      
    45: monitorenter  
    46: aload_0       
    47: aload_1       
    48: invokevirtual #50         // implWrite:(java.lang.String)void
    51: aload_2       
    52: monitorexit   
    53: goto          61
    56: astore_3      
    57: aload_2       
    58: monitorexit   
    59: aload_3       
    60: athrow        
    61: goto          80
    64: astore_2      
    65: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    68: invokevirtual #39         // java.lang.Thread.interrupt:()void
    71: goto          80
    74: astore_2      
    75: aload_0       
    76: iconst_1      
    77: putfield      #5          // trouble:boolean
    80: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7a64b983 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v4|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOV input: [v5|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v4|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v9|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v4|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 12], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v7|QWORD[.], ~newValue: v6|QWORD[.]) {temp: v19|QWORD, temp2: v20|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|QWORD[.], y: v11|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 16], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v21|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v22|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v24|DWORD[_] * 8] state [bci:12, 16] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v27|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v27|DWORD[_] * 8] state [bci:19, 16] <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16] <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v30|DWORD[_] = MOV input: [v29|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v31|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v31|DWORD[_] * 8] state [bci:7, 23, 16] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B28 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOV input: [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v35|QWORD[.], y: [v34|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v31|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v38|QWORD, temp2: v39|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v31|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B15" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = DEC value: v32|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|DWORD[_] * 8 + 16], y: v40|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.862731903000712 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605946017699025707
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v41|DWORD[_], y: v41|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605940590109109270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4594113624694502228
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B24" "B20" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4558697075346002629
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|DWORD[_], y: v42|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4558136932628500244
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4544087108242127632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v42|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4543126429280223949
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v7|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.7298301486199575 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539246251051830922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532503281059072088
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533803057202577944
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = AND x: v44|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v42|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v45|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529299457575207448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v43|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v44|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v43|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v43|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT temp: v46|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -107795 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v12|DWORD 
locals: v7|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105491 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106515 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24980 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v32|DWORD 
locals: v49|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v49|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        42
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: invokevirtual #50         // implWrite:(java.lang.String)void
    19: aload_0       
    20: getfield      #17         // lock:jdk.internal.misc.InternalLock
    23: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    26: goto          39
    29: astore_2      
    30: aload_0       
    31: getfield      #17         // lock:jdk.internal.misc.InternalLock
    34: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_2       
    38: athrow        
    39: goto          61
    42: aload_0       
    43: dup           
    44: astore_2      
    45: monitorenter  
    46: aload_0       
    47: aload_1       
    48: invokevirtual #50         // implWrite:(java.lang.String)void
    51: aload_2       
    52: monitorexit   
    53: goto          61
    56: astore_3      
    57: aload_2       
    58: monitorexit   
    59: aload_3       
    60: athrow        
    61: goto          80
    64: astore_2      
    65: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    68: invokevirtual #39         // java.lang.Thread.interrupt:()void
    71: goto          80
    74: astore_2      
    75: aload_0       
    76: iconst_1      
    77: putfield      #5          // trouble:boolean
    80: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7a64b983 slotKind: QWORD <|@ <|@
      nr   54  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v4|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   66  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   68  <|@ instruction v6|QWORD[.] = MOV input: [v5|QWORD] size: QWORD <|@ <|@
      nr   70  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   76  <|@ instruction v9|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = CAS (address: [v4|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v9|DWORD) accessKind: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v4|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  198  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 12], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr  202  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v7|QWORD[.], ~newValue: v6|QWORD[.]) {temp: v19|QWORD, temp2: v20|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction v10|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  224  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction CMPBRANCH (x: v6|QWORD[.], y: v11|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction v12|DWORD = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  244  <|@ instruction v13|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 16], y: v13|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  342  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v21|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  344  <|@ instruction v22|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v22|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  348  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16] <|@ <|@
      nr  356  <|@ instruction v24|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v24|DWORD[_] * 8] state [bci:12, 16] <|@ <|@
      nr  360  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16] <|@ <|@
      nr  366  <|@ instruction v26|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v27|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16] <|@ <|@
      nr  370  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v27|DWORD[_] * 8] state [bci:19, 16] <|@ <|@
      nr  372  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  374  <|@ instruction rsi|QWORD[.] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16] <|@ <|@
      nr  378  <|@ instruction v29|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  380  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v30|DWORD[_] = MOV input: [v29|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v31|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v31|DWORD[_] * 8] state [bci:7, 23, 16] <|@ <|@
      nr  386  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B28 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction v32|DWORD = MOV input: [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  418  <|@ instruction v33|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  420  <|@ instruction v34|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  422  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  426  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction CMPBRANCH (x: v35|QWORD[.], y: [v34|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v31|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v38|QWORD, temp2: v39|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  480  <|@ instruction MOV x: [v31|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B15" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction v40|DWORD = DEC value: v32|DWORD size: DWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [v31|DWORD[_] * 8 + 16], y: v40|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  516  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.862731903000712 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605946017699025707
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction v41|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  532  <|@ instruction TESTBRANCH (x: v41|DWORD[_], y: v41|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605940590109109270
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4594113624694502228
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B24" "B20" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4558697075346002629
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: v42|DWORD[_], y: v42|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4558136932628500244
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4544087108242127632
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction CMPCONSTBRANCH x: [v42|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4543126429280223949
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  646  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v7|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  648  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.7298301486199575 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539246251051830922
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  686  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  688  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  690  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  692  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  694  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  696  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  698  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532503281059072088
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533803057202577944
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction v44|DWORD = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  754  <|@ instruction v45|DWORD = AND x: v44|DWORD y: -2 size: DWORD <|@ <|@
      nr  756  <|@ instruction rax|DWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr  758  <|@ instruction rax|DWORD = CAS (address: [v42|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v45|DWORD) accessKind: DWORD <|@ <|@
      nr  760  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529299457575207448
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v43|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v44|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v43|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v43|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT temp: v46|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23] <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction v47|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  802  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  804  <|@ instruction rsi|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23] <|@ <|@
      nr  808  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction MOV x: [r15|QWORD + 1156] y: -107795 size: DWORD <|@ <|@
      nr  828  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  830  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v12|DWORD 
locals: v7|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105491 size: DWORD <|@ <|@
      nr  850  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr  852  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  876  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106515 size: DWORD <|@ <|@
      nr  878  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24980 size: QWORD <|@ <|@
      nr  880  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v32|DWORD 
locals: v49|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v49|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        42
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: invokevirtual #50         // implWrite:(java.lang.String)void
    19: aload_0       
    20: getfield      #17         // lock:jdk.internal.misc.InternalLock
    23: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    26: goto          39
    29: astore_2      
    30: aload_0       
    31: getfield      #17         // lock:jdk.internal.misc.InternalLock
    34: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_2       
    38: athrow        
    39: goto          61
    42: aload_0       
    43: dup           
    44: astore_2      
    45: monitorenter  
    46: aload_0       
    47: aload_1       
    48: invokevirtual #50         // implWrite:(java.lang.String)void
    51: aload_2       
    52: monitorexit   
    53: goto          61
    56: astore_3      
    57: aload_2       
    58: monitorexit   
    59: aload_3       
    60: athrow        
    61: goto          80
    64: astore_2      
    65: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    68: invokevirtual #39         // java.lang.Thread.interrupt:()void
    71: goto          80
    74: astore_2      
    75: aload_0       
    76: iconst_1      
    77: putfield      #5          // trouble:boolean
    80: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7a64b983 slotKind: QWORD <|@ <|@
      nr   54  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v4|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   66  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   68  <|@ instruction v6|QWORD[.] = MOV input: [v5|QWORD] size: QWORD <|@ <|@
      nr   70  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   76  <|@ instruction v9|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = CAS (address: [v4|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v9|DWORD) accessKind: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v4|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  198  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 12], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr  202  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v7|QWORD[.], ~newValue: v6|QWORD[.]) {temp: v19|QWORD, temp2: v20|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction v10|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  224  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction CMPBRANCH (x: v6|QWORD[.], y: v11|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction v12|DWORD = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  244  <|@ instruction v13|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 16], y: v13|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  342  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v21|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  344  <|@ instruction v22|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v22|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  348  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16] <|@ <|@
      nr  356  <|@ instruction v24|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v24|DWORD[_] * 8] state [bci:12, 16] <|@ <|@
      nr  360  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16] <|@ <|@
      nr  366  <|@ instruction v26|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v27|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16] <|@ <|@
      nr  370  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v27|DWORD[_] * 8] state [bci:19, 16] <|@ <|@
      nr  372  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  374  <|@ instruction rsi|QWORD[.] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16] <|@ <|@
      nr  378  <|@ instruction v29|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  380  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v30|DWORD[_] = MOV input: [v29|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v31|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v31|DWORD[_] * 8] state [bci:7, 23, 16] <|@ <|@
      nr  386  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B28 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction v32|DWORD = MOV input: [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  418  <|@ instruction v33|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  420  <|@ instruction v34|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  422  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  426  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction CMPBRANCH (x: v35|QWORD[.], y: [v34|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v31|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v38|QWORD, temp2: v39|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  480  <|@ instruction MOV x: [v31|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B15" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction v40|DWORD = DEC value: v32|DWORD size: DWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [v31|DWORD[_] * 8 + 16], y: v40|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  516  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.862731903000712 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605946017699025707
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction v41|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  532  <|@ instruction TESTBRANCH (x: v41|DWORD[_], y: v41|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605940590109109270
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4594113624694502228
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B24" "B20" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4558697075346002629
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: v42|DWORD[_], y: v42|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4558136932628500244
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4544087108242127632
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction CMPCONSTBRANCH x: [v42|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4543126429280223949
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  646  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v7|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  648  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.7298301486199575 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539246251051830922
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  686  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  688  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  690  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  692  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  694  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  696  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  698  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532503281059072088
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533803057202577944
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction v44|DWORD = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  754  <|@ instruction v45|DWORD = AND x: v44|DWORD y: -2 size: DWORD <|@ <|@
      nr  756  <|@ instruction rax|DWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr  758  <|@ instruction rax|DWORD = CAS (address: [v42|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v45|DWORD) accessKind: DWORD <|@ <|@
      nr  760  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529299457575207448
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v43|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v44|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v43|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v43|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT temp: v46|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23] <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction v47|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  802  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  804  <|@ instruction rsi|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23] <|@ <|@
      nr  808  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction MOV x: [r15|QWORD + 1156] y: -107795 size: DWORD <|@ <|@
      nr  828  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  830  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v12|DWORD 
locals: v7|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105491 size: DWORD <|@ <|@
      nr  850  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr  852  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  876  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106515 size: DWORD <|@ <|@
      nr  878  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24980 size: QWORD <|@ <|@
      nr  880  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v32|DWORD 
locals: v49|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v49|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        42
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: invokevirtual #50         // implWrite:(java.lang.String)void
    19: aload_0       
    20: getfield      #17         // lock:jdk.internal.misc.InternalLock
    23: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    26: goto          39
    29: astore_2      
    30: aload_0       
    31: getfield      #17         // lock:jdk.internal.misc.InternalLock
    34: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_2       
    38: athrow        
    39: goto          61
    42: aload_0       
    43: dup           
    44: astore_2      
    45: monitorenter  
    46: aload_0       
    47: aload_1       
    48: invokevirtual #50         // implWrite:(java.lang.String)void
    51: aload_2       
    52: monitorexit   
    53: goto          61
    56: astore_3      
    57: aload_2       
    58: monitorexit   
    59: aload_3       
    60: athrow        
    61: goto          80
    64: astore_2      
    65: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    68: invokevirtual #39         // java.lang.Thread.interrupt:()void
    71: goto          80
    74: astore_2      
    75: aload_0       
    76: iconst_1      
    77: putfield      #5          // trouble:boolean
    80: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|- fixed "[rax|-]" rax|- v44|d [0, 1[[74, 79[[354, 355[[364, 365[[376, 377[[646, 648[[696, 698[[756, 759[[806, 807[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[686, 697[[806, 807[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v1|q [0, 56[[352, 355[[364, 365[[376, 377[[644, 647[[684, 697[[806, 807[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 50[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v23|q [0, 54[[350, 355[[362, 365[[374, 377[[642, 647[[682, 697[[804, 807[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[692, 697[[806, 807[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[688, 697[[806, 807[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[690, 697[[806, 807[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [54, 534[[572, 588[[598, 610[[620, 807[[810, 831[[832, 853[[854, 881[54 MustHaveRegister 58 MustHaveRegister 340 MustHaveRegister 344 MustHaveRegister 356 MustHaveRegister 366 MustHaveRegister 378 MustHaveRegister 386 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|- [56, 388[[620, 712[[810, 831[[832, 853[56 MustHaveRegister 352 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [58, 72[58 MustHaveRegister 60 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [60, 62[60 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [62, 200[[206, 260[62 MustHaveRegister 64 MustHaveRegister 70 MustHaveRegister 78 MustHaveRegister 196 MustHaveRegister 200 MustHaveRegister 222 MustHaveRegister 242 MustHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q -1 [66, 68[66 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [68, 203[[206, 226[68 MustHaveRegister 198 MustHaveRegister 202 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q v4|d [70, 203[[206, 248[[620, 697[[810, 831[70 MustHaveRegister 202 MustHaveRegister 642 ShouldHaveRegister 682 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q v2|d [72, 347[[620, 712[[810, 831[72 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d -1 [76, 78[76 MustHaveRegister 78 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [222, 224[222 MustHaveRegister 224 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q v10|d [224, 226[224 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d -1 [242, 248[[810, 831[242 MustHaveRegister 244 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d v12|d [244, 260[244 MustHaveRegister 246 MustHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d rax|- [648, 650[648 MustHaveRegister 650 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d rax|- [698, 699[698 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q -1 [196, 197[196 MustHaveRegister  "NoDefinitionFound"
  v17|q QWORD "[v17|q]" v17|q -1 [196, 197[196 MustHaveRegister  "NoDefinitionFound"
  v18|d DWORD "[v18|d]" v18|d v6|q [198, 200[198 MustHaveRegister 200 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q -1 [202, 203[202 MustHaveRegister  "NoDefinitionFound"
  v20|q QWORD "[v20|q]" v20|q -1 [202, 203[202 MustHaveRegister  "NoDefinitionFound"
  v21|d DWORD "[v21|d]" v21|d -1 [340, 348[340 MustHaveRegister 342 MustHaveRegister 348 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d -1 [344, 346[344 MustHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q v21|d [348, 350[348 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d -1 [356, 360[356 MustHaveRegister 358 MustHaveRegister 360 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q v24|d [360, 362[360 MustHaveRegister 362 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d -1 [366, 368[366 MustHaveRegister 368 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[v27|d]" v27|d -1 [368, 372[368 MustHaveRegister 370 MustHaveRegister 372 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[v28|q]" v28|q v27|d [372, 374[372 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d -1 [378, 426[378 MustHaveRegister 380 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d -1 [380, 424[380 MustHaveRegister 382 MustHaveRegister 424 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d -1 [382, 530[[854, 874[382 MustHaveRegister 384 MustHaveRegister 416 MustHaveRegister 418 MustHaveRegister 478 MustHaveRegister 480 MustHaveRegister 512 MustHaveRegister 530 MustHaveRegister 874 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[v32|d]" v32|d -1 [416, 516[[854, 881[416 MustHaveRegister 440 ShouldHaveRegister 510 ShouldHaveRegister 516 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[v33|d]" v33|d -1 [418, 422[418 MustHaveRegister 422 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q -1 [420, 428[420 MustHaveRegister 428 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q v33|d [422, 428[422 MustHaveRegister 428 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q v30|d [424, 534[[572, 588[[598, 610[[712, 807[[854, 881[424 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q v29|d [426, 534[[572, 588[[598, 610[[712, 807[[854, 881[426 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q -1 [478, 479[478 MustHaveRegister  "NoDefinitionFound"
  v39|q QWORD "[v39|q]" v39|q -1 [478, 479[478 MustHaveRegister  "NoDefinitionFound"
  v40|d DWORD "[v40|d]" v40|d v32|d [510, 512[510 MustHaveRegister 512 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[v41|d]" v41|d -1 [530, 534[[572, 584[530 MustHaveRegister 532 MustHaveRegister 584 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[v42|d]" v42|d -1 [584, 588[[598, 610[[712, 800[584 MustHaveRegister 586 MustHaveRegister 608 MustHaveRegister 724 MustHaveRegister 752 MustHaveRegister 758 MustHaveRegister 777 LiveAtLoopEnd 800 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[v43|q]" v43|q v42|d [724, 778[724 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[v44|d]" v44|d -1 [752, 775[752 MustHaveRegister 754 MustHaveRegister 756 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[v45|d]" v45|d v44|d [754, 758[754 MustHaveRegister 758 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q -1 [774, 775[774 MustHaveRegister  "NoDefinitionFound"
  v47|d DWORD "[v47|d]" v47|d -1 [800, 802[800 MustHaveRegister 802 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[v48|q]" v48|q v47|d [802, 804[802 MustHaveRegister 804 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[v49|q]" v49|q v31|d [874, 881[874 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|- fixed "[rax|-]" rax|- v44|d [0, 1[[74, 79[[354, 355[[364, 365[[376, 377[[646, 648[[696, 698[[756, 759[[806, 807[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[686, 697[[806, 807[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v1|q [0, 56[[352, 355[[364, 365[[376, 377[[644, 647[[684, 697[[806, 807[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 50[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v23|q [0, 54[[350, 355[[362, 365[[374, 377[[642, 647[[682, 697[[804, 807[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[692, 697[[806, 807[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[688, 697[[806, 807[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[690, 697[[806, 807[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [54, 349[54 MustHaveRegister 58 MustHaveRegister 340 MustHaveRegister 344 MustHaveRegister  "SpillInDominator"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [56, 351[56 MustHaveRegister  "OneSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [58, 72[58 MustHaveRegister 60 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [60, 62[60 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r10|d]" v4|d -1 [62, 200[[206, 260[62 MustHaveRegister 64 MustHaveRegister 70 MustHaveRegister 78 MustHaveRegister 196 MustHaveRegister 200 MustHaveRegister 222 MustHaveRegister 242 MustHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r11|q]" v5|q -1 [66, 68[66 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r11|q]" v6|q -1 [68, 203[[206, 226[68 MustHaveRegister 198 MustHaveRegister 202 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[r8|q]" v7|q v4|d [70, 203[[206, 248[[620, 645[70 MustHaveRegister 202 MustHaveRegister 642 ShouldHaveRegister  "OneSpillStore"
  v8|q QWORD "[rax|q]" v8|q v2|d [72, 73[72 MustHaveRegister  "OneSpillStore"
  v9|d DWORD "[rcx|d]" v9|d -1 [76, 78[76 MustHaveRegister 78 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rcx|d]" v10|d -1 [222, 224[222 MustHaveRegister 224 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rcx|q]" v11|q v10|d [224, 226[224 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[r11|d]" v12|d -1 [242, 248[[810, 831[242 MustHaveRegister 244 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[rcx|d]" v13|d v12|d [244, 260[244 MustHaveRegister 246 MustHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rax|d]" v14|d rax|- [648, 650[648 MustHaveRegister 650 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[rax|d]" v15|d rax|- [698, 699[698 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rcx|q]" v16|q -1 [196, 197[196 MustHaveRegister  "NoDefinitionFound"
  v17|q QWORD "[rbx|q]" v17|q -1 [196, 197[196 MustHaveRegister  "NoDefinitionFound"
  v18|d DWORD "[rcx|d]" v18|d v6|q [198, 200[198 MustHaveRegister 200 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[r10|q]" v19|q -1 [202, 203[202 MustHaveRegister  "NoDefinitionFound"
  v20|q QWORD "[rcx|q]" v20|q -1 [202, 203[202 MustHaveRegister  "NoDefinitionFound"
  v21|d DWORD "[r10|d]" v21|d -1 [340, 348[340 MustHaveRegister 342 MustHaveRegister 348 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[r11|d]" v22|d -1 [344, 346[344 MustHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[r10|q]" v23|q v21|d [348, 350[348 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r10|d]" v24|d -1 [356, 360[356 MustHaveRegister 358 MustHaveRegister 360 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[r10|q]" v25|q v24|d [360, 362[360 MustHaveRegister 362 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[r10|d]" v26|d -1 [366, 368[366 MustHaveRegister 368 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[r10|d]" v27|d -1 [368, 372[368 MustHaveRegister 370 MustHaveRegister 372 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[r10|q]" v28|q v27|d [372, 374[372 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[rdx|d]" v29|d -1 [378, 426[378 MustHaveRegister 380 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[r10|d]" v30|d -1 [380, 424[380 MustHaveRegister 382 MustHaveRegister 424 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[r11|d]" v31|d -1 [382, 530[[854, 874[382 MustHaveRegister 384 MustHaveRegister 416 MustHaveRegister 418 MustHaveRegister 478 MustHaveRegister 480 MustHaveRegister 512 MustHaveRegister 530 MustHaveRegister 874 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[r8|d]" v32|d -1 [416, 516[[854, 881[416 MustHaveRegister 440 ShouldHaveRegister 510 ShouldHaveRegister 516 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[r9|d]" v33|d -1 [418, 422[418 MustHaveRegister 422 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rcx|q]" v34|q -1 [420, 428[420 MustHaveRegister 428 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[r9|q]" v35|q v33|d [422, 428[422 MustHaveRegister 428 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[r10|q]" v36|q v30|d [424, 534[[572, 588[[598, 610[[712, 778[424 MustHaveRegister  "OneSpillStore"
  v37|q QWORD "[rdx|q]" v37|q v29|d [426, 534[[572, 588[[598, 610[[712, 778[426 MustHaveRegister  "OneSpillStore"
  v38|q QWORD "[r9|q]" v38|q -1 [478, 479[478 MustHaveRegister  "NoDefinitionFound"
  v39|q QWORD "[rcx|q]" v39|q -1 [478, 479[478 MustHaveRegister  "NoDefinitionFound"
  v40|d DWORD "[r9|d]" v40|d v32|d [510, 512[510 MustHaveRegister 512 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[r11|d]" v41|d -1 [530, 534[[572, 584[530 MustHaveRegister 532 MustHaveRegister 584 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[r11|d]" v42|d -1 [584, 588[[598, 610[[712, 800[584 MustHaveRegister 586 MustHaveRegister 608 MustHaveRegister 724 MustHaveRegister 752 MustHaveRegister 758 MustHaveRegister 777 LiveAtLoopEnd 800 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rsi|q]" v43|q v42|d [724, 778[724 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[r8|d]" v44|d -1 [752, 775[752 MustHaveRegister 754 MustHaveRegister 756 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[r9|d]" v45|d v44|d [754, 758[754 MustHaveRegister 758 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[r9|q]" v46|q -1 [774, 775[774 MustHaveRegister  "NoDefinitionFound"
  v47|d DWORD "[rsi|d]" v47|d -1 [800, 802[800 MustHaveRegister 802 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rsi|q]" v48|q v47|d [802, 804[802 MustHaveRegister 804 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[r11|q]" v49|q v31|d [874, 881[874 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[vstack:0|q]" v0|q v0|q [349, 353[ "SpillInDominator"
  v51|q QWORD "[r10|q]" v1|q v1|q [351, 353[352 ShouldHaveRegister  "OneSpillStore"
  v52|q QWORD "[vstack:3|q]" v7|q v7|q [645, 697[682 ShouldHaveRegister  "OneSpillStore"
  v53|q QWORD "[vstack:4|q]" v8|q v8|q [73, 347[ "OneSpillStore"
  v54|q QWORD "[vstack:4|q]" v8|q v8|q [620, 645[ "OneSpillStore"
  v55|q QWORD "[vstack:0|q]" v0|q v0|q [353, 355[ "SpillInDominator"
  v56|q QWORD "[vstack:1|q]" v1|q v1|q [353, 388[[620, 712[[810, 831[ "OneSpillStore"
  v57|q QWORD "[rsi|q]" v0|q v0|q [355, 361[356 MustHaveRegister  "SpillInDominator"
  v58|q QWORD "[rdx|q]" v1|q v1|q [832, 853[ "OneSpillStore"
  v59|q QWORD "[vstack:0|q]" v0|q v0|q [361, 365[ "SpillInDominator"
  v60|q QWORD "[rsi|q]" v0|q v0|q [365, 373[366 MustHaveRegister  "SpillInDominator"
  v61|q QWORD "[vstack:0|q]" v0|q v0|q [373, 377[ "SpillInDominator"
  v62|q QWORD "[rsi|q]" v0|q v0|q [377, 534[[572, 588[[598, 610[378 MustHaveRegister 386 MustHaveRegister  "SpillInDominator"
  v63|q QWORD "[vstack:0|q]" v0|q v0|q [620, 641[ "SpillInDominator"
  v64|q QWORD "[vstack:5|q]" v36|q v36|q [778, 805[ "OneSpillStore"
  v65|q QWORD "[vstack:6|q]" v37|q v37|q [778, 805[ "OneSpillStore"
  v66|q QWORD "[vstack:0|q]" v0|q v0|q [641, 645[ "SpillInDominator"
  v67|q QWORD "[vstack:4|q]" v8|q v8|q [645, 712[ "OneSpillStore"
  v68|q QWORD "[vstack:0|q]" v0|q v0|q [645, 807[[810, 831[[832, 853[ "SpillInDominator"
  v69|q QWORD "[r8|q]" v7|q v7|q [810, 831[ "OneSpillStore"
  v70|q QWORD "[rsi|q]" v0|q v0|q [854, 881[ "SpillInDominator"
  v71|q QWORD "[rax|q]" v8|q v8|q [810, 831[ "OneSpillStore"
  v72|q QWORD "[vstack:6|q]" v37|q v37|q [805, 807[ "OneSpillStore"
  v73|q QWORD "[vstack:5|q]" v36|q v36|q [805, 807[ "OneSpillStore"
  v74|q QWORD "[r10|q]" v36|q v36|q [854, 881[ "OneSpillStore"
  v75|q QWORD "[rdx|q]" v37|q v37|q [854, 881[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7a64b983 slotKind: QWORD <|@ <|@
      nr   54  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v4|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   66  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   68  <|@ instruction v6|QWORD[.] = MOV input: [v5|QWORD] size: QWORD <|@ <|@
      nr   70  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   76  <|@ instruction v9|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = CAS (address: [v4|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v9|DWORD) accessKind: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v4|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  198  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 12], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr  202  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v7|QWORD[.], ~newValue: v6|QWORD[.]) {temp: v19|QWORD, temp2: v20|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction v10|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  224  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction CMPBRANCH (x: v6|QWORD[.], y: v11|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction v12|DWORD = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  244  <|@ instruction v13|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 16], y: v13|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  342  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v21|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  344  <|@ instruction v22|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v22|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  348  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  352  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = STACKMOVE (input: v50|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  356  <|@ instruction v24|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v24|DWORD[_] * 8] state [bci:12, 16] <|@ <|@
      nr  360  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16] <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = MOVE input: v59|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction v26|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v27|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16] <|@ <|@
      nr  370  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v27|DWORD[_] * 8] state [bci:19, 16] <|@ <|@
      nr  372  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction rsi|QWORD[.] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16] <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = MOVE input: v61|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  378  <|@ instruction v29|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  380  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v30|DWORD[_] = MOV input: [v29|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v31|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v31|DWORD[_] * 8] state [bci:7, 23, 16] <|@ <|@
      nr  386  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B28 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction v32|DWORD = MOV input: [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  418  <|@ instruction v33|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  420  <|@ instruction v34|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  422  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  426  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction CMPBRANCH (x: v35|QWORD[.], y: [v34|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v31|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v38|QWORD, temp2: v39|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  480  <|@ instruction MOV x: [v31|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B15" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction v40|DWORD = DEC value: v32|DWORD size: DWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [v31|DWORD[_] * 8 + 16], y: v40|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  516  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.862731903000712 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605946017699025707
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction v41|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  532  <|@ instruction TESTBRANCH (x: v41|DWORD[_], y: v41|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605940590109109270
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4594113624694502228
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B24" "B20" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4558697075346002629
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: v42|DWORD[_], y: v42|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4558136932628500244
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4544087108242127632
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction CMPCONSTBRANCH x: [v42|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4543126429280223949
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = STACKMOVE (input: v54|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = STACKMOVE (input: v66|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  646  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v7|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  648  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.7298301486199575 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539246251051830922
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  686  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  688  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  690  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  692  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  694  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  696  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  698  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532503281059072088
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533803057202577944
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction v44|DWORD = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  754  <|@ instruction v45|DWORD = AND x: v44|DWORD y: -2 size: DWORD <|@ <|@
      nr  756  <|@ instruction rax|DWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr  758  <|@ instruction rax|DWORD = CAS (address: [v42|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v45|DWORD) accessKind: DWORD <|@ <|@
      nr  760  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529299457575207448
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v43|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v44|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v43|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v43|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT temp: v46|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23] <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction v47|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  802  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  804  <|@ instruction rsi|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = STACKMOVE (input: v65|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = STACKMOVE (input: v64|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  806  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23] <|@ <|@
      nr  808  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction MOV x: [r15|QWORD + 1156] y: -107795 size: DWORD <|@ <|@
      nr  828  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  830  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v12|DWORD 
locals: v7|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105491 size: DWORD <|@ <|@
      nr  850  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr  852  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  876  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106515 size: DWORD <|@ <|@
      nr  878  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24980 size: QWORD <|@ <|@
      nr  880  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v32|DWORD 
locals: v49|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v49|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        42
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: invokevirtual #50         // implWrite:(java.lang.String)void
    19: aload_0       
    20: getfield      #17         // lock:jdk.internal.misc.InternalLock
    23: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    26: goto          39
    29: astore_2      
    30: aload_0       
    31: getfield      #17         // lock:jdk.internal.misc.InternalLock
    34: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_2       
    38: athrow        
    39: goto          61
    42: aload_0       
    43: dup           
    44: astore_2      
    45: monitorenter  
    46: aload_0       
    47: aload_1       
    48: invokevirtual #50         // implWrite:(java.lang.String)void
    51: aload_2       
    52: monitorexit   
    53: goto          61
    56: astore_3      
    57: aload_2       
    58: monitorexit   
    59: aload_3       
    60: athrow        
    61: goto          80
    64: astore_2      
    65: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    68: invokevirtual #39         // java.lang.Thread.interrupt:()void
    71: goto          80
    74: astore_2      
    75: aload_0       
    76: iconst_1      
    77: putfield      #5          // trouble:boolean
    80: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|- fixed "[rax|-]" rax|- v44|d [0, 1[[74, 79[[354, 355[[364, 365[[376, 377[[646, 648[[696, 698[[756, 759[[806, 807[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[686, 697[[806, 807[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v1|q [0, 56[[352, 355[[364, 365[[376, 377[[644, 647[[684, 697[[806, 807[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 50[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v23|q [0, 54[[350, 355[[362, 365[[374, 377[[642, 647[[682, 697[[804, 807[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[692, 697[[806, 807[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[688, 697[[806, 807[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[690, 697[[806, 807[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [54, 349[54 MustHaveRegister 58 MustHaveRegister 340 MustHaveRegister 344 MustHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [56, 351[56 MustHaveRegister  "OneSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [58, 72[58 MustHaveRegister 60 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [60, 62[60 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r10|d]" v4|d -1 [62, 200[[206, 260[62 MustHaveRegister 64 MustHaveRegister 70 MustHaveRegister 78 MustHaveRegister 196 MustHaveRegister 200 MustHaveRegister 222 MustHaveRegister 242 MustHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r11|q]" v5|q -1 [66, 68[66 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r11|q]" v6|q -1 [68, 203[[206, 226[68 MustHaveRegister 198 MustHaveRegister 202 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[r8|q]" v7|q v4|d [70, 203[[206, 248[[620, 645[70 MustHaveRegister 202 MustHaveRegister 642 ShouldHaveRegister  "OneSpillStore"
  v8|q QWORD "[rax|q]" v8|q v2|d [72, 73[72 MustHaveRegister  "OneSpillStore"
  v9|d DWORD "[rcx|d]" v9|d -1 [76, 78[76 MustHaveRegister 78 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rcx|d]" v10|d -1 [222, 224[222 MustHaveRegister 224 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rcx|q]" v11|q v10|d [224, 226[224 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[r11|d]" v12|d -1 [242, 248[[810, 831[242 MustHaveRegister 244 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[rcx|d]" v13|d v12|d [244, 260[244 MustHaveRegister 246 MustHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rax|d]" v14|d rax|- [648, 650[648 MustHaveRegister 650 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[rax|d]" v15|d rax|- [698, 699[698 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rcx|q]" v16|q -1 [196, 197[196 MustHaveRegister  "NoDefinitionFound"
  v17|q QWORD "[rbx|q]" v17|q -1 [196, 197[196 MustHaveRegister  "NoDefinitionFound"
  v18|d DWORD "[rcx|d]" v18|d v6|q [198, 200[198 MustHaveRegister 200 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[r10|q]" v19|q -1 [202, 203[202 MustHaveRegister  "NoDefinitionFound"
  v20|q QWORD "[rcx|q]" v20|q -1 [202, 203[202 MustHaveRegister  "NoDefinitionFound"
  v21|d DWORD "[r10|d]" v21|d -1 [340, 348[340 MustHaveRegister 342 MustHaveRegister 348 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[r11|d]" v22|d -1 [344, 346[344 MustHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[r10|q]" v23|q v21|d [348, 350[348 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r10|d]" v24|d -1 [356, 360[356 MustHaveRegister 358 MustHaveRegister 360 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[r10|q]" v25|q v24|d [360, 362[360 MustHaveRegister 362 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[r10|d]" v26|d -1 [366, 368[366 MustHaveRegister 368 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[r10|d]" v27|d -1 [368, 372[368 MustHaveRegister 370 MustHaveRegister 372 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[r10|q]" v28|q v27|d [372, 374[372 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[rdx|d]" v29|d -1 [378, 426[378 MustHaveRegister 380 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[r10|d]" v30|d -1 [380, 424[380 MustHaveRegister 382 MustHaveRegister 424 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[r11|d]" v31|d -1 [382, 530[[854, 874[382 MustHaveRegister 384 MustHaveRegister 416 MustHaveRegister 418 MustHaveRegister 478 MustHaveRegister 480 MustHaveRegister 512 MustHaveRegister 530 MustHaveRegister 874 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[r8|d]" v32|d -1 [416, 516[[854, 881[416 MustHaveRegister 440 ShouldHaveRegister 510 ShouldHaveRegister 516 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[r9|d]" v33|d -1 [418, 422[418 MustHaveRegister 422 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rcx|q]" v34|q -1 [420, 428[420 MustHaveRegister 428 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[r9|q]" v35|q v33|d [422, 428[422 MustHaveRegister 428 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[r10|q]" v36|q v30|d [424, 534[[572, 588[[598, 610[[712, 778[424 MustHaveRegister  "OneSpillStore"
  v37|q QWORD "[rdx|q]" v37|q v29|d [426, 534[[572, 588[[598, 610[[712, 778[426 MustHaveRegister  "OneSpillStore"
  v38|q QWORD "[r9|q]" v38|q -1 [478, 479[478 MustHaveRegister  "NoDefinitionFound"
  v39|q QWORD "[rcx|q]" v39|q -1 [478, 479[478 MustHaveRegister  "NoDefinitionFound"
  v40|d DWORD "[r9|d]" v40|d v32|d [510, 512[510 MustHaveRegister 512 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[r11|d]" v41|d -1 [530, 534[[572, 584[530 MustHaveRegister 532 MustHaveRegister 584 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[r11|d]" v42|d -1 [584, 588[[598, 610[[712, 800[584 MustHaveRegister 586 MustHaveRegister 608 MustHaveRegister 724 MustHaveRegister 752 MustHaveRegister 758 MustHaveRegister 777 LiveAtLoopEnd 800 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rsi|q]" v43|q v42|d [724, 778[724 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[r8|d]" v44|d -1 [752, 775[752 MustHaveRegister 754 MustHaveRegister 756 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[r9|d]" v45|d v44|d [754, 758[754 MustHaveRegister 758 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[r9|q]" v46|q -1 [774, 775[774 MustHaveRegister  "NoDefinitionFound"
  v47|d DWORD "[rsi|d]" v47|d -1 [800, 802[800 MustHaveRegister 802 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rsi|q]" v48|q v47|d [802, 804[802 MustHaveRegister 804 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[r11|q]" v49|q v31|d [874, 881[874 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[vstack:0|q]" v0|q v0|q [349, 353[ "StoreAtDefinition"
  v51|q QWORD "[r10|q]" v1|q v1|q [351, 353[352 ShouldHaveRegister  "OneSpillStore"
  v52|q QWORD "[vstack:3|q]" v7|q v7|q [645, 697[682 ShouldHaveRegister  "OneSpillStore"
  v53|q QWORD "[vstack:4|q]" v8|q v8|q [73, 347[ "OneSpillStore"
  v54|q QWORD "[vstack:4|q]" v8|q v8|q [620, 645[ "OneSpillStore"
  v55|q QWORD "[vstack:0|q]" v0|q v0|q [353, 355[ "StoreAtDefinition"
  v56|q QWORD "[vstack:1|q]" v1|q v1|q [353, 388[[620, 712[[810, 831[ "OneSpillStore"
  v57|q QWORD "[rsi|q]" v0|q v0|q [355, 361[356 MustHaveRegister  "StoreAtDefinition"
  v58|q QWORD "[rdx|q]" v1|q v1|q [832, 853[ "OneSpillStore"
  v59|q QWORD "[vstack:0|q]" v0|q v0|q [361, 365[ "StoreAtDefinition"
  v60|q QWORD "[rsi|q]" v0|q v0|q [365, 373[366 MustHaveRegister  "StoreAtDefinition"
  v61|q QWORD "[vstack:0|q]" v0|q v0|q [373, 377[ "StoreAtDefinition"
  v62|q QWORD "[rsi|q]" v0|q v0|q [377, 534[[572, 588[[598, 610[378 MustHaveRegister 386 MustHaveRegister  "StoreAtDefinition"
  v63|q QWORD "[vstack:0|q]" v0|q v0|q [620, 641[ "StoreAtDefinition"
  v64|q QWORD "[vstack:5|q]" v36|q v36|q [778, 805[ "OneSpillStore"
  v65|q QWORD "[vstack:6|q]" v37|q v37|q [778, 805[ "OneSpillStore"
  v66|q QWORD "[vstack:0|q]" v0|q v0|q [641, 645[ "StoreAtDefinition"
  v67|q QWORD "[vstack:4|q]" v8|q v8|q [645, 712[ "OneSpillStore"
  v68|q QWORD "[vstack:0|q]" v0|q v0|q [645, 807[[810, 831[[832, 853[ "StoreAtDefinition"
  v69|q QWORD "[r8|q]" v7|q v7|q [810, 831[ "OneSpillStore"
  v70|q QWORD "[rsi|q]" v0|q v0|q [854, 881[ "StoreAtDefinition"
  v71|q QWORD "[rax|q]" v8|q v8|q [810, 831[ "OneSpillStore"
  v72|q QWORD "[vstack:6|q]" v37|q v37|q [805, 807[ "OneSpillStore"
  v73|q QWORD "[vstack:5|q]" v36|q v36|q [805, 807[ "OneSpillStore"
  v74|q QWORD "[r10|q]" v36|q v36|q [854, 881[ "OneSpillStore"
  v75|q QWORD "[rdx|q]" v37|q v37|q [854, 881[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7a64b983 slotKind: QWORD <|@ <|@
      nr   54  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v4|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   66  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   68  <|@ instruction v6|QWORD[.] = MOV input: [v5|QWORD] size: QWORD <|@ <|@
      nr   70  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   76  <|@ instruction v9|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = CAS (address: [v4|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v9|DWORD) accessKind: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v4|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  198  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 12], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr  202  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v7|QWORD[.], ~newValue: v6|QWORD[.]) {temp: v19|QWORD, temp2: v20|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction v10|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  224  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction CMPBRANCH (x: v6|QWORD[.], y: v11|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction v12|DWORD = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  244  <|@ instruction v13|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 16], y: v13|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  342  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v21|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  344  <|@ instruction v22|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v22|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  348  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  352  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = STACKMOVE (input: v50|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  356  <|@ instruction v24|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v24|DWORD[_] * 8] state [bci:12, 16] <|@ <|@
      nr  360  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16] <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = MOVE input: v59|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction v26|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v27|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16] <|@ <|@
      nr  370  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v27|DWORD[_] * 8] state [bci:19, 16] <|@ <|@
      nr  372  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction rsi|QWORD[.] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16] <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = MOVE input: v61|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  378  <|@ instruction v29|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  380  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v30|DWORD[_] = MOV input: [v29|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v31|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v31|DWORD[_] * 8] state [bci:7, 23, 16] <|@ <|@
      nr  386  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B28 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction v32|DWORD = MOV input: [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  418  <|@ instruction v33|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  420  <|@ instruction v34|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  422  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  426  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction CMPBRANCH (x: v35|QWORD[.], y: [v34|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v31|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v38|QWORD, temp2: v39|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  480  <|@ instruction MOV x: [v31|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B15" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction v40|DWORD = DEC value: v32|DWORD size: DWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [v31|DWORD[_] * 8 + 16], y: v40|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  516  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.862731903000712 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605946017699025707
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction v41|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  532  <|@ instruction TESTBRANCH (x: v41|DWORD[_], y: v41|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605940590109109270
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4594113624694502228
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B24" "B20" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4558697075346002629
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: v42|DWORD[_], y: v42|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4558136932628500244
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4544087108242127632
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction CMPCONSTBRANCH x: [v42|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4543126429280223949
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = STACKMOVE (input: v54|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = STACKMOVE (input: v66|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  646  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v7|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  648  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.7298301486199575 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539246251051830922
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  686  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  688  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  690  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  692  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  694  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  696  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  698  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532503281059072088
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533803057202577944
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction v44|DWORD = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  754  <|@ instruction v45|DWORD = AND x: v44|DWORD y: -2 size: DWORD <|@ <|@
      nr  756  <|@ instruction rax|DWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr  758  <|@ instruction rax|DWORD = CAS (address: [v42|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v45|DWORD) accessKind: DWORD <|@ <|@
      nr  760  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529299457575207448
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v43|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v44|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v43|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v43|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT temp: v46|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23] <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction v47|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  802  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  804  <|@ instruction rsi|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = STACKMOVE (input: v65|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = STACKMOVE (input: v64|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  806  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23] <|@ <|@
      nr  808  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction MOV x: [r15|QWORD + 1156] y: -107795 size: DWORD <|@ <|@
      nr  828  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  830  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v12|DWORD 
locals: v7|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105491 size: DWORD <|@ <|@
      nr  850  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr  852  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  876  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106515 size: DWORD <|@ <|@
      nr  878  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24980 size: QWORD <|@ <|@
      nr  880  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v32|DWORD 
locals: v49|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v49|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        42
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: invokevirtual #50         // implWrite:(java.lang.String)void
    19: aload_0       
    20: getfield      #17         // lock:jdk.internal.misc.InternalLock
    23: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    26: goto          39
    29: astore_2      
    30: aload_0       
    31: getfield      #17         // lock:jdk.internal.misc.InternalLock
    34: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_2       
    38: athrow        
    39: goto          61
    42: aload_0       
    43: dup           
    44: astore_2      
    45: monitorenter  
    46: aload_0       
    47: aload_1       
    48: invokevirtual #50         // implWrite:(java.lang.String)void
    51: aload_2       
    52: monitorexit   
    53: goto          61
    56: astore_3      
    57: aload_2       
    58: monitorexit   
    59: aload_3       
    60: athrow        
    61: goto          80
    64: astore_2      
    65: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    68: invokevirtual #39         // java.lang.Thread.interrupt:()void
    71: goto          80
    74: astore_2      
    75: aload_0       
    76: iconst_1      
    77: putfield      #5          // trouble:boolean
    80: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|- fixed "[rax|-]" rax|- v44|d [0, 1[[74, 79[[354, 355[[364, 365[[376, 377[[646, 648[[696, 698[[756, 759[[806, 807[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[686, 697[[806, 807[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v1|q [0, 56[[352, 355[[364, 365[[376, 377[[644, 647[[684, 697[[806, 807[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 50[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v23|q [0, 54[[350, 355[[362, 365[[374, 377[[642, 647[[682, 697[[804, 807[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[692, 697[[806, 807[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[688, 697[[806, 807[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[690, 697[[806, 807[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[354, 355[[364, 365[[376, 377[[646, 647[[696, 697[[806, 807[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [54, 349[54 MustHaveRegister 58 MustHaveRegister 340 MustHaveRegister 344 MustHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [56, 351[56 MustHaveRegister  "OneSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [58, 72[58 MustHaveRegister 60 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [60, 62[60 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r10|d]" v4|d -1 [62, 200[[206, 260[62 MustHaveRegister 64 MustHaveRegister 70 MustHaveRegister 78 MustHaveRegister 196 MustHaveRegister 200 MustHaveRegister 222 MustHaveRegister 242 MustHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r11|q]" v5|q -1 [66, 68[66 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r11|q]" v6|q -1 [68, 203[[206, 226[68 MustHaveRegister 198 MustHaveRegister 202 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[r8|q]" v7|q v4|d [70, 203[[206, 248[[620, 645[70 MustHaveRegister 202 MustHaveRegister 642 ShouldHaveRegister  "OneSpillStore"
  v8|q QWORD "[rax|q]" v8|q v2|d [72, 73[72 MustHaveRegister  "OneSpillStore"
  v9|d DWORD "[rcx|d]" v9|d -1 [76, 78[76 MustHaveRegister 78 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rcx|d]" v10|d -1 [222, 224[222 MustHaveRegister 224 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rcx|q]" v11|q v10|d [224, 226[224 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[r11|d]" v12|d -1 [242, 248[[810, 831[242 MustHaveRegister 244 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[rcx|d]" v13|d v12|d [244, 260[244 MustHaveRegister 246 MustHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rax|d]" v14|d rax|- [648, 650[648 MustHaveRegister 650 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[rax|d]" v15|d rax|- [698, 699[698 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rcx|q]" v16|q -1 [196, 197[196 MustHaveRegister  "NoDefinitionFound"
  v17|q QWORD "[rbx|q]" v17|q -1 [196, 197[196 MustHaveRegister  "NoDefinitionFound"
  v18|d DWORD "[rcx|d]" v18|d v6|q [198, 200[198 MustHaveRegister 200 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[r10|q]" v19|q -1 [202, 203[202 MustHaveRegister  "NoDefinitionFound"
  v20|q QWORD "[rcx|q]" v20|q -1 [202, 203[202 MustHaveRegister  "NoDefinitionFound"
  v21|d DWORD "[r10|d]" v21|d -1 [340, 348[340 MustHaveRegister 342 MustHaveRegister 348 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[r11|d]" v22|d -1 [344, 346[344 MustHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[r10|q]" v23|q v21|d [348, 350[348 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r10|d]" v24|d -1 [356, 360[356 MustHaveRegister 358 MustHaveRegister 360 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[r10|q]" v25|q v24|d [360, 362[360 MustHaveRegister 362 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[r10|d]" v26|d -1 [366, 368[366 MustHaveRegister 368 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[r10|d]" v27|d -1 [368, 372[368 MustHaveRegister 370 MustHaveRegister 372 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[r10|q]" v28|q v27|d [372, 374[372 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[rdx|d]" v29|d -1 [378, 426[378 MustHaveRegister 380 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[r10|d]" v30|d -1 [380, 424[380 MustHaveRegister 382 MustHaveRegister 424 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[r11|d]" v31|d -1 [382, 530[[854, 874[382 MustHaveRegister 384 MustHaveRegister 416 MustHaveRegister 418 MustHaveRegister 478 MustHaveRegister 480 MustHaveRegister 512 MustHaveRegister 530 MustHaveRegister 874 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[r8|d]" v32|d -1 [416, 516[[854, 881[416 MustHaveRegister 440 ShouldHaveRegister 510 ShouldHaveRegister 516 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[r9|d]" v33|d -1 [418, 422[418 MustHaveRegister 422 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rcx|q]" v34|q -1 [420, 428[420 MustHaveRegister 428 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[r9|q]" v35|q v33|d [422, 428[422 MustHaveRegister 428 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[r10|q]" v36|q v30|d [424, 534[[572, 588[[598, 610[[712, 778[424 MustHaveRegister  "OneSpillStore"
  v37|q QWORD "[rdx|q]" v37|q v29|d [426, 534[[572, 588[[598, 610[[712, 778[426 MustHaveRegister  "OneSpillStore"
  v38|q QWORD "[r9|q]" v38|q -1 [478, 479[478 MustHaveRegister  "NoDefinitionFound"
  v39|q QWORD "[rcx|q]" v39|q -1 [478, 479[478 MustHaveRegister  "NoDefinitionFound"
  v40|d DWORD "[r9|d]" v40|d v32|d [510, 512[510 MustHaveRegister 512 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[r11|d]" v41|d -1 [530, 534[[572, 584[530 MustHaveRegister 532 MustHaveRegister 584 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[r11|d]" v42|d -1 [584, 588[[598, 610[[712, 800[584 MustHaveRegister 586 MustHaveRegister 608 MustHaveRegister 724 MustHaveRegister 752 MustHaveRegister 758 MustHaveRegister 777 LiveAtLoopEnd 800 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rsi|q]" v43|q v42|d [724, 778[724 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[r8|d]" v44|d -1 [752, 775[752 MustHaveRegister 754 MustHaveRegister 756 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[r9|d]" v45|d v44|d [754, 758[754 MustHaveRegister 758 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[r9|q]" v46|q -1 [774, 775[774 MustHaveRegister  "NoDefinitionFound"
  v47|d DWORD "[rsi|d]" v47|d -1 [800, 802[800 MustHaveRegister 802 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rsi|q]" v48|q v47|d [802, 804[802 MustHaveRegister 804 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[r11|q]" v49|q v31|d [874, 881[874 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[vstack:0|q]" v0|q v0|q [349, 353[ "StoreAtDefinition"
  v51|q QWORD "[r10|q]" v1|q v1|q [351, 353[352 ShouldHaveRegister  "OneSpillStore"
  v52|q QWORD "[vstack:3|q]" v7|q v7|q [645, 697[682 ShouldHaveRegister  "OneSpillStore"
  v53|q QWORD "[vstack:4|q]" v8|q v8|q [73, 347[ "OneSpillStore"
  v54|q QWORD "[vstack:4|q]" v8|q v8|q [620, 645[ "OneSpillStore"
  v55|q QWORD "[vstack:0|q]" v0|q v0|q [353, 355[ "StoreAtDefinition"
  v56|q QWORD "[vstack:1|q]" v1|q v1|q [353, 388[[620, 712[[810, 831[ "OneSpillStore"
  v57|q QWORD "[rsi|q]" v0|q v0|q [355, 361[356 MustHaveRegister  "StoreAtDefinition"
  v58|q QWORD "[rdx|q]" v1|q v1|q [832, 853[ "OneSpillStore"
  v59|q QWORD "[vstack:0|q]" v0|q v0|q [361, 365[ "StoreAtDefinition"
  v60|q QWORD "[rsi|q]" v0|q v0|q [365, 373[366 MustHaveRegister  "StoreAtDefinition"
  v61|q QWORD "[vstack:0|q]" v0|q v0|q [373, 377[ "StoreAtDefinition"
  v62|q QWORD "[rsi|q]" v0|q v0|q [377, 534[[572, 588[[598, 610[378 MustHaveRegister 386 MustHaveRegister  "StoreAtDefinition"
  v63|q QWORD "[vstack:0|q]" v0|q v0|q [620, 641[ "StoreAtDefinition"
  v64|q QWORD "[vstack:5|q]" v36|q v36|q [778, 805[ "OneSpillStore"
  v65|q QWORD "[vstack:6|q]" v37|q v37|q [778, 805[ "OneSpillStore"
  v66|q QWORD "[vstack:0|q]" v0|q v0|q [641, 645[ "StoreAtDefinition"
  v67|q QWORD "[vstack:4|q]" v8|q v8|q [645, 712[ "OneSpillStore"
  v68|q QWORD "[vstack:0|q]" v0|q v0|q [645, 807[[810, 831[[832, 853[ "StoreAtDefinition"
  v69|q QWORD "[r8|q]" v7|q v7|q [810, 831[ "OneSpillStore"
  v70|q QWORD "[rsi|q]" v0|q v0|q [854, 881[ "StoreAtDefinition"
  v71|q QWORD "[rax|q]" v8|q v8|q [810, 831[ "OneSpillStore"
  v72|q QWORD "[vstack:6|q]" v37|q v37|q [805, 807[ "OneSpillStore"
  v73|q QWORD "[vstack:5|q]" v36|q v36|q [805, 807[ "OneSpillStore"
  v74|q QWORD "[r10|q]" v36|q v36|q [854, 881[ "OneSpillStore"
  v75|q QWORD "[rdx|q]" v37|q v37|q [854, 881[ "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7a64b983 slotKind: QWORD <|@ <|@
      nr   54  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v4|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   66  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   68  <|@ instruction v6|QWORD[.] = MOV input: [v5|QWORD] size: QWORD <|@ <|@
      nr   70  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   76  <|@ instruction v9|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = CAS (address: [v4|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v9|DWORD) accessKind: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v4|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  198  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 12], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr  202  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v7|QWORD[.], ~newValue: v6|QWORD[.]) {temp: v19|QWORD, temp2: v20|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction v10|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  224  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction CMPBRANCH (x: v6|QWORD[.], y: v11|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction v12|DWORD = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  244  <|@ instruction v13|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 16], y: v13|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  342  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v21|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  344  <|@ instruction v22|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v22|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  348  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  352  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = STACKMOVE (input: v50|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  356  <|@ instruction v24|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v24|DWORD[_] * 8] state [bci:12, 16] <|@ <|@
      nr  360  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16] <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = MOVE input: v59|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction v26|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v27|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16] <|@ <|@
      nr  370  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v27|DWORD[_] * 8] state [bci:19, 16] <|@ <|@
      nr  372  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction rsi|QWORD[.] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16] <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = MOVE input: v61|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  378  <|@ instruction v29|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  380  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v30|DWORD[_] = MOV input: [v29|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v31|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v31|DWORD[_] * 8] state [bci:7, 23, 16] <|@ <|@
      nr  386  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B28 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction v32|DWORD = MOV input: [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  418  <|@ instruction v33|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  420  <|@ instruction v34|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  422  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  426  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction CMPBRANCH (x: v35|QWORD[.], y: [v34|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v31|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v38|QWORD, temp2: v39|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  480  <|@ instruction MOV x: [v31|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B15" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction v40|DWORD = DEC value: v32|DWORD size: DWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [v31|DWORD[_] * 8 + 16], y: v40|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  516  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.862731903000712 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605946017699025707
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction v41|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  532  <|@ instruction TESTBRANCH (x: v41|DWORD[_], y: v41|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605940590109109270
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4594113624694502228
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B24" "B20" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4558697075346002629
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: v42|DWORD[_], y: v42|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4558136932628500244
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4544087108242127632
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction CMPCONSTBRANCH x: [v42|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4543126429280223949
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = STACKMOVE (input: v54|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = STACKMOVE (input: v66|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  646  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v7|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  648  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.7298301486199575 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539246251051830922
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  686  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  688  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  690  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  692  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  694  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  696  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  698  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v68|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532503281059072088
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v68|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v62|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533803057202577944
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction v44|DWORD = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  754  <|@ instruction v45|DWORD = AND x: v44|DWORD y: -2 size: DWORD <|@ <|@
      nr  756  <|@ instruction rax|DWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr  758  <|@ instruction rax|DWORD = CAS (address: [v42|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v45|DWORD) accessKind: DWORD <|@ <|@
      nr  760  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529299457575207448
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v43|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v44|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v43|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v43|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT temp: v46|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23] <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction v47|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  802  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  804  <|@ instruction rsi|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = STACKMOVE (input: v65|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = STACKMOVE (input: v64|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  806  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23] <|@ <|@
      nr  808  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v53|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction MOV x: [r15|QWORD + 1156] y: -107795 size: DWORD <|@ <|@
      nr  828  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  830  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v12|DWORD 
locals: v7|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v62|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105491 size: DWORD <|@ <|@
      nr  850  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr  852  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  876  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106515 size: DWORD <|@ <|@
      nr  878  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24980 size: QWORD <|@ <|@
      nr  880  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v32|DWORD 
locals: v49|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v49|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        42
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: invokevirtual #50         // implWrite:(java.lang.String)void
    19: aload_0       
    20: getfield      #17         // lock:jdk.internal.misc.InternalLock
    23: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    26: goto          39
    29: astore_2      
    30: aload_0       
    31: getfield      #17         // lock:jdk.internal.misc.InternalLock
    34: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_2       
    38: athrow        
    39: goto          61
    42: aload_0       
    43: dup           
    44: astore_2      
    45: monitorenter  
    46: aload_0       
    47: aload_1       
    48: invokevirtual #50         // implWrite:(java.lang.String)void
    51: aload_2       
    52: monitorexit   
    53: goto          61
    56: astore_3      
    57: aload_2       
    58: monitorexit   
    59: aload_3       
    60: athrow        
    61: goto          80
    64: astore_2      
    65: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    68: invokevirtual #39         // java.lang.Thread.interrupt:()void
    71: goto          80
    74: astore_2      
    75: aload_0       
    76: iconst_1      
    77: putfield      #5          // trouble:boolean
    80: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7a64b983 slotKind: QWORD <|@ <|@
      nr   54  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   56  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v4|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   66  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   68  <|@ instruction v6|QWORD[.] = MOV input: [v5|QWORD] size: QWORD <|@ <|@
      nr   70  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   76  <|@ instruction v9|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = CAS (address: [v4|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v9|DWORD) accessKind: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v4|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  198  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 12], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr  202  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v7|QWORD[.], ~newValue: v6|QWORD[.]) {temp: v19|QWORD, temp2: v20|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction v10|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  224  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction CMPBRANCH (x: v6|QWORD[.], y: v11|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction v12|DWORD = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  244  <|@ instruction v13|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 16], y: v13|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  342  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v21|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  344  <|@ instruction v22|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v22|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  348  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  352  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  356  <|@ instruction v24|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v24|DWORD[_] * 8] state [bci:12, 16] <|@ <|@
      nr  360  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16] <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = MOVE input: v59|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction v26|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v27|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16] <|@ <|@
      nr  370  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v27|DWORD[_] * 8] state [bci:19, 16] <|@ <|@
      nr  372  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  374  <|@ instruction rsi|QWORD[.] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16] <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = MOVE input: v61|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  378  <|@ instruction v29|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  380  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v30|DWORD[_] = MOV input: [v29|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v31|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [v31|DWORD[_] * 8] state [bci:7, 23, 16] <|@ <|@
      nr  386  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B28 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction v32|DWORD = MOV input: [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  418  <|@ instruction v33|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  420  <|@ instruction v34|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  422  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  426  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction CMPBRANCH (x: v35|QWORD[.], y: [v34|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v31|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v38|QWORD, temp2: v39|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  480  <|@ instruction MOV x: [v31|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B15" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction v40|DWORD = DEC value: v32|DWORD size: DWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [v31|DWORD[_] * 8 + 16], y: v40|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  516  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.862731903000712 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605946017699025707
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction v41|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  532  <|@ instruction TESTBRANCH (x: v41|DWORD[_], y: v41|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605940590109109270
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4594113624694502228
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B24" "B20" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4558697075346002629
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: v42|DWORD[_], y: v42|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4558136932628500244
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4544087108242127632
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction CMPCONSTBRANCH x: [v42|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4543126429280223949
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  642  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = STACKMOVE (input: v54|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  646  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v7|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  648  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.7298301486199575 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539246251051830922
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  686  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  688  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  690  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  692  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  694  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  696  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  698  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v68|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532503281059072088
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v68|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533803057202577944
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction v44|DWORD = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  754  <|@ instruction v45|DWORD = AND x: v44|DWORD y: -2 size: DWORD <|@ <|@
      nr  756  <|@ instruction rax|DWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr  758  <|@ instruction rax|DWORD = CAS (address: [v42|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v45|DWORD) accessKind: DWORD <|@ <|@
      nr  760  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529299457575207448
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v43|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v44|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v43|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v43|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT temp: v46|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23] <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction v47|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  802  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  804  <|@ instruction rsi|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = STACKMOVE (input: v65|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = STACKMOVE (input: v64|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  806  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23] <|@ <|@
      nr  808  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v53|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction MOV x: [r15|QWORD + 1156] y: -107795 size: DWORD <|@ <|@
      nr  828  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  830  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v12|DWORD 
locals: v7|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v7|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105491 size: DWORD <|@ <|@
      nr  850  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr  852  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  876  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106515 size: DWORD <|@ <|@
      nr  878  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24980 size: QWORD <|@ <|@
      nr  880  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v32|DWORD 
locals: v49|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v49|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v36|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v37|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        42
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: invokevirtual #50         // implWrite:(java.lang.String)void
    19: aload_0       
    20: getfield      #17         // lock:jdk.internal.misc.InternalLock
    23: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    26: goto          39
    29: astore_2      
    30: aload_0       
    31: getfield      #17         // lock:jdk.internal.misc.InternalLock
    34: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_2       
    38: athrow        
    39: goto          61
    42: aload_0       
    43: dup           
    44: astore_2      
    45: monitorenter  
    46: aload_0       
    47: aload_1       
    48: invokevirtual #50         // implWrite:(java.lang.String)void
    51: aload_2       
    52: monitorexit   
    53: goto          61
    56: astore_3      
    57: aload_2       
    58: monitorexit   
    59: aload_3       
    60: athrow        
    61: goto          80
    64: astore_2      
    65: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    68: invokevirtual #39         // java.lang.Thread.interrupt:()void
    71: goto          80
    74: astore_2      
    75: aload_0       
    76: iconst_1      
    77: putfield      #5          // trouble:boolean
    80: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7a64b983 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   58  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   66  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   68  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr   70  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  198  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  202  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  224  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  342  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  344  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  348  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  352  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: vstack:0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  356  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] vstack:1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16] <|@ <|@
      nr  360  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: vstack:0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] vstack:1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16] <|@ <|@
      nr  370  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] vstack:1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16] <|@ <|@
      nr  372  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  374  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: vstack:0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  378  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  380  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] vstack:1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] vstack:1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] vstack:1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:7, 23, 16] <|@ <|@
      nr  386  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B28 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  418  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  420  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  422  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  426  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction CMPBRANCH (x: r9|QWORD[.], y: [rcx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  480  <|@ instruction MOV x: [r11|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B15" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  516  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.862731903000712 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605946017699025707
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  532  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605940590109109270
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4594113624694502228
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B24" "B20" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4558697075346002629
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4558136932628500244
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4544087108242127632
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4543126429280223949
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  646  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: vstack:3|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:3|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  650  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7298301486199575 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539246251051830922
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  686  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  688  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  690  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  692  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  694  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  696  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:3|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532503281059072088
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533803057202577944
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  754  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr  756  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  758  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr  760  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529299457575207448
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: vstack:0|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23] <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  802  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  806  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: vstack:5|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:6|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: vstack:0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23] <|@ <|@
      nr  808  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction MOV x: [r15|QWORD + 1156] y: -107795 size: DWORD <|@ <|@
      nr  828  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  830  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105491 size: DWORD <|@ <|@
      nr  850  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr  852  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: vstack:0|QWORD[.] rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: vstack:0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  876  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106515 size: DWORD <|@ <|@
      nr  878  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24980 size: QWORD <|@ <|@
      nr  880  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r8|DWORD 
locals: r11|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r11|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        42
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: invokevirtual #50         // implWrite:(java.lang.String)void
    19: aload_0       
    20: getfield      #17         // lock:jdk.internal.misc.InternalLock
    23: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    26: goto          39
    29: astore_2      
    30: aload_0       
    31: getfield      #17         // lock:jdk.internal.misc.InternalLock
    34: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_2       
    38: athrow        
    39: goto          61
    42: aload_0       
    43: dup           
    44: astore_2      
    45: monitorenter  
    46: aload_0       
    47: aload_1       
    48: invokevirtual #50         // implWrite:(java.lang.String)void
    51: aload_2       
    52: monitorexit   
    53: goto          61
    56: astore_3      
    57: aload_2       
    58: monitorexit   
    59: aload_3       
    60: athrow        
    61: goto          80
    64: astore_2      
    65: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    68: invokevirtual #39         // java.lang.Thread.interrupt:()void
    71: goto          80
    74: astore_2      
    75: aload_0       
    76: iconst_1      
    77: putfield      #5          // trouble:boolean
    80: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7a64b983 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   58  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   66  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   68  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr   70  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  198  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  202  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  224  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  342  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  344  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  348  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  352  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: vstack:0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  356  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] vstack:1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16] <|@ <|@
      nr  360  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: vstack:0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] vstack:1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16] <|@ <|@
      nr  370  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] vstack:1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16] <|@ <|@
      nr  372  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  374  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: vstack:0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  378  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  380  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] vstack:1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] vstack:1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] vstack:1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:7, 23, 16] <|@ <|@
      nr  386  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B28 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  418  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  420  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  422  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  426  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction CMPBRANCH (x: r9|QWORD[.], y: [rcx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  480  <|@ instruction MOV x: [r11|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B15" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  516  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.862731903000712 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605946017699025707
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  532  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605940590109109270
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4594113624694502228
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B24" "B20" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4558697075346002629
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4558136932628500244
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4544087108242127632
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4543126429280223949
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  646  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: vstack:3|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:3|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  650  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7298301486199575 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539246251051830922
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  686  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  688  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  690  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  692  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  694  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  696  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:3|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532503281059072088
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533803057202577944
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  754  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr  756  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  758  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr  760  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529299457575207448
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: vstack:0|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23] <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  802  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  806  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: vstack:5|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:6|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: vstack:0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23] <|@ <|@
      nr  808  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction MOV x: [r15|QWORD + 1156] y: -107795 size: DWORD <|@ <|@
      nr  828  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  830  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105491 size: DWORD <|@ <|@
      nr  850  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr  852  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: vstack:0|QWORD[.] rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: vstack:0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  876  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106515 size: DWORD <|@ <|@
      nr  878  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24980 size: QWORD <|@ <|@
      nr  880  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r8|DWORD 
locals: r11|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r11|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        42
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: invokevirtual #50         // implWrite:(java.lang.String)void
    19: aload_0       
    20: getfield      #17         // lock:jdk.internal.misc.InternalLock
    23: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    26: goto          39
    29: astore_2      
    30: aload_0       
    31: getfield      #17         // lock:jdk.internal.misc.InternalLock
    34: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_2       
    38: athrow        
    39: goto          61
    42: aload_0       
    43: dup           
    44: astore_2      
    45: monitorenter  
    46: aload_0       
    47: aload_1       
    48: invokevirtual #50         // implWrite:(java.lang.String)void
    51: aload_2       
    52: monitorexit   
    53: goto          61
    56: astore_3      
    57: aload_2       
    58: monitorexit   
    59: aload_3       
    60: athrow        
    61: goto          80
    64: astore_2      
    65: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    68: invokevirtual #39         // java.lang.Thread.interrupt:()void
    71: goto          80
    74: astore_2      
    75: aload_0       
    76: iconst_1      
    77: putfield      #5          // trouble:boolean
    80: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7a64b983 slotKind: QWORD <|@ <|@
      nr   54  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   64  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   66  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr   68  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction vstack:4|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  384  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  386  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  388  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  390  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  120  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  470  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  474  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  476  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: vstack:0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16] <|@ <|@
      nr  486  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  490  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] vstack:1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16] <|@ <|@
      nr  492  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: vstack:0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16] <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  502  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] vstack:1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16] <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] vstack:1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16] <|@ <|@
      nr  506  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  508  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: vstack:0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16] <|@ <|@
      nr  512  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] vstack:1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] vstack:1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] vstack:1|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:7, 23, 16] <|@ <|@
      nr  522  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B28 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  558  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  562  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  564  <|@ instruction CMPBRANCH (x: r9|QWORD[.], y: [rcx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  616  <|@ instruction MOV x: [r11|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B15" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  648  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  650  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  652  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.862731903000712 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605946017699025707
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  668  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605940590109109270
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4594113624694502228
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B24" "B20" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4558697075346002629
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4558136932628500244
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4544087108242127632
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4543126429280223949
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  196  <|@ instruction vstack:3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: vstack:3|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:3|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7298301486199575 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539246251051830922
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  236  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  238  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  240  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  242  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  244  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  246  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:3|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  248  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532503281059072088
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533803057202577944
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  770  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr  772  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr  776  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529299457575207448
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: vstack:0|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23] <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction vstack:6|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction vstack:5|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  822  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: vstack:5|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:6|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: vstack:0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23] <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction rax|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction MOV x: [r15|QWORD + 1156] y: -107795 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105491 size: DWORD <|@ <|@
      nr  904  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr  906  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: vstack:0|QWORD[.] rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: vstack:0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  878  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106515 size: DWORD <|@ <|@
      nr  880  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24980 size: QWORD <|@ <|@
      nr  882  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r8|DWORD 
locals: r11|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r11|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        42
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: invokevirtual #50         // implWrite:(java.lang.String)void
    19: aload_0       
    20: getfield      #17         // lock:jdk.internal.misc.InternalLock
    23: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    26: goto          39
    29: astore_2      
    30: aload_0       
    31: getfield      #17         // lock:jdk.internal.misc.InternalLock
    34: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_2       
    38: athrow        
    39: goto          61
    42: aload_0       
    43: dup           
    44: astore_2      
    45: monitorenter  
    46: aload_0       
    47: aload_1       
    48: invokevirtual #50         // implWrite:(java.lang.String)void
    51: aload_2       
    52: monitorexit   
    53: goto          61
    56: astore_3      
    57: aload_2       
    58: monitorexit   
    59: aload_3       
    60: athrow        
    61: goto          80
    64: astore_2      
    65: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    68: invokevirtual #39         // java.lang.Thread.interrupt:()void
    71: goto          80
    74: astore_2      
    75: aload_0       
    76: iconst_1      
    77: putfield      #5          // trouble:boolean
    80: return        
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [54, 906[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [128, 886[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[vstack:3|q]" vstack:3|q -1 [196, 246[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[vstack:4|q]" vstack:4|q -1 [72, 472[ "NOT_SUPPORTED"
  vstack:5|q QWORD "[vstack:5|q]" vstack:5|q -1 [798, 824[ "NOT_SUPPORTED"
  vstack:6|q QWORD "[vstack:6|q]" vstack:6|q -1 [796, 824[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:32|q]" vstack:0|q -1 [54, 906[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:48|q]" vstack:1|q -1 [128, 886[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[stack:56|q]" vstack:3|q -1 [196, 246[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[stack:40|q]" vstack:4|q -1 [72, 472[ "NOT_SUPPORTED"
  vstack:5|q QWORD "[stack:56|q]" vstack:5|q -1 [798, 824[ "NOT_SUPPORTED"
  vstack:6|q QWORD "[stack:40|q]" vstack:6|q -1 [796, 824[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7a64b983 slotKind: QWORD <|@ <|@
      nr   54  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   64  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   66  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr   68  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  384  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  386  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  388  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  390  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  120  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  470  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  474  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  476  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16] <|@ <|@
      nr  486  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  490  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16] <|@ <|@
      nr  492  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16] <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  502  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16] <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16] <|@ <|@
      nr  506  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  508  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16] <|@ <|@
      nr  512  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:7, 23, 16] <|@ <|@
      nr  522  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B28 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  558  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  562  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  564  <|@ instruction CMPBRANCH (x: r9|QWORD[.], y: [rcx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  616  <|@ instruction MOV x: [r11|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B15" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  648  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  650  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  652  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.862731903000712 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605946017699025707
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  668  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605940590109109270
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4594113624694502228
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B24" "B20" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4558697075346002629
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4558136932628500244
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4544087108242127632
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4543126429280223949
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  196  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:56|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7298301486199575 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539246251051830922
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  236  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  238  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  240  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  242  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  244  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  246  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  248  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532503281059072088
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533803057202577944
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  770  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr  772  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr  776  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529299457575207448
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23] <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  822  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23] <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction rax|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction MOV x: [r15|QWORD + 1156] y: -107795 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105491 size: DWORD <|@ <|@
      nr  904  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr  906  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  878  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106515 size: DWORD <|@ <|@
      nr  880  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24980 size: QWORD <|@ <|@
      nr  882  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r8|DWORD 
locals: r11|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r11|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        42
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: invokevirtual #50         // implWrite:(java.lang.String)void
    19: aload_0       
    20: getfield      #17         // lock:jdk.internal.misc.InternalLock
    23: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    26: goto          39
    29: astore_2      
    30: aload_0       
    31: getfield      #17         // lock:jdk.internal.misc.InternalLock
    34: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_2       
    38: athrow        
    39: goto          61
    42: aload_0       
    43: dup           
    44: astore_2      
    45: monitorenter  
    46: aload_0       
    47: aload_1       
    48: invokevirtual #50         // implWrite:(java.lang.String)void
    51: aload_2       
    52: monitorexit   
    53: goto          61
    56: astore_3      
    57: aload_2       
    58: monitorexit   
    59: aload_3       
    60: athrow        
    61: goto          80
    64: astore_2      
    65: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    68: invokevirtual #39         // java.lang.Thread.interrupt:()void
    71: goto          80
    74: astore_2      
    75: aload_0       
    76: iconst_1      
    77: putfield      #5          // trouble:boolean
    80: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7a64b983 slotKind: QWORD <|@ <|@
      nr   54  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   64  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   66  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr   68  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  384  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  386  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  388  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  390  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  120  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  470  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  474  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  476  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16] <|@ <|@
      nr  486  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  490  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16] <|@ <|@
      nr  492  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16] <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  502  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16] <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16] <|@ <|@
      nr  506  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  508  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16] <|@ <|@
      nr  512  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:7, 23, 16] <|@ <|@
      nr  522  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B28 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  558  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  562  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  564  <|@ instruction CMPBRANCH (x: r9|QWORD[.], y: [rcx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  616  <|@ instruction MOV x: [r11|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B15" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  648  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  650  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  652  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.862731903000712 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605946017699025707
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  668  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605940590109109270
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4594113624694502228
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B24" "B20" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4558697075346002629
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4558136932628500244
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4544087108242127632
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4543126429280223949
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  196  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:56|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7298301486199575 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539246251051830922
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  236  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  238  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  240  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  242  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  244  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  246  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  248  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532503281059072088
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533803057202577944
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  770  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr  772  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr  776  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529299457575207448
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23] <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  822  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23] <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction rax|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction MOV x: [r15|QWORD + 1156] y: -107795 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105491 size: DWORD <|@ <|@
      nr  904  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr  906  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  878  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106515 size: DWORD <|@ <|@
      nr  880  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24980 size: QWORD <|@ <|@
      nr  882  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r8|DWORD 
locals: r11|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r11|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        42
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: invokevirtual #50         // implWrite:(java.lang.String)void
    19: aload_0       
    20: getfield      #17         // lock:jdk.internal.misc.InternalLock
    23: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    26: goto          39
    29: astore_2      
    30: aload_0       
    31: getfield      #17         // lock:jdk.internal.misc.InternalLock
    34: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_2       
    38: athrow        
    39: goto          61
    42: aload_0       
    43: dup           
    44: astore_2      
    45: monitorenter  
    46: aload_0       
    47: aload_1       
    48: invokevirtual #50         // implWrite:(java.lang.String)void
    51: aload_2       
    52: monitorexit   
    53: goto          61
    56: astore_3      
    57: aload_2       
    58: monitorexit   
    59: aload_3       
    60: athrow        
    61: goto          80
    64: astore_2      
    65: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    68: invokevirtual #39         // java.lang.Thread.interrupt:()void
    71: goto          80
    74: astore_2      
    75: aload_0       
    76: iconst_1      
    77: putfield      #5          // trouble:boolean
    80: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7a64b983 slotKind: QWORD <|@ <|@
      nr   54  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   64  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   66  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr   68  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  384  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  386  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  388  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  390  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  120  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  470  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  474  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  476  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16] <|@ <|@
      nr  486  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  490  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16] <|@ <|@
      nr  492  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16] <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  502  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16] <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16] <|@ <|@
      nr  506  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  508  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16] <|@ <|@
      nr  512  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:7, 23, 16] <|@ <|@
      nr  522  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B28 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  558  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  562  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  564  <|@ instruction CMPBRANCH (x: r9|QWORD[.], y: [rcx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  616  <|@ instruction MOV x: [r11|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B15" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  648  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  650  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  652  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.862731903000712 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605946017699025707
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  668  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605940590109109270
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4594113624694502228
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B24" "B20" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4558697075346002629
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4558136932628500244
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4544087108242127632
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4543126429280223949
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  196  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:56|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7298301486199575 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539246251051830922
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  236  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  238  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  240  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  242  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  244  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  246  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  248  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532503281059072088
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533803057202577944
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  770  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr  772  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr  776  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529299457575207448
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23] <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  822  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23] <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction rax|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction MOV x: [r15|QWORD + 1156] y: -107795 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105491 size: DWORD <|@ <|@
      nr  904  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr  906  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  878  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106515 size: DWORD <|@ <|@
      nr  880  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24980 size: QWORD <|@ <|@
      nr  882  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r8|DWORD 
locals: r11|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r11|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        42
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: invokevirtual #50         // implWrite:(java.lang.String)void
    19: aload_0       
    20: getfield      #17         // lock:jdk.internal.misc.InternalLock
    23: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    26: goto          39
    29: astore_2      
    30: aload_0       
    31: getfield      #17         // lock:jdk.internal.misc.InternalLock
    34: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_2       
    38: athrow        
    39: goto          61
    42: aload_0       
    43: dup           
    44: astore_2      
    45: monitorenter  
    46: aload_0       
    47: aload_1       
    48: invokevirtual #50         // implWrite:(java.lang.String)void
    51: aload_2       
    52: monitorexit   
    53: goto          61
    56: astore_3      
    57: aload_2       
    58: monitorexit   
    59: aload_3       
    60: athrow        
    61: goto          80
    64: astore_2      
    65: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    68: invokevirtual #39         // java.lang.Thread.interrupt:()void
    71: goto          80
    74: astore_2      
    75: aload_0       
    76: iconst_1      
    77: putfield      #5          // trouble:boolean
    80: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7a64b983 slotKind: QWORD <|@ <|@
      nr   54  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   64  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   66  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr   68  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  384  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  386  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  388  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  390  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  120  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  470  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  474  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  476  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16] <|@ <|@
      nr  486  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  490  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16] <|@ <|@
      nr  492  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16] <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  502  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16] <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16] <|@ <|@
      nr  506  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  508  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16] <|@ <|@
      nr  512  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:7, 23, 16] <|@ <|@
      nr  522  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B28 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  558  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  562  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  564  <|@ instruction CMPBRANCH (x: r9|QWORD[.], y: [rcx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  616  <|@ instruction MOV x: [r11|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B15" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  648  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  650  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  652  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.862731903000712 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605946017699025707
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  668  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605940590109109270
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4594113624694502228
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B24" "B20" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4558697075346002629
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4558136932628500244
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4544087108242127632
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4543126429280223949
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  196  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:56|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7298301486199575 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539246251051830922
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  236  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  238  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  240  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  242  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  244  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  246  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  248  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532503281059072088
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533803057202577944
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  770  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr  772  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr  776  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529299457575207448
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23] <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  822  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23] <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction rax|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction MOV x: [r15|QWORD + 1156] y: -107795 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105491 size: DWORD <|@ <|@
      nr  904  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr  906  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  878  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106515 size: DWORD <|@ <|@
      nr  880  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24980 size: QWORD <|@ <|@
      nr  882  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r8|DWORD 
locals: r11|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r11|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        42
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: invokevirtual #50         // implWrite:(java.lang.String)void
    19: aload_0       
    20: getfield      #17         // lock:jdk.internal.misc.InternalLock
    23: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    26: goto          39
    29: astore_2      
    30: aload_0       
    31: getfield      #17         // lock:jdk.internal.misc.InternalLock
    34: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_2       
    38: athrow        
    39: goto          61
    42: aload_0       
    43: dup           
    44: astore_2      
    45: monitorenter  
    46: aload_0       
    47: aload_1       
    48: invokevirtual #50         // implWrite:(java.lang.String)void
    51: aload_2       
    52: monitorexit   
    53: goto          61
    56: astore_3      
    57: aload_2       
    58: monitorexit   
    59: aload_3       
    60: athrow        
    61: goto          80
    64: astore_2      
    65: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    68: invokevirtual #39         // java.lang.Thread.interrupt:()void
    71: goto          80
    74: astore_2      
    75: aload_0       
    76: iconst_1      
    77: putfield      #5          // trouble:boolean
    80: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7a64b983 slotKind: QWORD <|@ <|@
      nr   54  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   64  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   66  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr   68  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  384  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  386  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  388  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  390  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  120  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  470  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  474  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  476  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16] <|@ <|@
      nr  486  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  490  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16] <|@ <|@
      nr  492  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16] <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  502  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16] <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16] <|@ <|@
      nr  506  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  508  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16] <|@ <|@
      nr  512  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:7, 23, 16] <|@ <|@
      nr  522  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B28 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  558  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  562  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  564  <|@ instruction CMPBRANCH (x: r9|QWORD[.], y: [rcx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  616  <|@ instruction MOV x: [r11|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B15" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  648  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  650  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  652  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.862731903000712 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605946017699025707
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  668  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605940590109109270
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4594113624694502228
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B24" "B20" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4558697075346002629
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4558136932628500244
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4544087108242127632
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4543126429280223949
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  196  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:56|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7298301486199575 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539246251051830922
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  236  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  238  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  240  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  242  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  244  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  246  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  248  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532503281059072088
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533803057202577944
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  770  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr  772  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr  776  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529299457575207448
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23] <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  822  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23] <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction rax|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction MOV x: [r15|QWORD + 1156] y: -107795 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105491 size: DWORD <|@ <|@
      nr  904  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr  906  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  878  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106515 size: DWORD <|@ <|@
      nr  880  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24980 size: QWORD <|@ <|@
      nr  882  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r8|DWORD 
locals: r11|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r11|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        42
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: invokevirtual #50         // implWrite:(java.lang.String)void
    19: aload_0       
    20: getfield      #17         // lock:jdk.internal.misc.InternalLock
    23: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    26: goto          39
    29: astore_2      
    30: aload_0       
    31: getfield      #17         // lock:jdk.internal.misc.InternalLock
    34: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_2       
    38: athrow        
    39: goto          61
    42: aload_0       
    43: dup           
    44: astore_2      
    45: monitorenter  
    46: aload_0       
    47: aload_1       
    48: invokevirtual #50         // implWrite:(java.lang.String)void
    51: aload_2       
    52: monitorexit   
    53: goto          61
    56: astore_3      
    57: aload_2       
    58: monitorexit   
    59: aload_3       
    60: athrow        
    61: goto          80
    64: astore_2      
    65: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    68: invokevirtual #39         // java.lang.Thread.interrupt:()void
    71: goto          80
    74: astore_2      
    75: aload_0       
    76: iconst_1      
    77: putfield      #5          // trouble:boolean
    80: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7a64b983 slotKind: QWORD <|@ <|@
      nr   54  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   64  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   66  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr   68  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  384  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  386  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  388  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  390  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  120  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  470  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  474  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  476  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16] <|@ <|@
      nr  486  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  490  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16] <|@ <|@
      nr  492  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16] <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  502  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16] <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16] <|@ <|@
      nr  506  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  508  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16] <|@ <|@
      nr  512  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:7, 23, 16] <|@ <|@
      nr  522  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B28 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  558  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  562  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  564  <|@ instruction CMPBRANCH (x: r9|QWORD[.], y: [rcx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  616  <|@ instruction MOV x: [r11|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B15" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  648  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  650  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  652  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.862731903000712 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605946017699025707
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  668  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605940590109109270
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4594113624694502228
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B24" "B20" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4558697075346002629
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4558136932628500244
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4544087108242127632
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4543126429280223949
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  196  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:56|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7298301486199575 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539246251051830922
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  236  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  238  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  240  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  242  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  244  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  246  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  248  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532503281059072088
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533803057202577944
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  770  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr  772  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr  776  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529299457575207448
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23] <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  822  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23] <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction rax|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction MOV x: [r15|QWORD + 1156] y: -107795 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105491 size: DWORD <|@ <|@
      nr  904  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr  906  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  878  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106515 size: DWORD <|@ <|@
      nr  880  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24980 size: QWORD <|@ <|@
      nr  882  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r8|DWORD 
locals: r11|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r11|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        42
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: invokevirtual #50         // implWrite:(java.lang.String)void
    19: aload_0       
    20: getfield      #17         // lock:jdk.internal.misc.InternalLock
    23: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    26: goto          39
    29: astore_2      
    30: aload_0       
    31: getfield      #17         // lock:jdk.internal.misc.InternalLock
    34: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_2       
    38: athrow        
    39: goto          61
    42: aload_0       
    43: dup           
    44: astore_2      
    45: monitorenter  
    46: aload_0       
    47: aload_1       
    48: invokevirtual #50         // implWrite:(java.lang.String)void
    51: aload_2       
    52: monitorexit   
    53: goto          61
    56: astore_3      
    57: aload_2       
    58: monitorexit   
    59: aload_3       
    60: athrow        
    61: goto          80
    64: astore_2      
    65: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    68: invokevirtual #39         // java.lang.Thread.interrupt:()void
    71: goto          80
    74: astore_2      
    75: aload_0       
    76: iconst_1      
    77: putfield      #5          // trouble:boolean
    80: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7a64b983 slotKind: QWORD <|@ <|@
      nr   54  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   64  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   66  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr   68  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  384  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  386  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  388  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  390  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  470  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  474  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  476  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16] <|@ <|@
      nr  486  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  490  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16] <|@ <|@
      nr  492  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16] <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  502  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16] <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16] <|@ <|@
      nr  506  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  508  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16] <|@ <|@
      nr  512  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:7, 23, 16] <|@ <|@
      nr  522  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B28 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  558  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  562  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  564  <|@ instruction CMPBRANCH (x: r9|QWORD[.], y: [rcx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  616  <|@ instruction MOV x: [r11|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B15" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  648  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  650  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  652  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.862731903000712 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605946017699025707
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  668  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605940590109109270
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B24" "B20" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4594113624694502228
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  120  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4558697075346002629
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4558136932628500244
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4544087108242127632
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4543126429280223949
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  196  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:56|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7298301486199575 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539246251051830922
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  236  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  238  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  240  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  242  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  244  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  246  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  248  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532503281059072088
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529299457575207448
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23] <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533803057202577944
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  770  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr  772  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr  776  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  822  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23] <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105491 size: DWORD <|@ <|@
      nr  904  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr  906  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  878  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106515 size: DWORD <|@ <|@
      nr  880  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24980 size: QWORD <|@ <|@
      nr  882  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r8|DWORD 
locals: r11|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r11|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction rax|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction MOV x: [r15|QWORD + 1156] y: -107795 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        42
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: invokevirtual #50         // implWrite:(java.lang.String)void
    19: aload_0       
    20: getfield      #17         // lock:jdk.internal.misc.InternalLock
    23: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    26: goto          39
    29: astore_2      
    30: aload_0       
    31: getfield      #17         // lock:jdk.internal.misc.InternalLock
    34: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_2       
    38: athrow        
    39: goto          61
    42: aload_0       
    43: dup           
    44: astore_2      
    45: monitorenter  
    46: aload_0       
    47: aload_1       
    48: invokevirtual #50         // implWrite:(java.lang.String)void
    51: aload_2       
    52: monitorexit   
    53: goto          61
    56: astore_3      
    57: aload_2       
    58: monitorexit   
    59: aload_3       
    60: athrow        
    61: goto          80
    64: astore_2      
    65: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    68: invokevirtual #39         // java.lang.Thread.interrupt:()void
    71: goto          80
    74: astore_2      
    75: aload_0       
    76: iconst_1      
    77: putfield      #5          // trouble:boolean
    80: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7a64b983 slotKind: QWORD <|@ <|@
      nr   54  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   64  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   66  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr   68  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  384  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  386  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  388  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  390  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  470  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  474  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  476  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16] <|@ <|@
      nr  486  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  490  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16] <|@ <|@
      nr  492  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16] <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  502  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16] <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16] <|@ <|@
      nr  506  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  508  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16] <|@ <|@
      nr  512  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:7, 23, 16] <|@ <|@
      nr  522  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B28 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  558  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  562  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  564  <|@ instruction CMPBRANCH (x: r9|QWORD[.], y: [rcx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  616  <|@ instruction MOV x: [r11|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B15" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  648  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  650  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  652  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.862731903000712 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605946017699025707
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  668  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605940590109109270
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B24" "B20" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4594113624694502228
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  120  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4558697075346002629
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4558136932628500244
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4544087108242127632
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4543126429280223949
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  196  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:56|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7298301486199575 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539246251051830922
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  236  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  238  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  240  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  242  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  244  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  246  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  248  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532503281059072088
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529299457575207448
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23] <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533803057202577944
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  770  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr  772  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr  776  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  822  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23] <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105491 size: DWORD <|@ <|@
      nr  904  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr  906  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  878  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106515 size: DWORD <|@ <|@
      nr  880  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24980 size: QWORD <|@ <|@
      nr  882  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r8|DWORD 
locals: r11|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r11|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction rax|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction MOV x: [r15|QWORD + 1156] y: -107795 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        42
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: invokevirtual #50         // implWrite:(java.lang.String)void
    19: aload_0       
    20: getfield      #17         // lock:jdk.internal.misc.InternalLock
    23: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    26: goto          39
    29: astore_2      
    30: aload_0       
    31: getfield      #17         // lock:jdk.internal.misc.InternalLock
    34: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_2       
    38: athrow        
    39: goto          61
    42: aload_0       
    43: dup           
    44: astore_2      
    45: monitorenter  
    46: aload_0       
    47: aload_1       
    48: invokevirtual #50         // implWrite:(java.lang.String)void
    51: aload_2       
    52: monitorexit   
    53: goto          61
    56: astore_3      
    57: aload_2       
    58: monitorexit   
    59: aload_3       
    60: athrow        
    61: goto          80
    64: astore_2      
    65: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    68: invokevirtual #39         // java.lang.Thread.interrupt:()void
    71: goto          80
    74: astore_2      
    75: aload_0       
    76: iconst_1      
    77: putfield      #5          // trouble:boolean
    80: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7a64b983 slotKind: QWORD <|@ <|@
      nr   54  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   64  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   66  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr   68  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  384  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  386  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  388  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  390  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  470  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  474  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  476  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16] <|@ <|@
      nr  486  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  490  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16] <|@ <|@
      nr  492  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16] <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  502  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16] <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16] <|@ <|@
      nr  506  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  508  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16] <|@ <|@
      nr  512  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:7, 23, 16] <|@ <|@
      nr  522  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B28 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  558  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  562  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  564  <|@ instruction CMPBRANCH (x: r9|QWORD[.], y: [rcx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  616  <|@ instruction MOV x: [r11|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B15" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  648  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  650  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  652  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.862731903000712 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605946017699025707
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  668  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605940590109109270
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B24" "B20" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4594113624694502228
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  120  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4558697075346002629
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4558136932628500244
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4544087108242127632
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4543126429280223949
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  196  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:56|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7298301486199575 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539246251051830922
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  236  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  238  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  240  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  242  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  244  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  246  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  248  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532503281059072088
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529299457575207448
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23] <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533803057202577944
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  770  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr  772  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr  776  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  822  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23] <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105491 size: DWORD <|@ <|@
      nr  904  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr  906  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  878  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106515 size: DWORD <|@ <|@
      nr  880  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24980 size: QWORD <|@ <|@
      nr  882  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r8|DWORD 
locals: r11|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r11|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction rax|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction MOV x: [r15|QWORD + 1156] y: -107795 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        42
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: invokevirtual #50         // implWrite:(java.lang.String)void
    19: aload_0       
    20: getfield      #17         // lock:jdk.internal.misc.InternalLock
    23: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    26: goto          39
    29: astore_2      
    30: aload_0       
    31: getfield      #17         // lock:jdk.internal.misc.InternalLock
    34: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_2       
    38: athrow        
    39: goto          61
    42: aload_0       
    43: dup           
    44: astore_2      
    45: monitorenter  
    46: aload_0       
    47: aload_1       
    48: invokevirtual #50         // implWrite:(java.lang.String)void
    51: aload_2       
    52: monitorexit   
    53: goto          61
    56: astore_3      
    57: aload_2       
    58: monitorexit   
    59: aload_3       
    60: athrow        
    61: goto          80
    64: astore_2      
    65: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    68: invokevirtual #39         // java.lang.Thread.interrupt:()void
    71: goto          80
    74: astore_2      
    75: aload_0       
    76: iconst_1      
    77: putfield      #5          // trouble:boolean
    80: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7a64b983 slotKind: QWORD <|@ <|@
      nr   54  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, stack:32]
live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, stack:32]
live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r10:0, stack:32]
live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   64  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   66  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr   68  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  384  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  386  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  388  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  390  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  468  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  470  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  472  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  474  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  476  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ st <@st|@reference-map: [stack:16, stack:32]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16] <|@ <|@
      nr  486  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  490  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:16, stack:32]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16] <|@ <|@
      nr  492  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ st <@st|@reference-map: [stack:16, stack:32]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16] <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  502  <|@ st <@st|@reference-map: [rsi:0, stack:16, stack:32]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16] <|@ <|@
      nr  504  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:16, stack:32]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16] <|@ <|@
      nr  506  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  508  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ st <@st|@reference-map: [stack:16, stack:32]
live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16] <|@ <|@
      nr  512  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  516  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:16, stack:32]
live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  518  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:16, stack:32]
live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  520  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:7, 23, 16] <|@ <|@
      nr  522  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B28 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  558  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  562  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  564  <|@ instruction CMPBRANCH (x: r9|QWORD[.], y: [rcx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  616  <|@ instruction MOV x: [r11|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B15" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  648  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  650  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  652  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.862731903000712 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605946017699025707
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  668  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605940590109109270
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B24" "B20" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4594113624694502228
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  120  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4558697075346002629
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4558136932628500244
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4544087108242127632
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4543126429280223949
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  196  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:56|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7298301486199575 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539246251051830922
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  236  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  238  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  240  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  242  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  244  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  246  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  248  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532503281059072088
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529299457575207448
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, r11:0, stack:32]
live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23] <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533803057202577944
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  770  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr  772  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr  776  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  822  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  824  <|@ st <@st|@reference-map: [stack:8, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23] <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105491 size: DWORD <|@ <|@
      nr  904  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr  906  <|@ st <@st|@reference-map: [rdx:0, stack:32]
live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  878  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106515 size: DWORD <|@ <|@
      nr  880  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24980 size: QWORD <|@ <|@
      nr  882  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, r11:0]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r8|DWORD 
locals: r11|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r11|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction rax|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction MOV x: [r15|QWORD + 1156] y: -107795 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  148  <|@ st <@st|@reference-map: [rax:0, r8:0, stack:16, stack:32]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        42
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: invokevirtual #50         // implWrite:(java.lang.String)void
    19: aload_0       
    20: getfield      #17         // lock:jdk.internal.misc.InternalLock
    23: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    26: goto          39
    29: astore_2      
    30: aload_0       
    31: getfield      #17         // lock:jdk.internal.misc.InternalLock
    34: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_2       
    38: athrow        
    39: goto          61
    42: aload_0       
    43: dup           
    44: astore_2      
    45: monitorenter  
    46: aload_0       
    47: aload_1       
    48: invokevirtual #50         // implWrite:(java.lang.String)void
    51: aload_2       
    52: monitorexit   
    53: goto          61
    56: astore_3      
    57: aload_2       
    58: monitorexit   
    59: aload_3       
    60: athrow        
    61: goto          80
    64: astore_2      
    65: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    68: invokevirtual #39         // java.lang.Thread.interrupt:()void
    71: goto          80
    74: astore_2      
    75: aload_0       
    76: iconst_1      
    77: putfield      #5          // trouble:boolean
    80: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7a64b983 slotKind: QWORD <|@ <|@
      nr   54  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, stack:32]
live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, stack:32]
live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r10:0, stack:32]
live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:787) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   64  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   66  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr   68  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  384  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  386  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  388  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  390  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  468  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  470  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  472  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11] <|@ <|@
      nr  474  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  476  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ st <@st|@reference-map: [stack:16, stack:32]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16] <|@ <|@
      nr  486  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  490  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:16, stack:32]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16] <|@ <|@
      nr  492  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ st <@st|@reference-map: [stack:16, stack:32]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16] <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  502  <|@ st <@st|@reference-map: [rsi:0, stack:16, stack:32]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16] <|@ <|@
      nr  504  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:16, stack:32]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16] <|@ <|@
      nr  506  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  508  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ st <@st|@reference-map: [stack:16, stack:32]
live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16] <|@ <|@
      nr  512  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  516  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:16, stack:32]
live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  518  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:16, stack:32]
live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16] <|@ <|@
      nr  520  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:7, 23, 16] <|@ <|@
      nr  522  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B28 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  558  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  562  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  564  <|@ instruction CMPBRANCH (x: r9|QWORD[.], y: [rcx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459 <|@ <|@
      nr  616  <|@ instruction MOV x: [r11|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B15" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  648  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  650  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  652  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.862731903000712 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605946017699025707
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  668  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605940590109109270
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B24" "B20" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4594113624694502228
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  120  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4558697075346002629
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B26" 
    xhandlers
    flags 
    probability 4558136932628500244
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4544087108242127632
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4543126429280223949
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  196  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:56|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7298301486199575 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539246251051830922
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  236  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  238  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  240  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  242  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  244  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  246  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  248  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532503281059072088
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529299457575207448
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, r11:0, stack:32]
live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23] <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533803057202577944
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  770  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr  772  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr  776  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4529299457575207448
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  822  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  824  <|@ st <@st|@reference-map: [stack:8, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23] <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105491 size: DWORD <|@ <|@
      nr  904  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr  906  <|@ st <@st|@reference-map: [rdx:0, stack:32]
live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3 <|@ <|@
      nr  878  <|@ instruction MOV x: [r15|QWORD + 1156] y: -106515 size: DWORD <|@ <|@
      nr  880  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24980 size: QWORD <|@ <|@
      nr  882  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, r11:0]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r8|DWORD 
locals: r11|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r11|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction rax|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction MOV x: [r15|QWORD + 1156] y: -107795 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  148  <|@ st <@st|@reference-map: [rax:0, r8:0, stack:16, stack:32]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        42
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: invokevirtual #50         // implWrite:(java.lang.String)void
    19: aload_0       
    20: getfield      #17         // lock:jdk.internal.misc.InternalLock
    23: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    26: goto          39
    29: astore_2      
    30: aload_0       
    31: getfield      #17         // lock:jdk.internal.misc.InternalLock
    34: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    37: aload_2       
    38: athrow        
    39: goto          61
    42: aload_0       
    43: dup           
    44: astore_2      
    45: monitorenter  
    46: aload_0       
    47: aload_1       
    48: invokevirtual #50         // implWrite:(java.lang.String)void
    51: aload_2       
    52: monitorexit   
    53: goto          61
    56: astore_3      
    57: aload_2       
    58: monitorexit   
    59: aload_3       
    60: athrow        
    61: goto          80
    64: astore_2      
    65: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    68: invokevirtual #39         // java.lang.Thread.interrupt:()void
    71: goto          80
    74: astore_2      
    75: aload_0       
    76: iconst_1      
    77: putfield      #5          // trouble:boolean
    80: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec389041817f20000000000f85a605000090909090909090909090909090909090909090909090909048896c243048897424208b4618448b14c50c000000468b14d50c000000428504d5000000004d8b9f800300004d8b1b458bc249c1e00348c1e0034889442418b800000000b901000000f0420fb10cd5100000000f85e4020000909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f8432000000428b1cd50c00000048c1e3034885db0f841d000000498b4f284883f9000f84df0400004883e90849894f2849034f38488919498bcb48c1e90342890cd50c0000004d8bd04d33d349c1ea160f84450000004d8bd049c1ea0948b900e0368d787f00004c03d141803a02742bf08304240041803a00742041c60200498b4f484885c90f848a0400004883e90849894f4849034f584c8911909090909090909090909090909090909090909090909090909090909090909090909090448b5624428504d500000000448b5e10438504dc49c1e203498bf24c8bd24c89542410e8000000000f1f840000000000488b742420448b5624428504d50000000049c1e203498bf2666690e8000000000f1f840000000000488b742420448b5628468b14d514000000428504d50000000049c1e203498bf2666690e8000000000f1f840000000000488b7424208b5618448b14d50c000000468b1cd50c000000428504dd00000000807e0d000f85f302000090909090909090909090909090468b04dd10000000468b0cdd0c000000498b8f8003000049c1e10349c1e20348c1e2034c3b090f85e9020000909090904183f8010f85e6000000909090909090909090909090909090909041807f40000f8432000000428b0cdd0c00000048c1e1034885c90f841d0000004d8b4f284983f9000f842e0300004983e9084d894f284d034f3849890942c704dd0c0000000000000090909090909090458bc841ffc946890cdd10000000f0830424004183f8010f85630000009090909090468b1cdd140000004585db0f85a800000090909090909090909090488b6c24304883c438493ba7d804000072234883ec08498bff48b90000000000000000ffd14883c40848b90000000000000000ffe1493ba7500400000f879c020000c3909090ebb1909090e96cffffff90909090909090428b0cd50c00000048c1e1034c3bd90f856b000000909090909090468b1cd510000000418bcbffc185c90f8ce6010000909090909042890cd510000000f083042400e9a7fdffff9090909090468b1cdd140000004585db0f8508000000909090e93dffffff9090909042833cdd0c000000000f85a3000000909090e922ffffff488954241090909090909090909090498bf0ba010000004c8944240890e8000000000f1f84000000000085c00f85570000009090909090909090909090909090488b74240848c7c200000000b90100000041b80000000041b900000000bf0000000048c7042400000000666690e8000000000f1f840000000000488b542410488b742420e9e5fcffff909090488b542410488b742420e9d3fcffff9090909090418bf348c1e603e92d0000006666660f1f840000000000666666906666660f1f8400000000006666669090909090904d8b8f580400004185019090909090909090909090468b04dd0c000000458bc84183e1fe418bc0f0460fb10cdd0c00000075c848895424184c8954240890909090909090909090428b34dd1800000048c1e603666690e8000000000f1f840000000000e9ebfdffff488b5424109090909090909041c78784040000ed63feff49c7879004000094200000e8000000000f1f84000000000090909090909090909049c1e30341c78784040000ed5ffeff49c7879004000094610000e8000000000f1f840000000000488b44241848895424109090909090909041c78784040000ed5afeff49c7879004000094020000e8000000000f1f84000000000048896c2430e800000000e94bfafffff448891c24e800000000e922fbfffff44c891424e800000000e977fbfffff448890c24e800000000e9d3fcfffff4488d0d50fdffff49898f68040000e9d0f9fffff441c78784040000f511ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f50dffff49c7879004000000000000e8000000000f1f84000000000041c78784040000ed67feff49c7879004000014230000e8000000000f1f84000000000041c78784040000f5f1feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5e2feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5defeff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 NOP  <||@
  Comment 76 38 NOP  <||@
  Comment 77 40 NOP  <||@
  Comment 78 42 NOP  <||@
  Comment 79 44 NOP  <||@
  Comment 80 46 NOP  <||@
  Comment 81 48 NOP  <||@
  Comment 82 50 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 87 52 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7a64b983 slotKind: QWORD  <||@
  Comment 87 54 stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 92 56 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 95 58 r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 95 [rax:0, rdx:0, rsi:0, stack:32]at java.io.PrintStream.write(PrintStream.java:787) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 95 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 103 60 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 103 [rax:0, rdx:0, rsi:0, stack:32]at java.io.PrintStream.write(PrintStream.java:787) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 103 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 111 62 NULLCHECK address: [r10|DWORD[_] * 8] state [bci:0]  <||@
  Comment 111 [rax:0, rdx:0, rsi:0, r10:0, stack:32]at java.io.PrintStream.write(PrintStream.java:787) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 111 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 119 64 r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD  <||@
  Comment 126 66 r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD  <||@
  Comment 129 68 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3  <||@
  Comment 136 70 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3  <||@
  Comment 140 72 stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 145 74 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 150 76 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 155 78 rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD  <||@
  Comment 165 80 BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8  <||@
  Comment 171 block B8 null  <||@
  Comment 171 268 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 171 270 NOP  <||@
  Comment 172 272 NOP  <||@
  Comment 173 274 NOP  <||@
  Comment 174 276 NOP  <||@
  Comment 175 278 NOP  <||@
  Comment 176 280 NOP  <||@
  Comment 177 282 NOP  <||@
  Comment 178 284 NOP  <||@
  Comment 179 286 NOP  <||@
  Comment 180 288 NOP  <||@
  Comment 181 290 NOP  <||@
  Comment 182 292 NOP  <||@
  Comment 183 294 NOP  <||@
  Comment 184 296 NOP  <||@
  Comment 185 298 NOP  <||@
  Comment 186 300 NOP  <||@
  Comment 187 302 NOP  <||@
  Comment 188 304 NOP  <||@
  Comment 189 306 NOP  <||@
  Comment 190 308 NOP  <||@
  Comment 191 310 NOP  <||@
  Comment 192 312 NOP  <||@
  Comment 193 314 NOP  <||@
  Comment 194 316 NOP  <||@
  Comment 195 318 NOP  <||@
  Comment 196 320 NOP  <||@
  Comment 197 322 NOP  <||@
  Comment 198 324 NOP  <||@
  Comment 199 326 NOP  <||@
  Comment 200 328 NOP  <||@
  Comment 201 330 NOP  <||@
  Comment 202 332 NOP  <||@
  Comment 203 334 NOP  <||@
  Comment 204 336 NOP  <||@
  Comment 205 338 NOP  <||@
  Comment 206 340 NOP  <||@
  Comment 207 342 NOP  <||@
  Comment 208 344 NOP  <||@
  Comment 209 346 NOP  <||@
  Comment 210 348 NOP  <||@
  Comment 211 350 NOP  <||@
  Comment 212 352 NOP  <||@
  Comment 213 354 NOP  <||@
  Comment 214 356 NOP  <||@
  Comment 215 358 NOP  <||@
  Comment 216 360 NOP  <||@
  Comment 217 362 NOP  <||@
  Comment 218 364 NOP  <||@
  Comment 219 366 NOP  <||@
  Comment 220 368 NOP  <||@
  Comment 221 370 NOP  <||@
  Comment 222 372 NOP  <||@
  Comment 223 374 NOP  <||@
  Comment 224 376 NOP  <||@
  Comment 225 378 NOP  <||@
  Comment 226 380 NOP  <||@
  Comment 227 382 AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459  <||@
  Comment 288 384 rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3  <||@
  Comment 295 386 MOV (x: [r10|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD  <||@
  Comment 303 388 AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459  <||@
  Comment 388 390 JUMP ~outgoingValues: [] destination: B8 -> B9  <||@
  Comment 388 block B9 null  <||@
  Comment 388 392 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 388 394 NOP  <||@
  Comment 389 396 NOP  <||@
  Comment 390 398 NOP  <||@
  Comment 391 400 NOP  <||@
  Comment 392 402 NOP  <||@
  Comment 393 404 NOP  <||@
  Comment 394 406 NOP  <||@
  Comment 395 408 NOP  <||@
  Comment 396 410 NOP  <||@
  Comment 397 412 NOP  <||@
  Comment 398 414 NOP  <||@
  Comment 399 416 NOP  <||@
  Comment 400 418 NOP  <||@
  Comment 401 420 NOP  <||@
  Comment 402 422 NOP  <||@
  Comment 403 424 NOP  <||@
  Comment 404 426 NOP  <||@
  Comment 405 428 NOP  <||@
  Comment 406 430 NOP  <||@
  Comment 407 432 NOP  <||@
  Comment 408 434 NOP  <||@
  Comment 409 436 NOP  <||@
  Comment 410 438 NOP  <||@
  Comment 411 440 NOP  <||@
  Comment 412 442 NOP  <||@
  Comment 413 444 NOP  <||@
  Comment 414 446 NOP  <||@
  Comment 415 448 NOP  <||@
  Comment 416 450 NOP  <||@
  Comment 417 452 NOP  <||@
  Comment 418 454 NOP  <||@
  Comment 419 456 NOP  <||@
  Comment 420 458 NOP  <||@
  Comment 421 460 NOP  <||@
  Comment 422 462 NOP  <||@
  Comment 423 464 NOP  <||@
  Comment 424 466 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 428 468 NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 4, 4, 11]  <||@
  Comment 428 [rdx:0, rsi:0, r10:0, stack:24, stack:32]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:788) [bci: 11, duringCall: true, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 428 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 436 470 r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 440 472 NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11]  <||@
  Comment 440 [rdx:0, rsi:0, r10:0, stack:24, stack:32]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:788) [bci: 11, duringCall: true, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 440 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 444 474 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3  <||@
  Comment 448 476 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 451 478 r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 454 482 stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 459 484 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16]  <||@
  Comment 459 {HotSpotMethod<Writer.write(String)>}  <||@
  Comment 459 INVOKESPECIAL  <||@
  Comment 464 [stack:16, stack:32]at java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 472 486 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 477 488 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 481 490 NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16]  <||@
  Comment 481 [rsi:0, r10:0, stack:16, stack:32]at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12, duringCall: false, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 481 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 489 492 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3  <||@
  Comment 493 494 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 496 496 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16]  <||@
  Comment 499 {HotSpotMethod<BufferedWriter.flushBuffer()>}  <||@
  Comment 499 INVOKESPECIAL  <||@
  Comment 504 [stack:16, stack:32]at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 512 498 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 517 500 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD  <||@
  Comment 521 502 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16]  <||@
  Comment 521 [rsi:0, stack:16, stack:32]at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19, duringCall: false, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 521 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 529 504 NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16]  <||@
  Comment 529 [rsi:0, r10:0, stack:16, stack:32]at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19, duringCall: false, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 529 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 537 506 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3  <||@
  Comment 541 508 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 544 510 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16]  <||@
  Comment 547 {HotSpotMethod<StreamEncoder.flushBuffer()>}  <||@
  Comment 547 INVOKESPECIAL  <||@
  Comment 552 [stack:16, stack:32]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 560 512 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 565 514 rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 568 516 r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16]  <||@
  Comment 568 [rdx:0, rsi:0, stack:16, stack:32]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 568 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 576 518 r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16]  <||@
  Comment 576 [rdx:0, rsi:0, r10:0, stack:16, stack:32]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 576 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 584 520 NULLCHECK address: [r11|DWORD[_] * 8] state [bci:7, 23, 16]  <||@
  Comment 584 [rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:32]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 584 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 592 522 CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B28 y: 0 size: BYTE inlinedY: null  <||@
  Comment 602 block B10 null  <||@
  Comment 602 524 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 602 526 NOP  <||@
  Comment 603 528 NOP  <||@
  Comment 604 530 NOP  <||@
  Comment 605 532 NOP  <||@
  Comment 606 534 NOP  <||@
  Comment 607 536 NOP  <||@
  Comment 608 538 NOP  <||@
  Comment 609 540 NOP  <||@
  Comment 610 542 NOP  <||@
  Comment 611 544 NOP  <||@
  Comment 612 546 NOP  <||@
  Comment 613 548 NOP  <||@
  Comment 614 550 NOP  <||@
  Comment 615 552 r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 623 554 r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 631 556 rcx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD  <||@
  Comment 638 558 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3  <||@
  Comment 642 560 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3  <||@
  Comment 646 562 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3  <||@
  Comment 650 564 CMPBRANCH (x: r9|QWORD[.], y: [rcx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: QWORD  <||@
  Comment 659 block B11 null  <||@
  Comment 659 566 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 659 568 NOP  <||@
  Comment 660 570 NOP  <||@
  Comment 661 572 NOP  <||@
  Comment 662 574 NOP  <||@
  Comment 663 576 CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 1 size: DWORD inlinedY: null  <||@
  Comment 673 block B12 null  <||@
  Comment 673 578 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 673 580 NOP  <||@
  Comment 674 582 NOP  <||@
  Comment 675 584 NOP  <||@
  Comment 676 586 NOP  <||@
  Comment 677 588 NOP  <||@
  Comment 678 590 NOP  <||@
  Comment 679 592 NOP  <||@
  Comment 680 594 NOP  <||@
  Comment 681 596 NOP  <||@
  Comment 682 598 NOP  <||@
  Comment 683 600 NOP  <||@
  Comment 684 602 NOP  <||@
  Comment 685 604 NOP  <||@
  Comment 686 606 NOP  <||@
  Comment 687 608 NOP  <||@
  Comment 688 610 NOP  <||@
  Comment 689 612 NOP  <||@
  Comment 690 614 AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459  <||@
  Comment 751 616 MOV x: [r11|DWORD[_] * 8 + 12] y: 0 size: DWORD  <||@
  Comment 763 618 JUMP ~outgoingValues: [] destination: B12 -> B14  <||@
  Comment 763 block B14 null  <||@
  Comment 763 630 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 763 632 NOP  <||@
  Comment 764 634 NOP  <||@
  Comment 765 636 NOP  <||@
  Comment 766 638 NOP  <||@
  Comment 767 640 NOP  <||@
  Comment 768 642 NOP  <||@
  Comment 769 644 NOP  <||@
  Comment 770 646 r9|DWORD = DEC value: r8|DWORD size: DWORD  <||@
  Comment 776 648 MOV (x: [r11|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD  <||@
  Comment 784 650 MEMBAR barriers: 4  <||@
  Comment 789 652 CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.862731903000712 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B25 y: 1 size: DWORD inlinedY: null  <||@
  Comment 799 block B15 null  <||@
  Comment 799 654 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 799 656 NOP  <||@
  Comment 800 658 NOP  <||@
  Comment 801 660 NOP  <||@
  Comment 802 662 NOP  <||@
  Comment 803 664 NOP  <||@
  Comment 804 666 r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 812 668 TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD  <||@
  Comment 821 block B16 null  <||@
  Comment 821 670 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 821 672 NOP  <||@
  Comment 822 674 NOP  <||@
  Comment 823 676 NOP  <||@
  Comment 824 678 JUMP ~outgoingValues: [] destination: B16 -> B26  <||@
  Comment 824 block B26 null  <||@
  Comment 824 838 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 824 840 NOP  <||@
  Comment 825 842 NOP  <||@
  Comment 826 844 NOP  <||@
  Comment 827 846 NOP  <||@
  Comment 828 848 NOP  <||@
  Comment 829 850 NOP  <||@
  Comment 830 852 NOP  <||@
  Comment 831 854 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 856 {HotSpotForeignCallDescriptor{enableStackReservedZoneEntry(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[], transition=LEAF_NO_VZERO}@0x7f78b1985d50:CallingConvention[rdi|QWORD]:CallingConvention[rdi|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL}  <||@
  Comment 872 {Field[name=StubRoutines::_throw_delayed_StackOverflowError_entry, type=address, offset=0, address=0x7f78b2050498, value=140155947307648]:0x7f789973d280}  <||@
  Comment 884 POLL_RETURN_FAR  <||@
  Comment 898 block B25 null  <||@
  Comment 898 828 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 898 830 NOP  <||@
  Comment 899 832 NOP  <||@
  Comment 900 834 NOP  <||@
  Comment 901 836 JUMP ~outgoingValues: [] destination: B25 -> B26  <||@
  Comment 903 block B13 null  <||@
  Comment 903 620 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 903 622 NOP  <||@
  Comment 904 624 NOP  <||@
  Comment 905 626 NOP  <||@
  Comment 906 628 JUMP ~outgoingValues: [] destination: B13 -> B14  <||@
  Comment 911 block B1 null  <||@
  Comment 911 82 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 911 84 NOP  <||@
  Comment 912 86 NOP  <||@
  Comment 913 88 NOP  <||@
  Comment 914 90 NOP  <||@
  Comment 915 92 NOP  <||@
  Comment 916 94 NOP  <||@
  Comment 917 96 NOP  <||@
  Comment 918 98 rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 926 100 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3  <||@
  Comment 930 102 CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD  <||@
  Comment 939 block B2 null  <||@
  Comment 939 104 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 939 106 NOP  <||@
  Comment 940 108 NOP  <||@
  Comment 941 110 NOP  <||@
  Comment 942 112 NOP  <||@
  Comment 943 114 NOP  <||@
  Comment 944 116 NOP  <||@
  Comment 945 118 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 953 120 rcx|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 958 122 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 966 block B4 null  <||@
  Comment 966 150 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 966 152 NOP  <||@
  Comment 967 154 NOP  <||@
  Comment 968 156 NOP  <||@
  Comment 969 158 NOP  <||@
  Comment 970 160 NOP  <||@
  Comment 971 162 MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 979 164 MEMBAR barriers: 4  <||@
  Comment 984 166 JUMP ~outgoingValues: [] destination: B4 -> B9  <||@
  Comment 989 block B17 null  <||@
  Comment 989 680 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 989 682 NOP  <||@
  Comment 990 684 NOP  <||@
  Comment 991 686 NOP  <||@
  Comment 992 688 NOP  <||@
  Comment 993 690 NOP  <||@
  Comment 994 692 r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 1002 694 TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD  <||@
  Comment 1011 block B18 null  <||@
  Comment 1011 696 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1011 698 NOP  <||@
  Comment 1012 700 NOP  <||@
  Comment 1013 702 NOP  <||@
  Comment 1014 704 JUMP ~outgoingValues: [] destination: B18 -> B26  <||@
  Comment 1019 block B19 null  <||@
  Comment 1019 706 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1019 708 NOP  <||@
  Comment 1020 710 NOP  <||@
  Comment 1021 712 NOP  <||@
  Comment 1022 714 NOP  <||@
  Comment 1023 716 CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: DWORD inlinedY: null  <||@
  Comment 1038 block B20 null  <||@
  Comment 1038 718 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1038 720 NOP  <||@
  Comment 1039 722 NOP  <||@
  Comment 1040 724 NOP  <||@
  Comment 1041 726 JUMP ~outgoingValues: [] destination: B20 -> B26  <||@
  Comment 1046 block B5 null  <||@
  Comment 1046 168 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1046 170 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1051 172 NOP  <||@
  Comment 1052 174 NOP  <||@
  Comment 1053 176 NOP  <||@
  Comment 1054 178 NOP  <||@
  Comment 1055 180 NOP  <||@
  Comment 1056 182 NOP  <||@
  Comment 1057 184 NOP  <||@
  Comment 1058 186 NOP  <||@
  Comment 1059 188 NOP  <||@
  Comment 1060 190 NOP  <||@
  Comment 1061 192 rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1064 194 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1069 196 stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1074 198 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11]  <||@
  Comment 1075 {HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)>}  <||@
  Comment 1075 INVOKESPECIAL  <||@
  Comment 1080 [stack:8, stack:16, stack:24, stack:32]at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1          
     locals:  |stack:56|QWORD[.]  |int[1|0x1] 
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:788) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:32|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 1088 200 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7298301486199575 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD  <||@
  Comment 1096 block B6 null  <||@
  Comment 1096 202 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1096 204 NOP  <||@
  Comment 1097 206 NOP  <||@
  Comment 1098 208 NOP  <||@
  Comment 1099 210 NOP  <||@
  Comment 1100 212 NOP  <||@
  Comment 1101 214 NOP  <||@
  Comment 1102 216 NOP  <||@
  Comment 1103 218 NOP  <||@
  Comment 1104 220 NOP  <||@
  Comment 1105 222 NOP  <||@
  Comment 1106 224 NOP  <||@
  Comment 1107 226 NOP  <||@
  Comment 1108 228 NOP  <||@
  Comment 1109 230 NOP  <||@
  Comment 1110 232 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1115 234 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1122 236 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1127 238 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1133 240 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1139 242 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1144 244 out:0|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1152 246 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11]  <||@
  Comment 1155 {HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)>}  <||@
  Comment 1155 INVOKESPECIAL  <||@
  Comment 1160 [stack:8, stack:16, stack:24, stack:32]at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:788) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:32|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 1168 248 rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1173 250 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1178 252 JUMP ~outgoingValues: [] destination: B6 -> B9  <||@
  Comment 1183 block B7 null  <||@
  Comment 1183 254 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1183 256 NOP  <||@
  Comment 1184 258 NOP  <||@
  Comment 1185 260 NOP  <||@
  Comment 1186 262 rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1191 264 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1196 266 JUMP ~outgoingValues: [] destination: B7 -> B9  <||@
  Comment 1201 block B21 null  <||@
  Comment 1201 728 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1201 730 NOP  <||@
  Comment 1202 732 NOP  <||@
  Comment 1203 734 NOP  <||@
  Comment 1204 736 NOP  <||@
  Comment 1205 738 NOP  <||@
  Comment 1206 740 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3  <||@
  Comment 1213 742 JUMP ~outgoingValues: [] destination: B21 -> B22  <||@
  Comment 1218 block B23 loop 0 depth 1 header:207|LoopBegin  <||@
  Comment 1218 778 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1248 780 NOP  <||@
  Comment 1249 782 NOP  <||@
  Comment 1250 784 NOP  <||@
  Comment 1251 786 NOP  <||@
  Comment 1252 788 NOP  <||@
  Comment 1253 790 SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23]  <||@
  Comment 1260 [rdx:0, rsi:0, r10:0, r11:0, stack:32]at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21, duringCall: false, rethrow: false]
              |0                         |1             |2             |3  |4                           |5        
     locals:  |Object[Unsafe@679697080]  |rsi|QWORD[.]  |long[12|0xc]  |-  |int[-2|0xfffffffffffffffe]  |r8|DWORD 
     stack:   |int[0|0x0]                |              |              |   |                            |         
  at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10, duringCall: true, rethrow: false]
              |0             |1          
     locals:  |rsi|QWORD[.]  |int[1|0x1] 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |rsi|QWORD[.] 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rdx|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:792) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 1260 {infopoint: SAFEPOINT}  <||@
  Comment 1260 POLL_FAR  <||@
  Comment 1263 792 JUMP ~outgoingValues: [] destination: B23 -> B22  <||@
  Comment 1263 block B22 loop 0 depth 1 header:207|LoopBegin  <||@
  Comment 1263 744 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1263 746 NOP  <||@
  Comment 1264 748 NOP  <||@
  Comment 1265 750 NOP  <||@
  Comment 1266 752 NOP  <||@
  Comment 1267 754 NOP  <||@
  Comment 1268 756 NOP  <||@
  Comment 1269 758 NOP  <||@
  Comment 1270 760 NOP  <||@
  Comment 1271 762 NOP  <||@
  Comment 1272 764 NOP  <||@
  Comment 1273 766 NOP  <||@
  Comment 1274 768 r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1282 770 r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD  <||@
  Comment 1289 772 rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1292 774 rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD  <||@
  Comment 1302 776 BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B22 -> B23 falseDestination: B22 -> B24  <||@
  Comment 1304 block B24 null  <||@
  Comment 1304 794 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1304 796 stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1309 798 stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1314 800 NOP  <||@
  Comment 1315 802 NOP  <||@
  Comment 1316 804 NOP  <||@
  Comment 1317 806 NOP  <||@
  Comment 1318 808 NOP  <||@
  Comment 1319 810 NOP  <||@
  Comment 1320 812 NOP  <||@
  Comment 1321 814 NOP  <||@
  Comment 1322 816 NOP  <||@
  Comment 1323 818 NOP  <||@
  Comment 1324 820 rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD  <||@
  Comment 1332 822 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3  <||@
  Comment 1336 824 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23]  <||@
  Comment 1339 {HotSpotMethod<LockSupport.unpark(Thread)>}  <||@
  Comment 1339 INVOKESTATIC  <||@
  Comment 1344 [stack:8, stack:24, stack:32]at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:792) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 1352 826 JUMP ~outgoingValues: [] destination: B24 -> B26  <||@
  Comment 1357 block B28 null  <||@
  Comment 1357 884 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1357 886 rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1362 888 NOP  <||@
  Comment 1363 890 NOP  <||@
  Comment 1364 892 NOP  <||@
  Comment 1365 894 NOP  <||@
  Comment 1366 896 NOP  <||@
  Comment 1367 898 NOP  <||@
  Comment 1368 900 NOP  <||@
  Comment 1369 902 MOV x: [r15|QWORD + 1156] y: -105491 size: DWORD  <||@
  Comment 1380 904 MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD  <||@
  Comment 1391 906 DEOPT info [bci:7, 23, 16]  <||@
  Comment 1391 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1396 [rdx:0, stack:32]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1            
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 1404 block B27 null  <||@
  Comment 1404 856 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1404 858 NOP  <||@
  Comment 1405 860 NOP  <||@
  Comment 1406 862 NOP  <||@
  Comment 1407 864 NOP  <||@
  Comment 1408 866 NOP  <||@
  Comment 1409 868 NOP  <||@
  Comment 1410 870 NOP  <||@
  Comment 1411 872 NOP  <||@
  Comment 1412 874 NOP  <||@
  Comment 1413 876 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3  <||@
  Comment 1417 878 MOV x: [r15|QWORD + 1156] y: -106515 size: DWORD  <||@
  Comment 1428 880 MOV x: [r15|QWORD + 1168] y: 24980 size: QWORD  <||@
  Comment 1439 882 DEOPT info [bci:4, 2, 5, 4, 23]  <||@
  Comment 1439 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1444 [rdx:0, rsi:0, r10:0, r11:0]at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4, duringCall: false, rethrow: false]
              |0             |1           |2  |3 
     locals:  |r11|QWORD[.]  |int[1|0x1]  |-  |- 
     stack:   |r8|DWORD      |            |   |  
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r11|QWORD[.]  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rdx|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:792) [bci: 23, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 1452 block B3 null  <||@
  Comment 1452 124 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1452 126 rax|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1457 128 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1462 130 NOP  <||@
  Comment 1463 132 NOP  <||@
  Comment 1464 134 NOP  <||@
  Comment 1465 136 NOP  <||@
  Comment 1466 138 NOP  <||@
  Comment 1467 140 NOP  <||@
  Comment 1468 142 NOP  <||@
  Comment 1469 144 MOV x: [r15|QWORD + 1156] y: -107795 size: DWORD  <||@
  Comment 1480 146 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 1491 148 DEOPT info [bci:32, 1, 4, 4, 11]  <||@
  Comment 1491 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1496 [rax:0, r8:0, stack:16, stack:32]at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32, duringCall: false, rethrow: false]
              |0            |1  |2 
     locals:  |r8|QWORD[.]  |-  |- 
     stack:   |r11|DWORD    |   |  
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1, duringCall: true, rethrow: false]
              |0           
     locals:  |r8|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rax|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:788) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:32|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 1509 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1524 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1539 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 1554 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1579 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1607 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1612 [rax:0, rdx:0, rsi:0, stack:32]at java.io.PrintStream.write(PrintStream.java:787) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 1642 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1647 [rax:0, rdx:0, rsi:0, stack:32]at java.io.PrintStream.write(PrintStream.java:787) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 1677 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1682 [rdx:0, rsi:0, r10:0, stack:24, stack:32]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:788) [bci: 11, duringCall: true, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 1712 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1717 [rsi:0, stack:16, stack:32]at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19, duringCall: false, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 1747 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1752 [rdx:0, rsi:0, stack:16, stack:32]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 1782 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1787 [rdx:0, rsi:0, r10:0, stack:16, stack:32]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 1795 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1795 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1801 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1801 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-4640[java.io.PrintStream.write(String)]"
  method "HotSpotCompilation-4640[java.io.PrintStream.write(String)]"
  date 1724269735601
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789adbcc80 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3839cfe66669089842400c0feff4883ec389041817f20030000000f85a605000090909090909090909090909090909090909090909090909048896c243048897424208b4618448b14c50c000000468b14d50c000000428504d5000000004d8b9f800300004d8b1b458bc249c1e00348c1e0034889442418b800000000b901000000f0420fb10cd5100000000f85e4020000909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f8432000000428b1cd50c00000048c1e3034885db0f841d000000498b4f284883f9000f84df0400004883e90849894f2849034f38488919498bcb48c1e90342890cd50c0000004d8bd04d33d349c1ea160f84450000004d8bd049c1ea0948b900e0368d787f00004c03d141803a02742bf08304240041803a00742041c60200498b4f484885c90f848a0400004883e90849894f4849034f584c8911909090909090909090909090909090909090909090909090909090909090909090909090448b5624428504d500000000448b5e10438504dc49c1e203498bf24c8bd24c89542410e8500effff0f1f8400c0030005488b742420448b5624428504d50000000049c1e203498bf2666690e8688cfeff0f1f8400e8030007488b742420448b5628468b14d514000000428504d50000000049c1e203498bf2666690e8d8536cf70f1f84001804000a488b7424208b5618448b14d50c000000468b1cd50c000000428504dd00000000807e0d000f85f302000090909090909090909090909090468b04dd10000000468b0cdd0c000000498b8f8003000049c1e10349c1e20348c1e2034c3b090f85e9020000909090904183f8010f85e6000000909090909090909090909090909090909041807f40000f8432000000428b0cdd0c00000048c1e1034885c90f841d0000004d8b4f284983f9000f842e0300004983e9084d894f284d034f3849890942c704dd0c0000000000000090909090909090458bc841ffc946890cdd10000000f0830424004183f8010f85630000009090909090468b1cdd140000004585db0f85a800000090909090909090909090488b6c24304883c438493ba7d804000072234883ec08498bff48b9505d98b1787f0000ffd14883c40848b980d27399787f0000ffe1493ba7500400000f879c020000c3909090ebb1909090e96cffffff90909090909090428b0cd50c00000048c1e1034c3bd90f856b000000909090909090468b1cd510000000418bcbffc185c90f8ce6010000909090909042890cd510000000f083042400e9a7fdffff9090909090468b1cdd140000004585db0f8508000000909090e93dffffff9090909042833cdd0c000000000f85a3000000909090e922ffffff488954241090909090909090909090498bf0ba010000004c8944240890e8c8829cfe0f1f84002806000e85c00f85570000009090909090909090909090909090488b74240848c7c200000000b90100000041b80000000041b900000000bf0000000048c7042400000000666690e878829cfe0f1f84007806000f488b542410488b742420e9e5fcffff909090488b542410488b742420e9d3fcffff9090909090418bf348c1e603e92d0000006666660f1f840000000000666666906666660f1f8400000000006666669090909090904d8b8f580400004185019090909090909090909090468b04dd0c000000458bc84183e1fe418bc0f0460fb10cdd0c00000075c848895424184c8954240890909090909090909090428b34dd1800000048c1e603666690e8c0879cfe0f1f840030070011e9ebfdffff488b5424109090909090909041c78784040000ed63feff49c7879004000094200000e886df9cfe0f1f84000000000090909090909090909049c1e30341c78784040000ed5ffeff49c7879004000094610000e856df9cfe0f1f840000000000488b44241848895424109090909090909041c78784040000ed5afeff49c7879004000094020000e822df9cfe0f1f84000000000048896c2430e8b6df9afee94bfafffff448891c24e887afb0fee922fbfffff44c891424e8f8d0b0fee977fbfffff448890c24e869afb0fee9d3fcfffff4488d0d50fdffff49898f68040000e950ed9cfef441c78784040000f511ffff49c7879004000000000000e8aede9cfe0f1f84000000000041c78784040000f50dffff49c7879004000000000000e88bde9cfe0f1f84000000000041c78784040000ed67feff49c7879004000014230000e868de9cfe0f1f84000000000041c78784040000f5f1feff49c7879004000000000000e845de9cfe0f1f84000000000041c78784040000f5e2feff49c7879004000000000000e822de9cfe0f1f84000000000041c78784040000f5defeff49c7879004000000000000e8ffdd9cfe0f1f840000000000e8787fb0fef4e892db9cfef4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 NOP  <||@
  Comment 76 38 NOP  <||@
  Comment 77 40 NOP  <||@
  Comment 78 42 NOP  <||@
  Comment 79 44 NOP  <||@
  Comment 80 46 NOP  <||@
  Comment 81 48 NOP  <||@
  Comment 82 50 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 87 52 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7a64b983 slotKind: QWORD  <||@
  Comment 87 54 stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 92 56 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 95 58 r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 95 [rax:0, rdx:0, rsi:0, stack:32]at java.io.PrintStream.write(PrintStream.java:787) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 95 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 103 60 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 103 [rax:0, rdx:0, rsi:0, stack:32]at java.io.PrintStream.write(PrintStream.java:787) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 103 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 111 62 NULLCHECK address: [r10|DWORD[_] * 8] state [bci:0]  <||@
  Comment 111 [rax:0, rdx:0, rsi:0, r10:0, stack:32]at java.io.PrintStream.write(PrintStream.java:787) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 111 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 119 64 r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD  <||@
  Comment 126 66 r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD  <||@
  Comment 129 68 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3  <||@
  Comment 136 70 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3  <||@
  Comment 140 72 stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 145 74 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 150 76 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 155 78 rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD  <||@
  Comment 165 80 BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8  <||@
  Comment 171 block B8 null  <||@
  Comment 171 268 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 171 270 NOP  <||@
  Comment 172 272 NOP  <||@
  Comment 173 274 NOP  <||@
  Comment 174 276 NOP  <||@
  Comment 175 278 NOP  <||@
  Comment 176 280 NOP  <||@
  Comment 177 282 NOP  <||@
  Comment 178 284 NOP  <||@
  Comment 179 286 NOP  <||@
  Comment 180 288 NOP  <||@
  Comment 181 290 NOP  <||@
  Comment 182 292 NOP  <||@
  Comment 183 294 NOP  <||@
  Comment 184 296 NOP  <||@
  Comment 185 298 NOP  <||@
  Comment 186 300 NOP  <||@
  Comment 187 302 NOP  <||@
  Comment 188 304 NOP  <||@
  Comment 189 306 NOP  <||@
  Comment 190 308 NOP  <||@
  Comment 191 310 NOP  <||@
  Comment 192 312 NOP  <||@
  Comment 193 314 NOP  <||@
  Comment 194 316 NOP  <||@
  Comment 195 318 NOP  <||@
  Comment 196 320 NOP  <||@
  Comment 197 322 NOP  <||@
  Comment 198 324 NOP  <||@
  Comment 199 326 NOP  <||@
  Comment 200 328 NOP  <||@
  Comment 201 330 NOP  <||@
  Comment 202 332 NOP  <||@
  Comment 203 334 NOP  <||@
  Comment 204 336 NOP  <||@
  Comment 205 338 NOP  <||@
  Comment 206 340 NOP  <||@
  Comment 207 342 NOP  <||@
  Comment 208 344 NOP  <||@
  Comment 209 346 NOP  <||@
  Comment 210 348 NOP  <||@
  Comment 211 350 NOP  <||@
  Comment 212 352 NOP  <||@
  Comment 213 354 NOP  <||@
  Comment 214 356 NOP  <||@
  Comment 215 358 NOP  <||@
  Comment 216 360 NOP  <||@
  Comment 217 362 NOP  <||@
  Comment 218 364 NOP  <||@
  Comment 219 366 NOP  <||@
  Comment 220 368 NOP  <||@
  Comment 221 370 NOP  <||@
  Comment 222 372 NOP  <||@
  Comment 223 374 NOP  <||@
  Comment 224 376 NOP  <||@
  Comment 225 378 NOP  <||@
  Comment 226 380 NOP  <||@
  Comment 227 382 AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459  <||@
  Comment 288 384 rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3  <||@
  Comment 295 386 MOV (x: [r10|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD  <||@
  Comment 303 388 AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459  <||@
  Comment 388 390 JUMP ~outgoingValues: [] destination: B8 -> B9  <||@
  Comment 388 block B9 null  <||@
  Comment 388 392 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 388 394 NOP  <||@
  Comment 389 396 NOP  <||@
  Comment 390 398 NOP  <||@
  Comment 391 400 NOP  <||@
  Comment 392 402 NOP  <||@
  Comment 393 404 NOP  <||@
  Comment 394 406 NOP  <||@
  Comment 395 408 NOP  <||@
  Comment 396 410 NOP  <||@
  Comment 397 412 NOP  <||@
  Comment 398 414 NOP  <||@
  Comment 399 416 NOP  <||@
  Comment 400 418 NOP  <||@
  Comment 401 420 NOP  <||@
  Comment 402 422 NOP  <||@
  Comment 403 424 NOP  <||@
  Comment 404 426 NOP  <||@
  Comment 405 428 NOP  <||@
  Comment 406 430 NOP  <||@
  Comment 407 432 NOP  <||@
  Comment 408 434 NOP  <||@
  Comment 409 436 NOP  <||@
  Comment 410 438 NOP  <||@
  Comment 411 440 NOP  <||@
  Comment 412 442 NOP  <||@
  Comment 413 444 NOP  <||@
  Comment 414 446 NOP  <||@
  Comment 415 448 NOP  <||@
  Comment 416 450 NOP  <||@
  Comment 417 452 NOP  <||@
  Comment 418 454 NOP  <||@
  Comment 419 456 NOP  <||@
  Comment 420 458 NOP  <||@
  Comment 421 460 NOP  <||@
  Comment 422 462 NOP  <||@
  Comment 423 464 NOP  <||@
  Comment 424 466 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 428 468 NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 4, 4, 11]  <||@
  Comment 428 [rdx:0, rsi:0, r10:0, stack:24, stack:32]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:788) [bci: 11, duringCall: true, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 428 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 436 470 r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 440 472 NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11]  <||@
  Comment 440 [rdx:0, rsi:0, r10:0, stack:24, stack:32]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:788) [bci: 11, duringCall: true, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 440 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 444 474 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3  <||@
  Comment 448 476 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 451 478 r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 454 482 stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 459 484 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16]  <||@
  Comment 459 {HotSpotMethod<Writer.write(String)>}  <||@
  Comment 459 INVOKESPECIAL  <||@
  Comment 464 [stack:16, stack:32]at java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 472 486 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 477 488 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 481 490 NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16]  <||@
  Comment 481 [rsi:0, r10:0, stack:16, stack:32]at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12, duringCall: false, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 481 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 489 492 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3  <||@
  Comment 493 494 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 496 496 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16]  <||@
  Comment 499 {HotSpotMethod<BufferedWriter.flushBuffer()>}  <||@
  Comment 499 INVOKESPECIAL  <||@
  Comment 504 [stack:16, stack:32]at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 512 498 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 517 500 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD  <||@
  Comment 521 502 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16]  <||@
  Comment 521 [rsi:0, stack:16, stack:32]at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19, duringCall: false, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 521 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 529 504 NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16]  <||@
  Comment 529 [rsi:0, r10:0, stack:16, stack:32]at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19, duringCall: false, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 529 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 537 506 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3  <||@
  Comment 541 508 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 544 510 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16]  <||@
  Comment 547 {HotSpotMethod<StreamEncoder.flushBuffer()>}  <||@
  Comment 547 INVOKESPECIAL  <||@
  Comment 552 [stack:16, stack:32]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 560 512 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 565 514 rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 568 516 r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16]  <||@
  Comment 568 [rdx:0, rsi:0, stack:16, stack:32]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 568 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 576 518 r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16]  <||@
  Comment 576 [rdx:0, rsi:0, r10:0, stack:16, stack:32]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 576 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 584 520 NULLCHECK address: [r11|DWORD[_] * 8] state [bci:7, 23, 16]  <||@
  Comment 584 [rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:32]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 584 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 592 522 CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B28 y: 0 size: BYTE inlinedY: null  <||@
  Comment 602 block B10 null  <||@
  Comment 602 524 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 602 526 NOP  <||@
  Comment 603 528 NOP  <||@
  Comment 604 530 NOP  <||@
  Comment 605 532 NOP  <||@
  Comment 606 534 NOP  <||@
  Comment 607 536 NOP  <||@
  Comment 608 538 NOP  <||@
  Comment 609 540 NOP  <||@
  Comment 610 542 NOP  <||@
  Comment 611 544 NOP  <||@
  Comment 612 546 NOP  <||@
  Comment 613 548 NOP  <||@
  Comment 614 550 NOP  <||@
  Comment 615 552 r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 623 554 r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 631 556 rcx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD  <||@
  Comment 638 558 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3  <||@
  Comment 642 560 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3  <||@
  Comment 646 562 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3  <||@
  Comment 650 564 CMPBRANCH (x: r9|QWORD[.], y: [rcx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: QWORD  <||@
  Comment 659 block B11 null  <||@
  Comment 659 566 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 659 568 NOP  <||@
  Comment 660 570 NOP  <||@
  Comment 661 572 NOP  <||@
  Comment 662 574 NOP  <||@
  Comment 663 576 CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 1 size: DWORD inlinedY: null  <||@
  Comment 673 block B12 null  <||@
  Comment 673 578 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 673 580 NOP  <||@
  Comment 674 582 NOP  <||@
  Comment 675 584 NOP  <||@
  Comment 676 586 NOP  <||@
  Comment 677 588 NOP  <||@
  Comment 678 590 NOP  <||@
  Comment 679 592 NOP  <||@
  Comment 680 594 NOP  <||@
  Comment 681 596 NOP  <||@
  Comment 682 598 NOP  <||@
  Comment 683 600 NOP  <||@
  Comment 684 602 NOP  <||@
  Comment 685 604 NOP  <||@
  Comment 686 606 NOP  <||@
  Comment 687 608 NOP  <||@
  Comment 688 610 NOP  <||@
  Comment 689 612 NOP  <||@
  Comment 690 614 AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2cc4c459  <||@
  Comment 751 616 MOV x: [r11|DWORD[_] * 8 + 12] y: 0 size: DWORD  <||@
  Comment 763 618 JUMP ~outgoingValues: [] destination: B12 -> B14  <||@
  Comment 763 block B14 null  <||@
  Comment 763 630 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 763 632 NOP  <||@
  Comment 764 634 NOP  <||@
  Comment 765 636 NOP  <||@
  Comment 766 638 NOP  <||@
  Comment 767 640 NOP  <||@
  Comment 768 642 NOP  <||@
  Comment 769 644 NOP  <||@
  Comment 770 646 r9|DWORD = DEC value: r8|DWORD size: DWORD  <||@
  Comment 776 648 MOV (x: [r11|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD  <||@
  Comment 784 650 MEMBAR barriers: 4  <||@
  Comment 789 652 CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.862731903000712 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B25 y: 1 size: DWORD inlinedY: null  <||@
  Comment 799 block B15 null  <||@
  Comment 799 654 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 799 656 NOP  <||@
  Comment 800 658 NOP  <||@
  Comment 801 660 NOP  <||@
  Comment 802 662 NOP  <||@
  Comment 803 664 NOP  <||@
  Comment 804 666 r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 812 668 TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD  <||@
  Comment 821 block B16 null  <||@
  Comment 821 670 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 821 672 NOP  <||@
  Comment 822 674 NOP  <||@
  Comment 823 676 NOP  <||@
  Comment 824 678 JUMP ~outgoingValues: [] destination: B16 -> B26  <||@
  Comment 824 block B26 null  <||@
  Comment 824 838 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 824 840 NOP  <||@
  Comment 825 842 NOP  <||@
  Comment 826 844 NOP  <||@
  Comment 827 846 NOP  <||@
  Comment 828 848 NOP  <||@
  Comment 829 850 NOP  <||@
  Comment 830 852 NOP  <||@
  Comment 831 854 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 856 {HotSpotForeignCallDescriptor{enableStackReservedZoneEntry(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[], transition=LEAF_NO_VZERO}@0x7f78b1985d50:CallingConvention[rdi|QWORD]:CallingConvention[rdi|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL}  <||@
  Comment 872 {Field[name=StubRoutines::_throw_delayed_StackOverflowError_entry, type=address, offset=0, address=0x7f78b2050498, value=140155947307648]:0x7f789973d280}  <||@
  Comment 884 POLL_RETURN_FAR  <||@
  Comment 898 block B25 null  <||@
  Comment 898 828 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 898 830 NOP  <||@
  Comment 899 832 NOP  <||@
  Comment 900 834 NOP  <||@
  Comment 901 836 JUMP ~outgoingValues: [] destination: B25 -> B26  <||@
  Comment 903 block B13 null  <||@
  Comment 903 620 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 903 622 NOP  <||@
  Comment 904 624 NOP  <||@
  Comment 905 626 NOP  <||@
  Comment 906 628 JUMP ~outgoingValues: [] destination: B13 -> B14  <||@
  Comment 911 block B1 null  <||@
  Comment 911 82 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 911 84 NOP  <||@
  Comment 912 86 NOP  <||@
  Comment 913 88 NOP  <||@
  Comment 914 90 NOP  <||@
  Comment 915 92 NOP  <||@
  Comment 916 94 NOP  <||@
  Comment 917 96 NOP  <||@
  Comment 918 98 rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 926 100 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3  <||@
  Comment 930 102 CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD  <||@
  Comment 939 block B2 null  <||@
  Comment 939 104 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 939 106 NOP  <||@
  Comment 940 108 NOP  <||@
  Comment 941 110 NOP  <||@
  Comment 942 112 NOP  <||@
  Comment 943 114 NOP  <||@
  Comment 944 116 NOP  <||@
  Comment 945 118 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 953 120 rcx|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 958 122 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 966 block B4 null  <||@
  Comment 966 150 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 966 152 NOP  <||@
  Comment 967 154 NOP  <||@
  Comment 968 156 NOP  <||@
  Comment 969 158 NOP  <||@
  Comment 970 160 NOP  <||@
  Comment 971 162 MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 979 164 MEMBAR barriers: 4  <||@
  Comment 984 166 JUMP ~outgoingValues: [] destination: B4 -> B9  <||@
  Comment 989 block B17 null  <||@
  Comment 989 680 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 989 682 NOP  <||@
  Comment 990 684 NOP  <||@
  Comment 991 686 NOP  <||@
  Comment 992 688 NOP  <||@
  Comment 993 690 NOP  <||@
  Comment 994 692 r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 1002 694 TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD  <||@
  Comment 1011 block B18 null  <||@
  Comment 1011 696 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1011 698 NOP  <||@
  Comment 1012 700 NOP  <||@
  Comment 1013 702 NOP  <||@
  Comment 1014 704 JUMP ~outgoingValues: [] destination: B18 -> B26  <||@
  Comment 1019 block B19 null  <||@
  Comment 1019 706 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1019 708 NOP  <||@
  Comment 1020 710 NOP  <||@
  Comment 1021 712 NOP  <||@
  Comment 1022 714 NOP  <||@
  Comment 1023 716 CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: DWORD inlinedY: null  <||@
  Comment 1038 block B20 null  <||@
  Comment 1038 718 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1038 720 NOP  <||@
  Comment 1039 722 NOP  <||@
  Comment 1040 724 NOP  <||@
  Comment 1041 726 JUMP ~outgoingValues: [] destination: B20 -> B26  <||@
  Comment 1046 block B5 null  <||@
  Comment 1046 168 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1046 170 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1051 172 NOP  <||@
  Comment 1052 174 NOP  <||@
  Comment 1053 176 NOP  <||@
  Comment 1054 178 NOP  <||@
  Comment 1055 180 NOP  <||@
  Comment 1056 182 NOP  <||@
  Comment 1057 184 NOP  <||@
  Comment 1058 186 NOP  <||@
  Comment 1059 188 NOP  <||@
  Comment 1060 190 NOP  <||@
  Comment 1061 192 rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1064 194 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1069 196 stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1074 198 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11]  <||@
  Comment 1075 {HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)>}  <||@
  Comment 1075 INVOKESPECIAL  <||@
  Comment 1080 [stack:8, stack:16, stack:24, stack:32]at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1          
     locals:  |stack:56|QWORD[.]  |int[1|0x1] 
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:788) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:32|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 1088 200 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7298301486199575 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD  <||@
  Comment 1096 block B6 null  <||@
  Comment 1096 202 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1096 204 NOP  <||@
  Comment 1097 206 NOP  <||@
  Comment 1098 208 NOP  <||@
  Comment 1099 210 NOP  <||@
  Comment 1100 212 NOP  <||@
  Comment 1101 214 NOP  <||@
  Comment 1102 216 NOP  <||@
  Comment 1103 218 NOP  <||@
  Comment 1104 220 NOP  <||@
  Comment 1105 222 NOP  <||@
  Comment 1106 224 NOP  <||@
  Comment 1107 226 NOP  <||@
  Comment 1108 228 NOP  <||@
  Comment 1109 230 NOP  <||@
  Comment 1110 232 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1115 234 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1122 236 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1127 238 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1133 240 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1139 242 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1144 244 out:0|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1152 246 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11]  <||@
  Comment 1155 {HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)>}  <||@
  Comment 1155 INVOKESPECIAL  <||@
  Comment 1160 [stack:8, stack:16, stack:24, stack:32]at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:788) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:32|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 1168 248 rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1173 250 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1178 252 JUMP ~outgoingValues: [] destination: B6 -> B9  <||@
  Comment 1183 block B7 null  <||@
  Comment 1183 254 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1183 256 NOP  <||@
  Comment 1184 258 NOP  <||@
  Comment 1185 260 NOP  <||@
  Comment 1186 262 rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1191 264 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1196 266 JUMP ~outgoingValues: [] destination: B7 -> B9  <||@
  Comment 1201 block B21 null  <||@
  Comment 1201 728 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1201 730 NOP  <||@
  Comment 1202 732 NOP  <||@
  Comment 1203 734 NOP  <||@
  Comment 1204 736 NOP  <||@
  Comment 1205 738 NOP  <||@
  Comment 1206 740 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3  <||@
  Comment 1213 742 JUMP ~outgoingValues: [] destination: B21 -> B22  <||@
  Comment 1218 block B23 loop 0 depth 1 header:207|LoopBegin  <||@
  Comment 1218 778 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1248 780 NOP  <||@
  Comment 1249 782 NOP  <||@
  Comment 1250 784 NOP  <||@
  Comment 1251 786 NOP  <||@
  Comment 1252 788 NOP  <||@
  Comment 1253 790 SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23]  <||@
  Comment 1260 [rdx:0, rsi:0, r10:0, r11:0, stack:32]at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21, duringCall: false, rethrow: false]
              |0                         |1             |2             |3  |4                           |5        
     locals:  |Object[Unsafe@679697080]  |rsi|QWORD[.]  |long[12|0xc]  |-  |int[-2|0xfffffffffffffffe]  |r8|DWORD 
     stack:   |int[0|0x0]                |              |              |   |                            |         
  at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10, duringCall: true, rethrow: false]
              |0             |1          
     locals:  |rsi|QWORD[.]  |int[1|0x1] 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |rsi|QWORD[.] 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rdx|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:792) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 1260 {infopoint: SAFEPOINT}  <||@
  Comment 1260 POLL_FAR  <||@
  Comment 1263 792 JUMP ~outgoingValues: [] destination: B23 -> B22  <||@
  Comment 1263 block B22 loop 0 depth 1 header:207|LoopBegin  <||@
  Comment 1263 744 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1263 746 NOP  <||@
  Comment 1264 748 NOP  <||@
  Comment 1265 750 NOP  <||@
  Comment 1266 752 NOP  <||@
  Comment 1267 754 NOP  <||@
  Comment 1268 756 NOP  <||@
  Comment 1269 758 NOP  <||@
  Comment 1270 760 NOP  <||@
  Comment 1271 762 NOP  <||@
  Comment 1272 764 NOP  <||@
  Comment 1273 766 NOP  <||@
  Comment 1274 768 r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1282 770 r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD  <||@
  Comment 1289 772 rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1292 774 rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD  <||@
  Comment 1302 776 BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B22 -> B23 falseDestination: B22 -> B24  <||@
  Comment 1304 block B24 null  <||@
  Comment 1304 794 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1304 796 stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1309 798 stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1314 800 NOP  <||@
  Comment 1315 802 NOP  <||@
  Comment 1316 804 NOP  <||@
  Comment 1317 806 NOP  <||@
  Comment 1318 808 NOP  <||@
  Comment 1319 810 NOP  <||@
  Comment 1320 812 NOP  <||@
  Comment 1321 814 NOP  <||@
  Comment 1322 816 NOP  <||@
  Comment 1323 818 NOP  <||@
  Comment 1324 820 rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD  <||@
  Comment 1332 822 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3  <||@
  Comment 1336 824 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23]  <||@
  Comment 1339 {HotSpotMethod<LockSupport.unpark(Thread)>}  <||@
  Comment 1339 INVOKESTATIC  <||@
  Comment 1344 [stack:8, stack:24, stack:32]at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:792) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 1352 826 JUMP ~outgoingValues: [] destination: B24 -> B26  <||@
  Comment 1357 block B28 null  <||@
  Comment 1357 884 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1357 886 rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1362 888 NOP  <||@
  Comment 1363 890 NOP  <||@
  Comment 1364 892 NOP  <||@
  Comment 1365 894 NOP  <||@
  Comment 1366 896 NOP  <||@
  Comment 1367 898 NOP  <||@
  Comment 1368 900 NOP  <||@
  Comment 1369 902 MOV x: [r15|QWORD + 1156] y: -105491 size: DWORD  <||@
  Comment 1380 904 MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD  <||@
  Comment 1391 906 DEOPT info [bci:7, 23, 16]  <||@
  Comment 1391 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1396 [rdx:0, stack:32]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1            
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 1404 block B27 null  <||@
  Comment 1404 856 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1404 858 NOP  <||@
  Comment 1405 860 NOP  <||@
  Comment 1406 862 NOP  <||@
  Comment 1407 864 NOP  <||@
  Comment 1408 866 NOP  <||@
  Comment 1409 868 NOP  <||@
  Comment 1410 870 NOP  <||@
  Comment 1411 872 NOP  <||@
  Comment 1412 874 NOP  <||@
  Comment 1413 876 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2ea4aa67 encoding: base: 0 shift: 3  <||@
  Comment 1417 878 MOV x: [r15|QWORD + 1156] y: -106515 size: DWORD  <||@
  Comment 1428 880 MOV x: [r15|QWORD + 1168] y: 24980 size: QWORD  <||@
  Comment 1439 882 DEOPT info [bci:4, 2, 5, 4, 23]  <||@
  Comment 1439 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1444 [rdx:0, rsi:0, r10:0, r11:0]at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4, duringCall: false, rethrow: false]
              |0             |1           |2  |3 
     locals:  |r11|QWORD[.]  |int[1|0x1]  |-  |- 
     stack:   |r8|DWORD      |            |   |  
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r11|QWORD[.]  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rdx|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:792) [bci: 23, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 1452 block B3 null  <||@
  Comment 1452 124 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1452 126 rax|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1457 128 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1462 130 NOP  <||@
  Comment 1463 132 NOP  <||@
  Comment 1464 134 NOP  <||@
  Comment 1465 136 NOP  <||@
  Comment 1466 138 NOP  <||@
  Comment 1467 140 NOP  <||@
  Comment 1468 142 NOP  <||@
  Comment 1469 144 MOV x: [r15|QWORD + 1156] y: -107795 size: DWORD  <||@
  Comment 1480 146 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 1491 148 DEOPT info [bci:32, 1, 4, 4, 11]  <||@
  Comment 1491 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1496 [rax:0, r8:0, stack:16, stack:32]at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32, duringCall: false, rethrow: false]
              |0            |1  |2 
     locals:  |r8|QWORD[.]  |-  |- 
     stack:   |r11|DWORD    |   |  
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1, duringCall: true, rethrow: false]
              |0           
     locals:  |r8|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rax|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:788) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:32|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 1509 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1524 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1539 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 1554 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1579 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1607 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1612 [rax:0, rdx:0, rsi:0, stack:32]at java.io.PrintStream.write(PrintStream.java:787) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 1642 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1647 [rax:0, rdx:0, rsi:0, stack:32]at java.io.PrintStream.write(PrintStream.java:787) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 1677 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1682 [rdx:0, rsi:0, r10:0, stack:24, stack:32]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:788) [bci: 11, duringCall: true, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 1712 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1717 [rsi:0, stack:16, stack:32]at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19, duringCall: false, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 1747 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1752 [rdx:0, rsi:0, stack:16, stack:32]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 1782 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1787 [rdx:0, rsi:0, r10:0, stack:16, stack:32]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 1795 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1795 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1801 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1801 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
