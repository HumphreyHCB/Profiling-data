begin_compilation
  name " HotSpotCompilation-11408[java.util.Arrays.fill(boolean[], boolean)]"
  method "HotSpotCompilation-11408[java.util.Arrays.fill(boolean[], boolean)]"
  date 1724269750897
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i256 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i256  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a# boolean[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v268 v267 v257 v258 v259 v260 v261 v262 v263 v264 v265 v266 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 i17 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Arrays.fill(boolean[], boolean)>
localsSize: 4
locksSize: 0
sourceFile: Arrays.java
sourceLine: 3322
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v269 i256 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i256 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i256 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-11275|0xffffffffffffd3f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 3]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v257 
lastLocationAccess: - 
=== Succesors ===
next: v29 
=== Usages ===
v50 i150 j78 v89 i98 i234 v129 v149 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v257 lastLocationAccess: - #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i256 
y: i4 
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i256 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.07069986285943652
stamp: void
=== Inputs ===
condition: v50 
=== Succesors ===
trueSuccessor: v27 
falseSuccessor: v28 
=== Usages ===
=== Predecessor ===
i256 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v50 #trueSuccessor: v27 #falseSuccessor: v28  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589758882679627384
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3324) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v37  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3324) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
v27 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v255 
=== Usages ===
v59 
=== Predecessor ===
v29 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v255  <|@  <|@
f <@~|@floating>@ <|@
tid i97 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i98 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i98 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i256 
y: i97 
=== Succesors ===
=== Usages ===
j86 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i256 y: i97  <|@  <|@
f <@~|@floating>@ <|@
tid j86 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-1 - 2147483646]
=== Inputs ===
value: i98 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i98  <|@  <|@
f <@~|@floating>@ <|@
tid j78 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i256 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i256  <|@  <|@
f <@~|@floating>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j86 
y: j78 
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j86 y: j78  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v89 i150 i170 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v87 
=== Succesors ===
trueSuccessor: v251 
falseSuccessor: v254 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v87 #trueSuccessor: v251 #falseSuccessor: v254  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v249 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v249  <|@  <|@
f <@*|@fixed>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
v251 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B17" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v253  <|@  <|@
f <@~|@floating>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i256 
y: i88 
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i256 y: i88  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v89 
=== Succesors ===
trueSuccessor: v252 
falseSuccessor: v106 
=== Usages ===
=== Predecessor ===
v254 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v89 #trueSuccessor: v252 #falseSuccessor: v106  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v250 
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v250  <|@  <|@
f <@*|@fixed>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
v252 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v249 v250 
=== Succesors ===
next: v59 
=== Usages ===
v94 v142 v221 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v249 v250 #next: v59  <|@  <|@
f <@~|@floating>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
resultBits: 1
stamp: i1
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
i72 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i72 <|@
d <@d|@=== Debug Properties ===
inputBits: 1
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
resultBits: 8
stamp: i8 [0 - 1] bits:0000000x
=== Inputs ===
value: i17 
=== Succesors ===
=== Usages ===
v59 v68 v120 v139 v161 v181 v186 v203 v208 v214 v219 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i17  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: boolean
location: Array: boolean
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v28 
address: v258 
lastLocationAccess: - 
value: i72 
stateAfter: - 
=== Succesors ===
next: v7 
=== Usages ===
=== Predecessor ===
v248 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v28 address: v258 lastLocationAccess: - value: i72 stateAfter: - #next: v7  <|@  <|@
f <@~|@floating>@ <|@
tid i148 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v149 i191 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i256 
y: i148 
=== Succesors ===
=== Usages ===
i150 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i256 y: i148  <|@  <|@
f <@~|@floating>@ <|@
tid i150 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2] bits:0...0xx
=== Inputs ===
condition: v149 
trueValue: i256 
falseValue: i88 
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v149 trueValue: i256 falseValue: i88  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 14]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i22 i40 i114 i133 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
v59 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606630160457077614
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 5]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v8 
values: i21 i22 
=== Succesors ===
=== Usages ===
i22 v11 j73 i116 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v8 values: i21 i22  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 13.144299006465856
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 5]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v7 
=== Succesors ===
next: v16 
=== Usages ===
i40 v13 v23 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v7 #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i40 
y: i150 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i40 y: i150  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v15 
falseSuccessor: v13 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v15 #falseSuccessor: v13  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576564783964606207
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v68 
=== Usages ===
v94 
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
=== Inputs ===
guards: v248 v15 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v248 v15  <|@  <|@
f <@~|@floating>@ <|@
tid j73 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i40 
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i40  <|@  <|@
f <@~|@floating>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j73 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j73  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: boolean
location: Array: boolean
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v94 
address: v259 
lastLocationAccess: - 
value: i72 
stateAfter: - 
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v94 address: v259 lastLocationAccess: - value: i72 stateAfter: - #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 14]
stamp: i32
=== Inputs ===
x: i40 
y: i21 
=== Succesors ===
=== Usages ===
i40 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i40 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 5]
stamp: void
=== Inputs ===
loopBegin: v8 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v8  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606545611047959602
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3324) [bci: 20]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v8 
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v8 #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid i233 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i32 [-8]
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i234 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i234 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-8 - 2147483639]
=== Inputs ===
x: i256 
y: i233 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i256 y: i233  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
v13 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4609555252217174965
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 5]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v109 
values: i40 i231 
=== Succesors ===
=== Usages ===
v110 i114 j121 i135 i170 i191 i192 i226 i228 i230 i231 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v109 values: i40 i231  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 8
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 13.144299006465856
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 5]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 8
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v124 
=== Succesors ===
next: v113 
=== Usages ===
v111 v115 i116 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v124 #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i116 
y: i234 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i116 y: i234  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.3913711186831117
stamp: void
=== Inputs ===
condition: v110 
=== Succesors ===
trueSuccessor: v112 
falseSuccessor: v111 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v110 #trueSuccessor: v112 #falseSuccessor: v111  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603557694131649335
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v120 
=== Usages ===
v221 
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
=== Inputs ===
guards: v248 v112 
=== Succesors ===
=== Usages ===
v186 v203 v120 v208 v181 v214 v161 v219 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v248 v112  <|@  <|@
f <@~|@floating>@ <|@
tid j121 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i116 
=== Succesors ===
=== Usages ===
v260 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i116  <|@  <|@
f <@~|@floating>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j121 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: boolean
location: Array: boolean
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v221 
address: v260 
lastLocationAccess: - 
value: i72 
stateAfter: - 
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v221 address: v260 lastLocationAccess: - value: i72 stateAfter: - #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 14]
stamp: i32
=== Inputs ===
x: i116 
y: i21 
=== Succesors ===
=== Usages ===
j162 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i116 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid j162 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i114 
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i114  <|@  <|@
f <@~|@floating>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j162 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: boolean
location: Array: boolean
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v221 
address: v262 
lastLocationAccess: - 
value: i72 
stateAfter: - 
=== Succesors ===
next: v181 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v221 address: v262 lastLocationAccess: - value: i72 stateAfter: - #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 14]
stamp: i32
=== Inputs ===
x: i116 
y: i88 
=== Succesors ===
=== Usages ===
j182 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i116 y: i88  <|@  <|@
f <@~|@floating>@ <|@
tid j182 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i170 
=== Succesors ===
=== Usages ===
v263 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i170  <|@  <|@
f <@~|@floating>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j182 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j182  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: boolean
location: Array: boolean
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v221 
address: v263 
lastLocationAccess: - 
value: i72 
stateAfter: - 
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v221 address: v263 lastLocationAccess: - value: i72 stateAfter: - #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid i191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 14]
stamp: i32
=== Inputs ===
x: i116 
y: i148 
=== Succesors ===
=== Usages ===
j187 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i116 y: i148  <|@  <|@
f <@~|@floating>@ <|@
tid j187 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i191 
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i191  <|@  <|@
f <@~|@floating>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j187 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j187  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: boolean
location: Array: boolean
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v221 
address: v264 
lastLocationAccess: - 
value: i72 
stateAfter: - 
=== Succesors ===
next: v203 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v221 address: v264 lastLocationAccess: - value: i72 stateAfter: - #next: v203  <|@  <|@
f <@~|@floating>@ <|@
tid i190 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4]
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 14]
stamp: i32
=== Inputs ===
x: i116 
y: i190 
=== Succesors ===
=== Usages ===
j204 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i116 y: i190  <|@  <|@
f <@~|@floating>@ <|@
tid j204 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i192 
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i192  <|@  <|@
f <@~|@floating>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j204 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j204  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: boolean
location: Array: boolean
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v221 
address: v265 
lastLocationAccess: - 
value: i72 
stateAfter: - 
=== Succesors ===
next: v208 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v221 address: v265 lastLocationAccess: - value: i72 stateAfter: - #next: v208  <|@  <|@
f <@~|@floating>@ <|@
tid i225 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 14]
rawvalue: 5
stableDimension: 0
stamp: i32 [5]
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 14]
stamp: i32
=== Inputs ===
x: i116 
y: i225 
=== Succesors ===
=== Usages ===
j209 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i116 y: i225  <|@  <|@
f <@~|@floating>@ <|@
tid j209 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i226 
=== Succesors ===
=== Usages ===
v266 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i226  <|@  <|@
f <@~|@floating>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j209 
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j209  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: boolean
location: Array: boolean
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v221 
address: v266 
lastLocationAccess: - 
value: i72 
stateAfter: - 
=== Succesors ===
next: v214 
=== Usages ===
=== Predecessor ===
v203 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v221 address: v266 lastLocationAccess: - value: i72 stateAfter: - #next: v214  <|@  <|@
f <@~|@floating>@ <|@
tid i227 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 14]
rawvalue: 6
stableDimension: 0
stamp: i32 [6]
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i228 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 14]
stamp: i32
=== Inputs ===
x: i116 
y: i227 
=== Succesors ===
=== Usages ===
j215 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i116 y: i227  <|@  <|@
f <@~|@floating>@ <|@
tid j215 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i228 
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i228  <|@  <|@
f <@~|@floating>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j215 
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j215  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: boolean
location: Array: boolean
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v221 
address: v267 
lastLocationAccess: - 
value: i72 
stateAfter: - 
=== Succesors ===
next: v219 
=== Usages ===
=== Predecessor ===
v208 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v221 address: v267 lastLocationAccess: - value: i72 stateAfter: - #next: v219  <|@  <|@
f <@~|@floating>@ <|@
tid i229 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 14]
rawvalue: 7
stableDimension: 0
stamp: i32 [7]
stampKind: i32
value: int[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i230 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 14]
stamp: i32
=== Inputs ===
x: i116 
y: i229 
=== Succesors ===
=== Usages ===
j220 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i116 y: i229  <|@  <|@
f <@~|@floating>@ <|@
tid j220 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i230 
=== Succesors ===
=== Usages ===
v268 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i230  <|@  <|@
f <@~|@floating>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j220 
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j220  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: boolean
location: Array: boolean
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v221 
address: v268 
lastLocationAccess: - 
value: i72 
stateAfter: - 
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v221 address: v268 lastLocationAccess: - value: i72 stateAfter: - #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid i224 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8]
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i231 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 14]
stamp: i32
=== Inputs ===
x: i116 
y: i224 
=== Succesors ===
=== Usages ===
i116 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i116 y: i224  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 5]
stamp: void
=== Inputs ===
loopBegin: v109 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v109  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606545611047959603
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3324) [bci: 20]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v109 
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v109 #next: v143  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
v111 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606630160457077616
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 5]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v128 
values: i116 i133 
=== Succesors ===
=== Usages ===
v129 i133 j140 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v128 values: i116 i133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 8
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 13.144299006465856
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 5]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v143 
=== Succesors ===
next: v132 
=== Usages ===
v130 v134 i135 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v143 #next: v132  <|@  <|@
f <@~|@floating>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i135 
y: i256 
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i135 y: i256  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v129 
=== Succesors ===
trueSuccessor: v131 
falseSuccessor: v130 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v129 #trueSuccessor: v131 #falseSuccessor: v130  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576564783964606208
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v139 
=== Usages ===
v142 
=== Predecessor ===
v132 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v139  <|@  <|@
f <@~|@floating>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
=== Inputs ===
guards: v248 v131 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v248 v131  <|@  <|@
f <@~|@floating>@ <|@
tid j140 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i135 
=== Succesors ===
=== Usages ===
v261 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i135  <|@  <|@
f <@~|@floating>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j140 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j140  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: boolean
location: Array: boolean
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v142 
address: v261 
lastLocationAccess: - 
value: i72 
stateAfter: - 
=== Succesors ===
next: v134 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v142 address: v261 lastLocationAccess: - value: i72 stateAfter: - #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 14]
stamp: i32
=== Inputs ===
x: i135 
y: i21 
=== Succesors ===
=== Usages ===
i135 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i135 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 5]
stamp: void
=== Inputs ===
loopBegin: v128 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v128  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606545611047959604
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3324) [bci: 20]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v128 
=== Succesors ===
next: v36 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v128 #next: v36  <|@  <|@
f <@*|@fixed>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3324) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
v130 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3324) [bci: 20]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v36 v37 
=== Succesors ===
next: v24 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v36 v37 #next: v24  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3324) [bci: 20]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v269 
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v269  <|@  <|@
f <@*|@fixed>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 62
mayConvertToGuard: true
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 3]
reason: BoundsCheckException
speculation: {0x0000000000000018[index: 0, len: 24, hash: 0xfba6e556]: GuardMovement@3[HotSpotMethod<Arrays.fill(boolean[], boolean)>, 5, BoundsCheckException]}
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@124b9c5d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.07069986285943652 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B17" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B17 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = AND x: v1|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606630160457077614
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576564783964606207
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v8|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606545611047959602
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA address: [v2|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4609555252217174965
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.3913711186831117 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603557694131649335
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v11|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v12|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v13|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LEA address: [v11|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v14|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = LEA address: [v11|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v15|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = LEA address: [v11|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v16|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = LEA address: [v11|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v17|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA address: [v11|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v18|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LEA address: [v11|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v19|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606545611047959603
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606630160457077616
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576564783964606208
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v20|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC value: v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606545611047959604
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589758882679627384
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15899 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: aload_0       
     3: arraylength   
     4: istore_3      
     5: iload_2       
     6: iload_3       
     7: if_icmpge     20
    10: aload_0       
    11: iload_2       
    12: iload_1       
    13: bastore       
    14: iinc          
    17: goto          5
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i256 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i256  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a# boolean[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v268 v267 v257 v258 v259 v260 v261 v262 v263 v264 v265 v266 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 i17 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Arrays.fill(boolean[], boolean)>
localsSize: 4
locksSize: 0
sourceFile: Arrays.java
sourceLine: 3322
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v269 i256 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v257 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i256 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i256 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-11275|0xffffffffffffd3f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 3]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v257 
lastLocationAccess: - 
=== Succesors ===
next: v29 
=== Usages ===
v50 i150 j78 v89 i98 i234 v129 v149 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v257 lastLocationAccess: - #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i256 
y: i4 
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i256 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.07069986285943652
stamp: void
=== Inputs ===
condition: v50 
=== Succesors ===
trueSuccessor: v27 
falseSuccessor: v28 
=== Usages ===
=== Predecessor ===
i256 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v50 #trueSuccessor: v27 #falseSuccessor: v28  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@124b9c5d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.07069986285943652 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589758882679627384
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3324) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v37  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3324) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
v27 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v255 
=== Usages ===
v59 
=== Predecessor ===
v29 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v255  <|@  <|@
f <@~|@floating>@ <|@
tid i97 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i98 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i98 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i256 
y: i97 
=== Succesors ===
=== Usages ===
j86 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i256 y: i97  <|@  <|@
f <@~|@floating>@ <|@
tid j86 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-1 - 2147483646]
=== Inputs ===
value: i98 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i98  <|@  <|@
f <@~|@floating>@ <|@
tid j78 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i256 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i256  <|@  <|@
f <@~|@floating>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j86 
y: j78 
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j86 y: j78  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v89 i150 i170 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v87 
=== Succesors ===
trueSuccessor: v251 
falseSuccessor: v254 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v87 #trueSuccessor: v251 #falseSuccessor: v254  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v249 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v249  <|@  <|@
f <@*|@fixed>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
v251 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B17" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v253  <|@  <|@
f <@~|@floating>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i256 
y: i88 
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i256 y: i88  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v89 
=== Succesors ===
trueSuccessor: v252 
falseSuccessor: v106 
=== Usages ===
=== Predecessor ===
v254 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v89 #trueSuccessor: v252 #falseSuccessor: v106  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B17 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v250 
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v250  <|@  <|@
f <@*|@fixed>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
v252 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v249 v250 
=== Succesors ===
next: v59 
=== Usages ===
v94 v142 v221 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v249 v250 #next: v59  <|@  <|@
f <@~|@floating>@ <|@
tid v258 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
resultBits: 1
stamp: i1
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
i72 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i72 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 1
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
resultBits: 8
stamp: i8 [0 - 1] bits:0000000x
=== Inputs ===
value: i17 
=== Succesors ===
=== Usages ===
v59 v68 v120 v139 v161 v181 v186 v203 v208 v214 v219 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i17  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: boolean
location: Array: boolean
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v28 
address: v258 
lastLocationAccess: - 
value: i72 
stateAfter: - 
=== Succesors ===
next: v7 
=== Usages ===
=== Predecessor ===
v248 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v28 address: v258 lastLocationAccess: - value: i72 stateAfter: - #next: v7  <|@  <|@
f <@~|@floating>@ <|@
tid i148 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v149 i191 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i256 
y: i148 
=== Succesors ===
=== Usages ===
i150 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i256 y: i148  <|@  <|@
f <@~|@floating>@ <|@
tid i150 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2] bits:0...0xx
=== Inputs ===
condition: v149 
trueValue: i256 
falseValue: i88 
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v149 trueValue: i256 falseValue: i88  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 14]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i22 i40 i114 i133 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
v59 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = AND x: v1|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606630160457077614
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i40 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 5]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v8 
values: i21 i22 
=== Succesors ===
=== Usages ===
i22 v11 j73 i116 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v8 values: i21 i22  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 13.144299006465856
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 5]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v7 
=== Succesors ===
next: v16 
=== Usages ===
i40 v13 v23 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v7 #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i40 
y: i150 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i40 y: i150  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v15 
falseSuccessor: v13 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v15 #falseSuccessor: v13  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576564783964606207
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v68 
=== Usages ===
v94 
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
=== Inputs ===
guards: v248 v15 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v248 v15  <|@  <|@
f <@~|@floating>@ <|@
tid j73 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i40 
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i40  <|@  <|@
f <@~|@floating>@ <|@
tid v259 <|@
result [v0|QWORD[.] + v8|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j73 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j73  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: boolean
location: Array: boolean
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v94 
address: v259 
lastLocationAccess: - 
value: i72 
stateAfter: - 
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v94 address: v259 lastLocationAccess: - value: i72 stateAfter: - #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 14]
stamp: i32
=== Inputs ===
x: i40 
y: i21 
=== Succesors ===
=== Usages ===
i40 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i40 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 5]
stamp: void
=== Inputs ===
loopBegin: v8 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v8  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v8|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606545611047959602
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3324) [bci: 20]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v8 
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v8 #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid i233 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i32 [-8]
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i234 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i234 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-8 - 2147483639]
=== Inputs ===
x: i256 
y: i233 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i256 y: i233  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
v13 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA address: [v2|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4609555252217174965
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i116 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 5]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v109 
values: i40 i231 
=== Succesors ===
=== Usages ===
v110 i114 j121 i135 i170 i191 i192 i226 i228 i230 i231 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v109 values: i40 i231  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 8
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 13.144299006465856
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 5]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 8
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v124 
=== Succesors ===
next: v113 
=== Usages ===
v111 v115 i116 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v124 #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i116 
y: i234 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i116 y: i234  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.3913711186831117
stamp: void
=== Inputs ===
condition: v110 
=== Succesors ===
trueSuccessor: v112 
falseSuccessor: v111 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v110 #trueSuccessor: v112 #falseSuccessor: v111  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.3913711186831117 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603557694131649335
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v120 
=== Usages ===
v221 
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
=== Inputs ===
guards: v248 v112 
=== Succesors ===
=== Usages ===
v186 v203 v120 v208 v181 v214 v161 v219 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v248 v112  <|@  <|@
f <@~|@floating>@ <|@
tid j121 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i116 
=== Succesors ===
=== Usages ===
v260 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i116  <|@  <|@
f <@~|@floating>@ <|@
tid v260 <|@
result [v0|QWORD[.] + v11|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j121 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: boolean
location: Array: boolean
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v221 
address: v260 
lastLocationAccess: - 
value: i72 
stateAfter: - 
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v221 address: v260 lastLocationAccess: - value: i72 stateAfter: - #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 14]
stamp: i32
=== Inputs ===
x: i116 
y: i21 
=== Succesors ===
=== Usages ===
j162 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i116 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid j162 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i114 
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i114  <|@  <|@
f <@~|@floating>@ <|@
tid v262 <|@
result [v0|QWORD[.] + v12|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j162 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: boolean
location: Array: boolean
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v221 
address: v262 
lastLocationAccess: - 
value: i72 
stateAfter: - 
=== Succesors ===
next: v181 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v221 address: v262 lastLocationAccess: - value: i72 stateAfter: - #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 14]
stamp: i32
=== Inputs ===
x: i116 
y: i88 
=== Succesors ===
=== Usages ===
j182 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i116 y: i88  <|@  <|@
f <@~|@floating>@ <|@
tid j182 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i170 
=== Succesors ===
=== Usages ===
v263 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i170  <|@  <|@
f <@~|@floating>@ <|@
tid v263 <|@
result [v0|QWORD[.] + v13|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j182 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j182  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: boolean
location: Array: boolean
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v221 
address: v263 
lastLocationAccess: - 
value: i72 
stateAfter: - 
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v221 address: v263 lastLocationAccess: - value: i72 stateAfter: - #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid i191 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 14]
stamp: i32
=== Inputs ===
x: i116 
y: i148 
=== Succesors ===
=== Usages ===
j187 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i116 y: i148  <|@  <|@
f <@~|@floating>@ <|@
tid j187 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i191 
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i191  <|@  <|@
f <@~|@floating>@ <|@
tid v264 <|@
result [v0|QWORD[.] + v14|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j187 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j187  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: boolean
location: Array: boolean
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v221 
address: v264 
lastLocationAccess: - 
value: i72 
stateAfter: - 
=== Succesors ===
next: v203 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v221 address: v264 lastLocationAccess: - value: i72 stateAfter: - #next: v203  <|@  <|@
f <@~|@floating>@ <|@
tid i190 <|@
result int[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4]
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i192 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 14]
stamp: i32
=== Inputs ===
x: i116 
y: i190 
=== Succesors ===
=== Usages ===
j204 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i116 y: i190  <|@  <|@
f <@~|@floating>@ <|@
tid j204 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i192 
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i192  <|@  <|@
f <@~|@floating>@ <|@
tid v265 <|@
result [v0|QWORD[.] + v15|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j204 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j204  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: boolean
location: Array: boolean
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v221 
address: v265 
lastLocationAccess: - 
value: i72 
stateAfter: - 
=== Succesors ===
next: v208 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v221 address: v265 lastLocationAccess: - value: i72 stateAfter: - #next: v208  <|@  <|@
f <@~|@floating>@ <|@
tid i225 <|@
result int[5|0x5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 14]
rawvalue: 5
stableDimension: 0
stamp: i32 [5]
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i226 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 14]
stamp: i32
=== Inputs ===
x: i116 
y: i225 
=== Succesors ===
=== Usages ===
j209 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i116 y: i225  <|@  <|@
f <@~|@floating>@ <|@
tid j209 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i226 
=== Succesors ===
=== Usages ===
v266 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i226  <|@  <|@
f <@~|@floating>@ <|@
tid v266 <|@
result [v0|QWORD[.] + v16|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j209 
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j209  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: boolean
location: Array: boolean
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v221 
address: v266 
lastLocationAccess: - 
value: i72 
stateAfter: - 
=== Succesors ===
next: v214 
=== Usages ===
=== Predecessor ===
v203 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v221 address: v266 lastLocationAccess: - value: i72 stateAfter: - #next: v214  <|@  <|@
f <@~|@floating>@ <|@
tid i227 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 14]
rawvalue: 6
stableDimension: 0
stamp: i32 [6]
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i228 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i228 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 14]
stamp: i32
=== Inputs ===
x: i116 
y: i227 
=== Succesors ===
=== Usages ===
j215 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i116 y: i227  <|@  <|@
f <@~|@floating>@ <|@
tid j215 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i228 
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i228  <|@  <|@
f <@~|@floating>@ <|@
tid v267 <|@
result [v0|QWORD[.] + v17|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j215 
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j215  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: boolean
location: Array: boolean
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v221 
address: v267 
lastLocationAccess: - 
value: i72 
stateAfter: - 
=== Succesors ===
next: v219 
=== Usages ===
=== Predecessor ===
v208 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v221 address: v267 lastLocationAccess: - value: i72 stateAfter: - #next: v219  <|@  <|@
f <@~|@floating>@ <|@
tid i229 <|@
result int[7|0x7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 14]
rawvalue: 7
stableDimension: 0
stamp: i32 [7]
stampKind: i32
value: int[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i230 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i230 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 14]
stamp: i32
=== Inputs ===
x: i116 
y: i229 
=== Succesors ===
=== Usages ===
j220 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i116 y: i229  <|@  <|@
f <@~|@floating>@ <|@
tid j220 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i230 
=== Succesors ===
=== Usages ===
v268 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i230  <|@  <|@
f <@~|@floating>@ <|@
tid v268 <|@
result [v0|QWORD[.] + v18|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j220 
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j220  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: boolean
location: Array: boolean
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v221 
address: v268 
lastLocationAccess: - 
value: i72 
stateAfter: - 
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v221 address: v268 lastLocationAccess: - value: i72 stateAfter: - #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid i224 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8]
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i231 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i231 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 14]
stamp: i32
=== Inputs ===
x: i116 
y: i224 
=== Succesors ===
=== Usages ===
i116 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i116 y: i224  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 5]
stamp: void
=== Inputs ===
loopBegin: v109 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v109  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v11|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v12|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v13|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LEA address: [v11|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v14|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = LEA address: [v11|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v15|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = LEA address: [v11|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v16|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = LEA address: [v11|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v17|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA address: [v11|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v18|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LEA address: [v11|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v19|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606545611047959603
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3324) [bci: 20]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v109 
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v109 #next: v143  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
v111 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606630160457077616
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i135 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 5]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v128 
values: i116 i133 
=== Succesors ===
=== Usages ===
v129 i133 j140 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v128 values: i116 i133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 8
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 13.144299006465856
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 5]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v143 
=== Succesors ===
next: v132 
=== Usages ===
v130 v134 i135 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v143 #next: v132  <|@  <|@
f <@~|@floating>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i135 
y: i256 
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i135 y: i256  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v129 
=== Succesors ===
trueSuccessor: v131 
falseSuccessor: v130 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v129 #trueSuccessor: v131 #falseSuccessor: v130  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576564783964606208
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v139 
=== Usages ===
v142 
=== Predecessor ===
v132 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v139  <|@  <|@
f <@~|@floating>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
=== Inputs ===
guards: v248 v131 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v248 v131  <|@  <|@
f <@~|@floating>@ <|@
tid j140 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i135 
=== Succesors ===
=== Usages ===
v261 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i135  <|@  <|@
f <@~|@floating>@ <|@
tid v261 <|@
result [v0|QWORD[.] + v20|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j140 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j140  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: boolean
location: Array: boolean
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v142 
address: v261 
lastLocationAccess: - 
value: i72 
stateAfter: - 
=== Succesors ===
next: v134 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v142 address: v261 lastLocationAccess: - value: i72 stateAfter: - #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 14]
stamp: i32
=== Inputs ===
x: i135 
y: i21 
=== Succesors ===
=== Usages ===
i135 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i135 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 5]
stamp: void
=== Inputs ===
loopBegin: v128 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v128  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v20|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC value: v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606545611047959604
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3324) [bci: 20]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v128 
=== Succesors ===
next: v36 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v128 #next: v36  <|@  <|@
f <@*|@fixed>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3324) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
v130 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3324) [bci: 20]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v36 v37 
=== Succesors ===
next: v24 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v36 v37 #next: v24  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3324) [bci: 20]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3323) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v269 
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v269  <|@  <|@
f <@*|@fixed>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 62
mayConvertToGuard: true
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:3322) [bci: 3]
reason: BoundsCheckException
speculation: {0x0000000000000018[index: 0, len: 24, hash: 0xfba6e556]: GuardMovement@3[HotSpotMethod<Arrays.fill(boolean[], boolean)>, 5, BoundsCheckException]}
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15899 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@124b9c5d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.07069986285943652 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B17" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B17 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = AND x: v1|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606630160457077614
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576564783964606207
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v8|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606545611047959602
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA address: [v2|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4609555252217174965
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.3913711186831117 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603557694131649335
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v11|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v12|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v13|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LEA address: [v11|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v14|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = LEA address: [v11|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v15|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = LEA address: [v11|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v16|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = LEA address: [v11|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v17|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA address: [v11|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v18|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LEA address: [v11|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v19|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606545611047959603
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606630160457077616
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576564783964606208
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v20|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC value: v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606545611047959604
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589758882679627384
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15899 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: aload_0       
     3: arraylength   
     4: istore_3      
     5: iload_2       
     6: iload_3       
     7: if_icmpge     20
    10: aload_0       
    11: iload_2       
    12: iload_1       
    13: bastore       
    14: iinc          
    17: goto          5
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@124b9c5d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.07069986285943652 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B17" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B17 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = AND x: v1|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606630160457077614
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576564783964606207
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v8|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606545611047959602
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA address: [v2|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4609555252217174965
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.3913711186831117 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603557694131649335
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v11|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v12|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v13|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LEA address: [v11|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v14|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = LEA address: [v11|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v15|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = LEA address: [v11|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v16|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = LEA address: [v11|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v17|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA address: [v11|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v18|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LEA address: [v11|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v19|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606545611047959603
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606630160457077616
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576564783964606208
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v20|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC value: v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606545611047959604
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589758882679627384
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15899 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: aload_0       
     3: arraylength   
     4: istore_3      
     5: iload_2       
     6: iload_3       
     7: if_icmpge     20
    10: aload_0       
    11: iload_2       
    12: iload_1       
    13: bastore       
    14: iinc          
    17: goto          5
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@124b9c5d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.07069986285943652 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B17" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B17 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = AND x: v1|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606630160457077614
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576564783964606207
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v8|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606545611047959602
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA address: [v2|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4609555252217174965
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.3913711186831117 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603557694131649335
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v11|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v12|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v13|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LEA address: [v11|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v14|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = LEA address: [v11|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v15|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = LEA address: [v11|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v16|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = LEA address: [v11|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v17|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA address: [v11|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v18|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LEA address: [v11|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v19|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606545611047959603
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606630160457077616
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576564783964606208
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v20|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC value: v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606545611047959604
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589758882679627384
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15899 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: aload_0       
     3: arraylength   
     4: istore_3      
     5: iload_2       
     6: iload_3       
     7: if_icmpge     20
    10: aload_0       
    11: iload_2       
    12: iload_1       
    13: bastore       
    14: iinc          
    17: goto          5
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@124b9c5d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.07069986285943652 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B17" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B17 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = AND x: v1|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606630160457077614
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576564783964606207
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v8|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606545611047959602
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA address: [v2|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4609555252217174965
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.3913711186831117 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603557694131649335
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v11|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v12|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v13|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LEA address: [v11|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v14|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = LEA address: [v11|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v15|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = LEA address: [v11|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v16|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = LEA address: [v11|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v17|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA address: [v11|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v18|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LEA address: [v11|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v19|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606545611047959603
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606630160457077616
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576564783964606208
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v20|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC value: v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606545611047959604
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589758882679627384
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15899 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: aload_0       
     3: arraylength   
     4: istore_3      
     5: iload_2       
     6: iload_3       
     7: if_icmpge     20
    10: aload_0       
    11: iload_2       
    12: iload_1       
    13: bastore       
    14: iinc          
    17: goto          5
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@124b9c5d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.07069986285943652 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B17" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B17 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = AND x: v1|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606630160457077614
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576564783964606207
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v8|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606545611047959602
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA address: [v2|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4609555252217174965
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.3913711186831117 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603557694131649335
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v11|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v12|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v13|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LEA address: [v11|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v14|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = LEA address: [v11|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v15|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = LEA address: [v11|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v16|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = LEA address: [v11|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v17|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA address: [v11|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v18|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LEA address: [v11|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v19|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606545611047959603
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606630160457077616
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576564783964606208
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + v20|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC value: v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606545611047959604
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589758882679627384
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15899 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: aload_0       
     3: arraylength   
     4: istore_3      
     5: iload_2       
     6: iload_3       
     7: if_icmpge     20
    10: aload_0       
    11: iload_2       
    12: iload_1       
    13: bastore       
    14: iinc          
    17: goto          5
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@124b9c5d slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.07069986285943652 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B17" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B17 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction v6|DWORD = AND x: v1|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr  106  <|@ instruction MOVB (x: [v0|QWORD[.] + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  108  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr  110  <|@ instruction v7|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606630160457077614
    begin_IR
      LIR
      nr  114  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576564783964606207
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction MOVB (x: [v0|QWORD[.] + v8|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  140  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606545611047959602
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction v10|DWORD = LEA address: [v2|DWORD - 8] size: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [v8|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4609555252217174965
    begin_IR
      LIR
      nr  162  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.3913711186831117 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603557694131649335
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction MOVB (x: [v0|QWORD[.] + v11|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  244  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction MOVB (x: [v0|QWORD[.] + v12|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  248  <|@ instruction v13|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr  250  <|@ instruction MOVB (x: [v0|QWORD[.] + v13|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  252  <|@ instruction v14|DWORD = LEA address: [v11|DWORD + 3] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOVB (x: [v0|QWORD[.] + v14|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  256  <|@ instruction v15|DWORD = LEA address: [v11|DWORD + 4] size: DWORD <|@ <|@
      nr  258  <|@ instruction MOVB (x: [v0|QWORD[.] + v15|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  260  <|@ instruction v16|DWORD = LEA address: [v11|DWORD + 5] size: DWORD <|@ <|@
      nr  262  <|@ instruction MOVB (x: [v0|QWORD[.] + v16|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  264  <|@ instruction v17|DWORD = LEA address: [v11|DWORD + 6] size: DWORD <|@ <|@
      nr  266  <|@ instruction MOVB (x: [v0|QWORD[.] + v17|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  268  <|@ instruction v18|DWORD = LEA address: [v11|DWORD + 7] size: DWORD <|@ <|@
      nr  270  <|@ instruction MOVB (x: [v0|QWORD[.] + v18|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  272  <|@ instruction v19|DWORD = LEA address: [v11|DWORD + 8] size: DWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [v19|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606545611047959603
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606630160457077616
    begin_IR
      LIR
      nr  286  <|@ instruction [v20|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576564783964606208
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction MOVB (x: [v0|QWORD[.] + v20|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  312  <|@ instruction v21|DWORD = INC value: v20|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606545611047959604
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589758882679627384
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15899 size: DWORD <|@ <|@
      nr  372  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24 size: QWORD <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: aload_0       
     3: arraylength   
     4: istore_3      
     5: iload_2       
     6: iload_3       
     7: if_icmpge     20
    10: aload_0       
    11: iload_2       
    12: iload_1       
    13: bastore       
    14: iinc          
    17: goto          5
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@124b9c5d slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.07069986285943652 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B17" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B17 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction v6|DWORD = AND x: v1|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr  106  <|@ instruction MOVB (x: [v0|QWORD[.] + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  108  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr  110  <|@ instruction v7|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606630160457077614
    begin_IR
      LIR
      nr  114  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576564783964606207
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction MOVB (x: [v0|QWORD[.] + v8|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  140  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606545611047959602
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction v10|DWORD = LEA address: [v2|DWORD - 8] size: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [v8|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4609555252217174965
    begin_IR
      LIR
      nr  162  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.3913711186831117 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603557694131649335
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction MOVB (x: [v0|QWORD[.] + v11|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  244  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction MOVB (x: [v0|QWORD[.] + v12|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  248  <|@ instruction v13|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr  250  <|@ instruction MOVB (x: [v0|QWORD[.] + v13|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  252  <|@ instruction v14|DWORD = LEA address: [v11|DWORD + 3] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOVB (x: [v0|QWORD[.] + v14|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  256  <|@ instruction v15|DWORD = LEA address: [v11|DWORD + 4] size: DWORD <|@ <|@
      nr  258  <|@ instruction MOVB (x: [v0|QWORD[.] + v15|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  260  <|@ instruction v16|DWORD = LEA address: [v11|DWORD + 5] size: DWORD <|@ <|@
      nr  262  <|@ instruction MOVB (x: [v0|QWORD[.] + v16|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  264  <|@ instruction v17|DWORD = LEA address: [v11|DWORD + 6] size: DWORD <|@ <|@
      nr  266  <|@ instruction MOVB (x: [v0|QWORD[.] + v17|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  268  <|@ instruction v18|DWORD = LEA address: [v11|DWORD + 7] size: DWORD <|@ <|@
      nr  270  <|@ instruction MOVB (x: [v0|QWORD[.] + v18|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  272  <|@ instruction v19|DWORD = LEA address: [v11|DWORD + 8] size: DWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [v19|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606545611047959603
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606630160457077616
    begin_IR
      LIR
      nr  286  <|@ instruction [v20|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576564783964606208
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction MOVB (x: [v0|QWORD[.] + v20|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  312  <|@ instruction v21|DWORD = INC value: v20|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606545611047959604
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589758882679627384
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15899 size: DWORD <|@ <|@
      nr  372  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24 size: QWORD <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: aload_0       
     3: arraylength   
     4: istore_3      
     5: iload_2       
     6: iload_3       
     7: if_icmpge     20
    10: aload_0       
    11: iload_2       
    12: iload_1       
    13: bastore       
    14: iinc          
    17: goto          5
    20: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 26[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 20[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 24[ "NoSpillStore"
  v0|q QWORD "[v0|q]" v0|q rsi|q [24, 316[[354, 375[24 MustHaveRegister 28 MustHaveRegister 106 MustHaveRegister 138 MustHaveRegister 143 LiveAtLoopEnd 242 MustHaveRegister 246 MustHaveRegister 250 MustHaveRegister 254 MustHaveRegister 258 MustHaveRegister 262 MustHaveRegister 266 MustHaveRegister 270 MustHaveRegister 275 LiveAtLoopEnd 310 MustHaveRegister 315 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|d [26, 104[[354, 375[26 MustHaveRegister 104 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [28, 316[28 MustHaveRegister 30 MustHaveRegister 48 ShouldHaveRegister 52 ShouldHaveRegister 66 ShouldHaveRegister 108 ShouldHaveRegister 110 MustHaveRegister 158 MustHaveRegister 296 MustHaveRegister 315 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d v2|d [48, 50[48 MustHaveRegister 50 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q -1 [50, 54[50 MustHaveRegister 54 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q v2|d [52, 54[52 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d v1|d [104, 316[104 MustHaveRegister 106 MustHaveRegister 138 MustHaveRegister 143 LiveAtLoopEnd 242 MustHaveRegister 246 MustHaveRegister 250 MustHaveRegister 254 MustHaveRegister 258 MustHaveRegister 262 MustHaveRegister 266 MustHaveRegister 270 MustHaveRegister 275 LiveAtLoopEnd 310 MustHaveRegister 315 LiveAtLoopEnd  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [110, 144[110 MustHaveRegister 124 MustHaveRegister 143 LiveAtLoopEnd  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d v9|d [114, 140[[144, 161[124 ShouldHaveRegister 138 MustHaveRegister 140 ShouldHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d v8|d [140, 143[140 MustHaveRegister 142 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [158, 276[158 MustHaveRegister 172 MustHaveRegister 275 LiveAtLoopEnd  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d v8|d [162, 272[[276, 285[172 ShouldHaveRegister 242 MustHaveRegister 244 ShouldHaveRegister 248 MustHaveRegister 252 MustHaveRegister 256 MustHaveRegister 260 MustHaveRegister 264 MustHaveRegister 268 MustHaveRegister 272 MustHaveRegister 284 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d v11|d [244, 246[244 MustHaveRegister 246 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d -1 [248, 250[248 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d -1 [252, 254[252 MustHaveRegister 254 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d -1 [256, 258[256 MustHaveRegister 258 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d -1 [260, 262[260 MustHaveRegister 262 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d -1 [264, 266[264 MustHaveRegister 266 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d -1 [268, 270[268 MustHaveRegister 270 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d -1 [272, 275[272 MustHaveRegister 274 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[v20|d]" v20|d v11|d [286, 312[296 ShouldHaveRegister 310 MustHaveRegister 312 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d v20|d [312, 315[312 MustHaveRegister 314 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 26[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 20[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 24[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [24, 316[[354, 375[24 MustHaveRegister 28 MustHaveRegister 106 MustHaveRegister 138 MustHaveRegister 143 LiveAtLoopEnd 242 MustHaveRegister 246 MustHaveRegister 250 MustHaveRegister 254 MustHaveRegister 258 MustHaveRegister 262 MustHaveRegister 266 MustHaveRegister 270 MustHaveRegister 275 LiveAtLoopEnd 310 MustHaveRegister 315 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [26, 104[[354, 375[26 MustHaveRegister 104 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [28, 316[28 MustHaveRegister 30 MustHaveRegister 48 ShouldHaveRegister 52 ShouldHaveRegister 66 ShouldHaveRegister 108 ShouldHaveRegister 110 MustHaveRegister 158 MustHaveRegister 296 MustHaveRegister 315 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[r11|d]" v3|d v2|d [48, 50[48 MustHaveRegister 50 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[r11|q]" v4|q -1 [50, 54[50 MustHaveRegister 54 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[r8|q]" v5|q v2|d [52, 54[52 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rdx|d]" v6|d v1|d [104, 316[104 MustHaveRegister 106 MustHaveRegister 138 MustHaveRegister 143 LiveAtLoopEnd 242 MustHaveRegister 246 MustHaveRegister 250 MustHaveRegister 254 MustHaveRegister 258 MustHaveRegister 262 MustHaveRegister 266 MustHaveRegister 270 MustHaveRegister 275 LiveAtLoopEnd 310 MustHaveRegister 315 LiveAtLoopEnd  "NoSpillStore"
  v7|d DWORD "[r11|d]" v7|d -1 [110, 144[110 MustHaveRegister 124 MustHaveRegister 143 LiveAtLoopEnd  "NoSpillStore"
  v8|d DWORD "[r8|d]" v8|d v9|d [114, 140[[144, 161[124 ShouldHaveRegister 138 MustHaveRegister 140 ShouldHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[r8|d]" v9|d v8|d [140, 143[140 MustHaveRegister 142 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[r11|d]" v10|d -1 [158, 276[158 MustHaveRegister 172 MustHaveRegister 275 LiveAtLoopEnd  "NoSpillStore"
  v11|d DWORD "[r8|d]" v11|d v8|d [162, 272[[276, 285[172 ShouldHaveRegister 242 MustHaveRegister 244 ShouldHaveRegister 248 MustHaveRegister 252 MustHaveRegister 256 MustHaveRegister 260 MustHaveRegister 264 MustHaveRegister 268 MustHaveRegister 272 MustHaveRegister 284 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[r9|d]" v12|d v11|d [244, 246[244 MustHaveRegister 246 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[r9|d]" v13|d -1 [248, 250[248 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[r9|d]" v14|d -1 [252, 254[252 MustHaveRegister 254 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[r9|d]" v15|d -1 [256, 258[256 MustHaveRegister 258 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[r9|d]" v16|d -1 [260, 262[260 MustHaveRegister 262 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[r9|d]" v17|d -1 [264, 266[264 MustHaveRegister 266 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[r9|d]" v18|d -1 [268, 270[268 MustHaveRegister 270 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[r8|d]" v19|d -1 [272, 275[272 MustHaveRegister 274 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[r8|d]" v20|d v11|d [286, 312[296 ShouldHaveRegister 310 MustHaveRegister 312 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[r8|d]" v21|d v20|d [312, 315[312 MustHaveRegister 314 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@124b9c5d slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.07069986285943652 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B17" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B17 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction v6|DWORD = AND x: v1|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr  106  <|@ instruction MOVB (x: [v0|QWORD[.] + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  108  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr  110  <|@ instruction v7|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606630160457077614
    begin_IR
      LIR
      nr  114  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576564783964606207
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction MOVB (x: [v0|QWORD[.] + v8|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  140  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606545611047959602
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction v10|DWORD = LEA address: [v2|DWORD - 8] size: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [v8|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4609555252217174965
    begin_IR
      LIR
      nr  162  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.3913711186831117 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603557694131649335
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction MOVB (x: [v0|QWORD[.] + v11|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  244  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction MOVB (x: [v0|QWORD[.] + v12|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  248  <|@ instruction v13|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr  250  <|@ instruction MOVB (x: [v0|QWORD[.] + v13|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  252  <|@ instruction v14|DWORD = LEA address: [v11|DWORD + 3] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOVB (x: [v0|QWORD[.] + v14|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  256  <|@ instruction v15|DWORD = LEA address: [v11|DWORD + 4] size: DWORD <|@ <|@
      nr  258  <|@ instruction MOVB (x: [v0|QWORD[.] + v15|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  260  <|@ instruction v16|DWORD = LEA address: [v11|DWORD + 5] size: DWORD <|@ <|@
      nr  262  <|@ instruction MOVB (x: [v0|QWORD[.] + v16|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  264  <|@ instruction v17|DWORD = LEA address: [v11|DWORD + 6] size: DWORD <|@ <|@
      nr  266  <|@ instruction MOVB (x: [v0|QWORD[.] + v17|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  268  <|@ instruction v18|DWORD = LEA address: [v11|DWORD + 7] size: DWORD <|@ <|@
      nr  270  <|@ instruction MOVB (x: [v0|QWORD[.] + v18|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  272  <|@ instruction v19|DWORD = LEA address: [v11|DWORD + 8] size: DWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [v19|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606545611047959603
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606630160457077616
    begin_IR
      LIR
      nr  286  <|@ instruction [v20|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576564783964606208
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction MOVB (x: [v0|QWORD[.] + v20|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  312  <|@ instruction v21|DWORD = INC value: v20|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606545611047959604
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589758882679627384
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15899 size: DWORD <|@ <|@
      nr  372  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24 size: QWORD <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: aload_0       
     3: arraylength   
     4: istore_3      
     5: iload_2       
     6: iload_3       
     7: if_icmpge     20
    10: aload_0       
    11: iload_2       
    12: iload_1       
    13: bastore       
    14: iinc          
    17: goto          5
    20: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 26[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 20[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 24[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [24, 316[[354, 375[24 MustHaveRegister 28 MustHaveRegister 106 MustHaveRegister 138 MustHaveRegister 143 LiveAtLoopEnd 242 MustHaveRegister 246 MustHaveRegister 250 MustHaveRegister 254 MustHaveRegister 258 MustHaveRegister 262 MustHaveRegister 266 MustHaveRegister 270 MustHaveRegister 275 LiveAtLoopEnd 310 MustHaveRegister 315 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [26, 104[[354, 375[26 MustHaveRegister 104 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [28, 316[28 MustHaveRegister 30 MustHaveRegister 48 ShouldHaveRegister 52 ShouldHaveRegister 66 ShouldHaveRegister 108 ShouldHaveRegister 110 MustHaveRegister 158 MustHaveRegister 296 MustHaveRegister 315 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[r11|d]" v3|d v2|d [48, 50[48 MustHaveRegister 50 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[r11|q]" v4|q -1 [50, 54[50 MustHaveRegister 54 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[r8|q]" v5|q v2|d [52, 54[52 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rdx|d]" v6|d v1|d [104, 316[104 MustHaveRegister 106 MustHaveRegister 138 MustHaveRegister 143 LiveAtLoopEnd 242 MustHaveRegister 246 MustHaveRegister 250 MustHaveRegister 254 MustHaveRegister 258 MustHaveRegister 262 MustHaveRegister 266 MustHaveRegister 270 MustHaveRegister 275 LiveAtLoopEnd 310 MustHaveRegister 315 LiveAtLoopEnd  "NoSpillStore"
  v7|d DWORD "[r11|d]" v7|d -1 [110, 144[110 MustHaveRegister 124 MustHaveRegister 143 LiveAtLoopEnd  "NoSpillStore"
  v8|d DWORD "[r8|d]" v8|d v9|d [114, 140[[144, 161[124 ShouldHaveRegister 138 MustHaveRegister 140 ShouldHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[r8|d]" v9|d v8|d [140, 143[140 MustHaveRegister 142 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[r11|d]" v10|d -1 [158, 276[158 MustHaveRegister 172 MustHaveRegister 275 LiveAtLoopEnd  "NoSpillStore"
  v11|d DWORD "[r8|d]" v11|d v8|d [162, 272[[276, 285[172 ShouldHaveRegister 242 MustHaveRegister 244 ShouldHaveRegister 248 MustHaveRegister 252 MustHaveRegister 256 MustHaveRegister 260 MustHaveRegister 264 MustHaveRegister 268 MustHaveRegister 272 MustHaveRegister 284 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[r9|d]" v12|d v11|d [244, 246[244 MustHaveRegister 246 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[r9|d]" v13|d -1 [248, 250[248 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[r9|d]" v14|d -1 [252, 254[252 MustHaveRegister 254 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[r9|d]" v15|d -1 [256, 258[256 MustHaveRegister 258 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[r9|d]" v16|d -1 [260, 262[260 MustHaveRegister 262 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[r9|d]" v17|d -1 [264, 266[264 MustHaveRegister 266 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[r9|d]" v18|d -1 [268, 270[268 MustHaveRegister 270 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[r8|d]" v19|d -1 [272, 275[272 MustHaveRegister 274 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[r8|d]" v20|d v11|d [286, 312[296 ShouldHaveRegister 310 MustHaveRegister 312 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[r8|d]" v21|d v20|d [312, 315[312 MustHaveRegister 314 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@124b9c5d slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.07069986285943652 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B17" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B17 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction v6|DWORD = AND x: v1|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr  106  <|@ instruction MOVB (x: [v0|QWORD[.] + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  108  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr  110  <|@ instruction v7|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606630160457077614
    begin_IR
      LIR
      nr  114  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576564783964606207
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction MOVB (x: [v0|QWORD[.] + v8|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  140  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606545611047959602
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction v10|DWORD = LEA address: [v2|DWORD - 8] size: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [v8|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4609555252217174965
    begin_IR
      LIR
      nr  162  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.3913711186831117 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603557694131649335
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction MOVB (x: [v0|QWORD[.] + v11|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  244  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction MOVB (x: [v0|QWORD[.] + v12|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  248  <|@ instruction v13|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr  250  <|@ instruction MOVB (x: [v0|QWORD[.] + v13|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  252  <|@ instruction v14|DWORD = LEA address: [v11|DWORD + 3] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOVB (x: [v0|QWORD[.] + v14|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  256  <|@ instruction v15|DWORD = LEA address: [v11|DWORD + 4] size: DWORD <|@ <|@
      nr  258  <|@ instruction MOVB (x: [v0|QWORD[.] + v15|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  260  <|@ instruction v16|DWORD = LEA address: [v11|DWORD + 5] size: DWORD <|@ <|@
      nr  262  <|@ instruction MOVB (x: [v0|QWORD[.] + v16|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  264  <|@ instruction v17|DWORD = LEA address: [v11|DWORD + 6] size: DWORD <|@ <|@
      nr  266  <|@ instruction MOVB (x: [v0|QWORD[.] + v17|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  268  <|@ instruction v18|DWORD = LEA address: [v11|DWORD + 7] size: DWORD <|@ <|@
      nr  270  <|@ instruction MOVB (x: [v0|QWORD[.] + v18|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  272  <|@ instruction v19|DWORD = LEA address: [v11|DWORD + 8] size: DWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [v19|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606545611047959603
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606630160457077616
    begin_IR
      LIR
      nr  286  <|@ instruction [v20|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576564783964606208
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction MOVB (x: [v0|QWORD[.] + v20|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  312  <|@ instruction v21|DWORD = INC value: v20|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606545611047959604
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589758882679627384
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15899 size: DWORD <|@ <|@
      nr  372  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24 size: QWORD <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: aload_0       
     3: arraylength   
     4: istore_3      
     5: iload_2       
     6: iload_3       
     7: if_icmpge     20
    10: aload_0       
    11: iload_2       
    12: iload_1       
    13: bastore       
    14: iinc          
    17: goto          5
    20: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 26[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 20[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 24[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [24, 316[[354, 375[24 MustHaveRegister 28 MustHaveRegister 106 MustHaveRegister 138 MustHaveRegister 143 LiveAtLoopEnd 242 MustHaveRegister 246 MustHaveRegister 250 MustHaveRegister 254 MustHaveRegister 258 MustHaveRegister 262 MustHaveRegister 266 MustHaveRegister 270 MustHaveRegister 275 LiveAtLoopEnd 310 MustHaveRegister 315 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [26, 104[[354, 375[26 MustHaveRegister 104 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [28, 316[28 MustHaveRegister 30 MustHaveRegister 48 ShouldHaveRegister 52 ShouldHaveRegister 66 ShouldHaveRegister 108 ShouldHaveRegister 110 MustHaveRegister 158 MustHaveRegister 296 MustHaveRegister 315 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[r11|d]" v3|d v2|d [48, 50[48 MustHaveRegister 50 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[r11|q]" v4|q -1 [50, 54[50 MustHaveRegister 54 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[r8|q]" v5|q v2|d [52, 54[52 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rdx|d]" v6|d v1|d [104, 316[104 MustHaveRegister 106 MustHaveRegister 138 MustHaveRegister 143 LiveAtLoopEnd 242 MustHaveRegister 246 MustHaveRegister 250 MustHaveRegister 254 MustHaveRegister 258 MustHaveRegister 262 MustHaveRegister 266 MustHaveRegister 270 MustHaveRegister 275 LiveAtLoopEnd 310 MustHaveRegister 315 LiveAtLoopEnd  "NoSpillStore"
  v7|d DWORD "[r11|d]" v7|d -1 [110, 144[110 MustHaveRegister 124 MustHaveRegister 143 LiveAtLoopEnd  "NoSpillStore"
  v8|d DWORD "[r8|d]" v8|d v9|d [114, 140[[144, 161[124 ShouldHaveRegister 138 MustHaveRegister 140 ShouldHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[r8|d]" v9|d v8|d [140, 143[140 MustHaveRegister 142 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[r11|d]" v10|d -1 [158, 276[158 MustHaveRegister 172 MustHaveRegister 275 LiveAtLoopEnd  "NoSpillStore"
  v11|d DWORD "[r8|d]" v11|d v8|d [162, 272[[276, 285[172 ShouldHaveRegister 242 MustHaveRegister 244 ShouldHaveRegister 248 MustHaveRegister 252 MustHaveRegister 256 MustHaveRegister 260 MustHaveRegister 264 MustHaveRegister 268 MustHaveRegister 272 MustHaveRegister 284 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[r9|d]" v12|d v11|d [244, 246[244 MustHaveRegister 246 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[r9|d]" v13|d -1 [248, 250[248 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[r9|d]" v14|d -1 [252, 254[252 MustHaveRegister 254 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[r9|d]" v15|d -1 [256, 258[256 MustHaveRegister 258 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[r9|d]" v16|d -1 [260, 262[260 MustHaveRegister 262 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[r9|d]" v17|d -1 [264, 266[264 MustHaveRegister 266 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[r9|d]" v18|d -1 [268, 270[268 MustHaveRegister 270 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[r8|d]" v19|d -1 [272, 275[272 MustHaveRegister 274 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[r8|d]" v20|d v11|d [286, 312[296 ShouldHaveRegister 310 MustHaveRegister 312 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[r8|d]" v21|d v20|d [312, 315[312 MustHaveRegister 314 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@124b9c5d slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.07069986285943652 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B17" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B17 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction v6|DWORD = AND x: v1|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr  106  <|@ instruction MOVB (x: [v0|QWORD[.] + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  108  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr  110  <|@ instruction v7|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606630160457077614
    begin_IR
      LIR
      nr  114  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576564783964606207
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction MOVB (x: [v0|QWORD[.] + v8|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  140  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606545611047959602
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction v10|DWORD = LEA address: [v2|DWORD - 8] size: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4609555252217174965
    begin_IR
      LIR
      nr  162  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.3913711186831117 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603557694131649335
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction MOVB (x: [v0|QWORD[.] + v11|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  244  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction MOVB (x: [v0|QWORD[.] + v12|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  248  <|@ instruction v13|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr  250  <|@ instruction MOVB (x: [v0|QWORD[.] + v13|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  252  <|@ instruction v14|DWORD = LEA address: [v11|DWORD + 3] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOVB (x: [v0|QWORD[.] + v14|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  256  <|@ instruction v15|DWORD = LEA address: [v11|DWORD + 4] size: DWORD <|@ <|@
      nr  258  <|@ instruction MOVB (x: [v0|QWORD[.] + v15|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  260  <|@ instruction v16|DWORD = LEA address: [v11|DWORD + 5] size: DWORD <|@ <|@
      nr  262  <|@ instruction MOVB (x: [v0|QWORD[.] + v16|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  264  <|@ instruction v17|DWORD = LEA address: [v11|DWORD + 6] size: DWORD <|@ <|@
      nr  266  <|@ instruction MOVB (x: [v0|QWORD[.] + v17|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  268  <|@ instruction v18|DWORD = LEA address: [v11|DWORD + 7] size: DWORD <|@ <|@
      nr  270  <|@ instruction MOVB (x: [v0|QWORD[.] + v18|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  272  <|@ instruction v19|DWORD = LEA address: [v11|DWORD + 8] size: DWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606545611047959603
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606630160457077616
    begin_IR
      LIR
      nr  286  <|@ instruction [v20|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576564783964606208
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction MOVB (x: [v0|QWORD[.] + v20|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  312  <|@ instruction v21|DWORD = INC value: v20|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606545611047959604
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589758882679627384
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15899 size: DWORD <|@ <|@
      nr  372  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24 size: QWORD <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: aload_0       
     3: arraylength   
     4: istore_3      
     5: iload_2       
     6: iload_3       
     7: if_icmpge     20
    10: aload_0       
    11: iload_2       
    12: iload_1       
    13: bastore       
    14: iinc          
    17: goto          5
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@124b9c5d slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.07069986285943652 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B17" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B17 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction v6|DWORD = AND x: v1|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr  106  <|@ instruction MOVB (x: [v0|QWORD[.] + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  108  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr  110  <|@ instruction v7|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606630160457077614
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576564783964606207
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction MOVB (x: [v0|QWORD[.] + v8|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  140  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606545611047959602
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction v10|DWORD = LEA address: [v2|DWORD - 8] size: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4609555252217174965
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.3913711186831117 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603557694131649335
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction MOVB (x: [v0|QWORD[.] + v11|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  244  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction MOVB (x: [v0|QWORD[.] + v12|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  248  <|@ instruction v13|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr  250  <|@ instruction MOVB (x: [v0|QWORD[.] + v13|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  252  <|@ instruction v14|DWORD = LEA address: [v11|DWORD + 3] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOVB (x: [v0|QWORD[.] + v14|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  256  <|@ instruction v15|DWORD = LEA address: [v11|DWORD + 4] size: DWORD <|@ <|@
      nr  258  <|@ instruction MOVB (x: [v0|QWORD[.] + v15|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  260  <|@ instruction v16|DWORD = LEA address: [v11|DWORD + 5] size: DWORD <|@ <|@
      nr  262  <|@ instruction MOVB (x: [v0|QWORD[.] + v16|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  264  <|@ instruction v17|DWORD = LEA address: [v11|DWORD + 6] size: DWORD <|@ <|@
      nr  266  <|@ instruction MOVB (x: [v0|QWORD[.] + v17|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  268  <|@ instruction v18|DWORD = LEA address: [v11|DWORD + 7] size: DWORD <|@ <|@
      nr  270  <|@ instruction MOVB (x: [v0|QWORD[.] + v18|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  272  <|@ instruction v19|DWORD = LEA address: [v11|DWORD + 8] size: DWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606545611047959603
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606630160457077616
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576564783964606208
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction MOVB (x: [v0|QWORD[.] + v20|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr  312  <|@ instruction v21|DWORD = INC value: v20|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606545611047959604
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589758882679627384
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15899 size: DWORD <|@ <|@
      nr  372  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24 size: QWORD <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: aload_0       
     3: arraylength   
     4: istore_3      
     5: iload_2       
     6: iload_3       
     7: if_icmpge     20
    10: aload_0       
    11: iload_2       
    12: iload_1       
    13: bastore       
    14: iinc          
    17: goto          5
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@124b9c5d slotKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.07069986285943652 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r11|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction r8|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r11|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B17" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B17 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = AND x: rdx|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr  106  <|@ instruction MOVB (x: [rsi|QWORD[.] + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  108  <|@ instruction CMP x: r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  110  <|@ instruction r11|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r10|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606630160457077614
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576564783964606207
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  140  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606545611047959602
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction r11|DWORD = LEA address: [r10|DWORD - 8] size: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4609555252217174965
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.3913711186831117 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603557694131649335
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  244  <|@ instruction r9|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  248  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  250  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  252  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  256  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 4] size: DWORD <|@ <|@
      nr  258  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  260  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 5] size: DWORD <|@ <|@
      nr  262  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  264  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 6] size: DWORD <|@ <|@
      nr  266  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  268  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 7] size: DWORD <|@ <|@
      nr  270  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  272  <|@ instruction r8|DWORD = LEA address: [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606545611047959603
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606630160457077616
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576564783964606208
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  312  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606545611047959604
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589758882679627384
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15899 size: DWORD <|@ <|@
      nr  372  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24 size: QWORD <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: aload_0       
     3: arraylength   
     4: istore_3      
     5: iload_2       
     6: iload_3       
     7: if_icmpge     20
    10: aload_0       
    11: iload_2       
    12: iload_1       
    13: bastore       
    14: iinc          
    17: goto          5
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@124b9c5d slotKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.07069986285943652 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r11|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction r8|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r11|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B17" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B17 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = AND x: rdx|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr  106  <|@ instruction MOVB (x: [rsi|QWORD[.] + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  108  <|@ instruction CMP x: r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  110  <|@ instruction r11|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r10|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606630160457077614
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576564783964606207
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  140  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606545611047959602
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction r11|DWORD = LEA address: [r10|DWORD - 8] size: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4609555252217174965
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.3913711186831117 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603557694131649335
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  244  <|@ instruction r9|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  248  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  250  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  252  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  256  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 4] size: DWORD <|@ <|@
      nr  258  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  260  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 5] size: DWORD <|@ <|@
      nr  262  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  264  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 6] size: DWORD <|@ <|@
      nr  266  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  268  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 7] size: DWORD <|@ <|@
      nr  270  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  272  <|@ instruction r8|DWORD = LEA address: [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606545611047959603
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606630160457077616
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576564783964606208
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  312  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606545611047959604
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589758882679627384
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15899 size: DWORD <|@ <|@
      nr  372  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24 size: QWORD <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: aload_0       
     3: arraylength   
     4: istore_3      
     5: iload_2       
     6: iload_3       
     7: if_icmpge     20
    10: aload_0       
    11: iload_2       
    12: iload_1       
    13: bastore       
    14: iinc          
    17: goto          5
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@124b9c5d slotKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.07069986285943652 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r11|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction r8|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r11|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B17" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B17 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = AND x: rdx|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr  106  <|@ instruction MOVB (x: [rsi|QWORD[.] + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  108  <|@ instruction CMP x: r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  110  <|@ instruction r11|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r10|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606630160457077614
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576564783964606207
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  140  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606545611047959602
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction r11|DWORD = LEA address: [r10|DWORD - 8] size: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4609555252217174965
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.3913711186831117 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603557694131649335
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  244  <|@ instruction r9|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  248  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  250  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  252  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  256  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 4] size: DWORD <|@ <|@
      nr  258  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  260  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 5] size: DWORD <|@ <|@
      nr  262  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  264  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 6] size: DWORD <|@ <|@
      nr  266  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  268  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 7] size: DWORD <|@ <|@
      nr  270  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  272  <|@ instruction r8|DWORD = LEA address: [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606545611047959603
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606630160457077616
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576564783964606208
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  312  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606545611047959604
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589758882679627384
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15899 size: DWORD <|@ <|@
      nr  372  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24 size: QWORD <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: aload_0       
     3: arraylength   
     4: istore_3      
     5: iload_2       
     6: iload_3       
     7: if_icmpge     20
    10: aload_0       
    11: iload_2       
    12: iload_1       
    13: bastore       
    14: iinc          
    17: goto          5
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@124b9c5d slotKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.07069986285943652 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r11|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction r8|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r11|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B17" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B17 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = AND x: rdx|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr  106  <|@ instruction MOVB (x: [rsi|QWORD[.] + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  108  <|@ instruction CMP x: r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  110  <|@ instruction r11|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r10|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606630160457077614
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576564783964606207
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  140  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606545611047959602
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction r11|DWORD = LEA address: [r10|DWORD - 8] size: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4609555252217174965
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.3913711186831117 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603557694131649335
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  244  <|@ instruction r9|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  248  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  250  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  252  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  256  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 4] size: DWORD <|@ <|@
      nr  258  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  260  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 5] size: DWORD <|@ <|@
      nr  262  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  264  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 6] size: DWORD <|@ <|@
      nr  266  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  268  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 7] size: DWORD <|@ <|@
      nr  270  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  272  <|@ instruction r8|DWORD = LEA address: [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606545611047959603
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606630160457077616
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576564783964606208
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  312  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606545611047959604
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589758882679627384
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15899 size: DWORD <|@ <|@
      nr  372  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24 size: QWORD <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: aload_0       
     3: arraylength   
     4: istore_3      
     5: iload_2       
     6: iload_3       
     7: if_icmpge     20
    10: aload_0       
    11: iload_2       
    12: iload_1       
    13: bastore       
    14: iinc          
    17: goto          5
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@124b9c5d slotKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.07069986285943652 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r11|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction r8|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r11|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B17" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B17 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = AND x: rdx|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr  106  <|@ instruction MOVB (x: [rsi|QWORD[.] + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  108  <|@ instruction CMP x: r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  110  <|@ instruction r11|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r10|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606630160457077614
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576564783964606207
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  140  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606545611047959602
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction r11|DWORD = LEA address: [r10|DWORD - 8] size: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4609555252217174965
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.3913711186831117 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603557694131649335
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  244  <|@ instruction r9|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  248  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  250  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  252  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  256  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 4] size: DWORD <|@ <|@
      nr  258  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  260  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 5] size: DWORD <|@ <|@
      nr  262  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  264  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 6] size: DWORD <|@ <|@
      nr  266  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  268  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 7] size: DWORD <|@ <|@
      nr  270  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  272  <|@ instruction r8|DWORD = LEA address: [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606545611047959603
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606630160457077616
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576564783964606208
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  312  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606545611047959604
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589758882679627384
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15899 size: DWORD <|@ <|@
      nr  372  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24 size: QWORD <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: aload_0       
     3: arraylength   
     4: istore_3      
     5: iload_2       
     6: iload_3       
     7: if_icmpge     20
    10: aload_0       
    11: iload_2       
    12: iload_1       
    13: bastore       
    14: iinc          
    17: goto          5
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@124b9c5d slotKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.07069986285943652 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r11|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction r8|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r11|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B17" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B17 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = AND x: rdx|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr  106  <|@ instruction MOVB (x: [rsi|QWORD[.] + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  108  <|@ instruction CMP x: r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  110  <|@ instruction r11|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r10|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606630160457077614
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576564783964606207
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  140  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606545611047959602
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction r11|DWORD = LEA address: [r10|DWORD - 8] size: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4609555252217174965
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.3913711186831117 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603557694131649335
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  244  <|@ instruction r9|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  248  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  250  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  252  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  256  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 4] size: DWORD <|@ <|@
      nr  258  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  260  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 5] size: DWORD <|@ <|@
      nr  262  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  264  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 6] size: DWORD <|@ <|@
      nr  266  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  268  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 7] size: DWORD <|@ <|@
      nr  270  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  272  <|@ instruction r8|DWORD = LEA address: [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606545611047959603
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606630160457077616
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576564783964606208
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  312  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606545611047959604
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589758882679627384
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15899 size: DWORD <|@ <|@
      nr  372  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24 size: QWORD <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: aload_0       
     3: arraylength   
     4: istore_3      
     5: iload_2       
     6: iload_3       
     7: if_icmpge     20
    10: aload_0       
    11: iload_2       
    12: iload_1       
    13: bastore       
    14: iinc          
    17: goto          5
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@124b9c5d slotKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.07069986285943652 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r11|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction r8|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r11|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B17" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B17 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = AND x: rdx|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr  106  <|@ instruction MOVB (x: [rsi|QWORD[.] + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  108  <|@ instruction CMP x: r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  110  <|@ instruction r11|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r10|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606630160457077614
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576564783964606207
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  140  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606545611047959602
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction r11|DWORD = LEA address: [r10|DWORD - 8] size: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4609555252217174965
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.3913711186831117 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603557694131649335
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  244  <|@ instruction r9|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  248  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  250  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  252  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  256  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 4] size: DWORD <|@ <|@
      nr  258  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  260  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 5] size: DWORD <|@ <|@
      nr  262  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  264  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 6] size: DWORD <|@ <|@
      nr  266  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  268  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 7] size: DWORD <|@ <|@
      nr  270  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  272  <|@ instruction r8|DWORD = LEA address: [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606545611047959603
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606630160457077616
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576564783964606208
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  312  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606545611047959604
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589758882679627384
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15899 size: DWORD <|@ <|@
      nr  372  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24 size: QWORD <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: aload_0       
     3: arraylength   
     4: istore_3      
     5: iload_2       
     6: iload_3       
     7: if_icmpge     20
    10: aload_0       
    11: iload_2       
    12: iload_1       
    13: bastore       
    14: iinc          
    17: goto          5
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@124b9c5d slotKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.07069986285943652 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r11|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction r8|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r11|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B17" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B17 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = AND x: rdx|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr  106  <|@ instruction MOVB (x: [rsi|QWORD[.] + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  108  <|@ instruction CMP x: r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  110  <|@ instruction r11|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r10|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606630160457077614
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576564783964606207
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  140  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606545611047959602
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction r11|DWORD = LEA address: [r10|DWORD - 8] size: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4609555252217174965
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.3913711186831117 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603557694131649335
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  244  <|@ instruction r9|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  248  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  250  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  252  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  256  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 4] size: DWORD <|@ <|@
      nr  258  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  260  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 5] size: DWORD <|@ <|@
      nr  262  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  264  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 6] size: DWORD <|@ <|@
      nr  266  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  268  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 7] size: DWORD <|@ <|@
      nr  270  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  272  <|@ instruction r8|DWORD = LEA address: [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606545611047959603
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606630160457077616
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576564783964606208
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  312  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606545611047959604
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589758882679627384
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15899 size: DWORD <|@ <|@
      nr  372  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24 size: QWORD <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: aload_0       
     3: arraylength   
     4: istore_3      
     5: iload_2       
     6: iload_3       
     7: if_icmpge     20
    10: aload_0       
    11: iload_2       
    12: iload_1       
    13: bastore       
    14: iinc          
    17: goto          5
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@124b9c5d slotKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.07069986285943652 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r11|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction r8|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r11|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B17" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B17 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = AND x: rdx|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr  106  <|@ instruction MOVB (x: [rsi|QWORD[.] + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  108  <|@ instruction CMP x: r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  110  <|@ instruction r11|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r10|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576564783964606207
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  140  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606630160457077614
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606545611047959602
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction r11|DWORD = LEA address: [r10|DWORD - 8] size: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603557694131649335
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  244  <|@ instruction r9|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  248  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  250  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  252  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  256  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 4] size: DWORD <|@ <|@
      nr  258  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  260  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 5] size: DWORD <|@ <|@
      nr  262  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  264  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 6] size: DWORD <|@ <|@
      nr  266  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  268  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 7] size: DWORD <|@ <|@
      nr  270  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  272  <|@ instruction r8|DWORD = LEA address: [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4609555252217174965
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.3913711186831117 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606545611047959603
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576564783964606208
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  312  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606630160457077616
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606545611047959604
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589758882679627384
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15899 size: DWORD <|@ <|@
      nr  372  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24 size: QWORD <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: aload_0       
     3: arraylength   
     4: istore_3      
     5: iload_2       
     6: iload_3       
     7: if_icmpge     20
    10: aload_0       
    11: iload_2       
    12: iload_1       
    13: bastore       
    14: iinc          
    17: goto          5
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@124b9c5d slotKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.07069986285943652 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r11|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction r8|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r11|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B17" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B17 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = AND x: rdx|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr  106  <|@ instruction MOVB (x: [rsi|QWORD[.] + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  108  <|@ instruction CMP x: r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  110  <|@ instruction r11|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r10|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576564783964606207
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  140  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606630160457077614
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606545611047959602
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction r11|DWORD = LEA address: [r10|DWORD - 8] size: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603557694131649335
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  244  <|@ instruction r9|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  248  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  250  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  252  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  256  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 4] size: DWORD <|@ <|@
      nr  258  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  260  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 5] size: DWORD <|@ <|@
      nr  262  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  264  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 6] size: DWORD <|@ <|@
      nr  266  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  268  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 7] size: DWORD <|@ <|@
      nr  270  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  272  <|@ instruction r8|DWORD = LEA address: [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4609555252217174965
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.3913711186831117 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606545611047959603
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576564783964606208
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  312  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606630160457077616
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606545611047959604
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589758882679627384
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15899 size: DWORD <|@ <|@
      nr  372  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24 size: QWORD <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: aload_0       
     3: arraylength   
     4: istore_3      
     5: iload_2       
     6: iload_3       
     7: if_icmpge     20
    10: aload_0       
    11: iload_2       
    12: iload_1       
    13: bastore       
    14: iinc          
    17: goto          5
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@124b9c5d slotKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.07069986285943652 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r11|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction r8|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r11|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B17" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B17 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = AND x: rdx|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr  106  <|@ instruction MOVB (x: [rsi|QWORD[.] + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  108  <|@ instruction CMP x: r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  110  <|@ instruction r11|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r10|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576564783964606207
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  140  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606630160457077614
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606545611047959602
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction r11|DWORD = LEA address: [r10|DWORD - 8] size: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603557694131649335
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  244  <|@ instruction r9|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  248  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  250  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  252  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  256  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 4] size: DWORD <|@ <|@
      nr  258  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  260  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 5] size: DWORD <|@ <|@
      nr  262  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  264  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 6] size: DWORD <|@ <|@
      nr  266  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  268  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 7] size: DWORD <|@ <|@
      nr  270  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  272  <|@ instruction r8|DWORD = LEA address: [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4609555252217174965
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.3913711186831117 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606545611047959603
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576564783964606208
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  312  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606630160457077616
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606545611047959604
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589758882679627384
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15899 size: DWORD <|@ <|@
      nr  372  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24 size: QWORD <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: aload_0       
     3: arraylength   
     4: istore_3      
     5: iload_2       
     6: iload_3       
     7: if_icmpge     20
    10: aload_0       
    11: iload_2       
    12: iload_1       
    13: bastore       
    14: iinc          
    17: goto          5
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@124b9c5d slotKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.07069986285943652 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r11|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction r8|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r11|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B17" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B17 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = AND x: rdx|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr  106  <|@ instruction MOVB (x: [rsi|QWORD[.] + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  108  <|@ instruction CMP x: r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  110  <|@ instruction r11|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r10|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576564783964606207
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  140  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606630160457077614
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606545611047959602
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction r11|DWORD = LEA address: [r10|DWORD - 8] size: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603557694131649335
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  244  <|@ instruction r9|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  248  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  250  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  252  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  256  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 4] size: DWORD <|@ <|@
      nr  258  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  260  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 5] size: DWORD <|@ <|@
      nr  262  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  264  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 6] size: DWORD <|@ <|@
      nr  266  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  268  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 7] size: DWORD <|@ <|@
      nr  270  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  272  <|@ instruction r8|DWORD = LEA address: [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4609555252217174965
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.3913711186831117 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606545611047959603
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576564783964606208
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  312  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606630160457077616
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606545611047959604
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589758882679627384
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15899 size: DWORD <|@ <|@
      nr  372  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24 size: QWORD <|@ <|@
      nr  374  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: aload_0       
     3: arraylength   
     4: istore_3      
     5: iload_2       
     6: iload_3       
     7: if_icmpge     20
    10: aload_0       
    11: iload_2       
    12: iload_1       
    13: bastore       
    14: iinc          
    17: goto          5
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@124b9c5d slotKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.07069986285943652 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r11|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction r8|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r11|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B17" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B17 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606545611047959601
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = AND x: rdx|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr  106  <|@ instruction MOVB (x: [rsi|QWORD[.] + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  108  <|@ instruction CMP x: r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  110  <|@ instruction r11|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r10|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576564783964606207
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  140  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606630160457077614
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606545611047959602
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction r11|DWORD = LEA address: [r10|DWORD - 8] size: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603557694131649335
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  244  <|@ instruction r9|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  248  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  250  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  252  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  256  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 4] size: DWORD <|@ <|@
      nr  258  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  260  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 5] size: DWORD <|@ <|@
      nr  262  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  264  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 6] size: DWORD <|@ <|@
      nr  266  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  268  <|@ instruction r9|DWORD = LEA address: [r8|DWORD + 7] size: DWORD <|@ <|@
      nr  270  <|@ instruction MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  272  <|@ instruction r8|DWORD = LEA address: [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4609555252217174965
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.3913711186831117 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606545611047959603
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576564783964606208
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr  312  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606630160457077616
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606545611047959604
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602042011420589105
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589758882679627384
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15899 size: DWORD <|@ <|@
      nr  372  <|@ instruction MOV x: [r15|QWORD + 1168] y: 24 size: QWORD <|@ <|@
      nr  374  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.Arrays.fill(Arrays.java:3322) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: aload_0       
     3: arraylength   
     4: istore_3      
     5: iload_2       
     6: iload_3       
     7: if_icmpge     20
    10: aload_0       
    11: iload_2       
    12: iload_1       
    13: bastore       
    14: iinc          
    17: goto          5
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec189041817f20000000000f85b401000090909090909090909048896c2410448b560c4585d20f846a01000090909090909090458bda41ffcb4d63db458bc24d3bc30f8746010000909090904183fa020f8345010000909090909090909090902315000000008856104183fa0341bb02000000450f42da41b801000000e9220000006666660f1f84000000000066666690660f1f4400009090909090428854061041ffc090909090453bd87fea909090909090458d5af8e9860000006666660f1f840000000000666666900f1f840000000000666666909090909090909090909090909090909090909090909090909090909090909090904288540610458bc841ffc14288540e10458d48024288540e10458d48034288540e10458d48044288540e10458d48054288540e10458d48064288540e10458d48074288540e10458d400890909090453bd87f8c909090e9110000000f1f40009090909090428854061041ffc090909090453bd07fea90909090909090909090488b6c24104883c418493ba7500400000f8748000000c3909090e9c3feffff909090ebd59090909090909041c78784040000e5c1ffff49c7879004000018000000e8000000000f1f84000000000048896c2410e800000000e93dfefffff4488d0da4ffffff49898f68040000e90ffefffff441c78784040000f5d3ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 NOP  <||@
  Comment 27 4 NOP  <||@
  Comment 28 6 NOP  <||@
  Comment 29 8 NOP  <||@
  Comment 30 10 NOP  <||@
  Comment 31 12 NOP  <||@
  Comment 32 14 NOP  <||@
  Comment 33 16 NOP  <||@
  Comment 34 18 NOP  <||@
  Comment 35 20 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 40 22 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@124b9c5d slotKind: QWORD  <||@
  Comment 40 28 r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 40 [rsi:0]at java.util.Arrays.fill(Arrays.java:3322) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |-   <||@
  Comment 40 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 44 30 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.07069986285943652 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 53 block B2 null  <||@
  Comment 53 32 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 53 34 NOP  <||@
  Comment 54 36 NOP  <||@
  Comment 55 38 NOP  <||@
  Comment 56 40 NOP  <||@
  Comment 57 42 NOP  <||@
  Comment 58 44 NOP  <||@
  Comment 59 46 NOP  <||@
  Comment 60 48 r11|DWORD = DEC value: r10|DWORD size: DWORD  <||@
  Comment 66 50 r11|QWORD = MOVSXD value: r11|DWORD size: QWORD  <||@
  Comment 69 52 r8|QWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 72 54 CMPBRANCH (x: r8|QWORD, y: r11|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD  <||@
  Comment 81 block B4 null  <||@
  Comment 81 56 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 81 58 NOP  <||@
  Comment 82 60 NOP  <||@
  Comment 83 62 NOP  <||@
  Comment 84 64 NOP  <||@
  Comment 85 66 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B17 y: 2 size: DWORD inlinedY: null  <||@
  Comment 95 block B5 null  <||@
  Comment 95 68 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 95 70 NOP  <||@
  Comment 96 72 NOP  <||@
  Comment 97 74 NOP  <||@
  Comment 98 76 JUMP ~outgoingValues: [] destination: B5 -> B6  <||@
  Comment 98 block B6 null  <||@
  Comment 98 88 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 98 90 NOP  <||@
  Comment 99 92 NOP  <||@
  Comment 100 94 NOP  <||@
  Comment 101 96 NOP  <||@
  Comment 102 98 NOP  <||@
  Comment 103 100 NOP  <||@
  Comment 104 102 NOP  <||@
  Comment 105 104 rdx|DWORD = AND x: rdx|DWORD alignment: 4 size: DWORD y: int[1|0x1]  <||@
  Comment 105 {DataSection[0x0]}  <||@
  Comment 111 106 MOVB (x: [rsi|QWORD[.] + 16], y: rdx|DWORD) size: BYTE  <||@
  Comment 114 108 CMP x: r10|DWORD y: 3 size: DWORD  <||@
  Comment 118 110 r11|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r10|DWORD) condition: |<|  <||@
  Comment 128 -1 r8|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 134 112 JUMP ~outgoingValues: [] destination: B6 -> B7  <||@
  Comment 139 block B8 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 139 126 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 160 128 NOP  <||@
  Comment 161 130 NOP  <||@
  Comment 162 132 NOP  <||@
  Comment 163 134 NOP  <||@
  Comment 164 136 NOP  <||@
  Comment 165 138 MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE  <||@
  Comment 170 140 r8|DWORD = INC value: r8|DWORD size: DWORD  <||@
  Comment 173 142 JUMP ~outgoingValues: [] destination: B8 -> B7  <||@
  Comment 173 block B7 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 173 114 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 173 116 NOP  <||@
  Comment 174 118 NOP  <||@
  Comment 175 120 NOP  <||@
  Comment 176 122 NOP  <||@
  Comment 177 124 CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD  <||@
  Comment 182 block B9 null  <||@
  Comment 182 144 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 182 146 NOP  <||@
  Comment 183 148 NOP  <||@
  Comment 184 150 NOP  <||@
  Comment 185 152 NOP  <||@
  Comment 186 154 NOP  <||@
  Comment 187 156 NOP  <||@
  Comment 188 158 r11|DWORD = LEA address: [r10|DWORD - 8] size: DWORD  <||@
  Comment 192 160 JUMP ~outgoingValues: [] destination: B9 -> B10  <||@
  Comment 197 block B11 loop 1 depth 1 header:109|LoopBegin  <||@
  Comment 197 174 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 224 176 NOP  <||@
  Comment 225 178 NOP  <||@
  Comment 226 180 NOP  <||@
  Comment 227 182 NOP  <||@
  Comment 228 184 NOP  <||@
  Comment 229 186 NOP  <||@
  Comment 230 188 NOP  <||@
  Comment 231 190 NOP  <||@
  Comment 232 192 NOP  <||@
  Comment 233 194 NOP  <||@
  Comment 234 196 NOP  <||@
  Comment 235 198 NOP  <||@
  Comment 236 200 NOP  <||@
  Comment 237 202 NOP  <||@
  Comment 238 204 NOP  <||@
  Comment 239 206 NOP  <||@
  Comment 240 208 NOP  <||@
  Comment 241 210 NOP  <||@
  Comment 242 212 NOP  <||@
  Comment 243 214 NOP  <||@
  Comment 244 216 NOP  <||@
  Comment 245 218 NOP  <||@
  Comment 246 220 NOP  <||@
  Comment 247 222 NOP  <||@
  Comment 248 224 NOP  <||@
  Comment 249 226 NOP  <||@
  Comment 250 228 NOP  <||@
  Comment 251 230 NOP  <||@
  Comment 252 232 NOP  <||@
  Comment 253 234 NOP  <||@
  Comment 254 236 NOP  <||@
  Comment 255 238 NOP  <||@
  Comment 256 240 NOP  <||@
  Comment 257 242 MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE  <||@
  Comment 262 244 r9|DWORD = INC value: r8|DWORD size: DWORD  <||@
  Comment 268 246 MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE  <||@
  Comment 273 248 r9|DWORD = LEA address: [r8|DWORD + 2] size: DWORD  <||@
  Comment 277 250 MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE  <||@
  Comment 282 252 r9|DWORD = LEA address: [r8|DWORD + 3] size: DWORD  <||@
  Comment 286 254 MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE  <||@
  Comment 291 256 r9|DWORD = LEA address: [r8|DWORD + 4] size: DWORD  <||@
  Comment 295 258 MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE  <||@
  Comment 300 260 r9|DWORD = LEA address: [r8|DWORD + 5] size: DWORD  <||@
  Comment 304 262 MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE  <||@
  Comment 309 264 r9|DWORD = LEA address: [r8|DWORD + 6] size: DWORD  <||@
  Comment 313 266 MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE  <||@
  Comment 318 268 r9|DWORD = LEA address: [r8|DWORD + 7] size: DWORD  <||@
  Comment 322 270 MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE  <||@
  Comment 327 272 r8|DWORD = LEA address: [r8|DWORD + 8] size: DWORD  <||@
  Comment 331 274 JUMP ~outgoingValues: [] destination: B11 -> B10  <||@
  Comment 331 block B10 loop 1 depth 1 header:109|LoopBegin  <||@
  Comment 331 162 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 331 164 NOP  <||@
  Comment 332 166 NOP  <||@
  Comment 333 168 NOP  <||@
  Comment 334 170 NOP  <||@
  Comment 335 172 CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.3913711186831117 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD  <||@
  Comment 340 block B12 null  <||@
  Comment 340 276 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 340 278 NOP  <||@
  Comment 341 280 NOP  <||@
  Comment 342 282 NOP  <||@
  Comment 343 284 JUMP ~outgoingValues: [] destination: B12 -> B13  <||@
  Comment 348 block B14 loop 2 depth 1 header:128|LoopBegin  <||@
  Comment 348 298 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 352 300 NOP  <||@
  Comment 353 302 NOP  <||@
  Comment 354 304 NOP  <||@
  Comment 355 306 NOP  <||@
  Comment 356 308 NOP  <||@
  Comment 357 310 MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE  <||@
  Comment 362 312 r8|DWORD = INC value: r8|DWORD size: DWORD  <||@
  Comment 365 314 JUMP ~outgoingValues: [] destination: B14 -> B13  <||@
  Comment 365 block B13 loop 2 depth 1 header:128|LoopBegin  <||@
  Comment 365 286 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 365 288 NOP  <||@
  Comment 366 290 NOP  <||@
  Comment 367 292 NOP  <||@
  Comment 368 294 NOP  <||@
  Comment 369 296 CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD  <||@
  Comment 374 block B15 null  <||@
  Comment 374 316 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 374 318 NOP  <||@
  Comment 375 320 NOP  <||@
  Comment 376 322 NOP  <||@
  Comment 377 324 JUMP ~outgoingValues: [] destination: B15 -> B16  <||@
  Comment 377 block B16 null  <||@
  Comment 377 326 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 377 328 NOP  <||@
  Comment 378 330 NOP  <||@
  Comment 379 332 NOP  <||@
  Comment 380 334 NOP  <||@
  Comment 381 336 NOP  <||@
  Comment 382 338 NOP  <||@
  Comment 383 340 NOP  <||@
  Comment 384 342 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 393 POLL_RETURN_FAR  <||@
  Comment 407 block B3 null  <||@
  Comment 407 78 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 407 80 NOP  <||@
  Comment 408 82 NOP  <||@
  Comment 409 84 NOP  <||@
  Comment 410 86 JUMP ~outgoingValues: [] destination: B3 -> B6  <||@
  Comment 415 block B1 null  <||@
  Comment 415 344 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 415 346 NOP  <||@
  Comment 416 348 NOP  <||@
  Comment 417 350 NOP  <||@
  Comment 418 352 JUMP ~outgoingValues: [] destination: B1 -> B16  <||@
  Comment 420 block B17 null  <||@
  Comment 420 354 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 420 356 NOP  <||@
  Comment 421 358 NOP  <||@
  Comment 422 360 NOP  <||@
  Comment 423 362 NOP  <||@
  Comment 424 364 NOP  <||@
  Comment 425 366 NOP  <||@
  Comment 426 368 NOP  <||@
  Comment 427 370 MOV x: [r15|QWORD + 1156] y: -15899 size: DWORD  <||@
  Comment 438 372 MOV x: [r15|QWORD + 1168] y: 24 size: QWORD  <||@
  Comment 449 374 DEOPT info [bci:0]  <||@
  Comment 449 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 454 [rsi:0]at java.util.Arrays.fill(Arrays.java:3322) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |-   <||@
  Comment 467 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 492 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 520 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 525 [rsi:0]at java.util.Arrays.fill(Arrays.java:3322) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |-   <||@
  Comment 533 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 533 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 539 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 539 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-11408[java.util.Arrays.fill(boolean[], boolean)]"
  method "HotSpotCompilation-11408[java.util.Arrays.fill(boolean[], boolean)]"
  date 1724269751088
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789aec05a0 89842400c0feff4883ec189041817f20000000000f85b401000090909090909090909048896c2410448b560c4585d20f846a01000090909090909090458bda41ffcb4d63db458bc24d3bc30f8746010000909090904183fa020f834501000090909090909090909090231571ffffff8856104183fa0341bb02000000450f42da41b801000000e9220000006666660f1f84000000000066666690660f1f4400009090909090428854061041ffc090909090453bd87fea909090909090458d5af8e9860000006666660f1f840000000000666666900f1f840000000000666666909090909090909090909090909090909090909090909090909090909090909090904288540610458bc841ffc14288540e10458d48024288540e10458d48034288540e10458d48044288540e10458d48054288540e10458d48064288540e10458d48074288540e10458d400890909090453bd87f8c909090e9110000000f1f40009090909090428854061041ffc090909090453bd07fea90909090909090909090488b6c24104883c418493ba7500400000f8748000000c3909090e9c3feffff909090ebd59090909090909041c78784040000e5c1ffff49c7879004000018000000e814aa8cfe0f1f84000000000048896c2410e8a8aa8afee93dfefffff4488d0da4ffffff49898f68040000e96fb88cfef441c78784040000f5d3ffff49c7879004000000000000e8cda98cfe0f1f840000000000e8464ba0fef4e860a78cfef4f4f4f4f4f4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 NOP  <||@
  Comment 27 4 NOP  <||@
  Comment 28 6 NOP  <||@
  Comment 29 8 NOP  <||@
  Comment 30 10 NOP  <||@
  Comment 31 12 NOP  <||@
  Comment 32 14 NOP  <||@
  Comment 33 16 NOP  <||@
  Comment 34 18 NOP  <||@
  Comment 35 20 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 40 22 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@124b9c5d slotKind: QWORD  <||@
  Comment 40 28 r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 40 [rsi:0]at java.util.Arrays.fill(Arrays.java:3322) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |-   <||@
  Comment 40 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 44 30 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.07069986285943652 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 53 block B2 null  <||@
  Comment 53 32 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 53 34 NOP  <||@
  Comment 54 36 NOP  <||@
  Comment 55 38 NOP  <||@
  Comment 56 40 NOP  <||@
  Comment 57 42 NOP  <||@
  Comment 58 44 NOP  <||@
  Comment 59 46 NOP  <||@
  Comment 60 48 r11|DWORD = DEC value: r10|DWORD size: DWORD  <||@
  Comment 66 50 r11|QWORD = MOVSXD value: r11|DWORD size: QWORD  <||@
  Comment 69 52 r8|QWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 72 54 CMPBRANCH (x: r8|QWORD, y: r11|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD  <||@
  Comment 81 block B4 null  <||@
  Comment 81 56 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 81 58 NOP  <||@
  Comment 82 60 NOP  <||@
  Comment 83 62 NOP  <||@
  Comment 84 64 NOP  <||@
  Comment 85 66 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B17 y: 2 size: DWORD inlinedY: null  <||@
  Comment 95 block B5 null  <||@
  Comment 95 68 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 95 70 NOP  <||@
  Comment 96 72 NOP  <||@
  Comment 97 74 NOP  <||@
  Comment 98 76 JUMP ~outgoingValues: [] destination: B5 -> B6  <||@
  Comment 98 block B6 null  <||@
  Comment 98 88 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 98 90 NOP  <||@
  Comment 99 92 NOP  <||@
  Comment 100 94 NOP  <||@
  Comment 101 96 NOP  <||@
  Comment 102 98 NOP  <||@
  Comment 103 100 NOP  <||@
  Comment 104 102 NOP  <||@
  Comment 105 104 rdx|DWORD = AND x: rdx|DWORD alignment: 4 size: DWORD y: int[1|0x1]  <||@
  Comment 105 {DataSection[0x0]}  <||@
  Comment 111 106 MOVB (x: [rsi|QWORD[.] + 16], y: rdx|DWORD) size: BYTE  <||@
  Comment 114 108 CMP x: r10|DWORD y: 3 size: DWORD  <||@
  Comment 118 110 r11|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r10|DWORD) condition: |<|  <||@
  Comment 128 -1 r8|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 134 112 JUMP ~outgoingValues: [] destination: B6 -> B7  <||@
  Comment 139 block B8 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 139 126 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 160 128 NOP  <||@
  Comment 161 130 NOP  <||@
  Comment 162 132 NOP  <||@
  Comment 163 134 NOP  <||@
  Comment 164 136 NOP  <||@
  Comment 165 138 MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE  <||@
  Comment 170 140 r8|DWORD = INC value: r8|DWORD size: DWORD  <||@
  Comment 173 142 JUMP ~outgoingValues: [] destination: B8 -> B7  <||@
  Comment 173 block B7 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 173 114 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 173 116 NOP  <||@
  Comment 174 118 NOP  <||@
  Comment 175 120 NOP  <||@
  Comment 176 122 NOP  <||@
  Comment 177 124 CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD  <||@
  Comment 182 block B9 null  <||@
  Comment 182 144 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 182 146 NOP  <||@
  Comment 183 148 NOP  <||@
  Comment 184 150 NOP  <||@
  Comment 185 152 NOP  <||@
  Comment 186 154 NOP  <||@
  Comment 187 156 NOP  <||@
  Comment 188 158 r11|DWORD = LEA address: [r10|DWORD - 8] size: DWORD  <||@
  Comment 192 160 JUMP ~outgoingValues: [] destination: B9 -> B10  <||@
  Comment 197 block B11 loop 1 depth 1 header:109|LoopBegin  <||@
  Comment 197 174 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 224 176 NOP  <||@
  Comment 225 178 NOP  <||@
  Comment 226 180 NOP  <||@
  Comment 227 182 NOP  <||@
  Comment 228 184 NOP  <||@
  Comment 229 186 NOP  <||@
  Comment 230 188 NOP  <||@
  Comment 231 190 NOP  <||@
  Comment 232 192 NOP  <||@
  Comment 233 194 NOP  <||@
  Comment 234 196 NOP  <||@
  Comment 235 198 NOP  <||@
  Comment 236 200 NOP  <||@
  Comment 237 202 NOP  <||@
  Comment 238 204 NOP  <||@
  Comment 239 206 NOP  <||@
  Comment 240 208 NOP  <||@
  Comment 241 210 NOP  <||@
  Comment 242 212 NOP  <||@
  Comment 243 214 NOP  <||@
  Comment 244 216 NOP  <||@
  Comment 245 218 NOP  <||@
  Comment 246 220 NOP  <||@
  Comment 247 222 NOP  <||@
  Comment 248 224 NOP  <||@
  Comment 249 226 NOP  <||@
  Comment 250 228 NOP  <||@
  Comment 251 230 NOP  <||@
  Comment 252 232 NOP  <||@
  Comment 253 234 NOP  <||@
  Comment 254 236 NOP  <||@
  Comment 255 238 NOP  <||@
  Comment 256 240 NOP  <||@
  Comment 257 242 MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE  <||@
  Comment 262 244 r9|DWORD = INC value: r8|DWORD size: DWORD  <||@
  Comment 268 246 MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE  <||@
  Comment 273 248 r9|DWORD = LEA address: [r8|DWORD + 2] size: DWORD  <||@
  Comment 277 250 MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE  <||@
  Comment 282 252 r9|DWORD = LEA address: [r8|DWORD + 3] size: DWORD  <||@
  Comment 286 254 MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE  <||@
  Comment 291 256 r9|DWORD = LEA address: [r8|DWORD + 4] size: DWORD  <||@
  Comment 295 258 MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE  <||@
  Comment 300 260 r9|DWORD = LEA address: [r8|DWORD + 5] size: DWORD  <||@
  Comment 304 262 MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE  <||@
  Comment 309 264 r9|DWORD = LEA address: [r8|DWORD + 6] size: DWORD  <||@
  Comment 313 266 MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE  <||@
  Comment 318 268 r9|DWORD = LEA address: [r8|DWORD + 7] size: DWORD  <||@
  Comment 322 270 MOVB (x: [rsi|QWORD[.] + r9|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE  <||@
  Comment 327 272 r8|DWORD = LEA address: [r8|DWORD + 8] size: DWORD  <||@
  Comment 331 274 JUMP ~outgoingValues: [] destination: B11 -> B10  <||@
  Comment 331 block B10 loop 1 depth 1 header:109|LoopBegin  <||@
  Comment 331 162 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 331 164 NOP  <||@
  Comment 332 166 NOP  <||@
  Comment 333 168 NOP  <||@
  Comment 334 170 NOP  <||@
  Comment 335 172 CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.3913711186831117 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD  <||@
  Comment 340 block B12 null  <||@
  Comment 340 276 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 340 278 NOP  <||@
  Comment 341 280 NOP  <||@
  Comment 342 282 NOP  <||@
  Comment 343 284 JUMP ~outgoingValues: [] destination: B12 -> B13  <||@
  Comment 348 block B14 loop 2 depth 1 header:128|LoopBegin  <||@
  Comment 348 298 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 352 300 NOP  <||@
  Comment 353 302 NOP  <||@
  Comment 354 304 NOP  <||@
  Comment 355 306 NOP  <||@
  Comment 356 308 NOP  <||@
  Comment 357 310 MOVB (x: [rsi|QWORD[.] + r8|DWORD * 1 + 16], y: rdx|DWORD) size: BYTE  <||@
  Comment 362 312 r8|DWORD = INC value: r8|DWORD size: DWORD  <||@
  Comment 365 314 JUMP ~outgoingValues: [] destination: B14 -> B13  <||@
  Comment 365 block B13 loop 2 depth 1 header:128|LoopBegin  <||@
  Comment 365 286 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 365 288 NOP  <||@
  Comment 366 290 NOP  <||@
  Comment 367 292 NOP  <||@
  Comment 368 294 NOP  <||@
  Comment 369 296 CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD  <||@
  Comment 374 block B15 null  <||@
  Comment 374 316 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 374 318 NOP  <||@
  Comment 375 320 NOP  <||@
  Comment 376 322 NOP  <||@
  Comment 377 324 JUMP ~outgoingValues: [] destination: B15 -> B16  <||@
  Comment 377 block B16 null  <||@
  Comment 377 326 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 377 328 NOP  <||@
  Comment 378 330 NOP  <||@
  Comment 379 332 NOP  <||@
  Comment 380 334 NOP  <||@
  Comment 381 336 NOP  <||@
  Comment 382 338 NOP  <||@
  Comment 383 340 NOP  <||@
  Comment 384 342 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 393 POLL_RETURN_FAR  <||@
  Comment 407 block B3 null  <||@
  Comment 407 78 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 407 80 NOP  <||@
  Comment 408 82 NOP  <||@
  Comment 409 84 NOP  <||@
  Comment 410 86 JUMP ~outgoingValues: [] destination: B3 -> B6  <||@
  Comment 415 block B1 null  <||@
  Comment 415 344 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 415 346 NOP  <||@
  Comment 416 348 NOP  <||@
  Comment 417 350 NOP  <||@
  Comment 418 352 JUMP ~outgoingValues: [] destination: B1 -> B16  <||@
  Comment 420 block B17 null  <||@
  Comment 420 354 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 420 356 NOP  <||@
  Comment 421 358 NOP  <||@
  Comment 422 360 NOP  <||@
  Comment 423 362 NOP  <||@
  Comment 424 364 NOP  <||@
  Comment 425 366 NOP  <||@
  Comment 426 368 NOP  <||@
  Comment 427 370 MOV x: [r15|QWORD + 1156] y: -15899 size: DWORD  <||@
  Comment 438 372 MOV x: [r15|QWORD + 1168] y: 24 size: QWORD  <||@
  Comment 449 374 DEOPT info [bci:0]  <||@
  Comment 449 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 454 [rsi:0]at java.util.Arrays.fill(Arrays.java:3322) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |-   <||@
  Comment 467 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 492 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 520 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 525 [rsi:0]at java.util.Arrays.fill(Arrays.java:3322) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |-   <||@
  Comment 533 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 533 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 539 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 539 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
