begin_compilation
  name " HotSpotCompilation-7083[java.lang.String.checkBoundsOffCount(int, int, int)]"
  method "HotSpotCompilation-7083[java.lang.String.checkBoundsOffCount(int, int, int)]"
  date 1724269754437
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v22 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v16 i11 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v9 i10 i15 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 i15 i10 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 2]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
stamp: i32
=== Inputs ===
x: i1 
y: i3 
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i1 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 4]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
stamp: i32
=== Inputs ===
x: i2 
y: i10 
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i2 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i11 
y: i12 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i11 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v13 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v21 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v13 #trueSuccessor: v20 #falseSuccessor: v21  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
rawvalue: -4883
stableDimension: 0
stamp: i32 [-4883]
stampKind: i32
value: int[-4883|0xffffffffffffeced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i31 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v20 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 8]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 11]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
stamp: i32
=== Inputs ===
x: i3 
y: i1 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i3 y: i1  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 12]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i15 
y: i2 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i15 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 12]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v24 
falseSuccessor: v25 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v24 #falseSuccessor: v25  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 12]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v34  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
rawvalue: -5907
stableDimension: 0
stamp: i32 [-5907]
stampKind: i32
value: int[-5907|0xffffffffffffe8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i31 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v24 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
stamp: i32 [-5907 - -4883] bits:1...101x0011101101
valueDescription: i32
=== Inputs ===
merge: v27 
values: i29 i35 
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v27 values: i29 i35  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v28 v34 
=== Succesors ===
next: v33 
=== Usages ===
i31 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v28 v34 #next: v33  <|@  <|@
f <@~|@floating>@ <|@
tid j30 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_0
code: ResolvedJavaMethodBytecode<String.checkBoundsOffCount(int, int, int)>
localsSize: 3
locksSize: 0
sourceFile: String.java
sourceLine: 4853
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i31 
speculation: j30 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i31 speculation: j30  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:398) [bci: 23]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v9 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v9  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 9]
stamp: void
=== Inputs ===
memoryMap: - 
result: i1 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i1  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2ae0a67d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = OR (x: v0|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = OR (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-4883|0xffffffffffffeced]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-5907|0xffffffffffffe8ed]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iload_2       
     3: getstatic     #295        // jdk.internal.util.Preconditions.SIOOBE_FORMATTER:java.util.function.BiFunction
     6: invokestatic  #298        // jdk.internal.util.Preconditions.checkFromIndexSize:(int, int, int, java.util.function.BiFunction)int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v22 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v16 i11 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
result v0|DWORD <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v9 i10 i15 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 i15 i10 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 2]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
stamp: i32
=== Inputs ===
x: i1 
y: i3 
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i1 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 4]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
stamp: i32
=== Inputs ===
x: i2 
y: i10 
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i2 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i11 
y: i12 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i11 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v13 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v21 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v13 #trueSuccessor: v20 #falseSuccessor: v21  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2ae0a67d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = OR (x: v0|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = OR (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
result int[-4883|0xffffffffffffeced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
rawvalue: -4883
stableDimension: 0
stamp: i32 [-4883]
stampKind: i32
value: int[-4883|0xffffffffffffeced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i31 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v20 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-4883|0xffffffffffffeced]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 8]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 11]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
stamp: i32
=== Inputs ===
x: i3 
y: i1 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i3 y: i1  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 12]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i15 
y: i2 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i15 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 12]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v24 
falseSuccessor: v25 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v24 #falseSuccessor: v25  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 12]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v34  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
result int[-5907|0xffffffffffffe8ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
rawvalue: -5907
stableDimension: 0
stamp: i32 [-5907]
stampKind: i32
value: int[-5907|0xffffffffffffe8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i31 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v24 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-5907|0xffffffffffffe8ed]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i31 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
stamp: i32 [-5907 - -4883] bits:1...101x0011101101
valueDescription: i32
=== Inputs ===
merge: v27 
values: i29 i35 
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v27 values: i29 i35  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v28 v34 
=== Succesors ===
next: v33 
=== Usages ===
i31 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v28 v34 #next: v33  <|@  <|@
f <@~|@floating>@ <|@
tid j30 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_0
code: ResolvedJavaMethodBytecode<String.checkBoundsOffCount(int, int, int)>
localsSize: 3
locksSize: 0
sourceFile: String.java
sourceLine: 4853
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i31 
speculation: j30 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i31 speculation: j30  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:398) [bci: 23]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v9 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v9  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 9]
stamp: void
=== Inputs ===
memoryMap: - 
result: i1 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i1  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2ae0a67d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = OR (x: v0|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = OR (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-4883|0xffffffffffffeced]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-5907|0xffffffffffffe8ed]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iload_2       
     3: getstatic     #295        // jdk.internal.util.Preconditions.SIOOBE_FORMATTER:java.util.function.BiFunction
     6: invokestatic  #298        // jdk.internal.util.Preconditions.checkFromIndexSize:(int, int, int, java.util.function.BiFunction)int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2ae0a67d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = OR (x: v0|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = OR (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-4883|0xffffffffffffeced]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-5907|0xffffffffffffe8ed]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iload_2       
     3: getstatic     #295        // jdk.internal.util.Preconditions.SIOOBE_FORMATTER:java.util.function.BiFunction
     6: invokestatic  #298        // jdk.internal.util.Preconditions.checkFromIndexSize:(int, int, int, java.util.function.BiFunction)int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2ae0a67d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = OR (x: v0|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = OR (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-4883|0xffffffffffffeced]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-5907|0xffffffffffffe8ed]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iload_2       
     3: getstatic     #295        // jdk.internal.util.Preconditions.SIOOBE_FORMATTER:java.util.function.BiFunction
     6: invokestatic  #298        // jdk.internal.util.Preconditions.checkFromIndexSize:(int, int, int, java.util.function.BiFunction)int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2ae0a67d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = OR (x: v0|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = OR (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-4883|0xffffffffffffeced]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-5907|0xffffffffffffe8ed]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iload_2       
     3: getstatic     #295        // jdk.internal.util.Preconditions.SIOOBE_FORMATTER:java.util.function.BiFunction
     6: invokestatic  #298        // jdk.internal.util.Preconditions.checkFromIndexSize:(int, int, int, java.util.function.BiFunction)int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2ae0a67d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = OR (x: v0|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = OR (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-4883|0xffffffffffffeced]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-5907|0xffffffffffffe8ed]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iload_2       
     3: getstatic     #295        // jdk.internal.util.Preconditions.SIOOBE_FORMATTER:java.util.function.BiFunction
     6: invokestatic  #298        // jdk.internal.util.Preconditions.checkFromIndexSize:(int, int, int, java.util.function.BiFunction)int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2ae0a67d slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v3|DWORD = OR (x: v0|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction v4|DWORD = OR (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction v5|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [int[-4883|0xffffffffffffeced]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction JUMP ~outgoingValues: [int[-5907|0xffffffffffffe8ed]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   98  <|@ instruction [v6|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v6|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iload_2       
     3: getstatic     #295        // jdk.internal.util.Preconditions.SIOOBE_FORMATTER:java.util.function.BiFunction
     6: invokestatic  #298        // jdk.internal.util.Preconditions.checkFromIndexSize:(int, int, int, java.util.function.BiFunction)int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2ae0a67d slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v3|DWORD = OR (x: v0|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction v4|DWORD = OR (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction v5|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [int[-4883|0xffffffffffffeced]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction JUMP ~outgoingValues: [int[-5907|0xffffffffffffe8ed]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   98  <|@ instruction [v6|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v6|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iload_2       
     3: getstatic     #295        // jdk.internal.util.Preconditions.SIOOBE_FORMATTER:java.util.function.BiFunction
     6: invokestatic  #298        // jdk.internal.util.Preconditions.checkFromIndexSize:(int, int, int, java.util.function.BiFunction)int
     9: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v0|d [0, 1[[74, 76[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 32[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 30[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 24[ "NoSpillStore"
  rsi|d fixed "[rsi|d]" rsi|d -1 [0, 28[ "NoSpillStore"
  v0|d DWORD "[v0|d]" v0|d rsi|d [28, 74[[78, 119[28 MustHaveRegister 34 ShouldHaveRegister 52 ShouldHaveRegister 74 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|d [30, 56[[78, 119[30 MustHaveRegister 36 ShouldHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d rcx|d [32, 56[[78, 119[32 MustHaveRegister 34 ShouldHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d v0|d [34, 36[34 MustHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d v1|d [36, 38[36 MustHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d v2|d [52, 54[52 MustHaveRegister 54 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [98, 114[114 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v0|d [0, 1[[74, 76[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 32[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 30[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 24[ "NoSpillStore"
  rsi|d fixed "[rsi|d]" rsi|d -1 [0, 28[ "NoSpillStore"
  v0|d DWORD "[rsi|d]" v0|d rsi|d [28, 74[[78, 119[28 MustHaveRegister 34 ShouldHaveRegister 52 ShouldHaveRegister 74 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [30, 56[[78, 119[30 MustHaveRegister 36 ShouldHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|d [32, 56[[78, 119[32 MustHaveRegister 34 ShouldHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d v0|d [34, 36[34 MustHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[rax|d]" v4|d v1|d [36, 38[36 MustHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rax|d]" v5|d v2|d [52, 54[52 MustHaveRegister 54 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[r10|d]" v6|d -1 [98, 114[114 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2ae0a67d slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v3|DWORD = OR (x: v0|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction v4|DWORD = OR (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction v5|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [int[-4883|0xffffffffffffeced]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction JUMP ~outgoingValues: [int[-5907|0xffffffffffffe8ed]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   98  <|@ instruction [v6|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v6|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iload_2       
     3: getstatic     #295        // jdk.internal.util.Preconditions.SIOOBE_FORMATTER:java.util.function.BiFunction
     6: invokestatic  #298        // jdk.internal.util.Preconditions.checkFromIndexSize:(int, int, int, java.util.function.BiFunction)int
     9: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v0|d [0, 1[[74, 76[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 32[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 30[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 24[ "NoSpillStore"
  rsi|d fixed "[rsi|d]" rsi|d -1 [0, 28[ "NoSpillStore"
  v0|d DWORD "[rsi|d]" v0|d rsi|d [28, 74[[78, 119[28 MustHaveRegister 34 ShouldHaveRegister 52 ShouldHaveRegister 74 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [30, 56[[78, 119[30 MustHaveRegister 36 ShouldHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|d [32, 56[[78, 119[32 MustHaveRegister 34 ShouldHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d v0|d [34, 36[34 MustHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[rax|d]" v4|d v1|d [36, 38[36 MustHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rax|d]" v5|d v2|d [52, 54[52 MustHaveRegister 54 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[r10|d]" v6|d -1 [98, 114[114 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2ae0a67d slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v3|DWORD = OR (x: v0|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction v4|DWORD = OR (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction v5|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [int[-4883|0xffffffffffffeced]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction JUMP ~outgoingValues: [int[-5907|0xffffffffffffe8ed]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   98  <|@ instruction [v6|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v6|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iload_2       
     3: getstatic     #295        // jdk.internal.util.Preconditions.SIOOBE_FORMATTER:java.util.function.BiFunction
     6: invokestatic  #298        // jdk.internal.util.Preconditions.checkFromIndexSize:(int, int, int, java.util.function.BiFunction)int
     9: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v0|d [0, 1[[74, 76[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 32[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 30[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 24[ "NoSpillStore"
  rsi|d fixed "[rsi|d]" rsi|d -1 [0, 28[ "NoSpillStore"
  v0|d DWORD "[rsi|d]" v0|d rsi|d [28, 74[[78, 119[28 MustHaveRegister 34 ShouldHaveRegister 52 ShouldHaveRegister 74 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [30, 56[[78, 119[30 MustHaveRegister 36 ShouldHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|d [32, 56[[78, 119[32 MustHaveRegister 34 ShouldHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d v0|d [34, 36[34 MustHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[rax|d]" v4|d v1|d [36, 38[36 MustHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rax|d]" v5|d v2|d [52, 54[52 MustHaveRegister 54 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[r10|d]" v6|d -1 [98, 114[114 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2ae0a67d slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v3|DWORD = OR (x: v0|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction v4|DWORD = OR (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction v5|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: int[-4883|0xffffffffffffeced] // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: int[-5907|0xffffffffffffe8ed] // MoveResolver resolve mapping <|@ <|@
      nr   96  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   98  <|@ instruction [v6|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v6|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iload_2       
     3: getstatic     #295        // jdk.internal.util.Preconditions.SIOOBE_FORMATTER:java.util.function.BiFunction
     6: invokestatic  #298        // jdk.internal.util.Preconditions.checkFromIndexSize:(int, int, int, java.util.function.BiFunction)int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2ae0a67d slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v3|DWORD = OR (x: v0|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction v4|DWORD = OR (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction v5|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: int[-4883|0xffffffffffffeced] // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: int[-5907|0xffffffffffffe8ed] // MoveResolver resolve mapping <|@ <|@
      nr   96  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v6|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iload_2       
     3: getstatic     #295        // jdk.internal.util.Preconditions.SIOOBE_FORMATTER:java.util.function.BiFunction
     6: invokestatic  #298        // jdk.internal.util.Preconditions.checkFromIndexSize:(int, int, int, java.util.function.BiFunction)int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2ae0a67d slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD = OR (x: rsi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = OR (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-4883|0xffffffffffffeced] // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5907|0xffffffffffffe8ed] // MoveResolver resolve mapping <|@ <|@
      nr   96  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iload_2       
     3: getstatic     #295        // jdk.internal.util.Preconditions.SIOOBE_FORMATTER:java.util.function.BiFunction
     6: invokestatic  #298        // jdk.internal.util.Preconditions.checkFromIndexSize:(int, int, int, java.util.function.BiFunction)int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2ae0a67d slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD = OR (x: rsi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = OR (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-4883|0xffffffffffffeced] // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5907|0xffffffffffffe8ed] // MoveResolver resolve mapping <|@ <|@
      nr   96  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iload_2       
     3: getstatic     #295        // jdk.internal.util.Preconditions.SIOOBE_FORMATTER:java.util.function.BiFunction
     6: invokestatic  #298        // jdk.internal.util.Preconditions.checkFromIndexSize:(int, int, int, java.util.function.BiFunction)int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2ae0a67d slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD = OR (x: rsi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = OR (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-4883|0xffffffffffffeced] // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5907|0xffffffffffffe8ed] // MoveResolver resolve mapping <|@ <|@
      nr   96  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iload_2       
     3: getstatic     #295        // jdk.internal.util.Preconditions.SIOOBE_FORMATTER:java.util.function.BiFunction
     6: invokestatic  #298        // jdk.internal.util.Preconditions.checkFromIndexSize:(int, int, int, java.util.function.BiFunction)int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2ae0a67d slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD = OR (x: rsi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = OR (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-4883|0xffffffffffffeced] // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5907|0xffffffffffffe8ed] // MoveResolver resolve mapping <|@ <|@
      nr   96  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iload_2       
     3: getstatic     #295        // jdk.internal.util.Preconditions.SIOOBE_FORMATTER:java.util.function.BiFunction
     6: invokestatic  #298        // jdk.internal.util.Preconditions.checkFromIndexSize:(int, int, int, java.util.function.BiFunction)int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2ae0a67d slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD = OR (x: rsi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = OR (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-4883|0xffffffffffffeced] // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5907|0xffffffffffffe8ed] // MoveResolver resolve mapping <|@ <|@
      nr   96  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iload_2       
     3: getstatic     #295        // jdk.internal.util.Preconditions.SIOOBE_FORMATTER:java.util.function.BiFunction
     6: invokestatic  #298        // jdk.internal.util.Preconditions.checkFromIndexSize:(int, int, int, java.util.function.BiFunction)int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2ae0a67d slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD = OR (x: rsi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = OR (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-4883|0xffffffffffffeced] // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5907|0xffffffffffffe8ed] // MoveResolver resolve mapping <|@ <|@
      nr   96  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iload_2       
     3: getstatic     #295        // jdk.internal.util.Preconditions.SIOOBE_FORMATTER:java.util.function.BiFunction
     6: invokestatic  #298        // jdk.internal.util.Preconditions.checkFromIndexSize:(int, int, int, java.util.function.BiFunction)int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2ae0a67d slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD = OR (x: rsi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = OR (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-4883|0xffffffffffffeced] // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5907|0xffffffffffffe8ed] // MoveResolver resolve mapping <|@ <|@
      nr   96  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iload_2       
     3: getstatic     #295        // jdk.internal.util.Preconditions.SIOOBE_FORMATTER:java.util.function.BiFunction
     6: invokestatic  #298        // jdk.internal.util.Preconditions.checkFromIndexSize:(int, int, int, java.util.function.BiFunction)int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2ae0a67d slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD = OR (x: rsi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = OR (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-4883|0xffffffffffffeced] // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5907|0xffffffffffffe8ed] // MoveResolver resolve mapping <|@ <|@
      nr   96  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iload_2       
     3: getstatic     #295        // jdk.internal.util.Preconditions.SIOOBE_FORMATTER:java.util.function.BiFunction
     6: invokestatic  #298        // jdk.internal.util.Preconditions.checkFromIndexSize:(int, int, int, java.util.function.BiFunction)int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2ae0a67d slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD = OR (x: rsi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = OR (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-4883|0xffffffffffffeced] // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5907|0xffffffffffffe8ed] // MoveResolver resolve mapping <|@ <|@
      nr   96  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iload_2       
     3: getstatic     #295        // jdk.internal.util.Preconditions.SIOOBE_FORMATTER:java.util.function.BiFunction
     6: invokestatic  #298        // jdk.internal.util.Preconditions.checkFromIndexSize:(int, int, int, java.util.function.BiFunction)int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2ae0a67d slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD = OR (x: rsi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = OR (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-4883|0xffffffffffffeced] // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5907|0xffffffffffffe8ed] // MoveResolver resolve mapping <|@ <|@
      nr   96  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iload_2       
     3: getstatic     #295        // jdk.internal.util.Preconditions.SIOOBE_FORMATTER:java.util.function.BiFunction
     6: invokestatic  #298        // jdk.internal.util.Preconditions.checkFromIndexSize:(int, int, int, java.util.function.BiFunction)int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2ae0a67d slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD = OR (x: rsi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = OR (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-4883|0xffffffffffffeced] // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5907|0xffffffffffffe8ed] // MoveResolver resolve mapping <|@ <|@
      nr   96  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iload_2       
     3: getstatic     #295        // jdk.internal.util.Preconditions.SIOOBE_FORMATTER:java.util.function.BiFunction
     6: invokestatic  #298        // jdk.internal.util.Preconditions.checkFromIndexSize:(int, int, int, java.util.function.BiFunction)int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2ae0a67d slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD = OR (x: rsi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = OR (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-4883|0xffffffffffffeced] // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  118  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5907|0xffffffffffffe8ed] // MoveResolver resolve mapping <|@ <|@
      nr   96  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iload_2       
     3: getstatic     #295        // jdk.internal.util.Preconditions.SIOOBE_FORMATTER:java.util.function.BiFunction
     6: invokestatic  #298        // jdk.internal.util.Preconditions.checkFromIndexSize:(int, int, int, java.util.function.BiFunction)int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2ae0a67d slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD = OR (x: rsi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = OR (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-4883|0xffffffffffffeced] // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  118  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-5907|0xffffffffffffe8ed] // MoveResolver resolve mapping <|@ <|@
      nr   96  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: iload_2       
     3: getstatic     #295        // jdk.internal.util.Preconditions.SIOOBE_FORMATTER:java.util.function.BiFunction
     6: invokestatic  #298        // jdk.internal.util.Preconditions.checkFromIndexSize:(int, int, int, java.util.function.BiFunction)int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec189041817f20000000000f858a000000909090909090909090909048896c24108bc60bc10bc285c00f8c3200000090909090908bc12bc63bd00f8f5000000090909090909090908bc6488b6c24104883c418493ba7500400000f874b000000c390909041baedecffff909090909090904589978404000049c7879004000014000000e8000000000f1f84000000000090909041baede8ffffebcf48896c2410e800000000e967fffffff4488d0da1ffffff49898f68040000e939fffffff4e800000000f4e800000000f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|DWORD, rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 NOP  <||@
  Comment 27 4 NOP  <||@
  Comment 28 6 NOP  <||@
  Comment 29 8 NOP  <||@
  Comment 30 10 NOP  <||@
  Comment 31 12 NOP  <||@
  Comment 32 14 NOP  <||@
  Comment 33 16 NOP  <||@
  Comment 34 18 NOP  <||@
  Comment 35 20 NOP  <||@
  Comment 36 22 NOP  <||@
  Comment 37 24 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 42 26 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2ae0a67d slotKind: QWORD  <||@
  Comment 42 34 rax|DWORD = OR (x: rsi|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 46 36 rax|DWORD = OR (x: rdx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 48 38 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 56 block B2 null  <||@
  Comment 56 40 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 56 42 NOP  <||@
  Comment 57 44 NOP  <||@
  Comment 58 46 NOP  <||@
  Comment 59 48 NOP  <||@
  Comment 60 50 NOP  <||@
  Comment 61 52 rax|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 65 54 CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD  <||@
  Comment 73 block B5 null  <||@
  Comment 73 56 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 73 58 NOP  <||@
  Comment 74 60 NOP  <||@
  Comment 75 62 NOP  <||@
  Comment 76 64 NOP  <||@
  Comment 77 66 NOP  <||@
  Comment 78 68 NOP  <||@
  Comment 79 70 NOP  <||@
  Comment 80 72 NOP  <||@
  Comment 81 74 rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 83 76 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 92 POLL_RETURN_FAR  <||@
  Comment 106 block B1 null  <||@
  Comment 106 78 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 106 80 NOP  <||@
  Comment 107 82 NOP  <||@
  Comment 108 84 NOP  <||@
  Comment 109 -1 r10|DWORD = MOVE input: int[-4883|0xffffffffffffeced]  <||@
  Comment 115 86 JUMP ~outgoingValues: [] destination: B1 -> B4  <||@
  Comment 115 block B4 null  <||@
  Comment 115 98 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 115 100 NOP  <||@
  Comment 116 102 NOP  <||@
  Comment 117 104 NOP  <||@
  Comment 118 106 NOP  <||@
  Comment 119 108 NOP  <||@
  Comment 120 110 NOP  <||@
  Comment 121 112 NOP  <||@
  Comment 122 114 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 129 116 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 140 118 DEOPT info [bci:0]  <||@
  Comment 140 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 145 []at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 0, duringCall: false, rethrow: false]
              |0          |1          |2         
     locals:  |rsi|DWORD  |rdx|DWORD  |rcx|DWORD   <||@
  Comment 153 block B3 null  <||@
  Comment 153 88 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 153 90 NOP  <||@
  Comment 154 92 NOP  <||@
  Comment 155 94 NOP  <||@
  Comment 156 -1 r10|DWORD = MOVE input: int[-5907|0xffffffffffffe8ed]  <||@
  Comment 162 96 JUMP ~outgoingValues: [] destination: B3 -> B4  <||@
  Comment 169 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 194 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 200 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 200 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 206 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 206 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-7083[java.lang.String.checkBoundsOffCount(int, int, int)]"
  method "HotSpotCompilation-7083[java.lang.String.checkBoundsOffCount(int, int, int)]"
  date 1724269754483
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789aefdc00 89842400c0feff4883ec189041817f20000000000f858a000000909090909090909090909048896c24108bc60bc10bc285c00f8c3200000090909090908bc12bc63bd00f8f5000000090909090909090908bc6488b6c24104883c418493ba7500400000f874b000000c390909041baedecffff909090909090904589978404000049c7879004000014000000e8e9d488fe0f1f84000000000090909041baede8ffffebcf48896c2410e872d586fee967fffffff4488d0da1ffffff49898f68040000e939e388fef4e833769cfef4e84dd288fef4f4f4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|DWORD, rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 NOP  <||@
  Comment 27 4 NOP  <||@
  Comment 28 6 NOP  <||@
  Comment 29 8 NOP  <||@
  Comment 30 10 NOP  <||@
  Comment 31 12 NOP  <||@
  Comment 32 14 NOP  <||@
  Comment 33 16 NOP  <||@
  Comment 34 18 NOP  <||@
  Comment 35 20 NOP  <||@
  Comment 36 22 NOP  <||@
  Comment 37 24 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 42 26 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2ae0a67d slotKind: QWORD  <||@
  Comment 42 34 rax|DWORD = OR (x: rsi|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 46 36 rax|DWORD = OR (x: rdx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 48 38 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 56 block B2 null  <||@
  Comment 56 40 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 56 42 NOP  <||@
  Comment 57 44 NOP  <||@
  Comment 58 46 NOP  <||@
  Comment 59 48 NOP  <||@
  Comment 60 50 NOP  <||@
  Comment 61 52 rax|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 65 54 CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD  <||@
  Comment 73 block B5 null  <||@
  Comment 73 56 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 73 58 NOP  <||@
  Comment 74 60 NOP  <||@
  Comment 75 62 NOP  <||@
  Comment 76 64 NOP  <||@
  Comment 77 66 NOP  <||@
  Comment 78 68 NOP  <||@
  Comment 79 70 NOP  <||@
  Comment 80 72 NOP  <||@
  Comment 81 74 rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 83 76 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 92 POLL_RETURN_FAR  <||@
  Comment 106 block B1 null  <||@
  Comment 106 78 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 106 80 NOP  <||@
  Comment 107 82 NOP  <||@
  Comment 108 84 NOP  <||@
  Comment 109 -1 r10|DWORD = MOVE input: int[-4883|0xffffffffffffeced]  <||@
  Comment 115 86 JUMP ~outgoingValues: [] destination: B1 -> B4  <||@
  Comment 115 block B4 null  <||@
  Comment 115 98 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 115 100 NOP  <||@
  Comment 116 102 NOP  <||@
  Comment 117 104 NOP  <||@
  Comment 118 106 NOP  <||@
  Comment 119 108 NOP  <||@
  Comment 120 110 NOP  <||@
  Comment 121 112 NOP  <||@
  Comment 122 114 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 129 116 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 140 118 DEOPT info [bci:0]  <||@
  Comment 140 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 145 []at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 0, duringCall: false, rethrow: false]
              |0          |1          |2         
     locals:  |rsi|DWORD  |rdx|DWORD  |rcx|DWORD   <||@
  Comment 153 block B3 null  <||@
  Comment 153 88 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 153 90 NOP  <||@
  Comment 154 92 NOP  <||@
  Comment 155 94 NOP  <||@
  Comment 156 -1 r10|DWORD = MOVE input: int[-5907|0xffffffffffffe8ed]  <||@
  Comment 162 96 JUMP ~outgoingValues: [] destination: B3 -> B4  <||@
  Comment 169 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 194 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 200 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 200 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 206 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 206 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
