begin_compilation
  name " HotSpotCompilation-4844[sun.nio.cs.StreamEncoder.write(char[], int, int)]"
  method "HotSpotCompilation-4844[sun.nio.cs.StreamEncoder.write(char[], int, int)]"
  date 1724269738105
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i471 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i471  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# sun.nio.cs.StreamEncoder
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v501 ?147 ?17 v258 v505 ?144 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# char[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?147 ?17 v506 v258 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?147 ?17 v124 v127 i131 v258 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?147 ?17 v129 i131 v136 v258 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<StreamEncoder.write(char[], int, int)>
localsSize: 8
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 135
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 
=== Succesors ===
=== Usages ===
v517 i471 a475 v497 v473 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4  <|@  <|@
f <@~|@floating>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i471 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i471 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-65035|0xffffffffffff01f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 10]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v506 
lastLocationAccess: - 
=== Succesors ===
next: a472 
=== Usages ===
v127 v132 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v506 lastLocationAccess: - #next: a472  <|@  <|@
f <@~|@floating>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a472 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a472 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Writer.lock
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 1]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v501 
lastLocationAccess: - 
=== Succesors ===
next: v473 
=== Usages ===
a238 v502 v515 
=== Predecessor ===
i471 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v501 lastLocationAccess: - #next: v473  <|@  <|@
f <@~|@floating>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a472 
=== Succesors ===
=== Usages ===
v473 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a472  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-92947|0xfffffffffffe94ed]
deoptSpeculation: long[20|0x14]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:136) [bci: 8]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v515 
lastLocationAccess: - 
=== Succesors ===
next: v366 
=== Usages ===
v490 
=== Predecessor ===
a472 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v515 lastLocationAccess: - #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:136) [bci: 8]
rawvalue: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v490 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:136) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v473 
y: v489 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v473 y: v489  <|@  <|@
f <@*|@fixed>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:136) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v490 
=== Succesors ===
trueSuccessor: v364 
falseSuccessor: v486 
=== Usages ===
=== Predecessor ===
v473 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v490 #trueSuccessor: v364 #falseSuccessor: v486  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:136) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a474 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a474  <|@  <|@
f <@~|@floating>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a472 
=== Succesors ===
=== Usages ===
a474 a479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a472  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a474 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: InternalLock.lock
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v502 
lastLocationAccess: - 
=== Succesors ===
next: a475 
=== Usages ===
v503 
=== Predecessor ===
v364 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v502 lastLocationAccess: - #next: a475  <|@  <|@
f <@~|@floating>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a474 
=== Succesors ===
=== Usages ===
a475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a475 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-61963|0xffffffffffff0df5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 1]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v503 
lastLocationAccess: - 
=== Succesors ===
next: v497 
=== Usages ===
a245 v504 v514 v516 
=== Predecessor ===
a474 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v503 lastLocationAccess: - #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a475 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a475  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?5 
object: v516 
=== Succesors ===
next: j476 
=== Usages ===
=== Predecessor ===
a475 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: v516 #next: j476  <|@  <|@
f <@~|@floating>@ <|@
tid j90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
- >@ <|@
instruction <@CurrentJavaThread|@jdk.graal.compiler.hotspot.nodes.CurrentJavaThreadNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
displacement: 896
stamp: void*
stride: S1
=== Inputs ===
base: j90 
index: - 
=== Succesors ===
=== Usages ===
j476 j482 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j90 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j476 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: JavaThread::_vthread
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v498 
lastLocationAccess: - 
=== Succesors ===
next: a477 
=== Usages ===
v499 
=== Predecessor ===
v497 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v498 lastLocationAccess: - #next: a477  <|@  <|@
f <@~|@floating>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j476 
index: - 
=== Succesors ===
=== Usages ===
a477 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j476 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a477 <|@
d <@d|@=== Debug Properties ===
accessStamp: a! java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: _vthread OopHandle contents
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: a! java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v499 
lastLocationAccess: - 
=== Succesors ===
next: i248 
=== Usages ===
v108 a303 v455 
=== Predecessor ===
j476 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v499 lastLocationAccess: - #next: i248  <|@  <|@
f <@~|@floating>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a475 
=== Succesors ===
=== Usages ===
i248 i299 v300 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a475  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 5]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v196 v214 v75 v302 v302 v302 i248 v100 v116 v124 v129 v134 v136 v145 ?213 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 4]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v159 ?209 v301 ?405 v302 i248 i115 ?151 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i248 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.compareAndSetInt(Object, long, int, int) [bci: -1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState(AbstractQueuedSynchronizer.java:569) [bci: 9]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 7]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v504 
lastLocationAccess: - 
expectedValue: i50 
newValue: i40 
stateAfter: - 
=== Succesors ===
next: v103 
=== Usages ===
v100 
=== Predecessor ===
a477 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v504 lastLocationAccess: - expectedValue: i50 newValue: i40 stateAfter: - #next: v103  <|@  <|@
f <@~|@floating>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 10]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i248 
y: i50 
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i248 y: i50  <|@  <|@
f <@~|@floating>@ <|@
tid a245 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 1]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a475 
=== Succesors ===
=== Usages ===
v455 ?121 v301 ?73 ?405 v302 ?114 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a475  <|@  <|@
f <@~|@floating>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a475 
=== Succesors ===
=== Usages ===
a478 v304 v453 v455 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a475  <|@  <|@
f <@~|@floating>@ <|@
tid a238 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 1]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a472 
=== Succesors ===
=== Usages ===
?25 ?17 ?148 ?34 ?41 ?17 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a472  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 10]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
profileData: PROFILED designatedSuccessorProbability: 0.13475912048564476
stamp: void
=== Inputs ===
condition: v100 
=== Succesors ===
trueSuccessor: v102 
falseSuccessor: v101 
=== Usages ===
=== Predecessor ===
i248 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v100 #trueSuccessor: v102 #falseSuccessor: v101  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 20]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a478 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a478 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 21]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v514 
lastLocationAccess: - 
=== Succesors ===
next: v111 
=== Usages ===
a298 
=== Predecessor ===
v102 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v514 lastLocationAccess: - #next: v111  <|@  <|@
f <@~|@floating>@ <|@
tid a298 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 21]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a478 
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a478  <|@  <|@
f <@~|@floating>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 25]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a298 
y: a477 
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a298 y: a477  <|@  <|@
tid ?17 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.write(char[], int, int)>
localsSize: 8
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
sourceFile: StreamEncoder.java
sourceLine: 137
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 a238 a238 
=== Succesors ===
=== Usages ===
?25 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4 a238 a238  <|@  <|@
tid ?25 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<InternalLock.lock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
sourceFile: InternalLock.java
sourceLine: 74
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?17 
values: a238 
=== Succesors ===
=== Usages ===
?123 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?17 values: a238  <|@  <|@
tid ?123 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 322
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?25 
=== Succesors ===
=== Usages ===
?73 ?121 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?25  <|@  <|@
f <@*|@fixed>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 25]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
profileData: PROFILED designatedSuccessorProbability: 0.9997028739455198
stamp: void
=== Inputs ===
condition: v108 
=== Succesors ===
trueSuccessor: v110 
falseSuccessor: v109 
=== Usages ===
=== Predecessor ===
a478 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v108 #trueSuccessor: v110 #falseSuccessor: v109  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 28]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: i299 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i299  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i299 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 29]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v504 
lastLocationAccess: - 
=== Succesors ===
next: v403 
=== Usages ===
i115 ?114 
=== Predecessor ===
v110 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v504 lastLocationAccess: - #next: v403  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 33]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: i32
=== Inputs ===
x: i299 
y: i40 
=== Succesors ===
=== Usages ===
v116 v300 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i299 y: i40  <|@  <|@
f <@~|@floating>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i115 
y: i50 
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i115 y: i50  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v116 
=== Succesors ===
trueSuccessor: v401 
falseSuccessor: v402 
=== Usages ===
=== Predecessor ===
i299 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v116 #trueSuccessor: v401 #falseSuccessor: v402  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v400 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v400  <|@  <|@
tid ?121 <|@
d <@d|@=== Debug Properties ===
bci: 1
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 152
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?123 
values: a245 
=== Succesors ===
=== Usages ===
?114 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?123 values: a245  <|@  <|@
tid ?114 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<ReentrantLock$NonfairSync.initialTryLock()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 29]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
sourceFile: ReentrantLock.java
sourceLine: 229
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?121 
values: i299 a245 
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?121 values: i299 a245  <|@  <|@
f <@*|@fixed>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0xbb20e35b]: UnreachedCode@6[HotSpotMethod<ReentrantLock$NonfairSync.initialTryLock()>, 39]}
stamp: void
=== Inputs ===
stateBefore: ?114 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?114  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:232) [bci: 49]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v300 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v300  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractQueuedSynchronizer.state
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:554) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:232) [bci: 51]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v504 
lastLocationAccess: - 
value: i115 
stateAfter: - 
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v504 lastLocationAccess: - value: i115 stateAfter: - #next: v122  <|@  <|@
f <@*|@fixed>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 4]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
v300 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:235) [bci: 56]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: i72 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i72  <|@  <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/concurrent/locks/ReentrantLock$NonfairSync;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)>
=== Inputs ===
arguments: a245 i40 
=== Succesors ===
=== Usages ===
i72 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a245 i40  <|@  <|@
tid ?73 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
sourceFile: ReentrantLock.java
sourceLine: 153
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?123 
values: a245 
=== Succesors ===
=== Usages ===
?405 ?406 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?123 values: a245  <|@  <|@
tid ?405 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.acquire(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 989
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?73 
values: a245 i40 
=== Succesors ===
=== Usages ===
i72 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?73 values: a245 i40  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i72 <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#ReentrantLock$NonfairSync.tryAcquire
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v301 
stateDuring: ?405 
=== Succesors ===
next: v78 
=== Usages ===
v75 
=== Predecessor ===
v109 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v301 stateDuring: ?405 #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 5]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i72 
y: i50 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i72 y: i50  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 5]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
profileData: PROFILED designatedSuccessorProbability: 0.7455315145813735
stamp: void
=== Inputs ===
condition: v75 
=== Succesors ===
trueSuccessor: v77 
falseSuccessor: v76 
=== Usages ===
=== Predecessor ===
i72 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v75 #trueSuccessor: v77 #falseSuccessor: v76  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4539431807497542773
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 8]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: i82 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i82  <|@  <|@
f <@~|@floating>@ <|@
tid a79 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 9]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j80 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 14]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;, resolved>, UnresolvedJavaType<Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<long>]
stamp: void
targetMethod: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)>
=== Inputs ===
arguments: a245 a79 i40 i50 i50 i50 j80 
=== Succesors ===
=== Usages ===
i82 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a245 a79 i40 i50 i50 i50 j80  <|@  <|@
tid ?406 <|@
d <@d|@=== Debug Properties ===
bci: 15
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.acquire(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 990
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?73 
=== Succesors ===
=== Usages ===
i82 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?73  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i82 <|@
d <@d|@=== Debug Properties ===
bci: 15
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractQueuedSynchronizer.acquire
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v302 
stateDuring: ?406 
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v302 stateDuring: ?406 #next: v89  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:991) [bci: 19]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
i82 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4532132168167648385
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:991) [bci: 19]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v86  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
v76 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 13]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v453 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
precise: true
stamp: void
=== Inputs ===
address: v514 
value: - 
stateBefore: - 
=== Succesors ===
next: v304 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v514 value: - stateBefore: - #next: v304  <|@  <|@
f <@~|@floating>@ <|@
tid a303 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
op: Compress
stamp: n! java.lang.Thread
=== Inputs ===
value: a477 
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractOwnableSynchronizer.exclusiveOwnerThread
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v514 
lastLocationAccess: - 
value: a303 
stateAfter: - 
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v514 lastLocationAccess: - value: a303 stateAfter: - #next: v455  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
precise: false
stamp: void
=== Inputs ===
address: v514 
value: a477 
object: a245 
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v514 value: a477 object: a245 #next: v84  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
v455 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v84 v86 v89 v122 
=== Succesors ===
next: i251 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v84 v86 v89 v122 #next: i251  <|@  <|@
f <@~|@floating>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
displacement: 26
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i251 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i251 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: StreamEncoder.closed
memoryOrder: VOLATILE
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 1]
at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v505 
lastLocationAccess: - 
=== Succesors ===
next: v370 
=== Usages ===
i252 
=== Predecessor ===
v85 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v505 lastLocationAccess: - #next: v370  <|@  <|@
f <@~|@floating>@ <|@
tid i252 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 1]
at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
resultBits: 32
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
value: i251 
=== Succesors ===
=== Usages ===
v145 ?144 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i251  <|@  <|@
f <@~|@floating>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i252 
y: i50 
=== Succesors ===
=== Usages ===
v370 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i252 y: i50  <|@  <|@
tid ?148 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.write(char[], int, int)>
localsSize: 8
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 139
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - - - - - a238 
=== Succesors ===
=== Usages ===
?140 ?147 ?407 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - a238  <|@  <|@
f <@*|@fixed>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v145 
=== Succesors ===
trueSuccessor: v368 
falseSuccessor: v369 
=== Usages ===
=== Predecessor ===
i251 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v145 #trueSuccessor: v368 #falseSuccessor: v369  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:53) [bci: 17]
at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v374 
=== Usages ===
=== Predecessor ===
v370 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v374  <|@  <|@
f <@~|@floating>@ <|@
tid j432 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
rawvalue: 8340
stableDimension: 0
stamp: i64 [8340]
stampKind: i64
value: long[8340|0x2094]
=== Inputs ===
=== Succesors ===
=== Usages ===
j434 j434 j434 j434 j434 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i50 
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i50  <|@  <|@
f <@*|@fixed>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v124 
=== Succesors ===
trueSuccessor: v372 
falseSuccessor: v373 
=== Usages ===
=== Predecessor ===
v368 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v124 #trueSuccessor: v372 #falseSuccessor: v373  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v430 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v430  <|@  <|@
f <@~|@floating>@ <|@
tid i431 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
rawvalue: -94995
stableDimension: 0
stamp: i32 [-94995]
stampKind: i32
value: int[-94995|0xfffffffffffe8ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i433 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
v372 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 8]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v378 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v378  <|@  <|@
f <@~|@floating>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 11]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i471 
y: i3 
=== Succesors ===
=== Usages ===
v378 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i471 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 11]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v127 
=== Succesors ===
trueSuccessor: v376 
falseSuccessor: v377 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v127 #trueSuccessor: v376 #falseSuccessor: v377  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 11]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v439 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v439  <|@  <|@
f <@~|@floating>@ <|@
tid i440 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
rawvalue: -96019
stableDimension: 0
stamp: i32 [-96019]
stampKind: i32
value: int[-96019|0xfffffffffffe88ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i433 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
v376 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 14]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v382 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 15]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i50 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i4 y: i50  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 15]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v129 
=== Succesors ===
trueSuccessor: v380 
falseSuccessor: v381 
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v129 #trueSuccessor: v380 #falseSuccessor: v381  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 15]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v441 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v441  <|@  <|@
f <@~|@floating>@ <|@
tid i442 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
rawvalue: -97043
stableDimension: 0
stamp: i32 [-97043]
stampKind: i32
value: int[-97043|0xfffffffffffe84ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i433 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
v380 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 18]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v386  <|@  <|@
f <@~|@floating>@ <|@
tid i131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 20]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: i32
=== Inputs ===
x: i3 
y: i4 
=== Succesors ===
=== Usages ===
v132 v134 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i3 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 23]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i471 
y: i131 
=== Succesors ===
=== Usages ===
v386 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i471 y: i131  <|@  <|@
f <@*|@fixed>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 23]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v132 
=== Succesors ===
trueSuccessor: v384 
falseSuccessor: v385 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v132 #trueSuccessor: v384 #falseSuccessor: v385  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 23]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v443 
=== Usages ===
=== Predecessor ===
v386 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v443  <|@  <|@
f <@~|@floating>@ <|@
tid i444 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
rawvalue: -98067
stableDimension: 0
stamp: i32 [-98067]
stampKind: i32
value: int[-98067|0xfffffffffffe80ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i433 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
v384 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 26]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v390 
=== Usages ===
=== Predecessor ===
v386 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v390  <|@  <|@
f <@~|@floating>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 29]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i131 
y: i50 
=== Succesors ===
=== Usages ===
v390 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i131 y: i50  <|@  <|@
f <@*|@fixed>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 29]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v134 
=== Succesors ===
trueSuccessor: v388 
falseSuccessor: v389 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v134 #trueSuccessor: v388 #falseSuccessor: v389  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 29]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v445 
=== Usages ===
=== Predecessor ===
v390 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v445  <|@  <|@
f <@~|@floating>@ <|@
tid i446 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
rawvalue: -99091
stableDimension: 0
stamp: i32 [-99091]
stampKind: i32
value: int[-99091|0xfffffffffffe7ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i433 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
v388 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:155) [bci: 40]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v394 
=== Usages ===
=== Predecessor ===
v390 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v394  <|@  <|@
f <@~|@floating>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:155) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i50 
=== Succesors ===
=== Usages ===
v394 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i4 y: i50  <|@  <|@
f <@*|@fixed>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:155) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v136 
=== Succesors ===
trueSuccessor: v392 
falseSuccessor: v393 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v136 #trueSuccessor: v392 #falseSuccessor: v393  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:155) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v447 
=== Usages ===
=== Predecessor ===
v394 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v447  <|@  <|@
f <@~|@floating>@ <|@
tid j449 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
rawvalue: 8980
stableDimension: 0
stamp: i64 [8980]
stampKind: i64
value: long[8980|0x2314]
=== Inputs ===
=== Succesors ===
=== Usages ===
j434 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i448 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
rawvalue: -100115
stableDimension: 0
stamp: i32 [-100115]
stampKind: i32
value: int[-100115|0xfffffffffffe78ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i433 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
v392 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 45]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
v394 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v139  <|@  <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Lsun/nio/cs/StreamEncoder;, resolved>, UnresolvedJavaType<[C>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)>
=== Inputs ===
arguments: a1 a2 i3 i4 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 i3 i4  <|@  <|@
tid ?407 <|@
d <@d|@=== Debug Properties ===
bci: 49
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.lockedWrite(char[], int, int)>
localsSize: 4
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 158
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?148 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
bci: 49
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
polymorphic: false
stamp: void
targetMethod: Direct#StreamEncoder.implWrite
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v258 
stateDuring: ?407 
=== Succesors ===
next: a479 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v258 stateDuring: ?407 #next: a479  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a479 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: InternalLock.lock
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v502 
lastLocationAccess: - 
=== Succesors ===
next: a480 
=== Usages ===
a260 v507 
=== Predecessor ===
v139 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v502 lastLocationAccess: - #next: a480  <|@  <|@
tid ?140 <|@
d <@d|@=== Debug Properties ===
bci: 52
bytecode: return
code: ResolvedJavaMethodBytecode<StreamEncoder.lockedWrite(char[], int, int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
sourceFile: StreamEncoder.java
sourceLine: 159
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?148 
=== Succesors ===
=== Usages ===
i267 a480 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?148  <|@  <|@
f <@~|@floating>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a479 
=== Succesors ===
=== Usages ===
a480 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a479  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a480 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-66827|0xfffffffffffefaf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?140 
guard: - 
address: v507 
lastLocationAccess: - 
=== Succesors ===
next: i267 
=== Usages ===
a264 v508 v509 v510 
=== Predecessor ===
a479 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?140 guard: - address: v507 lastLocationAccess: - #next: i267  <|@  <|@
f <@~|@floating>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a480 
=== Succesors ===
=== Usages ===
i267 v271 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a480  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i267 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-67851|0xfffffffffffef6f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?140 
guard: - 
address: v508 
lastLocationAccess: - 
=== Succesors ===
next: a481 
=== Usages ===
i176 v159 ?151 
=== Predecessor ===
a480 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?140 guard: - address: v508 lastLocationAccess: - #next: a481  <|@  <|@
f <@~|@floating>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a480 
=== Succesors ===
=== Usages ===
a481 v295 v452 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a480  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a481 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 8]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v509 
lastLocationAccess: - 
=== Succesors ===
next: j482 
=== Usages ===
a270 
=== Predecessor ===
i267 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v509 lastLocationAccess: - #next: j482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j482 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: JavaThread::_vthread
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v498 
lastLocationAccess: - 
=== Succesors ===
next: a483 
=== Usages ===
v500 
=== Predecessor ===
a481 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v498 lastLocationAccess: - #next: a483  <|@  <|@
f <@~|@floating>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j482 
index: - 
=== Succesors ===
=== Usages ===
a483 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j482 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a483 <|@
d <@d|@=== Debug Properties ===
accessStamp: a! java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: _vthread OopHandle contents
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: a! java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v500 
lastLocationAccess: - 
=== Succesors ===
next: v398 
=== Usages ===
v157 
=== Predecessor ===
j482 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v500 lastLocationAccess: - #next: v398  <|@  <|@
f <@~|@floating>@ <|@
tid a270 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 8]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a481 
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a481  <|@  <|@
f <@~|@floating>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a270 
y: a483 
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a270 y: a483  <|@  <|@
f <@~|@floating>@ <|@
tid a260 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
op: Uncompress
stamp: a java.util.concurrent.locks.ReentrantLock
=== Inputs ===
value: a479 
=== Succesors ===
=== Usages ===
?48 ?57 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a479  <|@  <|@
tid ?34 <|@
d <@d|@=== Debug Properties ===
bci: 35
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.write(char[], int, int)>
localsSize: 8
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
sourceFile: StreamEncoder.java
sourceLine: 141
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - - - - - a238 
=== Succesors ===
=== Usages ===
?41 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - a238  <|@  <|@
tid ?41 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<InternalLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
sourceFile: InternalLock.java
sourceLine: 78
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?34 
values: a238 
=== Succesors ===
=== Usages ===
?57 ?48 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?34 values: a238  <|@  <|@
f <@*|@fixed>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v157 
=== Succesors ===
trueSuccessor: v396 
falseSuccessor: v397 
=== Usages ===
=== Predecessor ===
a483 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v157 #trueSuccessor: v396 #falseSuccessor: v397  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176) [bci: 25]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v163 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v163  <|@  <|@
f <@~|@floating>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176) [bci: 26]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i267 
y: i40 
=== Succesors ===
=== Usages ===
v54 v163 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i267 y: i40  <|@  <|@
f <@*|@fixed>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:177) [bci: 36]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
profileData: PROFILED designatedSuccessorProbability: 0.8652302759969847
stamp: void
=== Inputs ===
condition: v159 
=== Succesors ===
trueSuccessor: v162 
falseSuccessor: v161 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v159 #trueSuccessor: v162 #falseSuccessor: v161  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 39]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v452 
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v452  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
precise: true
stamp: void
=== Inputs ===
address: v509 
value: - 
stateBefore: - 
=== Succesors ===
next: v295 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v509 value: - stateBefore: - #next: v295  <|@  <|@
f <@~|@floating>@ <|@
tid a309 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
rawvalue: null
stableDimension: 0
stamp: n java.lang.Object NULL
stampKind: n java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractOwnableSynchronizer.exclusiveOwnerThread
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v509 
lastLocationAccess: - 
value: a309 
stateAfter: - 
=== Succesors ===
next: v169 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v509 lastLocationAccess: - value: a309 stateAfter: - #next: v169  <|@  <|@
f <@*|@fixed>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v168 
=== Predecessor ===
v295 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v167 
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v167  <|@  <|@
f <@*|@fixed>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v168 
=== Predecessor ===
v161 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v167 v169 
=== Succesors ===
next: v271 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v167 v169 #next: v271  <|@  <|@
f <@~|@floating>@ <|@
tid i175 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i176 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: i32
=== Inputs ===
x: i267 
y: i175 
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i267 y: i175  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractQueuedSynchronizer.state
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:554) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 46]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v508 
lastLocationAccess: - 
value: i176 
stateAfter: - 
=== Succesors ===
next: v54 
=== Usages ===
=== Predecessor ===
v168 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v508 lastLocationAccess: - value: i176 stateAfter: - #next: v54  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 5]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
profileData: PROFILED designatedSuccessorProbability: 0.8633858966180564
stamp: void
=== Inputs ===
condition: v159 
=== Succesors ===
trueSuccessor: v52 
falseSuccessor: v53 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v159 #trueSuccessor: v52 #falseSuccessor: v53  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605951908349848457
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 8]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: a274 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a274  <|@  <|@
f <@~|@floating>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a480 
=== Succesors ===
=== Usages ===
a274 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a480  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a274 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.head
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v510 
lastLocationAccess: - 
=== Succesors ===
next: v182 
=== Usages ===
v511 v450 
=== Predecessor ===
v52 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v510 lastLocationAccess: - #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a274 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a274  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
profileData: PROFILED designatedSuccessorProbability: 0.9993015402267503
stamp: void
=== Inputs ===
condition: v450 
=== Succesors ===
trueSuccessor: v181 
falseSuccessor: v180 
=== Usages ===
=== Predecessor ===
a274 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v450 #trueSuccessor: v181 #falseSuccessor: v180  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B39" 
    xhandlers
    flags 
    probability 4605946476645549382
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v63 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v63  <|@  <|@
f <@*|@fixed>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
v181 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4558701288473823891
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 4]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: a279 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a279  <|@  <|@
f <@~|@floating>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a274 
=== Succesors ===
=== Usages ===
a279 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a274  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a279 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.next
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v511 
lastLocationAccess: - 
=== Succesors ===
next: v192 
=== Usages ===
a280 v451 v512 v513 
=== Predecessor ===
v180 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v511 lastLocationAccess: - #next: v192  <|@  <|@
f <@~|@floating>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a279 
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a279  <|@  <|@
f <@*|@fixed>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
profileData: PROFILED designatedSuccessorProbability: 0.899215972285532
stamp: void
=== Inputs ===
condition: v451 
=== Succesors ===
trueSuccessor: v191 
falseSuccessor: v187 
=== Usages ===
=== Predecessor ===
a279 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v451 #trueSuccessor: v191 #falseSuccessor: v187  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 4558140721140330403
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v233 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v233  <|@  <|@
f <@*|@fixed>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
v191 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4544093902097985275
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 13]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: i284 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i284  <|@  <|@
f <@~|@floating>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a279 
=== Succesors ===
=== Usages ===
i286 i287 i284 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a279  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i284 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.status
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v512 
lastLocationAccess: - 
=== Succesors ===
next: v200 
=== Usages ===
v196 
=== Predecessor ===
v187 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v512 lastLocationAccess: - #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i284 
y: i50 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i284 y: i50  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
profileData: PROFILED designatedSuccessorProbability: 0.89280868385346
stamp: void
=== Inputs ===
condition: v196 
=== Succesors ===
trueSuccessor: v199 
falseSuccessor: v197 
=== Usages ===
=== Predecessor ===
i284 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v196 #trueSuccessor: v199 #falseSuccessor: v197  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 4543132494893730501
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v232 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v232  <|@  <|@
f <@*|@fixed>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
v199 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 20]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v207 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v207  <|@  <|@
tid ?57 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?41 
values: a260 
=== Succesors ===
=== Usages ===
?230 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?41 values: a260  <|@  <|@
tid ?230 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1060
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?57 
=== Succesors ===
=== Usages ===
?206 ?408 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?57  <|@  <|@
f <@~|@floating>@ <|@
tid a280 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
op: Uncompress
stamp: a java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
=== Inputs ===
value: a279 
=== Succesors ===
=== Usages ===
?206 ?213 ?209 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a279  <|@  <|@
tid ?206 <|@
d <@d|@=== Debug Properties ===
bci: 22
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 644
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?230 
values: - a280 
=== Succesors ===
=== Usages ===
?209 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?230 values: - a280  <|@  <|@
tid ?209 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer$Node.getAndUnsetStatus(int)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 481
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?206 
values: a280 i40 
=== Succesors ===
=== Usages ===
?213 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?206 values: a280 i40  <|@  <|@
f <@~|@floating>@ <|@
tid a203 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
rawvalue: Unsafe@679697080
stableDimension: 0
stamp: a!# jdk.internal.misc.Unsafe
stampKind: a java.lang.Object
value: Object[Unsafe@679697080]
=== Inputs ===
=== Succesors ===
=== Usages ===
?213 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j204 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 4]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
rawvalue: 12
stableDimension: 0
stamp: i64 [12]
stampKind: i64
value: long[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
?213 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i205 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 9]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2]
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
?213 i211 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
v197 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533808883141386669
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 39
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v207 
=== Succesors ===
next: i286 
=== Usages ===
v215 v219 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v207 #next: i286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i286 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.status
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.getIntVolatile(Object, long) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 3]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v512 
lastLocationAccess: - 
=== Succesors ===
next: i287 
=== Usages ===
i211 i287 ?213 
=== Predecessor ===
v208 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v512 lastLocationAccess: - #next: i287  <|@  <|@
f <@~|@floating>@ <|@
tid i211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i286 
y: i205 
=== Succesors ===
=== Usages ===
i287 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i286 y: i205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i287 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.weakCompareAndSetInt(Object, long, int, int) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 18]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v512 
lastLocationAccess: - 
expectedValue: i286 
newValue: i211 
stateAfter: - 
=== Succesors ===
next: v221 
=== Usages ===
v214 
=== Predecessor ===
i286 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v512 lastLocationAccess: - expectedValue: i286 newValue: i211 stateAfter: - #next: v221  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i287 
y: i50 
=== Succesors ===
=== Usages ===
v221 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i287 y: i50  <|@  <|@
f <@*|@fixed>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v214 
=== Succesors ===
trueSuccessor: v220 
falseSuccessor: v215 
=== Usages ===
=== Predecessor ===
i287 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v214 #trueSuccessor: v220 #falseSuccessor: v215  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529305283514016173
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
v221 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v349  <|@  <|@
tid ?213 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: ifeq
code: ResolvedJavaMethodBytecode<Unsafe.getAndBitwiseAndInt(Object, long, int)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.Unsafe.weakCompareAndSetInt(Object, long, int, int) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 18]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
sourceFile: Unsafe.java
sourceLine: 3233
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?209 
values: i50 a203 a280 j204 - i205 i286 
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?209 values: i50 a203 a280 j204 - i205 i286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
stateBefore: ?213 
=== Succesors ===
next: v219 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?213 #next: v219  <|@  <|@
f <@*|@fixed>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
loopBegin: v208 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v208  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3235) [bci: 24]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v208 
=== Succesors ===
next: a484 
=== Usages ===
=== Predecessor ===
v221 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v208 #next: a484  <|@  <|@
f <@~|@floating>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a279 
=== Succesors ===
=== Usages ===
a484 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a279  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a484 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.waiter
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 27]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v513 
lastLocationAccess: - 
=== Succesors ===
next: v224 
=== Usages ===
a292 
=== Predecessor ===
v215 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v513 lastLocationAccess: - #next: v224  <|@  <|@
f <@~|@floating>@ <|@
tid a292 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 27]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a484 
=== Succesors ===
=== Usages ===
v293 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a484  <|@  <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
referencedType: [null]
returnStamp: void
signature: [UnresolvedJavaType<Ljava/lang/Thread;>]
stamp: void
targetMethod: HotSpotMethod<LockSupport.unpark(Thread)>
=== Inputs ===
arguments: a292 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a292  <|@  <|@
tid ?408 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 645
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?230 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
bci: 30
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
polymorphic: false
stamp: void
targetMethod: Direct#LockSupport.unpark
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v293 
stateDuring: ?408 
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
a484 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v293 stateDuring: ?408 #next: v231  <|@  <|@
f <@*|@fixed>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
v224 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 4594090062091211228
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1063) [bci: 17]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v65  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
v53 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B29" "B38" "B37" "B33" "B31" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v63 v65 v231 v232 v233 
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v63 v65 v231 v232 v233 #next: v67  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:148) [bci: 81]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v395 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v395  <|@  <|@
tid ?48 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?41 
values: a260 
=== Succesors ===
=== Usages ===
?177 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?41 values: a260  <|@  <|@
f <@~|@floating>@ <|@
tid a264 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a480 
=== Succesors ===
=== Usages ===
?177 ?151 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a480  <|@  <|@
tid ?177 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1059
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?48 
values: a264 
=== Succesors ===
=== Usages ===
?151 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?48 values: a264  <|@  <|@
tid ?151 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: iload_1
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.tryRelease(int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
sourceFile: ReentrantLock.java
sourceLine: 173
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?177 
values: i267 a264 i40 
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?177 values: i267 a264 i40  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
reason: UnreachedCode
speculation: {0x0000000000002814[index: 320, len: 20, hash: 0xadceab53]: UnreachedCode@6[HotSpotMethod<ReentrantLock$Sync.tryRelease(int)>, 17]}
stamp: void
=== Inputs ===
stateBefore: ?151 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v397 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?151  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v436 
=== Usages ===
=== Predecessor ===
v370 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v436  <|@  <|@
f <@~|@floating>@ <|@
tid j438 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
rawvalue: 9620
stableDimension: 0
stamp: i64 [9620]
stampKind: i64
value: long[9620|0x2594]
=== Inputs ===
=== Succesors ===
=== Usages ===
j434 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i437 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
rawvalue: -93971
stableDimension: 0
stamp: i32 [-93971]
stampKind: i32
value: int[-93971|0xfffffffffffe90ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i433 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
v369 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B12" "B41" "B14" "B16" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: i32 [-100115 - -93971] bits:1...10xxxxxx0011101101
valueDescription: i32
=== Inputs ===
merge: v429 
values: i431 i437 i440 i442 i444 i446 i448 
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v429 values: i431 i437 i440 i442 i444 i446 i448  <|@  <|@
f <@~|@floating>@ <|@
tid j434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: i64 [8340 - 9620] bits:0...0100xxxx0010100
valueDescription: i64
=== Inputs ===
merge: v429 
values: j432 j438 j432 j432 j432 j432 j449 
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v429 values: j432 j438 j432 j432 j432 j432 j449  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v430 v436 v439 v441 v443 v445 v447 
=== Succesors ===
next: v435 
=== Usages ===
i433 j434 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v430 v436 v439 v441 v443 v445 v447 #next: v435  <|@  <|@
tid ?147 <|@
d <@d|@=== Debug Properties ===
bci: 1
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.lockedWrite(char[], int, int)>
localsSize: 4
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 151
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?148 
values: a1 a2 i3 i4 
=== Succesors ===
=== Usages ===
?144 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a1 a2 i3 i4  <|@  <|@
tid ?144 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: ifeq
code: ResolvedJavaMethodBytecode<StreamEncoder.ensureOpen()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 1]
at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
sourceFile: StreamEncoder.java
sourceLine: 51
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?147 
values: i252 a1 
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?147 values: i252 a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
stateBefore: ?144 
actionAndReason: i433 
speculation: j434 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?144 actionAndReason: i433 speculation: j434  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:136) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v517 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v517  <|@  <|@
f <@*|@fixed>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 363
mayConvertToGuard: true
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 10]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0x8cd0a7f6]: UnreachedCode@6[HotSpotMethod<StreamEncoder.write(char[], int, int)>, 54]}
stamp: void
=== Inputs ===
stateBefore: ?5 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?5  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44d0a7e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v5|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v7|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction NULLCHECK address: [v7|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOV input: [v8|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v7|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v12|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v7|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = COMPRESSPOINTER (input: v9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 12], y: v21|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v10|QWORD[.], ~newValue: v9|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|QWORD[.], y: v14|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV input: [v7|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = INC value: v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 16], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVZXB input: [v0|QWORD[.] + 26] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction v27|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction v28|DWORD = MOV input: [v27|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30] <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|QWORD[.], y: [v30|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v27|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v33|QWORD, temp2: v34|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v27|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = DEC value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|DWORD[_] * 8 + 16], y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 0.8633858966180564 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B38 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605951908349848457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|DWORD[_], y: v36|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B39" 
    xhandlers
    flags 
    probability 4605946476645549382
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 4594090062091211228
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B29" "B38" "B37" "B33" "B31" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4558701288473823891
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[_] = MOV input: [v36|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|DWORD[_], y: v37|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 4558140721140330403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4544093902097985275
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v37|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 4543132494893730501
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v10|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.7455315145813735 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4539431807497542773
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4532132168167648385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533808883141386669
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV input: [v37|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = AND x: v39|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v37|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v40|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529305283514016173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v38|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v39|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v38|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v38|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v41|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV input: [v37|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-97043|0xfffffffffffe84ed], long[8340|0x2094]] destination: B16 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101139 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v28|DWORD 
locals: v44|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v44|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-94995|0xfffffffffffe8ced], long[8340|0x2094]] destination: B12 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-100115|0xfffffffffffe78ed], long[8980|0x2314]] destination: B22 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-99091|0xfffffffffffe7ced], long[8340|0x2094]] destination: B20 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102419 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v15|DWORD 
locals: v10|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-98067|0xfffffffffffe80ed], long[8340|0x2094]] destination: B18 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92947 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-96019|0xfffffffffffe88ed], long[8340|0x2094]] destination: B14 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-93971|0xfffffffffffe90ed], long[9620|0x2594]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B12" "B41" "B14" "B16" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|DWORD, v46|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: v24|DWORD 
locals: v0|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // java.io.Writer.lock:java.lang.Object
     4: astore        4
     6: aload         4
     8: instanceof    #49         // jdk.internal.misc.InternalLock
    11: ifeq          54
    14: aload         4
    16: checkcast     #49         // jdk.internal.misc.InternalLock
    19: astore        5
    21: aload         5
    23: invokevirtual #10         // jdk.internal.misc.InternalLock.lock:()void
    26: aload_0       
    27: aload_1       
    28: iload_2       
    29: iload_3       
    30: invokevirtual #15         // lockedWrite:(char[], int, int)void
    33: aload         5
    35: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    38: goto          51
    41: astore        6
    43: aload         5
    45: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    48: aload         6
    50: athrow        
    51: goto          81
    54: aload         4
    56: dup           
    57: astore        6
    59: monitorenter  
    60: aload_0       
    61: aload_1       
    62: iload_2       
    63: iload_3       
    64: invokevirtual #15         // lockedWrite:(char[], int, int)void
    67: aload         6
    69: monitorexit   
    70: goto          81
    73: astore        7
    75: aload         6
    77: monitorexit   
    78: aload         7
    80: athrow        
    81: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i471 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i471  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# sun.nio.cs.StreamEncoder
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v501 ?147 ?17 v258 v505 ?144 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# char[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?147 ?17 v506 v258 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?147 ?17 v124 v127 i131 v258 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?147 ?17 v129 i131 v136 v258 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<StreamEncoder.write(char[], int, int)>
localsSize: 8
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 135
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 
=== Succesors ===
=== Usages ===
v517 i471 a475 v497 v473 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4  <|@  <|@
f <@~|@floating>@ <|@
tid v506 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i471 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i471 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-65035|0xffffffffffff01f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 10]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v506 
lastLocationAccess: - 
=== Succesors ===
next: a472 
=== Usages ===
v127 v132 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v506 lastLocationAccess: - #next: a472  <|@  <|@
f <@~|@floating>@ <|@
tid v501 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a472 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a472 <|@
result v5|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Writer.lock
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 1]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v501 
lastLocationAccess: - 
=== Succesors ===
next: v473 
=== Usages ===
a238 v502 v515 
=== Predecessor ===
i471 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v501 lastLocationAccess: - #next: v473  <|@  <|@
f <@~|@floating>@ <|@
tid v515 <|@
result [v5|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a472 
=== Succesors ===
=== Usages ===
v473 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a472  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-92947|0xfffffffffffe94ed]
deoptSpeculation: long[20|0x14]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:136) [bci: 8]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v515 
lastLocationAccess: - 
=== Succesors ===
next: v366 
=== Usages ===
v490 
=== Predecessor ===
a472 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v515 lastLocationAccess: - #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid v489 <|@
result meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:136) [bci: 8]
rawvalue: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v490 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:136) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v473 
y: v489 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v473 y: v489  <|@  <|@
f <@*|@fixed>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:136) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v490 
=== Succesors ===
trueSuccessor: v364 
falseSuccessor: v486 
=== Usages ===
=== Predecessor ===
v473 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v490 #trueSuccessor: v364 #falseSuccessor: v486  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44d0a7e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v5|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:136) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a474 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a474  <|@  <|@
f <@~|@floating>@ <|@
tid v502 <|@
result [v5|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a472 
=== Succesors ===
=== Usages ===
a474 a479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a472  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a474 <|@
result v6|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: InternalLock.lock
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v502 
lastLocationAccess: - 
=== Succesors ===
next: a475 
=== Usages ===
v503 
=== Predecessor ===
v364 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v502 lastLocationAccess: - #next: a475  <|@  <|@
f <@~|@floating>@ <|@
tid v503 <|@
result [v6|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a474 
=== Succesors ===
=== Usages ===
a475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a475 <|@
result v7|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-61963|0xffffffffffff0df5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 1]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v503 
lastLocationAccess: - 
=== Succesors ===
next: v497 
=== Usages ===
a245 v504 v514 v516 
=== Predecessor ===
a474 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v503 lastLocationAccess: - #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid v516 <|@
result [v7|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a475 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a475  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?5 
object: v516 
=== Succesors ===
next: j476 
=== Usages ===
=== Predecessor ===
a475 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: v516 #next: j476  <|@  <|@
f <@~|@floating>@ <|@
tid j90 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
- >@ <|@
instruction <@CurrentJavaThread|@jdk.graal.compiler.hotspot.nodes.CurrentJavaThreadNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v498 <|@
result [r15|QWORD + 896] <|@
d <@d|@=== Debug Properties ===
displacement: 896
stamp: void*
stride: S1
=== Inputs ===
base: j90 
index: - 
=== Succesors ===
=== Usages ===
j476 j482 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j90 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j476 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: JavaThread::_vthread
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v498 
lastLocationAccess: - 
=== Succesors ===
next: a477 
=== Usages ===
v499 
=== Predecessor ===
v497 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v498 lastLocationAccess: - #next: a477  <|@  <|@
f <@~|@floating>@ <|@
tid v499 <|@
result [v8|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j476 
index: - 
=== Succesors ===
=== Usages ===
a477 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j476 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a477 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
accessStamp: a! java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: _vthread OopHandle contents
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: a! java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v499 
lastLocationAccess: - 
=== Succesors ===
next: i248 
=== Usages ===
v108 a303 v455 
=== Predecessor ===
j476 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v499 lastLocationAccess: - #next: i248  <|@  <|@
f <@~|@floating>@ <|@
tid v504 <|@
result [v7|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a475 
=== Succesors ===
=== Usages ===
i248 i299 v300 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a475  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 5]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v196 v214 v75 v302 v302 v302 i248 v100 v116 v124 v129 v134 v136 v145 ?213 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 4]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v159 ?209 v301 ?405 v302 i248 i115 ?151 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i248 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.compareAndSetInt(Object, long, int, int) [bci: -1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState(AbstractQueuedSynchronizer.java:569) [bci: 9]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 7]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v504 
lastLocationAccess: - 
expectedValue: i50 
newValue: i40 
stateAfter: - 
=== Succesors ===
next: v103 
=== Usages ===
v100 
=== Predecessor ===
a477 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v504 lastLocationAccess: - expectedValue: i50 newValue: i40 stateAfter: - #next: v103  <|@  <|@
f <@~|@floating>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 10]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i248 
y: i50 
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i248 y: i50  <|@  <|@
f <@~|@floating>@ <|@
tid a245 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 1]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a475 
=== Succesors ===
=== Usages ===
v455 ?121 v301 ?73 ?405 v302 ?114 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a475  <|@  <|@
f <@~|@floating>@ <|@
tid v514 <|@
result [v7|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a475 
=== Succesors ===
=== Usages ===
a478 v304 v453 v455 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a475  <|@  <|@
f <@~|@floating>@ <|@
tid a238 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 1]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a472 
=== Succesors ===
=== Usages ===
?25 ?17 ?148 ?34 ?41 ?17 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a472  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 10]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
profileData: PROFILED designatedSuccessorProbability: 0.13475912048564476
stamp: void
=== Inputs ===
condition: v100 
=== Succesors ===
trueSuccessor: v102 
falseSuccessor: v101 
=== Usages ===
=== Predecessor ===
i248 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v100 #trueSuccessor: v102 #falseSuccessor: v101  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v7|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction NULLCHECK address: [v7|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOV input: [v8|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v7|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v12|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 20]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a478 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a478 <|@
result v13|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 21]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v514 
lastLocationAccess: - 
=== Succesors ===
next: v111 
=== Usages ===
a298 
=== Predecessor ===
v102 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v514 lastLocationAccess: - #next: v111  <|@  <|@
f <@~|@floating>@ <|@
tid a298 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 21]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a478 
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a478  <|@  <|@
f <@~|@floating>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 25]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a298 
y: a477 
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a298 y: a477  <|@  <|@
tid ?17 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.write(char[], int, int)>
localsSize: 8
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
sourceFile: StreamEncoder.java
sourceLine: 137
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 a238 a238 
=== Succesors ===
=== Usages ===
?25 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4 a238 a238  <|@  <|@
tid ?25 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<InternalLock.lock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
sourceFile: InternalLock.java
sourceLine: 74
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?17 
values: a238 
=== Succesors ===
=== Usages ===
?123 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?17 values: a238  <|@  <|@
tid ?123 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 322
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?25 
=== Succesors ===
=== Usages ===
?73 ?121 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?25  <|@  <|@
f <@*|@fixed>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 25]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
profileData: PROFILED designatedSuccessorProbability: 0.9997028739455198
stamp: void
=== Inputs ===
condition: v108 
=== Succesors ===
trueSuccessor: v110 
falseSuccessor: v109 
=== Usages ===
=== Predecessor ===
a478 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v108 #trueSuccessor: v110 #falseSuccessor: v109  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|QWORD[.], y: v14|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 28]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: i299 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i299  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i299 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 29]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v504 
lastLocationAccess: - 
=== Succesors ===
next: v403 
=== Usages ===
i115 ?114 
=== Predecessor ===
v110 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v504 lastLocationAccess: - #next: v403  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 33]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: i32
=== Inputs ===
x: i299 
y: i40 
=== Succesors ===
=== Usages ===
v116 v300 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i299 y: i40  <|@  <|@
f <@~|@floating>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i115 
y: i50 
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i115 y: i50  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v116 
=== Succesors ===
trueSuccessor: v401 
falseSuccessor: v402 
=== Usages ===
=== Predecessor ===
i299 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v116 #trueSuccessor: v401 #falseSuccessor: v402  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV input: [v7|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = INC value: v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v400 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v400  <|@  <|@
tid ?121 <|@
d <@d|@=== Debug Properties ===
bci: 1
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 152
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?123 
values: a245 
=== Succesors ===
=== Usages ===
?114 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?123 values: a245  <|@  <|@
tid ?114 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<ReentrantLock$NonfairSync.initialTryLock()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 29]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
sourceFile: ReentrantLock.java
sourceLine: 229
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?121 
values: i299 a245 
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?121 values: i299 a245  <|@  <|@
f <@*|@fixed>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0xbb20e35b]: UnreachedCode@6[HotSpotMethod<ReentrantLock$NonfairSync.initialTryLock()>, 39]}
stamp: void
=== Inputs ===
stateBefore: ?114 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?114  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102419 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v15|DWORD 
locals: v10|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:232) [bci: 49]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v300 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v300  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractQueuedSynchronizer.state
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:554) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:232) [bci: 51]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v504 
lastLocationAccess: - 
value: i115 
stateAfter: - 
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v504 lastLocationAccess: - value: i115 stateAfter: - #next: v122  <|@  <|@
f <@*|@fixed>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 4]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
v300 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 16], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:235) [bci: 56]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: i72 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i72  <|@  <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/concurrent/locks/ReentrantLock$NonfairSync;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)>
=== Inputs ===
arguments: a245 i40 
=== Succesors ===
=== Usages ===
i72 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a245 i40  <|@  <|@
tid ?73 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
sourceFile: ReentrantLock.java
sourceLine: 153
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?123 
values: a245 
=== Succesors ===
=== Usages ===
?405 ?406 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?123 values: a245  <|@  <|@
tid ?405 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.acquire(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 989
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?73 
values: a245 i40 
=== Succesors ===
=== Usages ===
i72 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?73 values: a245 i40  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i72 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#ReentrantLock$NonfairSync.tryAcquire
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v301 
stateDuring: ?405 
=== Succesors ===
next: v78 
=== Usages ===
v75 
=== Predecessor ===
v109 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v301 stateDuring: ?405 #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 5]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i72 
y: i50 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i72 y: i50  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 5]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
profileData: PROFILED designatedSuccessorProbability: 0.7455315145813735
stamp: void
=== Inputs ===
condition: v75 
=== Succesors ===
trueSuccessor: v77 
falseSuccessor: v76 
=== Usages ===
=== Predecessor ===
i72 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v75 #trueSuccessor: v77 #falseSuccessor: v76  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v10|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.7455315145813735 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4539431807497542773
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 8]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: i82 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i82  <|@  <|@
f <@~|@floating>@ <|@
tid a79 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 9]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j80 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 14]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;, resolved>, UnresolvedJavaType<Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<long>]
stamp: void
targetMethod: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)>
=== Inputs ===
arguments: a245 a79 i40 i50 i50 i50 j80 
=== Succesors ===
=== Usages ===
i82 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a245 a79 i40 i50 i50 i50 j80  <|@  <|@
tid ?406 <|@
d <@d|@=== Debug Properties ===
bci: 15
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.acquire(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 990
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?73 
=== Succesors ===
=== Usages ===
i82 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?73  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i82 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 15
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractQueuedSynchronizer.acquire
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v302 
stateDuring: ?406 
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v302 stateDuring: ?406 #next: v89  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:991) [bci: 19]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
i82 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4532132168167648385
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:991) [bci: 19]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v86  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
v76 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 13]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v453 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
precise: true
stamp: void
=== Inputs ===
address: v514 
value: - 
stateBefore: - 
=== Succesors ===
next: v304 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v514 value: - stateBefore: - #next: v304  <|@  <|@
f <@~|@floating>@ <|@
tid a303 <|@
result v21|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
op: Compress
stamp: n! java.lang.Thread
=== Inputs ===
value: a477 
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractOwnableSynchronizer.exclusiveOwnerThread
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v514 
lastLocationAccess: - 
value: a303 
stateAfter: - 
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v514 lastLocationAccess: - value: a303 stateAfter: - #next: v455  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
precise: false
stamp: void
=== Inputs ===
address: v514 
value: a477 
object: a245 
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v514 value: a477 object: a245 #next: v84  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
v455 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v7|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = COMPRESSPOINTER (input: v9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 12], y: v21|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v10|QWORD[.], ~newValue: v9|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v84 v86 v89 v122 
=== Succesors ===
next: i251 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v84 v86 v89 v122 #next: i251  <|@  <|@
f <@~|@floating>@ <|@
tid v505 <|@
result [v0|QWORD[.] + 26] <|@
d <@d|@=== Debug Properties ===
displacement: 26
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i251 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i251 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: StreamEncoder.closed
memoryOrder: VOLATILE
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 1]
at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v505 
lastLocationAccess: - 
=== Succesors ===
next: v370 
=== Usages ===
i252 
=== Predecessor ===
v85 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v505 lastLocationAccess: - #next: v370  <|@  <|@
f <@~|@floating>@ <|@
tid i252 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 1]
at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
resultBits: 32
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
value: i251 
=== Succesors ===
=== Usages ===
v145 ?144 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i251  <|@  <|@
f <@~|@floating>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i252 
y: i50 
=== Succesors ===
=== Usages ===
v370 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i252 y: i50  <|@  <|@
tid ?148 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.write(char[], int, int)>
localsSize: 8
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 139
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - - - - - a238 
=== Succesors ===
=== Usages ===
?140 ?147 ?407 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - a238  <|@  <|@
f <@*|@fixed>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v145 
=== Succesors ===
trueSuccessor: v368 
falseSuccessor: v369 
=== Usages ===
=== Predecessor ===
i251 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v145 #trueSuccessor: v368 #falseSuccessor: v369  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVZXB input: [v0|QWORD[.] + 26] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:53) [bci: 17]
at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v374 
=== Usages ===
=== Predecessor ===
v370 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v374  <|@  <|@
f <@~|@floating>@ <|@
tid j432 <|@
result long[8340|0x2094] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
rawvalue: 8340
stableDimension: 0
stamp: i64 [8340]
stampKind: i64
value: long[8340|0x2094]
=== Inputs ===
=== Succesors ===
=== Usages ===
j434 j434 j434 j434 j434 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i50 
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i50  <|@  <|@
f <@*|@fixed>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v124 
=== Succesors ===
trueSuccessor: v372 
falseSuccessor: v373 
=== Usages ===
=== Predecessor ===
v368 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v124 #trueSuccessor: v372 #falseSuccessor: v373  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v430 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v430  <|@  <|@
f <@~|@floating>@ <|@
tid i431 <|@
result int[-94995|0xfffffffffffe8ced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
rawvalue: -94995
stableDimension: 0
stamp: i32 [-94995]
stampKind: i32
value: int[-94995|0xfffffffffffe8ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i433 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
v372 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-94995|0xfffffffffffe8ced], long[8340|0x2094]] destination: B12 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 8]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v378 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v378  <|@  <|@
f <@~|@floating>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 11]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i471 
y: i3 
=== Succesors ===
=== Usages ===
v378 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i471 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 11]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v127 
=== Succesors ===
trueSuccessor: v376 
falseSuccessor: v377 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v127 #trueSuccessor: v376 #falseSuccessor: v377  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 11]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v439 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v439  <|@  <|@
f <@~|@floating>@ <|@
tid i440 <|@
result int[-96019|0xfffffffffffe88ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
rawvalue: -96019
stableDimension: 0
stamp: i32 [-96019]
stampKind: i32
value: int[-96019|0xfffffffffffe88ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i433 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
v376 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-96019|0xfffffffffffe88ed], long[8340|0x2094]] destination: B14 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 14]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v382 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 15]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i50 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i4 y: i50  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 15]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v129 
=== Succesors ===
trueSuccessor: v380 
falseSuccessor: v381 
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v129 #trueSuccessor: v380 #falseSuccessor: v381  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 15]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v441 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v441  <|@  <|@
f <@~|@floating>@ <|@
tid i442 <|@
result int[-97043|0xfffffffffffe84ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
rawvalue: -97043
stableDimension: 0
stamp: i32 [-97043]
stampKind: i32
value: int[-97043|0xfffffffffffe84ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i433 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
v380 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-97043|0xfffffffffffe84ed], long[8340|0x2094]] destination: B16 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 18]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v386  <|@  <|@
f <@~|@floating>@ <|@
tid i131 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 20]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: i32
=== Inputs ===
x: i3 
y: i4 
=== Succesors ===
=== Usages ===
v132 v134 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i3 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 23]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i471 
y: i131 
=== Succesors ===
=== Usages ===
v386 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i471 y: i131  <|@  <|@
f <@*|@fixed>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 23]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v132 
=== Succesors ===
trueSuccessor: v384 
falseSuccessor: v385 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v132 #trueSuccessor: v384 #falseSuccessor: v385  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 23]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v443 
=== Usages ===
=== Predecessor ===
v386 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v443  <|@  <|@
f <@~|@floating>@ <|@
tid i444 <|@
result int[-98067|0xfffffffffffe80ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
rawvalue: -98067
stableDimension: 0
stamp: i32 [-98067]
stampKind: i32
value: int[-98067|0xfffffffffffe80ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i433 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
v384 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-98067|0xfffffffffffe80ed], long[8340|0x2094]] destination: B18 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 26]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v390 
=== Usages ===
=== Predecessor ===
v386 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v390  <|@  <|@
f <@~|@floating>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 29]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i131 
y: i50 
=== Succesors ===
=== Usages ===
v390 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i131 y: i50  <|@  <|@
f <@*|@fixed>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 29]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v134 
=== Succesors ===
trueSuccessor: v388 
falseSuccessor: v389 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v134 #trueSuccessor: v388 #falseSuccessor: v389  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 29]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v445 
=== Usages ===
=== Predecessor ===
v390 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v445  <|@  <|@
f <@~|@floating>@ <|@
tid i446 <|@
result int[-99091|0xfffffffffffe7ced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
rawvalue: -99091
stableDimension: 0
stamp: i32 [-99091]
stampKind: i32
value: int[-99091|0xfffffffffffe7ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i433 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
v388 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-99091|0xfffffffffffe7ced], long[8340|0x2094]] destination: B20 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:155) [bci: 40]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v394 
=== Usages ===
=== Predecessor ===
v390 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v394  <|@  <|@
f <@~|@floating>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:155) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i50 
=== Succesors ===
=== Usages ===
v394 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i4 y: i50  <|@  <|@
f <@*|@fixed>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:155) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v136 
=== Succesors ===
trueSuccessor: v392 
falseSuccessor: v393 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v136 #trueSuccessor: v392 #falseSuccessor: v393  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:155) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v447 
=== Usages ===
=== Predecessor ===
v394 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v447  <|@  <|@
f <@~|@floating>@ <|@
tid j449 <|@
result long[8980|0x2314] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
rawvalue: 8980
stableDimension: 0
stamp: i64 [8980]
stampKind: i64
value: long[8980|0x2314]
=== Inputs ===
=== Succesors ===
=== Usages ===
j434 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i448 <|@
result int[-100115|0xfffffffffffe78ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
rawvalue: -100115
stableDimension: 0
stamp: i32 [-100115]
stampKind: i32
value: int[-100115|0xfffffffffffe78ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i433 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
v392 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-100115|0xfffffffffffe78ed], long[8980|0x2314]] destination: B22 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 45]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
v394 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v139  <|@  <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Lsun/nio/cs/StreamEncoder;, resolved>, UnresolvedJavaType<[C>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)>
=== Inputs ===
arguments: a1 a2 i3 i4 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 i3 i4  <|@  <|@
tid ?407 <|@
d <@d|@=== Debug Properties ===
bci: 49
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.lockedWrite(char[], int, int)>
localsSize: 4
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 158
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?148 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
bci: 49
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
polymorphic: false
stamp: void
targetMethod: Direct#StreamEncoder.implWrite
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v258 
stateDuring: ?407 
=== Succesors ===
next: a479 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v258 stateDuring: ?407 #next: a479  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a479 <|@
result v26|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: InternalLock.lock
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v502 
lastLocationAccess: - 
=== Succesors ===
next: a480 
=== Usages ===
a260 v507 
=== Predecessor ===
v139 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v502 lastLocationAccess: - #next: a480  <|@  <|@
tid ?140 <|@
d <@d|@=== Debug Properties ===
bci: 52
bytecode: return
code: ResolvedJavaMethodBytecode<StreamEncoder.lockedWrite(char[], int, int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
sourceFile: StreamEncoder.java
sourceLine: 159
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?148 
=== Succesors ===
=== Usages ===
i267 a480 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?148  <|@  <|@
f <@~|@floating>@ <|@
tid v507 <|@
result [v26|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a479 
=== Succesors ===
=== Usages ===
a480 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a479  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a480 <|@
result v27|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-66827|0xfffffffffffefaf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?140 
guard: - 
address: v507 
lastLocationAccess: - 
=== Succesors ===
next: i267 
=== Usages ===
a264 v508 v509 v510 
=== Predecessor ===
a479 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?140 guard: - address: v507 lastLocationAccess: - #next: i267  <|@  <|@
f <@~|@floating>@ <|@
tid v508 <|@
result [v27|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a480 
=== Succesors ===
=== Usages ===
i267 v271 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a480  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i267 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-67851|0xfffffffffffef6f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?140 
guard: - 
address: v508 
lastLocationAccess: - 
=== Succesors ===
next: a481 
=== Usages ===
i176 v159 ?151 
=== Predecessor ===
a480 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?140 guard: - address: v508 lastLocationAccess: - #next: a481  <|@  <|@
f <@~|@floating>@ <|@
tid v509 <|@
result [v27|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a480 
=== Succesors ===
=== Usages ===
a481 v295 v452 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a480  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a481 <|@
result v29|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 8]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v509 
lastLocationAccess: - 
=== Succesors ===
next: j482 
=== Usages ===
a270 
=== Predecessor ===
i267 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v509 lastLocationAccess: - #next: j482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j482 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: JavaThread::_vthread
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v498 
lastLocationAccess: - 
=== Succesors ===
next: a483 
=== Usages ===
v500 
=== Predecessor ===
a481 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v498 lastLocationAccess: - #next: a483  <|@  <|@
f <@~|@floating>@ <|@
tid v500 <|@
result [v30|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j482 
index: - 
=== Succesors ===
=== Usages ===
a483 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j482 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a483 <|@
d <@d|@=== Debug Properties ===
accessStamp: a! java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: _vthread OopHandle contents
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: a! java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v500 
lastLocationAccess: - 
=== Succesors ===
next: v398 
=== Usages ===
v157 
=== Predecessor ===
j482 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v500 lastLocationAccess: - #next: v398  <|@  <|@
f <@~|@floating>@ <|@
tid a270 <|@
result v31|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 8]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a481 
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a481  <|@  <|@
f <@~|@floating>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a270 
y: a483 
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a270 y: a483  <|@  <|@
f <@~|@floating>@ <|@
tid a260 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
op: Uncompress
stamp: a java.util.concurrent.locks.ReentrantLock
=== Inputs ===
value: a479 
=== Succesors ===
=== Usages ===
?48 ?57 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a479  <|@  <|@
tid ?34 <|@
d <@d|@=== Debug Properties ===
bci: 35
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.write(char[], int, int)>
localsSize: 8
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
sourceFile: StreamEncoder.java
sourceLine: 141
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - - - - - a238 
=== Succesors ===
=== Usages ===
?41 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - a238  <|@  <|@
tid ?41 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<InternalLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
sourceFile: InternalLock.java
sourceLine: 78
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?34 
values: a238 
=== Succesors ===
=== Usages ===
?57 ?48 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?34 values: a238  <|@  <|@
f <@*|@fixed>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v157 
=== Succesors ===
trueSuccessor: v396 
falseSuccessor: v397 
=== Usages ===
=== Predecessor ===
a483 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v157 #trueSuccessor: v396 #falseSuccessor: v397  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction v27|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction v28|DWORD = MOV input: [v27|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30] <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|QWORD[.], y: [v30|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176) [bci: 25]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v163 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v163  <|@  <|@
f <@~|@floating>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176) [bci: 26]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i267 
y: i40 
=== Succesors ===
=== Usages ===
v54 v163 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i267 y: i40  <|@  <|@
f <@*|@fixed>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:177) [bci: 36]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
profileData: PROFILED designatedSuccessorProbability: 0.8652302759969847
stamp: void
=== Inputs ===
condition: v159 
=== Succesors ===
trueSuccessor: v162 
falseSuccessor: v161 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v159 #trueSuccessor: v162 #falseSuccessor: v161  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 39]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v452 
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v452  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
precise: true
stamp: void
=== Inputs ===
address: v509 
value: - 
stateBefore: - 
=== Succesors ===
next: v295 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v509 value: - stateBefore: - #next: v295  <|@  <|@
f <@~|@floating>@ <|@
tid a309 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
rawvalue: null
stableDimension: 0
stamp: n java.lang.Object NULL
stampKind: n java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractOwnableSynchronizer.exclusiveOwnerThread
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v509 
lastLocationAccess: - 
value: a309 
stateAfter: - 
=== Succesors ===
next: v169 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v509 lastLocationAccess: - value: a309 stateAfter: - #next: v169  <|@  <|@
f <@*|@fixed>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v168 
=== Predecessor ===
v295 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v27|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v33|QWORD, temp2: v34|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v27|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v167 
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v167  <|@  <|@
f <@*|@fixed>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v168 
=== Predecessor ===
v161 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v167 v169 
=== Succesors ===
next: v271 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v167 v169 #next: v271  <|@  <|@
f <@~|@floating>@ <|@
tid i175 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i176 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i176 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: i32
=== Inputs ===
x: i267 
y: i175 
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i267 y: i175  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractQueuedSynchronizer.state
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:554) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 46]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v508 
lastLocationAccess: - 
value: i176 
stateAfter: - 
=== Succesors ===
next: v54 
=== Usages ===
=== Predecessor ===
v168 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v508 lastLocationAccess: - value: i176 stateAfter: - #next: v54  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 5]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
profileData: PROFILED designatedSuccessorProbability: 0.8633858966180564
stamp: void
=== Inputs ===
condition: v159 
=== Succesors ===
trueSuccessor: v52 
falseSuccessor: v53 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v159 #trueSuccessor: v52 #falseSuccessor: v53  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = DEC value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|DWORD[_] * 8 + 16], y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 0.8633858966180564 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B38 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605951908349848457
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 8]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: a274 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a274  <|@  <|@
f <@~|@floating>@ <|@
tid v510 <|@
result [v27|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a480 
=== Succesors ===
=== Usages ===
a274 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a480  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a274 <|@
result v36|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.head
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v510 
lastLocationAccess: - 
=== Succesors ===
next: v182 
=== Usages ===
v511 v450 
=== Predecessor ===
v52 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v510 lastLocationAccess: - #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a274 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a274  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
profileData: PROFILED designatedSuccessorProbability: 0.9993015402267503
stamp: void
=== Inputs ===
condition: v450 
=== Succesors ===
trueSuccessor: v181 
falseSuccessor: v180 
=== Usages ===
=== Predecessor ===
a274 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v450 #trueSuccessor: v181 #falseSuccessor: v180  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|DWORD[_], y: v36|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B39" 
    xhandlers
    flags 
    probability 4605946476645549382
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v63 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v63  <|@  <|@
f <@*|@fixed>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
v181 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4558701288473823891
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 4]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: a279 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a279  <|@  <|@
f <@~|@floating>@ <|@
tid v511 <|@
result [v36|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a274 
=== Succesors ===
=== Usages ===
a279 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a274  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a279 <|@
result v37|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.next
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v511 
lastLocationAccess: - 
=== Succesors ===
next: v192 
=== Usages ===
a280 v451 v512 v513 
=== Predecessor ===
v180 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v511 lastLocationAccess: - #next: v192  <|@  <|@
f <@~|@floating>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a279 
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a279  <|@  <|@
f <@*|@fixed>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
profileData: PROFILED designatedSuccessorProbability: 0.899215972285532
stamp: void
=== Inputs ===
condition: v451 
=== Succesors ===
trueSuccessor: v191 
falseSuccessor: v187 
=== Usages ===
=== Predecessor ===
a279 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v451 #trueSuccessor: v191 #falseSuccessor: v187  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[_] = MOV input: [v36|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|DWORD[_], y: v37|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 4558140721140330403
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v233 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v233  <|@  <|@
f <@*|@fixed>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
v191 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4544093902097985275
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 13]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: i284 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i284  <|@  <|@
f <@~|@floating>@ <|@
tid v512 <|@
result [v37|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a279 
=== Succesors ===
=== Usages ===
i286 i287 i284 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a279  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i284 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.status
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v512 
lastLocationAccess: - 
=== Succesors ===
next: v200 
=== Usages ===
v196 
=== Predecessor ===
v187 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v512 lastLocationAccess: - #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i284 
y: i50 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i284 y: i50  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
profileData: PROFILED designatedSuccessorProbability: 0.89280868385346
stamp: void
=== Inputs ===
condition: v196 
=== Succesors ===
trueSuccessor: v199 
falseSuccessor: v197 
=== Usages ===
=== Predecessor ===
i284 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v196 #trueSuccessor: v199 #falseSuccessor: v197  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v37|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 4543132494893730501
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v232 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v232  <|@  <|@
f <@*|@fixed>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
v199 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 20]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v207 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v207  <|@  <|@
tid ?57 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?41 
values: a260 
=== Succesors ===
=== Usages ===
?230 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?41 values: a260  <|@  <|@
tid ?230 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1060
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?57 
=== Succesors ===
=== Usages ===
?206 ?408 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?57  <|@  <|@
f <@~|@floating>@ <|@
tid a280 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
op: Uncompress
stamp: a java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
=== Inputs ===
value: a279 
=== Succesors ===
=== Usages ===
?206 ?213 ?209 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a279  <|@  <|@
tid ?206 <|@
d <@d|@=== Debug Properties ===
bci: 22
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 644
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?230 
values: - a280 
=== Succesors ===
=== Usages ===
?209 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?230 values: - a280  <|@  <|@
tid ?209 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer$Node.getAndUnsetStatus(int)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 481
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?206 
values: a280 i40 
=== Succesors ===
=== Usages ===
?213 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?206 values: a280 i40  <|@  <|@
f <@~|@floating>@ <|@
tid a203 <|@
result Object[Unsafe@679697080] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
rawvalue: Unsafe@679697080
stableDimension: 0
stamp: a!# jdk.internal.misc.Unsafe
stampKind: a java.lang.Object
value: Object[Unsafe@679697080]
=== Inputs ===
=== Succesors ===
=== Usages ===
?213 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j204 <|@
result long[12|0xc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 4]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
rawvalue: 12
stableDimension: 0
stamp: i64 [12]
stampKind: i64
value: long[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
?213 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i205 <|@
result int[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 9]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2]
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
?213 i211 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
v197 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533808883141386669
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 39
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v207 
=== Succesors ===
next: i286 
=== Usages ===
v215 v219 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v207 #next: i286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i286 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.status
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.getIntVolatile(Object, long) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 3]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v512 
lastLocationAccess: - 
=== Succesors ===
next: i287 
=== Usages ===
i211 i287 ?213 
=== Predecessor ===
v208 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v512 lastLocationAccess: - #next: i287  <|@  <|@
f <@~|@floating>@ <|@
tid i211 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i286 
y: i205 
=== Succesors ===
=== Usages ===
i287 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i286 y: i205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i287 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.weakCompareAndSetInt(Object, long, int, int) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 18]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v512 
lastLocationAccess: - 
expectedValue: i286 
newValue: i211 
stateAfter: - 
=== Succesors ===
next: v221 
=== Usages ===
v214 
=== Predecessor ===
i286 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v512 lastLocationAccess: - expectedValue: i286 newValue: i211 stateAfter: - #next: v221  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i287 
y: i50 
=== Succesors ===
=== Usages ===
v221 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i287 y: i50  <|@  <|@
f <@*|@fixed>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v214 
=== Succesors ===
trueSuccessor: v220 
falseSuccessor: v215 
=== Usages ===
=== Predecessor ===
i287 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v214 #trueSuccessor: v220 #falseSuccessor: v215  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV input: [v37|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = AND x: v39|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v37|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v40|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529305283514016173
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
v221 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v349  <|@  <|@
tid ?213 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: ifeq
code: ResolvedJavaMethodBytecode<Unsafe.getAndBitwiseAndInt(Object, long, int)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.Unsafe.weakCompareAndSetInt(Object, long, int, int) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 18]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
sourceFile: Unsafe.java
sourceLine: 3233
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?209 
values: i50 a203 a280 j204 - i205 i286 
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?209 values: i50 a203 a280 j204 - i205 i286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
stateBefore: ?213 
=== Succesors ===
next: v219 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?213 #next: v219  <|@  <|@
f <@*|@fixed>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
loopBegin: v208 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v208  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v38|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v39|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v38|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v38|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v41|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3235) [bci: 24]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v208 
=== Succesors ===
next: a484 
=== Usages ===
=== Predecessor ===
v221 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v208 #next: a484  <|@  <|@
f <@~|@floating>@ <|@
tid v513 <|@
result [v37|DWORD[_] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a279 
=== Succesors ===
=== Usages ===
a484 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a279  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a484 <|@
result v42|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.waiter
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 27]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v513 
lastLocationAccess: - 
=== Succesors ===
next: v224 
=== Usages ===
a292 
=== Predecessor ===
v215 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v513 lastLocationAccess: - #next: v224  <|@  <|@
f <@~|@floating>@ <|@
tid a292 <|@
result v43|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 27]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a484 
=== Succesors ===
=== Usages ===
v293 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a484  <|@  <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
referencedType: [null]
returnStamp: void
signature: [UnresolvedJavaType<Ljava/lang/Thread;>]
stamp: void
targetMethod: HotSpotMethod<LockSupport.unpark(Thread)>
=== Inputs ===
arguments: a292 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a292  <|@  <|@
tid ?408 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 645
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?230 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
bci: 30
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
polymorphic: false
stamp: void
targetMethod: Direct#LockSupport.unpark
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v293 
stateDuring: ?408 
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
a484 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v293 stateDuring: ?408 #next: v231  <|@  <|@
f <@*|@fixed>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
v224 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV input: [v37|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 4594090062091211228
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1063) [bci: 17]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v65  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
v53 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B29" "B38" "B37" "B33" "B31" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v63 v65 v231 v232 v233 
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v63 v65 v231 v232 v233 #next: v67  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:148) [bci: 81]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v395 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v395  <|@  <|@
tid ?48 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?41 
values: a260 
=== Succesors ===
=== Usages ===
?177 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?41 values: a260  <|@  <|@
f <@~|@floating>@ <|@
tid a264 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a480 
=== Succesors ===
=== Usages ===
?177 ?151 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a480  <|@  <|@
tid ?177 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1059
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?48 
values: a264 
=== Succesors ===
=== Usages ===
?151 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?48 values: a264  <|@  <|@
tid ?151 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: iload_1
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.tryRelease(int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
sourceFile: ReentrantLock.java
sourceLine: 173
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?177 
values: i267 a264 i40 
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?177 values: i267 a264 i40  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
reason: UnreachedCode
speculation: {0x0000000000002814[index: 320, len: 20, hash: 0xadceab53]: UnreachedCode@6[HotSpotMethod<ReentrantLock$Sync.tryRelease(int)>, 17]}
stamp: void
=== Inputs ===
stateBefore: ?151 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v397 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?151  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101139 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v28|DWORD 
locals: v44|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v44|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v436 
=== Usages ===
=== Predecessor ===
v370 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v436  <|@  <|@
f <@~|@floating>@ <|@
tid j438 <|@
result long[9620|0x2594] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
rawvalue: 9620
stableDimension: 0
stamp: i64 [9620]
stampKind: i64
value: long[9620|0x2594]
=== Inputs ===
=== Succesors ===
=== Usages ===
j434 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i437 <|@
result int[-93971|0xfffffffffffe90ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
rawvalue: -93971
stableDimension: 0
stamp: i32 [-93971]
stampKind: i32
value: int[-93971|0xfffffffffffe90ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i433 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
v369 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-93971|0xfffffffffffe90ed], long[9620|0x2594]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B12" "B41" "B14" "B16" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i433 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: i32 [-100115 - -93971] bits:1...10xxxxxx0011101101
valueDescription: i32
=== Inputs ===
merge: v429 
values: i431 i437 i440 i442 i444 i446 i448 
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v429 values: i431 i437 i440 i442 i444 i446 i448  <|@  <|@
f <@~|@floating>@ <|@
tid j434 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: i64 [8340 - 9620] bits:0...0100xxxx0010100
valueDescription: i64
=== Inputs ===
merge: v429 
values: j432 j438 j432 j432 j432 j432 j449 
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v429 values: j432 j438 j432 j432 j432 j432 j449  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v430 v436 v439 v441 v443 v445 v447 
=== Succesors ===
next: v435 
=== Usages ===
i433 j434 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v430 v436 v439 v441 v443 v445 v447 #next: v435  <|@  <|@
tid ?147 <|@
d <@d|@=== Debug Properties ===
bci: 1
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.lockedWrite(char[], int, int)>
localsSize: 4
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 151
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?148 
values: a1 a2 i3 i4 
=== Succesors ===
=== Usages ===
?144 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a1 a2 i3 i4  <|@  <|@
tid ?144 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: ifeq
code: ResolvedJavaMethodBytecode<StreamEncoder.ensureOpen()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 1]
at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
sourceFile: StreamEncoder.java
sourceLine: 51
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?147 
values: i252 a1 
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?147 values: i252 a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 5]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
stamp: void
=== Inputs ===
stateBefore: ?144 
actionAndReason: i433 
speculation: j434 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?144 actionAndReason: i433 speculation: j434  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|DWORD, v46|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: v24|DWORD 
locals: v0|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:136) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v517 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v517  <|@  <|@
f <@*|@fixed>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 363
mayConvertToGuard: true
nodeSourcePosition: at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:152) [bci: 10]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0x8cd0a7f6]: UnreachedCode@6[HotSpotMethod<StreamEncoder.write(char[], int, int)>, 54]}
stamp: void
=== Inputs ===
stateBefore: ?5 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?5  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92947 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44d0a7e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v5|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v7|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction NULLCHECK address: [v7|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOV input: [v8|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v7|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v12|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v7|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = COMPRESSPOINTER (input: v9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 12], y: v21|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v10|QWORD[.], ~newValue: v9|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|QWORD[.], y: v14|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV input: [v7|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = INC value: v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 16], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVZXB input: [v0|QWORD[.] + 26] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction v27|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction v28|DWORD = MOV input: [v27|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30] <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|QWORD[.], y: [v30|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v27|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v33|QWORD, temp2: v34|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v27|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = DEC value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|DWORD[_] * 8 + 16], y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 0.8633858966180564 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B38 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605951908349848457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|DWORD[_], y: v36|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B39" 
    xhandlers
    flags 
    probability 4605946476645549382
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 4594090062091211228
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B29" "B38" "B37" "B33" "B31" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4558701288473823891
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[_] = MOV input: [v36|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|DWORD[_], y: v37|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 4558140721140330403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4544093902097985275
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v37|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 4543132494893730501
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v10|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.7455315145813735 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4539431807497542773
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4532132168167648385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533808883141386669
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV input: [v37|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = AND x: v39|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v37|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v40|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529305283514016173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v38|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v39|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v38|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v38|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v41|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV input: [v37|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-97043|0xfffffffffffe84ed], long[8340|0x2094]] destination: B16 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101139 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v28|DWORD 
locals: v44|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v44|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-94995|0xfffffffffffe8ced], long[8340|0x2094]] destination: B12 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-100115|0xfffffffffffe78ed], long[8980|0x2314]] destination: B22 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-99091|0xfffffffffffe7ced], long[8340|0x2094]] destination: B20 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102419 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v15|DWORD 
locals: v10|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-98067|0xfffffffffffe80ed], long[8340|0x2094]] destination: B18 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92947 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-96019|0xfffffffffffe88ed], long[8340|0x2094]] destination: B14 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-93971|0xfffffffffffe90ed], long[9620|0x2594]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B12" "B41" "B14" "B16" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|DWORD, v46|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: v24|DWORD 
locals: v0|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // java.io.Writer.lock:java.lang.Object
     4: astore        4
     6: aload         4
     8: instanceof    #49         // jdk.internal.misc.InternalLock
    11: ifeq          54
    14: aload         4
    16: checkcast     #49         // jdk.internal.misc.InternalLock
    19: astore        5
    21: aload         5
    23: invokevirtual #10         // jdk.internal.misc.InternalLock.lock:()void
    26: aload_0       
    27: aload_1       
    28: iload_2       
    29: iload_3       
    30: invokevirtual #15         // lockedWrite:(char[], int, int)void
    33: aload         5
    35: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    38: goto          51
    41: astore        6
    43: aload         5
    45: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    48: aload         6
    50: athrow        
    51: goto          81
    54: aload         4
    56: dup           
    57: astore        6
    59: monitorenter  
    60: aload_0       
    61: aload_1       
    62: iload_2       
    63: iload_3       
    64: invokevirtual #15         // lockedWrite:(char[], int, int)void
    67: aload         6
    69: monitorexit   
    70: goto          81
    73: astore        7
    75: aload         6
    77: monitorexit   
    78: aload         7
    80: athrow        
    81: return        
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44d0a7e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v5|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v7|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction NULLCHECK address: [v7|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOV input: [v8|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v7|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v12|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v7|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = COMPRESSPOINTER (input: v9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 12], y: v21|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v10|QWORD[.], ~newValue: v9|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|QWORD[.], y: v14|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV input: [v7|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = INC value: v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 16], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVZXB input: [v0|QWORD[.] + 26] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction v27|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction v28|DWORD = MOV input: [v27|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30] <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|QWORD[.], y: [v30|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v27|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v33|QWORD, temp2: v34|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v27|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = DEC value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|DWORD[_] * 8 + 16], y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 0.8633858966180564 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B38 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605951908349848457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|DWORD[_], y: v36|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B39" 
    xhandlers
    flags 
    probability 4605946476645549382
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 4594090062091211228
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B29" "B38" "B37" "B33" "B31" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4558701288473823891
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[_] = MOV input: [v36|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|DWORD[_], y: v37|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 4558140721140330403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4544093902097985275
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v37|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 4543132494893730501
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v10|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.7455315145813735 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4539431807497542773
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4532132168167648385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533808883141386669
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV input: [v37|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = AND x: v39|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v37|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v40|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529305283514016173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v38|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v39|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v38|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v38|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v41|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV input: [v37|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-97043|0xfffffffffffe84ed], long[8340|0x2094]] destination: B16 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101139 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v28|DWORD 
locals: v44|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v44|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-94995|0xfffffffffffe8ced], long[8340|0x2094]] destination: B12 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-100115|0xfffffffffffe78ed], long[8980|0x2314]] destination: B22 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-99091|0xfffffffffffe7ced], long[8340|0x2094]] destination: B20 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102419 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v15|DWORD 
locals: v10|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-98067|0xfffffffffffe80ed], long[8340|0x2094]] destination: B18 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92947 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-96019|0xfffffffffffe88ed], long[8340|0x2094]] destination: B14 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-93971|0xfffffffffffe90ed], long[9620|0x2594]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B12" "B41" "B14" "B16" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|DWORD, v46|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: v24|DWORD 
locals: v0|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // java.io.Writer.lock:java.lang.Object
     4: astore        4
     6: aload         4
     8: instanceof    #49         // jdk.internal.misc.InternalLock
    11: ifeq          54
    14: aload         4
    16: checkcast     #49         // jdk.internal.misc.InternalLock
    19: astore        5
    21: aload         5
    23: invokevirtual #10         // jdk.internal.misc.InternalLock.lock:()void
    26: aload_0       
    27: aload_1       
    28: iload_2       
    29: iload_3       
    30: invokevirtual #15         // lockedWrite:(char[], int, int)void
    33: aload         5
    35: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    38: goto          51
    41: astore        6
    43: aload         5
    45: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    48: aload         6
    50: athrow        
    51: goto          81
    54: aload         4
    56: dup           
    57: astore        6
    59: monitorenter  
    60: aload_0       
    61: aload_1       
    62: iload_2       
    63: iload_3       
    64: invokevirtual #15         // lockedWrite:(char[], int, int)void
    67: aload         6
    69: monitorexit   
    70: goto          81
    73: astore        7
    75: aload         6
    77: monitorexit   
    78: aload         7
    80: athrow        
    81: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44d0a7e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v5|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v7|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction NULLCHECK address: [v7|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOV input: [v8|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v7|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v12|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v7|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = COMPRESSPOINTER (input: v9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 12], y: v21|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v10|QWORD[.], ~newValue: v9|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|QWORD[.], y: v14|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV input: [v7|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = INC value: v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 16], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVZXB input: [v0|QWORD[.] + 26] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction v27|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction v28|DWORD = MOV input: [v27|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30] <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|QWORD[.], y: [v30|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v27|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v33|QWORD, temp2: v34|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v27|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = DEC value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|DWORD[_] * 8 + 16], y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 0.8633858966180564 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B38 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605951908349848457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|DWORD[_], y: v36|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B39" 
    xhandlers
    flags 
    probability 4605946476645549382
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 4594090062091211228
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B29" "B38" "B37" "B33" "B31" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4558701288473823891
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[_] = MOV input: [v36|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|DWORD[_], y: v37|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 4558140721140330403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4544093902097985275
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v37|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 4543132494893730501
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v10|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.7455315145813735 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4539431807497542773
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4532132168167648385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533808883141386669
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV input: [v37|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = AND x: v39|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v37|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v40|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529305283514016173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v38|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v39|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v38|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v38|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v41|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV input: [v37|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-97043|0xfffffffffffe84ed], long[8340|0x2094]] destination: B16 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101139 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v28|DWORD 
locals: v44|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v44|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-94995|0xfffffffffffe8ced], long[8340|0x2094]] destination: B12 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-100115|0xfffffffffffe78ed], long[8980|0x2314]] destination: B22 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-99091|0xfffffffffffe7ced], long[8340|0x2094]] destination: B20 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102419 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v15|DWORD 
locals: v10|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-98067|0xfffffffffffe80ed], long[8340|0x2094]] destination: B18 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92947 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-96019|0xfffffffffffe88ed], long[8340|0x2094]] destination: B14 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-93971|0xfffffffffffe90ed], long[9620|0x2594]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B12" "B41" "B14" "B16" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|DWORD, v46|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: v24|DWORD 
locals: v0|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // java.io.Writer.lock:java.lang.Object
     4: astore        4
     6: aload         4
     8: instanceof    #49         // jdk.internal.misc.InternalLock
    11: ifeq          54
    14: aload         4
    16: checkcast     #49         // jdk.internal.misc.InternalLock
    19: astore        5
    21: aload         5
    23: invokevirtual #10         // jdk.internal.misc.InternalLock.lock:()void
    26: aload_0       
    27: aload_1       
    28: iload_2       
    29: iload_3       
    30: invokevirtual #15         // lockedWrite:(char[], int, int)void
    33: aload         5
    35: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    38: goto          51
    41: astore        6
    43: aload         5
    45: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    48: aload         6
    50: athrow        
    51: goto          81
    54: aload         4
    56: dup           
    57: astore        6
    59: monitorenter  
    60: aload_0       
    61: aload_1       
    62: iload_2       
    63: iload_3       
    64: invokevirtual #15         // lockedWrite:(char[], int, int)void
    67: aload         6
    69: monitorexit   
    70: goto          81
    73: astore        7
    75: aload         6
    77: monitorexit   
    78: aload         7
    80: athrow        
    81: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44d0a7e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v5|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v7|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction NULLCHECK address: [v7|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOV input: [v8|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v7|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v12|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v7|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = COMPRESSPOINTER (input: v9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 12], y: v21|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v10|QWORD[.], ~newValue: v9|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|QWORD[.], y: v14|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV input: [v7|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = INC value: v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 16], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVZXB input: [v0|QWORD[.] + 26] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction v27|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction v28|DWORD = MOV input: [v27|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30] <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|QWORD[.], y: [v30|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v27|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v33|QWORD, temp2: v34|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v27|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = DEC value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|DWORD[_] * 8 + 16], y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 0.8633858966180564 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B38 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605951908349848457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|DWORD[_], y: v36|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B39" 
    xhandlers
    flags 
    probability 4605946476645549382
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 4594090062091211228
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B29" "B38" "B37" "B33" "B31" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4558701288473823891
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[_] = MOV input: [v36|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|DWORD[_], y: v37|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 4558140721140330403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4544093902097985275
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v37|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 4543132494893730501
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v10|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.7455315145813735 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4539431807497542773
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4532132168167648385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533808883141386669
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV input: [v37|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = AND x: v39|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v37|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v40|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529305283514016173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v38|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v39|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v38|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v38|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v41|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV input: [v37|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-97043|0xfffffffffffe84ed], long[8340|0x2094]] destination: B16 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101139 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v28|DWORD 
locals: v44|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v44|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-94995|0xfffffffffffe8ced], long[8340|0x2094]] destination: B12 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-100115|0xfffffffffffe78ed], long[8980|0x2314]] destination: B22 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-99091|0xfffffffffffe7ced], long[8340|0x2094]] destination: B20 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102419 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v15|DWORD 
locals: v10|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-98067|0xfffffffffffe80ed], long[8340|0x2094]] destination: B18 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92947 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-96019|0xfffffffffffe88ed], long[8340|0x2094]] destination: B14 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-93971|0xfffffffffffe90ed], long[9620|0x2594]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B12" "B41" "B14" "B16" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|DWORD, v46|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: v24|DWORD 
locals: v0|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // java.io.Writer.lock:java.lang.Object
     4: astore        4
     6: aload         4
     8: instanceof    #49         // jdk.internal.misc.InternalLock
    11: ifeq          54
    14: aload         4
    16: checkcast     #49         // jdk.internal.misc.InternalLock
    19: astore        5
    21: aload         5
    23: invokevirtual #10         // jdk.internal.misc.InternalLock.lock:()void
    26: aload_0       
    27: aload_1       
    28: iload_2       
    29: iload_3       
    30: invokevirtual #15         // lockedWrite:(char[], int, int)void
    33: aload         5
    35: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    38: goto          51
    41: astore        6
    43: aload         5
    45: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    48: aload         6
    50: athrow        
    51: goto          81
    54: aload         4
    56: dup           
    57: astore        6
    59: monitorenter  
    60: aload_0       
    61: aload_1       
    62: iload_2       
    63: iload_3       
    64: invokevirtual #15         // lockedWrite:(char[], int, int)void
    67: aload         6
    69: monitorexit   
    70: goto          81
    73: astore        7
    75: aload         6
    77: monitorexit   
    78: aload         7
    80: athrow        
    81: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44d0a7e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v5|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v7|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction NULLCHECK address: [v7|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOV input: [v8|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v7|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v12|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v7|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = COMPRESSPOINTER (input: v9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 12], y: v21|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v10|QWORD[.], ~newValue: v9|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|QWORD[.], y: v14|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV input: [v7|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = INC value: v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 16], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVZXB input: [v0|QWORD[.] + 26] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction v27|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction v28|DWORD = MOV input: [v27|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30] <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|QWORD[.], y: [v30|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v27|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v33|QWORD, temp2: v34|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v27|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = DEC value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|DWORD[_] * 8 + 16], y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 0.8633858966180564 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B38 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605951908349848457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|DWORD[_], y: v36|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B39" 
    xhandlers
    flags 
    probability 4605946476645549382
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 4594090062091211228
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B29" "B38" "B37" "B33" "B31" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4558701288473823891
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[_] = MOV input: [v36|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|DWORD[_], y: v37|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 4558140721140330403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4544093902097985275
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v37|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 4543132494893730501
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v10|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.7455315145813735 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4539431807497542773
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4532132168167648385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533808883141386669
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV input: [v37|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = AND x: v39|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v37|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v40|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529305283514016173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v38|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v39|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v38|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v38|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v41|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV input: [v37|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-97043|0xfffffffffffe84ed], long[8340|0x2094]] destination: B16 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101139 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v28|DWORD 
locals: v44|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v44|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-94995|0xfffffffffffe8ced], long[8340|0x2094]] destination: B12 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-100115|0xfffffffffffe78ed], long[8980|0x2314]] destination: B22 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-99091|0xfffffffffffe7ced], long[8340|0x2094]] destination: B20 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102419 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v15|DWORD 
locals: v10|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-98067|0xfffffffffffe80ed], long[8340|0x2094]] destination: B18 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92947 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-96019|0xfffffffffffe88ed], long[8340|0x2094]] destination: B14 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-93971|0xfffffffffffe90ed], long[9620|0x2594]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B12" "B41" "B14" "B16" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|DWORD, v46|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: v24|DWORD 
locals: v0|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // java.io.Writer.lock:java.lang.Object
     4: astore        4
     6: aload         4
     8: instanceof    #49         // jdk.internal.misc.InternalLock
    11: ifeq          54
    14: aload         4
    16: checkcast     #49         // jdk.internal.misc.InternalLock
    19: astore        5
    21: aload         5
    23: invokevirtual #10         // jdk.internal.misc.InternalLock.lock:()void
    26: aload_0       
    27: aload_1       
    28: iload_2       
    29: iload_3       
    30: invokevirtual #15         // lockedWrite:(char[], int, int)void
    33: aload         5
    35: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    38: goto          51
    41: astore        6
    43: aload         5
    45: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    48: aload         6
    50: athrow        
    51: goto          81
    54: aload         4
    56: dup           
    57: astore        6
    59: monitorenter  
    60: aload_0       
    61: aload_1       
    62: iload_2       
    63: iload_3       
    64: invokevirtual #15         // lockedWrite:(char[], int, int)void
    67: aload         6
    69: monitorexit   
    70: goto          81
    73: astore        7
    75: aload         6
    77: monitorexit   
    78: aload         7
    80: athrow        
    81: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44d0a7e slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v5|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v7|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction NULLCHECK address: [v7|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   90  <|@ instruction v8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   92  <|@ instruction v9|QWORD[.] = MOV input: [v8|QWORD] size: QWORD <|@ <|@
      nr   94  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   96  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction v12|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  102  <|@ instruction rax|DWORD = CAS (address: [v7|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v12|DWORD) accessKind: DWORD <|@ <|@
      nr  104  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v7|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  222  <|@ instruction v21|DWORD[_] = COMPRESSPOINTER (input: v9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 12], y: v21|DWORD[_]) size: DWORD <|@ <|@
      nr  226  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v10|QWORD[.], ~newValue: v9|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction v13|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  248  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction CMPBRANCH (x: v9|QWORD[.], y: v14|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction v15|DWORD = MOV input: [v7|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  268  <|@ instruction v16|DWORD = INC value: v15|DWORD size: DWORD <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 16], y: v16|DWORD) size: DWORD <|@ <|@
      nr  286  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction v24|DWORD = MOVZXB input: [v0|QWORD[.] + 26] size: DWORD <|@ <|@
      nr  304  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction v25|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  356  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30] <|@ <|@
      nr  434  <|@ instruction v26|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  436  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction v27|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30] <|@ <|@
      nr  438  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction v28|DWORD = MOV input: [v27|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30] <|@ <|@
      nr  440  <|@ instruction v29|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  442  <|@ instruction v30|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  444  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  446  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction CMPBRANCH (x: v31|QWORD[.], y: [v30|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v27|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v33|QWORD, temp2: v34|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  500  <|@ instruction MOV x: [v27|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction v35|DWORD = DEC value: v28|DWORD size: DWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [v27|DWORD[_] * 8 + 16], y: v35|DWORD) size: DWORD <|@ <|@
      nr  534  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  536  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 0.8633858966180564 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B38 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605951908349848457
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction v36|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  552  <|@ instruction TESTBRANCH (x: v36|DWORD[_], y: v36|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B39" 
    xhandlers
    flags 
    probability 4605946476645549382
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 4594090062091211228
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B29" "B38" "B37" "B33" "B31" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4558701288473823891
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction v37|DWORD[_] = MOV input: [v36|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  606  <|@ instruction TESTBRANCH (x: v37|DWORD[_], y: v37|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 4558140721140330403
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4544093902097985275
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction CMPCONSTBRANCH x: [v37|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 4543132494893730501
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  666  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v10|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23] <|@ <|@
      nr  668  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.7455315145813735 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4539431807497542773
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  706  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  708  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  710  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  712  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  714  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  716  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23] <|@ <|@
      nr  718  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4532132168167648385
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  746  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533808883141386669
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction v39|DWORD = MOV input: [v37|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  774  <|@ instruction v40|DWORD = AND x: v39|DWORD y: -2 size: DWORD <|@ <|@
      nr  776  <|@ instruction rax|DWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction rax|DWORD = CAS (address: [v37|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v40|DWORD) accessKind: DWORD <|@ <|@
      nr  780  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529305283514016173
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v38|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v39|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v38|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v38|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v41|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35] <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction v42|DWORD[_] = MOV input: [v37|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  822  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  824  <|@ instruction rsi|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35] <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [int[-97043|0xfffffffffffe84ed], long[8340|0x2094]] destination: B16 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101139 size: DWORD <|@ <|@
      nr  864  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr  866  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v28|DWORD 
locals: v44|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v44|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [int[-94995|0xfffffffffffe8ced], long[8340|0x2094]] destination: B12 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction JUMP ~outgoingValues: [int[-100115|0xfffffffffffe78ed], long[8980|0x2314]] destination: B22 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction JUMP ~outgoingValues: [int[-99091|0xfffffffffffe7ced], long[8340|0x2094]] destination: B20 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102419 size: DWORD <|@ <|@
      nr  916  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  918  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v15|DWORD 
locals: v10|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [int[-98067|0xfffffffffffe80ed], long[8340|0x2094]] destination: B18 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92947 size: DWORD <|@ <|@
      nr  948  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  950  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [int[-96019|0xfffffffffffe88ed], long[8340|0x2094]] destination: B14 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [int[-93971|0xfffffffffffe90ed], long[9620|0x2594]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B12" "B41" "B14" "B16" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr  972  <|@ instruction [v45|DWORD, v46|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr  990  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr  992  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: v24|DWORD 
locals: v0|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // java.io.Writer.lock:java.lang.Object
     4: astore        4
     6: aload         4
     8: instanceof    #49         // jdk.internal.misc.InternalLock
    11: ifeq          54
    14: aload         4
    16: checkcast     #49         // jdk.internal.misc.InternalLock
    19: astore        5
    21: aload         5
    23: invokevirtual #10         // jdk.internal.misc.InternalLock.lock:()void
    26: aload_0       
    27: aload_1       
    28: iload_2       
    29: iload_3       
    30: invokevirtual #15         // lockedWrite:(char[], int, int)void
    33: aload         5
    35: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    38: goto          51
    41: astore        6
    43: aload         5
    45: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    48: aload         6
    50: athrow        
    51: goto          81
    54: aload         4
    56: dup           
    57: astore        6
    59: monitorenter  
    60: aload_0       
    61: aload_1       
    62: iload_2       
    63: iload_3       
    64: invokevirtual #15         // lockedWrite:(char[], int, int)void
    67: aload         6
    69: monitorexit   
    70: goto          81
    73: astore        7
    75: aload         6
    77: monitorexit   
    78: aload         7
    80: athrow        
    81: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44d0a7e slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v5|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v7|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction NULLCHECK address: [v7|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   90  <|@ instruction v8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   92  <|@ instruction v9|QWORD[.] = MOV input: [v8|QWORD] size: QWORD <|@ <|@
      nr   94  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   96  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction v12|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  102  <|@ instruction rax|DWORD = CAS (address: [v7|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v12|DWORD) accessKind: DWORD <|@ <|@
      nr  104  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v7|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  222  <|@ instruction v21|DWORD[_] = COMPRESSPOINTER (input: v9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 12], y: v21|DWORD[_]) size: DWORD <|@ <|@
      nr  226  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v10|QWORD[.], ~newValue: v9|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction v13|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  248  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction CMPBRANCH (x: v9|QWORD[.], y: v14|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction v15|DWORD = MOV input: [v7|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  268  <|@ instruction v16|DWORD = INC value: v15|DWORD size: DWORD <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 16], y: v16|DWORD) size: DWORD <|@ <|@
      nr  286  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction v24|DWORD = MOVZXB input: [v0|QWORD[.] + 26] size: DWORD <|@ <|@
      nr  304  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction v25|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  356  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30] <|@ <|@
      nr  434  <|@ instruction v26|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  436  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction v27|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30] <|@ <|@
      nr  438  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction v28|DWORD = MOV input: [v27|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30] <|@ <|@
      nr  440  <|@ instruction v29|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  442  <|@ instruction v30|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  444  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  446  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction CMPBRANCH (x: v31|QWORD[.], y: [v30|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v27|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v33|QWORD, temp2: v34|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  500  <|@ instruction MOV x: [v27|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction v35|DWORD = DEC value: v28|DWORD size: DWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [v27|DWORD[_] * 8 + 16], y: v35|DWORD) size: DWORD <|@ <|@
      nr  534  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  536  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 0.8633858966180564 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B38 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605951908349848457
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction v36|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  552  <|@ instruction TESTBRANCH (x: v36|DWORD[_], y: v36|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B39" 
    xhandlers
    flags 
    probability 4605946476645549382
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 4594090062091211228
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B29" "B38" "B37" "B33" "B31" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4558701288473823891
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction v37|DWORD[_] = MOV input: [v36|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  606  <|@ instruction TESTBRANCH (x: v37|DWORD[_], y: v37|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 4558140721140330403
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4544093902097985275
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction CMPCONSTBRANCH x: [v37|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 4543132494893730501
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  666  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v10|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23] <|@ <|@
      nr  668  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.7455315145813735 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4539431807497542773
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  706  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  708  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  710  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  712  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  714  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  716  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23] <|@ <|@
      nr  718  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4532132168167648385
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  746  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533808883141386669
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction v39|DWORD = MOV input: [v37|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  774  <|@ instruction v40|DWORD = AND x: v39|DWORD y: -2 size: DWORD <|@ <|@
      nr  776  <|@ instruction rax|DWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction rax|DWORD = CAS (address: [v37|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v40|DWORD) accessKind: DWORD <|@ <|@
      nr  780  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529305283514016173
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v38|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v39|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v38|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v38|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v41|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35] <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction v42|DWORD[_] = MOV input: [v37|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  822  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  824  <|@ instruction rsi|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35] <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [int[-97043|0xfffffffffffe84ed], long[8340|0x2094]] destination: B16 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101139 size: DWORD <|@ <|@
      nr  864  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr  866  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v28|DWORD 
locals: v44|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v44|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [int[-94995|0xfffffffffffe8ced], long[8340|0x2094]] destination: B12 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction JUMP ~outgoingValues: [int[-100115|0xfffffffffffe78ed], long[8980|0x2314]] destination: B22 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction JUMP ~outgoingValues: [int[-99091|0xfffffffffffe7ced], long[8340|0x2094]] destination: B20 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102419 size: DWORD <|@ <|@
      nr  916  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  918  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v15|DWORD 
locals: v10|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [int[-98067|0xfffffffffffe80ed], long[8340|0x2094]] destination: B18 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92947 size: DWORD <|@ <|@
      nr  948  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  950  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [int[-96019|0xfffffffffffe88ed], long[8340|0x2094]] destination: B14 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [int[-93971|0xfffffffffffe90ed], long[9620|0x2594]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B12" "B41" "B14" "B16" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr  972  <|@ instruction [v45|DWORD, v46|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr  990  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr  992  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: v24|DWORD 
locals: v0|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // java.io.Writer.lock:java.lang.Object
     4: astore        4
     6: aload         4
     8: instanceof    #49         // jdk.internal.misc.InternalLock
    11: ifeq          54
    14: aload         4
    16: checkcast     #49         // jdk.internal.misc.InternalLock
    19: astore        5
    21: aload         5
    23: invokevirtual #10         // jdk.internal.misc.InternalLock.lock:()void
    26: aload_0       
    27: aload_1       
    28: iload_2       
    29: iload_3       
    30: invokevirtual #15         // lockedWrite:(char[], int, int)void
    33: aload         5
    35: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    38: goto          51
    41: astore        6
    43: aload         5
    45: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    48: aload         6
    50: athrow        
    51: goto          81
    54: aload         4
    56: dup           
    57: astore        6
    59: monitorenter  
    60: aload_0       
    61: aload_1       
    62: iload_2       
    63: iload_3       
    64: invokevirtual #15         // lockedWrite:(char[], int, int)void
    67: aload         6
    69: monitorexit   
    70: goto          81
    73: astore        7
    75: aload         6
    77: monitorexit   
    78: aload         7
    80: athrow        
    81: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|- fixed "[rax|-]" rax|- v39|d [0, 1[[98, 103[[432, 433[[666, 668[[716, 718[[776, 779[[826, 827[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v2|d [0, 34[[428, 433[[666, 667[[706, 717[[826, 827[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v1|q [0, 32[[426, 433[[664, 667[[704, 717[[826, 827[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 26[[432, 433[[666, 667[[716, 717[[826, 827[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 30[[424, 433[[662, 667[[702, 717[[824, 827[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[432, 433[[666, 667[[712, 717[[826, 827[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- v3|d [0, 36[[430, 433[[666, 667[[708, 717[[826, 827[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[432, 433[[666, 667[[710, 717[[826, 827[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [30, 424[[640, 732[[830, 840[[868, 919[[920, 951[[952, 993[30 MustHaveRegister 40 MustHaveRegister 302 MustHaveRegister 424 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|- [32, 426[[640, 732[[830, 840[[868, 919[[920, 951[[952, 993[32 MustHaveRegister 38 MustHaveRegister 426 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d rcx|- [34, 428[[640, 732[[830, 840[[868, 919[[920, 951[[952, 993[34 MustHaveRegister 316 MustHaveRegister 328 MustHaveRegister 354 ShouldHaveRegister 428 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d r8|- [36, 430[[640, 732[[830, 840[[868, 919[[920, 951[[952, 993[36 MustHaveRegister 340 MustHaveRegister 354 ShouldHaveRegister 380 MustHaveRegister 430 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [38, 356[[640, 732[38 MustHaveRegister 328 ShouldHaveRegister 356 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [40, 434[[640, 732[40 MustHaveRegister 42 MustHaveRegister 84 MustHaveRegister 96 MustHaveRegister 434 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [84, 86[84 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [86, 224[[230, 284[86 MustHaveRegister 88 MustHaveRegister 94 MustHaveRegister 102 MustHaveRegister 220 MustHaveRegister 224 MustHaveRegister 246 MustHaveRegister 266 MustHaveRegister 284 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q -1 [90, 92[90 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q -1 [92, 227[[230, 250[92 MustHaveRegister 222 MustHaveRegister 226 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q v7|d [94, 227[[230, 272[[640, 717[[898, 919[94 MustHaveRegister 226 MustHaveRegister 662 ShouldHaveRegister 702 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q v5|d [96, 554[[592, 608[[618, 630[[640, 827[[830, 867[[868, 919[[920, 930[[952, 993[96 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d -1 [100, 102[100 MustHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d -1 [246, 248[246 MustHaveRegister 248 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q v13|d [248, 250[248 MustHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d -1 [266, 272[[898, 919[266 MustHaveRegister 268 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d v15|d [268, 284[268 MustHaveRegister 270 MustHaveRegister 284 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d rax|- [668, 670[668 MustHaveRegister 670 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d rax|- [718, 719[718 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q -1 [220, 221[220 MustHaveRegister  "NoDefinitionFound"
  v20|q QWORD "[v20|q]" v20|q -1 [220, 221[220 MustHaveRegister  "NoDefinitionFound"
  v21|d DWORD "[v21|d]" v21|d v9|q [222, 224[222 MustHaveRegister 224 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q -1 [226, 227[226 MustHaveRegister  "NoDefinitionFound"
  v23|q QWORD "[v23|q]" v23|q -1 [226, 227[226 MustHaveRegister  "NoDefinitionFound"
  v24|d DWORD "[v24|d]" v24|d -1 [302, 382[[830, 840[[868, 898[[920, 930[[952, 993[302 MustHaveRegister 304 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d v2|d [354, 368[354 MustHaveRegister 356 MustHaveRegister 368 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d -1 [434, 446[434 MustHaveRegister 436 MustHaveRegister 446 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[v27|d]" v27|d -1 [436, 550[[840, 860[436 MustHaveRegister 438 MustHaveRegister 440 MustHaveRegister 498 MustHaveRegister 500 MustHaveRegister 532 MustHaveRegister 550 MustHaveRegister 860 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d -1 [438, 536[[840, 867[438 MustHaveRegister 460 ShouldHaveRegister 530 ShouldHaveRegister 536 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d -1 [440, 444[440 MustHaveRegister 444 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q -1 [442, 448[442 MustHaveRegister 448 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q v29|d [444, 448[444 MustHaveRegister 448 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q v26|d [446, 554[[592, 608[[618, 630[[732, 827[[840, 867[446 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q -1 [498, 499[498 MustHaveRegister  "NoDefinitionFound"
  v34|q QWORD "[v34|q]" v34|q -1 [498, 499[498 MustHaveRegister  "NoDefinitionFound"
  v35|d DWORD "[v35|d]" v35|d v28|d [530, 532[530 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[v36|d]" v36|d -1 [550, 554[[592, 604[550 MustHaveRegister 552 MustHaveRegister 604 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[v37|d]" v37|d -1 [604, 608[[618, 630[[732, 820[604 MustHaveRegister 606 MustHaveRegister 628 MustHaveRegister 744 MustHaveRegister 772 MustHaveRegister 778 MustHaveRegister 797 LiveAtLoopEnd 820 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q v37|d [744, 798[744 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[v39|d]" v39|d -1 [772, 795[772 MustHaveRegister 774 MustHaveRegister 776 ShouldHaveRegister  "NoSpillStore"
  v40|d DWORD "[v40|d]" v40|d v39|d [774, 778[774 MustHaveRegister 778 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q -1 [794, 795[794 MustHaveRegister  "NoDefinitionFound"
  v42|d DWORD "[v42|d]" v42|d -1 [820, 822[820 MustHaveRegister 822 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[v43|q]" v43|q v42|d [822, 824[822 MustHaveRegister 824 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q v27|d [860, 867[860 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[v45|d]" v45|d -1 [972, 988[988 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q -1 [972, 990[990 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|- fixed "[rax|-]" rax|- v39|d [0, 1[[98, 103[[432, 433[[666, 668[[716, 718[[776, 779[[826, 827[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v2|d [0, 34[[428, 433[[666, 667[[706, 717[[826, 827[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v1|q [0, 32[[426, 433[[664, 667[[704, 717[[826, 827[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 26[[432, 433[[666, 667[[716, 717[[826, 827[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 30[[424, 433[[662, 667[[702, 717[[824, 827[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[432, 433[[666, 667[[712, 717[[826, 827[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- v3|d [0, 36[[430, 433[[666, 667[[708, 717[[826, 827[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[432, 433[[666, 667[[710, 717[[826, 827[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [30, 424[30 MustHaveRegister 40 MustHaveRegister 302 MustHaveRegister 424 ShouldHaveRegister  "OneSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [32, 426[32 MustHaveRegister 38 MustHaveRegister 426 ShouldHaveRegister  "OneSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [34, 428[34 MustHaveRegister 316 MustHaveRegister 328 MustHaveRegister 354 ShouldHaveRegister 428 ShouldHaveRegister  "OneSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|- [36, 430[36 MustHaveRegister 340 MustHaveRegister 354 ShouldHaveRegister 380 MustHaveRegister 430 ShouldHaveRegister  "OneSpillStore"
  v4|d DWORD "[r10|d]" v4|d -1 [38, 356[38 MustHaveRegister 328 ShouldHaveRegister 356 ShouldHaveRegister  "OneSpillStore"
  v5|d DWORD "[r11|d]" v5|d -1 [40, 382[40 MustHaveRegister 42 MustHaveRegister 84 MustHaveRegister 96 MustHaveRegister  "SpillInDominator"
  v6|d DWORD "[rax|d]" v6|d -1 [84, 86[84 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r9|d]" v7|d -1 [86, 224[[230, 284[86 MustHaveRegister 88 MustHaveRegister 94 MustHaveRegister 102 MustHaveRegister 220 MustHaveRegister 224 MustHaveRegister 246 MustHaveRegister 266 MustHaveRegister 284 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q -1 [90, 92[90 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rbx|q]" v9|q -1 [92, 227[[230, 250[92 MustHaveRegister 222 MustHaveRegister 226 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rdi|q]" v10|q v7|d [94, 227[[230, 272[[640, 665[94 MustHaveRegister 226 MustHaveRegister 662 ShouldHaveRegister  "OneSpillStore"
  v11|q QWORD "[rbp|q]" v11|q v5|d [96, 382[96 MustHaveRegister  "OneSpillStore"
  v12|d DWORD "[r13|d]" v12|d -1 [100, 102[100 MustHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rax|d]" v13|d -1 [246, 248[246 MustHaveRegister 248 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rax|q]" v14|q v13|d [248, 250[248 MustHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rbx|d]" v15|d -1 [266, 272[[898, 919[266 MustHaveRegister 268 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d v15|d [268, 284[268 MustHaveRegister 270 MustHaveRegister 284 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d rax|- [668, 670[668 MustHaveRegister 670 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d rax|- [718, 719[718 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rax|q]" v19|q -1 [220, 221[220 MustHaveRegister  "NoDefinitionFound"
  v20|q QWORD "[r13|q]" v20|q -1 [220, 221[220 MustHaveRegister  "NoDefinitionFound"
  v21|d DWORD "[rax|d]" v21|d v9|q [222, 224[222 MustHaveRegister 224 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[r9|q]" v22|q -1 [226, 227[226 MustHaveRegister  "NoDefinitionFound"
  v23|q QWORD "[rax|q]" v23|q -1 [226, 227[226 MustHaveRegister  "NoDefinitionFound"
  v24|d DWORD "[r9|d]" v24|d -1 [302, 382[[830, 840[[868, 898[[920, 930[[952, 993[302 MustHaveRegister 304 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[rbx|d]" v25|d v2|d [354, 368[354 MustHaveRegister 356 MustHaveRegister 368 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[rsi|d]" v26|d -1 [434, 446[434 MustHaveRegister 436 MustHaveRegister 446 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[r10|d]" v27|d -1 [436, 550[[840, 860[436 MustHaveRegister 438 MustHaveRegister 440 MustHaveRegister 498 MustHaveRegister 500 MustHaveRegister 532 MustHaveRegister 550 MustHaveRegister 860 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[r11|d]" v28|d -1 [438, 536[[840, 867[438 MustHaveRegister 460 ShouldHaveRegister 530 ShouldHaveRegister 536 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[rdx|d]" v29|d -1 [440, 444[440 MustHaveRegister 444 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[r8|q]" v30|q -1 [442, 448[442 MustHaveRegister 448 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rdx|q]" v31|q v29|d [444, 448[444 MustHaveRegister 448 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rsi|q]" v32|q v26|d [446, 554[[592, 608[[618, 630[[732, 798[446 MustHaveRegister  "OneSpillStore"
  v33|q QWORD "[rdx|q]" v33|q -1 [498, 499[498 MustHaveRegister  "NoDefinitionFound"
  v34|q QWORD "[r8|q]" v34|q -1 [498, 499[498 MustHaveRegister  "NoDefinitionFound"
  v35|d DWORD "[rdx|d]" v35|d v28|d [530, 532[530 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[rdx|d]" v36|d -1 [550, 554[[592, 604[550 MustHaveRegister 552 MustHaveRegister 604 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[r10|d]" v37|d -1 [604, 608[[618, 630[[732, 820[604 MustHaveRegister 606 MustHaveRegister 628 MustHaveRegister 744 MustHaveRegister 772 MustHaveRegister 778 MustHaveRegister 797 LiveAtLoopEnd 820 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[r11|q]" v38|q v37|d [744, 798[744 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[r8|d]" v39|d -1 [772, 795[772 MustHaveRegister 774 MustHaveRegister 776 ShouldHaveRegister  "NoSpillStore"
  v40|d DWORD "[r9|d]" v40|d v39|d [774, 778[774 MustHaveRegister 778 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[r9|q]" v41|q -1 [794, 795[794 MustHaveRegister  "NoDefinitionFound"
  v42|d DWORD "[r10|d]" v42|d -1 [820, 822[820 MustHaveRegister 822 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[r10|q]" v43|q v42|d [822, 824[822 MustHaveRegister 824 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[r10|q]" v44|q v27|d [860, 867[860 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[r10|d]" v45|d -1 [972, 988[988 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[r11|q]" v46|q -1 [972, 990[990 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[vstack:6|q]" v0|q v0|q [640, 661[ "OneSpillStore"
  v48|q QWORD "[vstack:4|q]" v1|q v1|q [640, 663[ "OneSpillStore"
  v49|d DWORD "[vstack:7|d]" v2|d v2|d [640, 665[ "OneSpillStore"
  v50|d DWORD "[vstack:8|d]" v3|d v3|d [640, 665[ "OneSpillStore"
  v51|d DWORD "[vstack:9|d]" v4|d v4|d [640, 665[ "OneSpillStore"
  v52|d DWORD "[vstack:0|d]" v5|d v5|d [382, 431[ "SpillInDominator"
  v53|q QWORD "[vstack:5|q]" v10|q v10|q [665, 717[702 ShouldHaveRegister  "OneSpillStore"
  v54|q QWORD "[vstack:1|q]" v11|q v11|q [382, 431[ "OneSpillStore"
  v55|d DWORD "[vstack:0|d]" v5|d v5|d [431, 433[ "SpillInDominator"
  v56|q QWORD "[vstack:1|q]" v11|q v11|q [431, 554[[592, 608[[618, 630[[640, 827[[830, 867[[868, 919[[920, 930[[952, 972[ "OneSpillStore"
  v57|d DWORD "[r11|d]" v5|d v5|d [433, 434[434 MustHaveRegister  "SpillInDominator"
  v58|q QWORD "[rbp|q]" v11|q v11|q [972, 993[ "OneSpillStore"
  v59|d DWORD "[vstack:0|d]" v5|d v5|d [640, 665[ "SpillInDominator"
  v60|q QWORD "[vstack:10|q]" v32|q v32|q [798, 823[ "OneSpillStore"
  v61|d DWORD "[vstack:0|d]" v5|d v5|d [665, 732[ "SpillInDominator"
  v62|d DWORD "[vstack:9|d]" v4|d v4|d [665, 732[ "OneSpillStore"
  v63|d DWORD "[vstack:8|d]" v3|d v3|d [665, 732[[830, 840[[868, 919[[920, 951[[952, 972[ "OneSpillStore"
  v64|d DWORD "[vstack:7|d]" v2|d v2|d [665, 732[[830, 840[[868, 919[[920, 951[[952, 972[ "OneSpillStore"
  v65|q QWORD "[vstack:4|q]" v1|q v1|q [663, 732[[830, 840[[868, 919[[920, 951[[952, 972[ "OneSpillStore"
  v66|q QWORD "[vstack:6|q]" v0|q v0|q [661, 665[ "OneSpillStore"
  v67|q QWORD "[vstack:6|q]" v0|q v0|q [665, 732[[830, 840[[868, 919[[920, 951[[952, 972[ "OneSpillStore"
  v68|q QWORD "[rdx|q]" v1|q v1|q [972, 993[ "OneSpillStore"
  v69|q QWORD "[rdi|q]" v10|q v10|q [898, 919[ "OneSpillStore"
  v70|q QWORD "[rsi|q]" v0|q v0|q [972, 993[ "OneSpillStore"
  v71|d DWORD "[rcx|d]" v2|d v2|d [972, 993[ "OneSpillStore"
  v72|d DWORD "[r8|d]" v3|d v3|d [972, 993[ "OneSpillStore"
  v73|q QWORD "[vstack:10|q]" v32|q v32|q [823, 827[ "OneSpillStore"
  v74|q QWORD "[rsi|q]" v32|q v32|q [840, 867[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44d0a7e slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v5|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v7|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction NULLCHECK address: [v7|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   90  <|@ instruction v8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   92  <|@ instruction v9|QWORD[.] = MOV input: [v8|QWORD] size: QWORD <|@ <|@
      nr   94  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   96  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction v12|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  102  <|@ instruction rax|DWORD = CAS (address: [v7|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v12|DWORD) accessKind: DWORD <|@ <|@
      nr  104  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v7|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  222  <|@ instruction v21|DWORD[_] = COMPRESSPOINTER (input: v9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 12], y: v21|DWORD[_]) size: DWORD <|@ <|@
      nr  226  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v10|QWORD[.], ~newValue: v9|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction v13|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  248  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction CMPBRANCH (x: v9|QWORD[.], y: v14|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction v15|DWORD = MOV input: [v7|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  268  <|@ instruction v16|DWORD = INC value: v15|DWORD size: DWORD <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 16], y: v16|DWORD) size: DWORD <|@ <|@
      nr  286  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction v24|DWORD = MOVZXB input: [v0|QWORD[.] + 26] size: DWORD <|@ <|@
      nr  304  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction v25|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  356  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = STACKMOVE (input: v54|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v55|DWORD[_] = STACKMOVE (input: v52|DWORD[_], ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30] <|@ <|@
      nr   -1  <|@ instruction v57|DWORD[_] = MOVE input: v55|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  434  <|@ instruction v26|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  436  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction v27|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30] <|@ <|@
      nr  438  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction v28|DWORD = MOV input: [v27|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30] <|@ <|@
      nr  440  <|@ instruction v29|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  442  <|@ instruction v30|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  444  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  446  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction CMPBRANCH (x: v31|QWORD[.], y: [v30|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v27|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v33|QWORD, temp2: v34|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  500  <|@ instruction MOV x: [v27|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction v35|DWORD = DEC value: v28|DWORD size: DWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [v27|DWORD[_] * 8 + 16], y: v35|DWORD) size: DWORD <|@ <|@
      nr  534  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  536  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 0.8633858966180564 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B38 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605951908349848457
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction v36|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  552  <|@ instruction TESTBRANCH (x: v36|DWORD[_], y: v36|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B39" 
    xhandlers
    flags 
    probability 4605946476645549382
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 4594090062091211228
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B29" "B38" "B37" "B33" "B31" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4558701288473823891
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction v37|DWORD[_] = MOV input: [v36|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  606  <|@ instruction TESTBRANCH (x: v37|DWORD[_], y: v37|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 4558140721140330403
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4544093902097985275
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction CMPCONSTBRANCH x: [v37|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 4543132494893730501
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  662  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = STACKMOVE (input: v48|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  664  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[_] = STACKMOVE (input: v59|DWORD[_], ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = STACKMOVE (input: v51|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = STACKMOVE (input: v50|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = STACKMOVE (input: v49|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = STACKMOVE (input: v66|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  666  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v10|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23] <|@ <|@
      nr  668  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.7455315145813735 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4539431807497542773
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  706  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  708  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  710  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  712  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  714  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  716  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23] <|@ <|@
      nr  718  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4532132168167648385
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  746  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533808883141386669
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction v39|DWORD = MOV input: [v37|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  774  <|@ instruction v40|DWORD = AND x: v39|DWORD y: -2 size: DWORD <|@ <|@
      nr  776  <|@ instruction rax|DWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction rax|DWORD = CAS (address: [v37|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v40|DWORD) accessKind: DWORD <|@ <|@
      nr  780  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529305283514016173
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v38|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v39|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v38|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v38|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v41|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35] <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction v42|DWORD[_] = MOV input: [v37|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  822  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = STACKMOVE (input: v60|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  824  <|@ instruction rsi|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35] <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [int[-97043|0xfffffffffffe84ed], long[8340|0x2094]] destination: B16 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101139 size: DWORD <|@ <|@
      nr  864  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr  866  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v28|DWORD 
locals: v44|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v44|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [int[-94995|0xfffffffffffe8ced], long[8340|0x2094]] destination: B12 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction JUMP ~outgoingValues: [int[-100115|0xfffffffffffe78ed], long[8980|0x2314]] destination: B22 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction JUMP ~outgoingValues: [int[-99091|0xfffffffffffe7ced], long[8340|0x2094]] destination: B20 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102419 size: DWORD <|@ <|@
      nr  916  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  918  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v15|DWORD 
locals: v10|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [int[-98067|0xfffffffffffe80ed], long[8340|0x2094]] destination: B18 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92947 size: DWORD <|@ <|@
      nr  948  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  950  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [int[-96019|0xfffffffffffe88ed], long[8340|0x2094]] destination: B14 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [int[-93971|0xfffffffffffe90ed], long[9620|0x2594]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B12" "B41" "B14" "B16" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr  972  <|@ instruction [v45|DWORD, v46|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr  990  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr  992  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: v24|DWORD 
locals: v0|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // java.io.Writer.lock:java.lang.Object
     4: astore        4
     6: aload         4
     8: instanceof    #49         // jdk.internal.misc.InternalLock
    11: ifeq          54
    14: aload         4
    16: checkcast     #49         // jdk.internal.misc.InternalLock
    19: astore        5
    21: aload         5
    23: invokevirtual #10         // jdk.internal.misc.InternalLock.lock:()void
    26: aload_0       
    27: aload_1       
    28: iload_2       
    29: iload_3       
    30: invokevirtual #15         // lockedWrite:(char[], int, int)void
    33: aload         5
    35: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    38: goto          51
    41: astore        6
    43: aload         5
    45: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    48: aload         6
    50: athrow        
    51: goto          81
    54: aload         4
    56: dup           
    57: astore        6
    59: monitorenter  
    60: aload_0       
    61: aload_1       
    62: iload_2       
    63: iload_3       
    64: invokevirtual #15         // lockedWrite:(char[], int, int)void
    67: aload         6
    69: monitorexit   
    70: goto          81
    73: astore        7
    75: aload         6
    77: monitorexit   
    78: aload         7
    80: athrow        
    81: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|- fixed "[rax|-]" rax|- v39|d [0, 1[[98, 103[[432, 433[[666, 668[[716, 718[[776, 779[[826, 827[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v2|d [0, 34[[428, 433[[666, 667[[706, 717[[826, 827[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v1|q [0, 32[[426, 433[[664, 667[[704, 717[[826, 827[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 26[[432, 433[[666, 667[[716, 717[[826, 827[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 30[[424, 433[[662, 667[[702, 717[[824, 827[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[432, 433[[666, 667[[712, 717[[826, 827[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- v3|d [0, 36[[430, 433[[666, 667[[708, 717[[826, 827[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[432, 433[[666, 667[[710, 717[[826, 827[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [30, 424[30 MustHaveRegister 40 MustHaveRegister 302 MustHaveRegister 424 ShouldHaveRegister  "OneSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [32, 426[32 MustHaveRegister 38 MustHaveRegister 426 ShouldHaveRegister  "OneSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [34, 428[34 MustHaveRegister 316 MustHaveRegister 328 MustHaveRegister 354 ShouldHaveRegister 428 ShouldHaveRegister  "OneSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|- [36, 430[36 MustHaveRegister 340 MustHaveRegister 354 ShouldHaveRegister 380 MustHaveRegister 430 ShouldHaveRegister  "OneSpillStore"
  v4|d DWORD "[r10|d]" v4|d -1 [38, 356[38 MustHaveRegister 328 ShouldHaveRegister 356 ShouldHaveRegister  "OneSpillStore"
  v5|d DWORD "[r11|d]" v5|d -1 [40, 382[40 MustHaveRegister 42 MustHaveRegister 84 MustHaveRegister 96 MustHaveRegister  "StoreAtDefinition"
  v6|d DWORD "[rax|d]" v6|d -1 [84, 86[84 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r9|d]" v7|d -1 [86, 224[[230, 284[86 MustHaveRegister 88 MustHaveRegister 94 MustHaveRegister 102 MustHaveRegister 220 MustHaveRegister 224 MustHaveRegister 246 MustHaveRegister 266 MustHaveRegister 284 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q -1 [90, 92[90 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rbx|q]" v9|q -1 [92, 227[[230, 250[92 MustHaveRegister 222 MustHaveRegister 226 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rdi|q]" v10|q v7|d [94, 227[[230, 272[[640, 665[94 MustHaveRegister 226 MustHaveRegister 662 ShouldHaveRegister  "OneSpillStore"
  v11|q QWORD "[rbp|q]" v11|q v5|d [96, 382[96 MustHaveRegister  "OneSpillStore"
  v12|d DWORD "[r13|d]" v12|d -1 [100, 102[100 MustHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rax|d]" v13|d -1 [246, 248[246 MustHaveRegister 248 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rax|q]" v14|q v13|d [248, 250[248 MustHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rbx|d]" v15|d -1 [266, 272[[898, 919[266 MustHaveRegister 268 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d v15|d [268, 284[268 MustHaveRegister 270 MustHaveRegister 284 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d rax|- [668, 670[668 MustHaveRegister 670 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d rax|- [718, 719[718 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rax|q]" v19|q -1 [220, 221[220 MustHaveRegister  "NoDefinitionFound"
  v20|q QWORD "[r13|q]" v20|q -1 [220, 221[220 MustHaveRegister  "NoDefinitionFound"
  v21|d DWORD "[rax|d]" v21|d v9|q [222, 224[222 MustHaveRegister 224 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[r9|q]" v22|q -1 [226, 227[226 MustHaveRegister  "NoDefinitionFound"
  v23|q QWORD "[rax|q]" v23|q -1 [226, 227[226 MustHaveRegister  "NoDefinitionFound"
  v24|d DWORD "[r9|d]" v24|d -1 [302, 382[[830, 840[[868, 898[[920, 930[[952, 993[302 MustHaveRegister 304 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[rbx|d]" v25|d v2|d [354, 368[354 MustHaveRegister 356 MustHaveRegister 368 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[rsi|d]" v26|d -1 [434, 446[434 MustHaveRegister 436 MustHaveRegister 446 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[r10|d]" v27|d -1 [436, 550[[840, 860[436 MustHaveRegister 438 MustHaveRegister 440 MustHaveRegister 498 MustHaveRegister 500 MustHaveRegister 532 MustHaveRegister 550 MustHaveRegister 860 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[r11|d]" v28|d -1 [438, 536[[840, 867[438 MustHaveRegister 460 ShouldHaveRegister 530 ShouldHaveRegister 536 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[rdx|d]" v29|d -1 [440, 444[440 MustHaveRegister 444 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[r8|q]" v30|q -1 [442, 448[442 MustHaveRegister 448 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rdx|q]" v31|q v29|d [444, 448[444 MustHaveRegister 448 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rsi|q]" v32|q v26|d [446, 554[[592, 608[[618, 630[[732, 798[446 MustHaveRegister  "OneSpillStore"
  v33|q QWORD "[rdx|q]" v33|q -1 [498, 499[498 MustHaveRegister  "NoDefinitionFound"
  v34|q QWORD "[r8|q]" v34|q -1 [498, 499[498 MustHaveRegister  "NoDefinitionFound"
  v35|d DWORD "[rdx|d]" v35|d v28|d [530, 532[530 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[rdx|d]" v36|d -1 [550, 554[[592, 604[550 MustHaveRegister 552 MustHaveRegister 604 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[r10|d]" v37|d -1 [604, 608[[618, 630[[732, 820[604 MustHaveRegister 606 MustHaveRegister 628 MustHaveRegister 744 MustHaveRegister 772 MustHaveRegister 778 MustHaveRegister 797 LiveAtLoopEnd 820 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[r11|q]" v38|q v37|d [744, 798[744 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[r8|d]" v39|d -1 [772, 795[772 MustHaveRegister 774 MustHaveRegister 776 ShouldHaveRegister  "NoSpillStore"
  v40|d DWORD "[r9|d]" v40|d v39|d [774, 778[774 MustHaveRegister 778 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[r9|q]" v41|q -1 [794, 795[794 MustHaveRegister  "NoDefinitionFound"
  v42|d DWORD "[r10|d]" v42|d -1 [820, 822[820 MustHaveRegister 822 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[r10|q]" v43|q v42|d [822, 824[822 MustHaveRegister 824 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[r10|q]" v44|q v27|d [860, 867[860 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[r10|d]" v45|d -1 [972, 988[988 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[r11|q]" v46|q -1 [972, 990[990 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[vstack:6|q]" v0|q v0|q [640, 661[ "OneSpillStore"
  v48|q QWORD "[vstack:4|q]" v1|q v1|q [640, 663[ "OneSpillStore"
  v49|d DWORD "[vstack:7|d]" v2|d v2|d [640, 665[ "OneSpillStore"
  v50|d DWORD "[vstack:8|d]" v3|d v3|d [640, 665[ "OneSpillStore"
  v51|d DWORD "[vstack:9|d]" v4|d v4|d [640, 665[ "OneSpillStore"
  v52|d DWORD "[vstack:0|d]" v5|d v5|d [382, 431[ "StoreAtDefinition"
  v53|q QWORD "[vstack:5|q]" v10|q v10|q [665, 717[702 ShouldHaveRegister  "OneSpillStore"
  v54|q QWORD "[vstack:1|q]" v11|q v11|q [382, 431[ "OneSpillStore"
  v55|d DWORD "[vstack:0|d]" v5|d v5|d [431, 433[ "StoreAtDefinition"
  v56|q QWORD "[vstack:1|q]" v11|q v11|q [431, 554[[592, 608[[618, 630[[640, 827[[830, 867[[868, 919[[920, 930[[952, 972[ "OneSpillStore"
  v57|d DWORD "[r11|d]" v5|d v5|d [433, 434[434 MustHaveRegister  "StoreAtDefinition"
  v58|q QWORD "[rbp|q]" v11|q v11|q [972, 993[ "OneSpillStore"
  v59|d DWORD "[vstack:0|d]" v5|d v5|d [640, 665[ "StoreAtDefinition"
  v60|q QWORD "[vstack:10|q]" v32|q v32|q [798, 823[ "OneSpillStore"
  v61|d DWORD "[vstack:0|d]" v5|d v5|d [665, 732[ "StoreAtDefinition"
  v62|d DWORD "[vstack:9|d]" v4|d v4|d [665, 732[ "OneSpillStore"
  v63|d DWORD "[vstack:8|d]" v3|d v3|d [665, 732[[830, 840[[868, 919[[920, 951[[952, 972[ "OneSpillStore"
  v64|d DWORD "[vstack:7|d]" v2|d v2|d [665, 732[[830, 840[[868, 919[[920, 951[[952, 972[ "OneSpillStore"
  v65|q QWORD "[vstack:4|q]" v1|q v1|q [663, 732[[830, 840[[868, 919[[920, 951[[952, 972[ "OneSpillStore"
  v66|q QWORD "[vstack:6|q]" v0|q v0|q [661, 665[ "OneSpillStore"
  v67|q QWORD "[vstack:6|q]" v0|q v0|q [665, 732[[830, 840[[868, 919[[920, 951[[952, 972[ "OneSpillStore"
  v68|q QWORD "[rdx|q]" v1|q v1|q [972, 993[ "OneSpillStore"
  v69|q QWORD "[rdi|q]" v10|q v10|q [898, 919[ "OneSpillStore"
  v70|q QWORD "[rsi|q]" v0|q v0|q [972, 993[ "OneSpillStore"
  v71|d DWORD "[rcx|d]" v2|d v2|d [972, 993[ "OneSpillStore"
  v72|d DWORD "[r8|d]" v3|d v3|d [972, 993[ "OneSpillStore"
  v73|q QWORD "[vstack:10|q]" v32|q v32|q [823, 827[ "OneSpillStore"
  v74|q QWORD "[rsi|q]" v32|q v32|q [840, 867[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44d0a7e slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v5|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v7|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction NULLCHECK address: [v7|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   90  <|@ instruction v8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   92  <|@ instruction v9|QWORD[.] = MOV input: [v8|QWORD] size: QWORD <|@ <|@
      nr   94  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   96  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction v12|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  102  <|@ instruction rax|DWORD = CAS (address: [v7|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v12|DWORD) accessKind: DWORD <|@ <|@
      nr  104  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v7|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  222  <|@ instruction v21|DWORD[_] = COMPRESSPOINTER (input: v9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 12], y: v21|DWORD[_]) size: DWORD <|@ <|@
      nr  226  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v10|QWORD[.], ~newValue: v9|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction v13|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  248  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction CMPBRANCH (x: v9|QWORD[.], y: v14|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction v15|DWORD = MOV input: [v7|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  268  <|@ instruction v16|DWORD = INC value: v15|DWORD size: DWORD <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 16], y: v16|DWORD) size: DWORD <|@ <|@
      nr  286  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction v24|DWORD = MOVZXB input: [v0|QWORD[.] + 26] size: DWORD <|@ <|@
      nr  304  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction v25|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  356  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = STACKMOVE (input: v54|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v55|DWORD[_] = STACKMOVE (input: v52|DWORD[_], ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30] <|@ <|@
      nr   -1  <|@ instruction v57|DWORD[_] = MOVE input: v55|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  434  <|@ instruction v26|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  436  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction v27|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30] <|@ <|@
      nr  438  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction v28|DWORD = MOV input: [v27|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30] <|@ <|@
      nr  440  <|@ instruction v29|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  442  <|@ instruction v30|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  444  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  446  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction CMPBRANCH (x: v31|QWORD[.], y: [v30|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v27|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v33|QWORD, temp2: v34|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  500  <|@ instruction MOV x: [v27|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction v35|DWORD = DEC value: v28|DWORD size: DWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [v27|DWORD[_] * 8 + 16], y: v35|DWORD) size: DWORD <|@ <|@
      nr  534  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  536  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 0.8633858966180564 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B38 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605951908349848457
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction v36|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  552  <|@ instruction TESTBRANCH (x: v36|DWORD[_], y: v36|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B39" 
    xhandlers
    flags 
    probability 4605946476645549382
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 4594090062091211228
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B29" "B38" "B37" "B33" "B31" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4558701288473823891
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction v37|DWORD[_] = MOV input: [v36|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  606  <|@ instruction TESTBRANCH (x: v37|DWORD[_], y: v37|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 4558140721140330403
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4544093902097985275
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction CMPCONSTBRANCH x: [v37|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 4543132494893730501
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  662  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = STACKMOVE (input: v48|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  664  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[_] = STACKMOVE (input: v59|DWORD[_], ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = STACKMOVE (input: v51|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = STACKMOVE (input: v50|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = STACKMOVE (input: v49|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = STACKMOVE (input: v66|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  666  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v10|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23] <|@ <|@
      nr  668  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.7455315145813735 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4539431807497542773
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  706  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  708  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  710  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  712  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  714  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  716  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23] <|@ <|@
      nr  718  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4532132168167648385
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  746  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533808883141386669
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction v39|DWORD = MOV input: [v37|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  774  <|@ instruction v40|DWORD = AND x: v39|DWORD y: -2 size: DWORD <|@ <|@
      nr  776  <|@ instruction rax|DWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction rax|DWORD = CAS (address: [v37|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v40|DWORD) accessKind: DWORD <|@ <|@
      nr  780  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529305283514016173
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v38|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v39|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v38|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v38|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v41|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35] <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction v42|DWORD[_] = MOV input: [v37|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  822  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = STACKMOVE (input: v60|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  824  <|@ instruction rsi|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35] <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [int[-97043|0xfffffffffffe84ed], long[8340|0x2094]] destination: B16 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101139 size: DWORD <|@ <|@
      nr  864  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr  866  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v28|DWORD 
locals: v44|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v44|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [int[-94995|0xfffffffffffe8ced], long[8340|0x2094]] destination: B12 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction JUMP ~outgoingValues: [int[-100115|0xfffffffffffe78ed], long[8980|0x2314]] destination: B22 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction JUMP ~outgoingValues: [int[-99091|0xfffffffffffe7ced], long[8340|0x2094]] destination: B20 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102419 size: DWORD <|@ <|@
      nr  916  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  918  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v15|DWORD 
locals: v10|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [int[-98067|0xfffffffffffe80ed], long[8340|0x2094]] destination: B18 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92947 size: DWORD <|@ <|@
      nr  948  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  950  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [int[-96019|0xfffffffffffe88ed], long[8340|0x2094]] destination: B14 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [int[-93971|0xfffffffffffe90ed], long[9620|0x2594]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B12" "B41" "B14" "B16" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr  972  <|@ instruction [v45|DWORD, v46|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr  990  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr  992  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: v24|DWORD 
locals: v0|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // java.io.Writer.lock:java.lang.Object
     4: astore        4
     6: aload         4
     8: instanceof    #49         // jdk.internal.misc.InternalLock
    11: ifeq          54
    14: aload         4
    16: checkcast     #49         // jdk.internal.misc.InternalLock
    19: astore        5
    21: aload         5
    23: invokevirtual #10         // jdk.internal.misc.InternalLock.lock:()void
    26: aload_0       
    27: aload_1       
    28: iload_2       
    29: iload_3       
    30: invokevirtual #15         // lockedWrite:(char[], int, int)void
    33: aload         5
    35: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    38: goto          51
    41: astore        6
    43: aload         5
    45: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    48: aload         6
    50: athrow        
    51: goto          81
    54: aload         4
    56: dup           
    57: astore        6
    59: monitorenter  
    60: aload_0       
    61: aload_1       
    62: iload_2       
    63: iload_3       
    64: invokevirtual #15         // lockedWrite:(char[], int, int)void
    67: aload         6
    69: monitorexit   
    70: goto          81
    73: astore        7
    75: aload         6
    77: monitorexit   
    78: aload         7
    80: athrow        
    81: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|- fixed "[rax|-]" rax|- v39|d [0, 1[[98, 103[[432, 433[[666, 668[[716, 718[[776, 779[[826, 827[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v2|d [0, 34[[428, 433[[666, 667[[706, 717[[826, 827[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v1|q [0, 32[[426, 433[[664, 667[[704, 717[[826, 827[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 26[[432, 433[[666, 667[[716, 717[[826, 827[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 30[[424, 433[[662, 667[[702, 717[[824, 827[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[432, 433[[666, 667[[712, 717[[826, 827[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- v3|d [0, 36[[430, 433[[666, 667[[708, 717[[826, 827[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[432, 433[[666, 667[[710, 717[[826, 827[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[432, 433[[666, 667[[716, 717[[826, 827[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [30, 424[30 MustHaveRegister 40 MustHaveRegister 302 MustHaveRegister 424 ShouldHaveRegister  "OneSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [32, 426[32 MustHaveRegister 38 MustHaveRegister 426 ShouldHaveRegister  "OneSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [34, 428[34 MustHaveRegister 316 MustHaveRegister 328 MustHaveRegister 354 ShouldHaveRegister 428 ShouldHaveRegister  "OneSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|- [36, 430[36 MustHaveRegister 340 MustHaveRegister 354 ShouldHaveRegister 380 MustHaveRegister 430 ShouldHaveRegister  "OneSpillStore"
  v4|d DWORD "[r10|d]" v4|d -1 [38, 356[38 MustHaveRegister 328 ShouldHaveRegister 356 ShouldHaveRegister  "OneSpillStore"
  v5|d DWORD "[r11|d]" v5|d -1 [40, 382[40 MustHaveRegister 42 MustHaveRegister 84 MustHaveRegister 96 MustHaveRegister  "StoreAtDefinition"
  v6|d DWORD "[rax|d]" v6|d -1 [84, 86[84 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r9|d]" v7|d -1 [86, 224[[230, 284[86 MustHaveRegister 88 MustHaveRegister 94 MustHaveRegister 102 MustHaveRegister 220 MustHaveRegister 224 MustHaveRegister 246 MustHaveRegister 266 MustHaveRegister 284 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q -1 [90, 92[90 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rbx|q]" v9|q -1 [92, 227[[230, 250[92 MustHaveRegister 222 MustHaveRegister 226 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rdi|q]" v10|q v7|d [94, 227[[230, 272[[640, 665[94 MustHaveRegister 226 MustHaveRegister 662 ShouldHaveRegister  "OneSpillStore"
  v11|q QWORD "[rbp|q]" v11|q v5|d [96, 382[96 MustHaveRegister  "OneSpillStore"
  v12|d DWORD "[r13|d]" v12|d -1 [100, 102[100 MustHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rax|d]" v13|d -1 [246, 248[246 MustHaveRegister 248 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rax|q]" v14|q v13|d [248, 250[248 MustHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rbx|d]" v15|d -1 [266, 272[[898, 919[266 MustHaveRegister 268 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d v15|d [268, 284[268 MustHaveRegister 270 MustHaveRegister 284 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d rax|- [668, 670[668 MustHaveRegister 670 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d rax|- [718, 719[718 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rax|q]" v19|q -1 [220, 221[220 MustHaveRegister  "NoDefinitionFound"
  v20|q QWORD "[r13|q]" v20|q -1 [220, 221[220 MustHaveRegister  "NoDefinitionFound"
  v21|d DWORD "[rax|d]" v21|d v9|q [222, 224[222 MustHaveRegister 224 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[r9|q]" v22|q -1 [226, 227[226 MustHaveRegister  "NoDefinitionFound"
  v23|q QWORD "[rax|q]" v23|q -1 [226, 227[226 MustHaveRegister  "NoDefinitionFound"
  v24|d DWORD "[r9|d]" v24|d -1 [302, 382[[830, 840[[868, 898[[920, 930[[952, 993[302 MustHaveRegister 304 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[rbx|d]" v25|d v2|d [354, 368[354 MustHaveRegister 356 MustHaveRegister 368 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[rsi|d]" v26|d -1 [434, 446[434 MustHaveRegister 436 MustHaveRegister 446 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[r10|d]" v27|d -1 [436, 550[[840, 860[436 MustHaveRegister 438 MustHaveRegister 440 MustHaveRegister 498 MustHaveRegister 500 MustHaveRegister 532 MustHaveRegister 550 MustHaveRegister 860 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[r11|d]" v28|d -1 [438, 536[[840, 867[438 MustHaveRegister 460 ShouldHaveRegister 530 ShouldHaveRegister 536 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[rdx|d]" v29|d -1 [440, 444[440 MustHaveRegister 444 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[r8|q]" v30|q -1 [442, 448[442 MustHaveRegister 448 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rdx|q]" v31|q v29|d [444, 448[444 MustHaveRegister 448 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rsi|q]" v32|q v26|d [446, 554[[592, 608[[618, 630[[732, 798[446 MustHaveRegister  "OneSpillStore"
  v33|q QWORD "[rdx|q]" v33|q -1 [498, 499[498 MustHaveRegister  "NoDefinitionFound"
  v34|q QWORD "[r8|q]" v34|q -1 [498, 499[498 MustHaveRegister  "NoDefinitionFound"
  v35|d DWORD "[rdx|d]" v35|d v28|d [530, 532[530 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[rdx|d]" v36|d -1 [550, 554[[592, 604[550 MustHaveRegister 552 MustHaveRegister 604 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[r10|d]" v37|d -1 [604, 608[[618, 630[[732, 820[604 MustHaveRegister 606 MustHaveRegister 628 MustHaveRegister 744 MustHaveRegister 772 MustHaveRegister 778 MustHaveRegister 797 LiveAtLoopEnd 820 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[r11|q]" v38|q v37|d [744, 798[744 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[r8|d]" v39|d -1 [772, 795[772 MustHaveRegister 774 MustHaveRegister 776 ShouldHaveRegister  "NoSpillStore"
  v40|d DWORD "[r9|d]" v40|d v39|d [774, 778[774 MustHaveRegister 778 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[r9|q]" v41|q -1 [794, 795[794 MustHaveRegister  "NoDefinitionFound"
  v42|d DWORD "[r10|d]" v42|d -1 [820, 822[820 MustHaveRegister 822 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[r10|q]" v43|q v42|d [822, 824[822 MustHaveRegister 824 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[r10|q]" v44|q v27|d [860, 867[860 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[r10|d]" v45|d -1 [972, 988[988 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[r11|q]" v46|q -1 [972, 990[990 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[vstack:6|q]" v0|q v0|q [640, 661[ "OneSpillStore"
  v48|q QWORD "[vstack:4|q]" v1|q v1|q [640, 663[ "OneSpillStore"
  v49|d DWORD "[vstack:7|d]" v2|d v2|d [640, 665[ "OneSpillStore"
  v50|d DWORD "[vstack:8|d]" v3|d v3|d [640, 665[ "OneSpillStore"
  v51|d DWORD "[vstack:9|d]" v4|d v4|d [640, 665[ "OneSpillStore"
  v52|d DWORD "[vstack:0|d]" v5|d v5|d [382, 431[ "StoreAtDefinition"
  v53|q QWORD "[vstack:5|q]" v10|q v10|q [665, 717[702 ShouldHaveRegister  "OneSpillStore"
  v54|q QWORD "[vstack:1|q]" v11|q v11|q [382, 431[ "OneSpillStore"
  v55|d DWORD "[vstack:0|d]" v5|d v5|d [431, 433[ "StoreAtDefinition"
  v56|q QWORD "[vstack:1|q]" v11|q v11|q [431, 554[[592, 608[[618, 630[[640, 827[[830, 867[[868, 919[[920, 930[[952, 972[ "OneSpillStore"
  v57|d DWORD "[r11|d]" v5|d v5|d [433, 434[434 MustHaveRegister  "StoreAtDefinition"
  v58|q QWORD "[rbp|q]" v11|q v11|q [972, 993[ "OneSpillStore"
  v59|d DWORD "[vstack:0|d]" v5|d v5|d [640, 665[ "StoreAtDefinition"
  v60|q QWORD "[vstack:10|q]" v32|q v32|q [798, 823[ "OneSpillStore"
  v61|d DWORD "[vstack:0|d]" v5|d v5|d [665, 732[ "StoreAtDefinition"
  v62|d DWORD "[vstack:9|d]" v4|d v4|d [665, 732[ "OneSpillStore"
  v63|d DWORD "[vstack:8|d]" v3|d v3|d [665, 732[[830, 840[[868, 919[[920, 951[[952, 972[ "OneSpillStore"
  v64|d DWORD "[vstack:7|d]" v2|d v2|d [665, 732[[830, 840[[868, 919[[920, 951[[952, 972[ "OneSpillStore"
  v65|q QWORD "[vstack:4|q]" v1|q v1|q [663, 732[[830, 840[[868, 919[[920, 951[[952, 972[ "OneSpillStore"
  v66|q QWORD "[vstack:6|q]" v0|q v0|q [661, 665[ "OneSpillStore"
  v67|q QWORD "[vstack:6|q]" v0|q v0|q [665, 732[[830, 840[[868, 919[[920, 951[[952, 972[ "OneSpillStore"
  v68|q QWORD "[rdx|q]" v1|q v1|q [972, 993[ "OneSpillStore"
  v69|q QWORD "[rdi|q]" v10|q v10|q [898, 919[ "OneSpillStore"
  v70|q QWORD "[rsi|q]" v0|q v0|q [972, 993[ "OneSpillStore"
  v71|d DWORD "[rcx|d]" v2|d v2|d [972, 993[ "OneSpillStore"
  v72|d DWORD "[r8|d]" v3|d v3|d [972, 993[ "OneSpillStore"
  v73|q QWORD "[vstack:10|q]" v32|q v32|q [823, 827[ "OneSpillStore"
  v74|q QWORD "[rsi|q]" v32|q v32|q [840, 867[ "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44d0a7e slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v5|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v7|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction NULLCHECK address: [v7|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   90  <|@ instruction v8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   92  <|@ instruction v9|QWORD[.] = MOV input: [v8|QWORD] size: QWORD <|@ <|@
      nr   94  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   96  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction v12|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  102  <|@ instruction rax|DWORD = CAS (address: [v7|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v12|DWORD) accessKind: DWORD <|@ <|@
      nr  104  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v7|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  222  <|@ instruction v21|DWORD[_] = COMPRESSPOINTER (input: v9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 12], y: v21|DWORD[_]) size: DWORD <|@ <|@
      nr  226  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v10|QWORD[.], ~newValue: v9|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction v13|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  248  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction CMPBRANCH (x: v9|QWORD[.], y: v14|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction v15|DWORD = MOV input: [v7|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  268  <|@ instruction v16|DWORD = INC value: v15|DWORD size: DWORD <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 16], y: v16|DWORD) size: DWORD <|@ <|@
      nr  286  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction v24|DWORD = MOVZXB input: [v0|QWORD[.] + 26] size: DWORD <|@ <|@
      nr  304  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction v25|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  356  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = MOVE input: v5|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = STACKMOVE (input: v54|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v55|DWORD[_] = STACKMOVE (input: v52|DWORD[_], ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30] <|@ <|@
      nr   -1  <|@ instruction v57|DWORD[_] = MOVE input: v55|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  434  <|@ instruction v26|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  436  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction v27|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30] <|@ <|@
      nr  438  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction v28|DWORD = MOV input: [v27|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30] <|@ <|@
      nr  440  <|@ instruction v29|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  442  <|@ instruction v30|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  444  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  446  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction CMPBRANCH (x: v31|QWORD[.], y: [v30|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v27|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v33|QWORD, temp2: v34|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  500  <|@ instruction MOV x: [v27|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction v35|DWORD = DEC value: v28|DWORD size: DWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [v27|DWORD[_] * 8 + 16], y: v35|DWORD) size: DWORD <|@ <|@
      nr  534  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  536  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 0.8633858966180564 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B38 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605951908349848457
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction v36|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  552  <|@ instruction TESTBRANCH (x: v36|DWORD[_], y: v36|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B39" 
    xhandlers
    flags 
    probability 4605946476645549382
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 4594090062091211228
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B29" "B38" "B37" "B33" "B31" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4558701288473823891
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction v37|DWORD[_] = MOV input: [v36|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  606  <|@ instruction TESTBRANCH (x: v37|DWORD[_], y: v37|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 4558140721140330403
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4544093902097985275
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction CMPCONSTBRANCH x: [v37|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 4543132494893730501
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = MOVE input: v5|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  662  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = STACKMOVE (input: v48|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  664  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[_] = STACKMOVE (input: v59|DWORD[_], ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = STACKMOVE (input: v51|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = STACKMOVE (input: v50|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = STACKMOVE (input: v49|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = STACKMOVE (input: v66|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  666  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v10|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23] <|@ <|@
      nr  668  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.7455315145813735 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4539431807497542773
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  706  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  708  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  710  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  712  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  714  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  716  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23] <|@ <|@
      nr  718  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOVE input: v61|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: v62|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: v63|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: v64|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4532132168167648385
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOVE input: v61|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: v62|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: v63|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: v64|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  730  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  746  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533808883141386669
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction v39|DWORD = MOV input: [v37|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  774  <|@ instruction v40|DWORD = AND x: v39|DWORD y: -2 size: DWORD <|@ <|@
      nr  776  <|@ instruction rax|DWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction rax|DWORD = CAS (address: [v37|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v40|DWORD) accessKind: DWORD <|@ <|@
      nr  780  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529305283514016173
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v38|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v39|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v38|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v38|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v41|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35] <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction v42|DWORD[_] = MOV input: [v37|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  822  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = STACKMOVE (input: v60|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  824  <|@ instruction rsi|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35] <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[8340|0x2094] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[-97043|0xfffffffffffe84ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v63|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: v64|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101139 size: DWORD <|@ <|@
      nr  864  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr  866  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v28|DWORD 
locals: v44|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v44|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[8340|0x2094] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[-94995|0xfffffffffffe8ced] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v63|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: v64|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[8980|0x2314] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[-100115|0xfffffffffffe78ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v63|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: v64|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  886  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[8340|0x2094] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[-99091|0xfffffffffffe7ced] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v63|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: v64|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  896  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102419 size: DWORD <|@ <|@
      nr  916  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  918  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v15|DWORD 
locals: v10|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[8340|0x2094] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[-98067|0xfffffffffffe80ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v63|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: v64|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92947 size: DWORD <|@ <|@
      nr  948  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  950  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[8340|0x2094] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[-96019|0xfffffffffffe88ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v63|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: v64|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[-93971|0xfffffffffffe90ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v63|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: v64|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B12" "B41" "B14" "B16" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr  972  <|@ instruction [v45|DWORD, v46|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr  990  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr  992  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: v24|DWORD 
locals: v0|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // java.io.Writer.lock:java.lang.Object
     4: astore        4
     6: aload         4
     8: instanceof    #49         // jdk.internal.misc.InternalLock
    11: ifeq          54
    14: aload         4
    16: checkcast     #49         // jdk.internal.misc.InternalLock
    19: astore        5
    21: aload         5
    23: invokevirtual #10         // jdk.internal.misc.InternalLock.lock:()void
    26: aload_0       
    27: aload_1       
    28: iload_2       
    29: iload_3       
    30: invokevirtual #15         // lockedWrite:(char[], int, int)void
    33: aload         5
    35: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    38: goto          51
    41: astore        6
    43: aload         5
    45: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    48: aload         6
    50: athrow        
    51: goto          81
    54: aload         4
    56: dup           
    57: astore        6
    59: monitorenter  
    60: aload_0       
    61: aload_1       
    62: iload_2       
    63: iload_3       
    64: invokevirtual #15         // lockedWrite:(char[], int, int)void
    67: aload         6
    69: monitorexit   
    70: goto          81
    73: astore        7
    75: aload         6
    77: monitorexit   
    78: aload         7
    80: athrow        
    81: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44d0a7e slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v5|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v7|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction NULLCHECK address: [v7|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   90  <|@ instruction v8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   92  <|@ instruction v9|QWORD[.] = MOV input: [v8|QWORD] size: QWORD <|@ <|@
      nr   94  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   96  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction v12|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  102  <|@ instruction rax|DWORD = CAS (address: [v7|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v12|DWORD) accessKind: DWORD <|@ <|@
      nr  104  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v7|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  222  <|@ instruction v21|DWORD[_] = COMPRESSPOINTER (input: v9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 12], y: v21|DWORD[_]) size: DWORD <|@ <|@
      nr  226  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v10|QWORD[.], ~newValue: v9|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction v13|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  248  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction CMPBRANCH (x: v9|QWORD[.], y: v14|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction v15|DWORD = MOV input: [v7|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  268  <|@ instruction v16|DWORD = INC value: v15|DWORD size: DWORD <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 16], y: v16|DWORD) size: DWORD <|@ <|@
      nr  286  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction v24|DWORD = MOVZXB input: [v0|QWORD[.] + 26] size: DWORD <|@ <|@
      nr  304  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction v25|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  356  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = STACKMOVE (input: v54|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30] <|@ <|@
      nr   -1  <|@ instruction v57|DWORD[_] = MOVE input: v55|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  434  <|@ instruction v26|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  436  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction v27|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30] <|@ <|@
      nr  438  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction v28|DWORD = MOV input: [v27|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30] <|@ <|@
      nr  440  <|@ instruction v29|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  442  <|@ instruction v30|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  444  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  446  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction CMPBRANCH (x: v31|QWORD[.], y: [v30|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v27|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v33|QWORD, temp2: v34|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  500  <|@ instruction MOV x: [v27|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction v35|DWORD = DEC value: v28|DWORD size: DWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [v27|DWORD[_] * 8 + 16], y: v35|DWORD) size: DWORD <|@ <|@
      nr  534  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  536  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 0.8633858966180564 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B38 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605951908349848457
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction v36|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  552  <|@ instruction TESTBRANCH (x: v36|DWORD[_], y: v36|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B39" 
    xhandlers
    flags 
    probability 4605946476645549382
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 4594090062091211228
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B29" "B38" "B37" "B33" "B31" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4558701288473823891
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction v37|DWORD[_] = MOV input: [v36|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  606  <|@ instruction TESTBRANCH (x: v37|DWORD[_], y: v37|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 4558140721140330403
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4544093902097985275
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction CMPCONSTBRANCH x: [v37|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 4543132494893730501
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  662  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = STACKMOVE (input: v48|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  664  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = STACKMOVE (input: v51|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = STACKMOVE (input: v50|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = STACKMOVE (input: v49|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = STACKMOVE (input: v66|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  666  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v10|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23] <|@ <|@
      nr  668  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.7455315145813735 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4539431807497542773
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  706  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  708  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  710  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  712  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  714  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  716  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23] <|@ <|@
      nr  718  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOVE input: v61|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: v62|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: v63|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: v64|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4532132168167648385
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOVE input: v61|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: v62|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: v63|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: v64|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  730  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  746  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533808883141386669
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction v39|DWORD = MOV input: [v37|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  774  <|@ instruction v40|DWORD = AND x: v39|DWORD y: -2 size: DWORD <|@ <|@
      nr  776  <|@ instruction rax|DWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction rax|DWORD = CAS (address: [v37|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v40|DWORD) accessKind: DWORD <|@ <|@
      nr  780  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529305283514016173
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v38|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v39|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v38|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v38|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v41|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35] <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction v42|DWORD[_] = MOV input: [v37|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  822  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = STACKMOVE (input: v60|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  824  <|@ instruction rsi|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35] <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[8340|0x2094] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[-97043|0xfffffffffffe84ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v63|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: v64|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101139 size: DWORD <|@ <|@
      nr  864  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr  866  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v28|DWORD 
locals: v44|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v44|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[8340|0x2094] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[-94995|0xfffffffffffe8ced] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v63|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: v64|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[8980|0x2314] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[-100115|0xfffffffffffe78ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v63|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: v64|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  886  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[8340|0x2094] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[-99091|0xfffffffffffe7ced] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v63|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: v64|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  896  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102419 size: DWORD <|@ <|@
      nr  916  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  918  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v15|DWORD 
locals: v10|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v10|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v11|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v11|QWORD[.] v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[8340|0x2094] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[-98067|0xfffffffffffe80ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v63|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: v64|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92947 size: DWORD <|@ <|@
      nr  948  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  950  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[8340|0x2094] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[-96019|0xfffffffffffe88ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v63|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: v64|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[-93971|0xfffffffffffe90ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v63|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: v64|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B12" "B41" "B14" "B16" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr  990  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr  992  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: v24|DWORD 
locals: v0|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - v11|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // java.io.Writer.lock:java.lang.Object
     4: astore        4
     6: aload         4
     8: instanceof    #49         // jdk.internal.misc.InternalLock
    11: ifeq          54
    14: aload         4
    16: checkcast     #49         // jdk.internal.misc.InternalLock
    19: astore        5
    21: aload         5
    23: invokevirtual #10         // jdk.internal.misc.InternalLock.lock:()void
    26: aload_0       
    27: aload_1       
    28: iload_2       
    29: iload_3       
    30: invokevirtual #15         // lockedWrite:(char[], int, int)void
    33: aload         5
    35: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    38: goto          51
    41: astore        6
    43: aload         5
    45: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    48: aload         6
    50: athrow        
    51: goto          81
    54: aload         4
    56: dup           
    57: astore        6
    59: monitorenter  
    60: aload_0       
    61: aload_1       
    62: iload_2       
    63: iload_3       
    64: invokevirtual #15         // lockedWrite:(char[], int, int)void
    67: aload         6
    69: monitorexit   
    70: goto          81
    73: astore        7
    75: aload         6
    77: monitorexit   
    78: aload         7
    80: athrow        
    81: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44d0a7e slotKind: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rax|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction r9|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction NULLCHECK address: [r9|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   90  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   92  <|@ instruction rbx|QWORD[.] = MOV input: [rax|QWORD] size: QWORD <|@ <|@
      nr   94  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   96  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction r13|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  102  <|@ instruction rax|DWORD = CAS (address: [r9|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r13|DWORD) accessKind: DWORD <|@ <|@
      nr  104  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r9|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  222  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  226  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rdi|QWORD[.], ~newValue: rbx|QWORD[.]) {temp: r9|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction rax|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  248  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction CMPBRANCH (x: rbx|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  268  <|@ instruction rax|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  286  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction r9|DWORD = MOVZXB input: [rsi|QWORD[.] + 26] size: DWORD <|@ <|@
      nr  304  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction rbx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  356  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - vstack:1|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30] <|@ <|@
      nr   -1  <|@ instruction r11|DWORD[_] = MOVE input: vstack:0|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  434  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  436  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - vstack:1|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30] <|@ <|@
      nr  438  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - vstack:1|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30] <|@ <|@
      nr  440  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  442  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  444  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  500  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  534  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  536  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8633858966180564 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B38 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605951908349848457
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  552  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B39" 
    xhandlers
    flags 
    probability 4605946476645549382
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 4594090062091211228
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B29" "B38" "B37" "B33" "B31" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4558701288473823891
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  606  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 4558140721140330403
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4544093902097985275
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 4543132494893730501
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  666  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: vstack:5|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:5|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:1|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: vstack:6|QWORD[.] vstack:4|QWORD[.] vstack:7|DWORD vstack:8|DWORD vstack:1|QWORD[.] vstack:1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23] <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7455315145813735 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4539431807497542773
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  706  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  708  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  710  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  712  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  714  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  716  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:5|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:1|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: vstack:6|QWORD[.] vstack:4|QWORD[.] vstack:7|DWORD vstack:8|DWORD vstack:1|QWORD[.] vstack:1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23] <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD[_] = MOVE input: vstack:0|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4532132168167648385
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD[_] = MOVE input: vstack:0|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  730  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  746  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533808883141386669
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  774  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr  776  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr  780  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529305283514016173
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:1|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - vstack:1|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35] <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  822  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  824  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: vstack:10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:1|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - vstack:1|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35] <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-97043|0xfffffffffffe84ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101139 size: DWORD <|@ <|@
      nr  864  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr  866  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:1|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - vstack:1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-94995|0xfffffffffffe8ced] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[8980|0x2314] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-100115|0xfffffffffffe78ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  886  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-99091|0xfffffffffffe7ced] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  896  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102419 size: DWORD <|@ <|@
      nr  916  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  918  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: rbx|DWORD 
locals: rdi|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: rdi|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:1|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: vstack:6|QWORD[.] vstack:4|QWORD[.] vstack:7|DWORD vstack:8|DWORD vstack:1|QWORD[.] vstack:1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-98067|0xfffffffffffe80ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92947 size: DWORD <|@ <|@
      nr  948  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  950  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: vstack:6|QWORD[.] vstack:4|QWORD[.] vstack:7|DWORD vstack:8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-96019|0xfffffffffffe88ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-93971|0xfffffffffffe90ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B12" "B41" "B14" "B16" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  990  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  992  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: r9|DWORD 
locals: rsi|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - rbp|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // java.io.Writer.lock:java.lang.Object
     4: astore        4
     6: aload         4
     8: instanceof    #49         // jdk.internal.misc.InternalLock
    11: ifeq          54
    14: aload         4
    16: checkcast     #49         // jdk.internal.misc.InternalLock
    19: astore        5
    21: aload         5
    23: invokevirtual #10         // jdk.internal.misc.InternalLock.lock:()void
    26: aload_0       
    27: aload_1       
    28: iload_2       
    29: iload_3       
    30: invokevirtual #15         // lockedWrite:(char[], int, int)void
    33: aload         5
    35: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    38: goto          51
    41: astore        6
    43: aload         5
    45: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    48: aload         6
    50: athrow        
    51: goto          81
    54: aload         4
    56: dup           
    57: astore        6
    59: monitorenter  
    60: aload_0       
    61: aload_1       
    62: iload_2       
    63: iload_3       
    64: invokevirtual #15         // lockedWrite:(char[], int, int)void
    67: aload         6
    69: monitorexit   
    70: goto          81
    73: astore        7
    75: aload         6
    77: monitorexit   
    78: aload         7
    80: athrow        
    81: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44d0a7e slotKind: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rax|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction r9|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction NULLCHECK address: [r9|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   90  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   92  <|@ instruction rbx|QWORD[.] = MOV input: [rax|QWORD] size: QWORD <|@ <|@
      nr   94  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   96  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction r13|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  102  <|@ instruction rax|DWORD = CAS (address: [r9|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r13|DWORD) accessKind: DWORD <|@ <|@
      nr  104  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r9|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  222  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  226  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rdi|QWORD[.], ~newValue: rbx|QWORD[.]) {temp: r9|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction rax|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  248  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction CMPBRANCH (x: rbx|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  268  <|@ instruction rax|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  286  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction r9|DWORD = MOVZXB input: [rsi|QWORD[.] + 26] size: DWORD <|@ <|@
      nr  304  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction rbx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  356  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - vstack:1|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30] <|@ <|@
      nr   -1  <|@ instruction r11|DWORD[_] = MOVE input: vstack:0|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  434  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  436  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - vstack:1|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30] <|@ <|@
      nr  438  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - vstack:1|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30] <|@ <|@
      nr  440  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  442  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  444  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  500  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  534  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  536  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8633858966180564 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B38 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605951908349848457
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  552  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B39" 
    xhandlers
    flags 
    probability 4605946476645549382
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 4594090062091211228
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B29" "B38" "B37" "B33" "B31" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4558701288473823891
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  606  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 4558140721140330403
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4544093902097985275
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 4543132494893730501
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  666  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: vstack:5|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:5|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:1|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: vstack:6|QWORD[.] vstack:4|QWORD[.] vstack:7|DWORD vstack:8|DWORD vstack:1|QWORD[.] vstack:1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23] <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7455315145813735 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4539431807497542773
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  706  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  708  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  710  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  712  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  714  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  716  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:5|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:1|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: vstack:6|QWORD[.] vstack:4|QWORD[.] vstack:7|DWORD vstack:8|DWORD vstack:1|QWORD[.] vstack:1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23] <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD[_] = MOVE input: vstack:0|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4532132168167648385
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD[_] = MOVE input: vstack:0|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  730  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  746  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533808883141386669
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  774  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr  776  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr  780  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529305283514016173
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:1|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - vstack:1|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35] <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  822  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  824  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: vstack:10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:1|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - vstack:1|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35] <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-97043|0xfffffffffffe84ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101139 size: DWORD <|@ <|@
      nr  864  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr  866  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:1|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - vstack:1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-94995|0xfffffffffffe8ced] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[8980|0x2314] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-100115|0xfffffffffffe78ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  886  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-99091|0xfffffffffffe7ced] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  896  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102419 size: DWORD <|@ <|@
      nr  916  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  918  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: rbx|DWORD 
locals: rdi|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: rdi|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:1|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: vstack:6|QWORD[.] vstack:4|QWORD[.] vstack:7|DWORD vstack:8|DWORD vstack:1|QWORD[.] vstack:1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-98067|0xfffffffffffe80ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92947 size: DWORD <|@ <|@
      nr  948  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  950  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: vstack:6|QWORD[.] vstack:4|QWORD[.] vstack:7|DWORD vstack:8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-96019|0xfffffffffffe88ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-93971|0xfffffffffffe90ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B12" "B41" "B14" "B16" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  990  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  992  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: r9|DWORD 
locals: rsi|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - rbp|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // java.io.Writer.lock:java.lang.Object
     4: astore        4
     6: aload         4
     8: instanceof    #49         // jdk.internal.misc.InternalLock
    11: ifeq          54
    14: aload         4
    16: checkcast     #49         // jdk.internal.misc.InternalLock
    19: astore        5
    21: aload         5
    23: invokevirtual #10         // jdk.internal.misc.InternalLock.lock:()void
    26: aload_0       
    27: aload_1       
    28: iload_2       
    29: iload_3       
    30: invokevirtual #15         // lockedWrite:(char[], int, int)void
    33: aload         5
    35: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    38: goto          51
    41: astore        6
    43: aload         5
    45: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    48: aload         6
    50: athrow        
    51: goto          81
    54: aload         4
    56: dup           
    57: astore        6
    59: monitorenter  
    60: aload_0       
    61: aload_1       
    62: iload_2       
    63: iload_3       
    64: invokevirtual #15         // lockedWrite:(char[], int, int)void
    67: aload         6
    69: monitorexit   
    70: goto          81
    73: astore        7
    75: aload         6
    77: monitorexit   
    78: aload         7
    80: athrow        
    81: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44d0a7e slotKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction vstack:0|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction rax|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction r9|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   82  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction NULLCHECK address: [r9|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   84  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   86  <|@ instruction rbx|QWORD[.] = MOV input: [rax|QWORD] size: QWORD <|@ <|@
      nr   88  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   94  <|@ instruction r13|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   96  <|@ instruction rax|DWORD = CAS (address: [r9|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r13|DWORD) accessKind: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r9|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  438  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  442  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rdi|QWORD[.], ~newValue: rbx|QWORD[.]) {temp: r9|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction rax|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  118  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rbx|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction r9|DWORD = MOVZXB input: [rsi|QWORD[.] + 26] size: DWORD <|@ <|@
      nr  460  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction rbx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  614  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction vstack:1|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - vstack:1|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30] <|@ <|@
      nr  788  <|@ instruction r11|DWORD[_] = MOVE input: vstack:0|DWORD[_] moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  792  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - vstack:1|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30] <|@ <|@
      nr  794  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - vstack:1|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30] <|@ <|@
      nr  796  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  798  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  800  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  802  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  804  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  856  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  890  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  892  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8633858966180564 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B38 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605951908349848457
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  908  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B39" 
    xhandlers
    flags 
    probability 4605946476645549382
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 4594090062091211228
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B29" "B38" "B37" "B33" "B31" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4558701288473823891
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  934  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 4558140721140330403
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4544093902097985275
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 4543132494893730501
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction vstack:1|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction vstack:9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction vstack:8|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction vstack:7|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction vstack:6|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  230  <|@ instruction vstack:5|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: vstack:5|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:5|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:1|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: vstack:6|QWORD[.] vstack:4|QWORD[.] vstack:7|DWORD vstack:8|DWORD vstack:1|QWORD[.] vstack:1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23] <|@ <|@
      nr  234  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7455315145813735 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4539431807497542773
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  270  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  272  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  274  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  276  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  278  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:5|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:1|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: vstack:6|QWORD[.] vstack:4|QWORD[.] vstack:7|DWORD vstack:8|DWORD vstack:1|QWORD[.] vstack:1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23] <|@ <|@
      nr  282  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r11|DWORD[_] = MOVE input: vstack:0|DWORD[_] moveKind: DWORD <|@ <|@
      nr  286  <|@ instruction r10|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction r8|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rcx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4532132168167648385
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction r11|DWORD[_] = MOVE input: vstack:0|DWORD[_] moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction r10|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction r8|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rcx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  982  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533808883141386669
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1010  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1012  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1016  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529305283514016173
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:1|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - vstack:1|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35] <|@ <|@
      nr 1032  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1036  <|@ instruction vstack:10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1060  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr 1062  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: vstack:10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:1|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - vstack:1|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35] <|@ <|@
      nr 1066  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction vstack:1|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction vstack:8|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction vstack:7|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction vstack:6|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  586  <|@ instruction r10|DWORD = MOVE input: int[-97043|0xfffffffffffe84ed] <|@ <|@
      nr  588  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction r8|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr  592  <|@ instruction rcx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr 1118  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101139 size: DWORD <|@ <|@
      nr 1120  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1122  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:1|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - vstack:1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction vstack:1|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction vstack:8|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  480  <|@ instruction vstack:7|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction vstack:6|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  494  <|@ instruction r10|DWORD = MOVE input: int[-94995|0xfffffffffffe8ced] <|@ <|@
      nr  496  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction r8|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction rcx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction vstack:1|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction vstack:8|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction vstack:7|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction vstack:6|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction r11|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-100115|0xfffffffffffe78ed] <|@ <|@
      nr  730  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction r8|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr  734  <|@ instruction rcx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  736  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction vstack:1|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction vstack:8|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction vstack:7|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction vstack:6|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  682  <|@ instruction r10|DWORD = MOVE input: int[-99091|0xfffffffffffe7ced] <|@ <|@
      nr  684  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction r8|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction rcx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction vstack:1|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction vstack:8|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction vstack:7|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction vstack:6|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102419 size: DWORD <|@ <|@
      nr  170  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: rbx|DWORD 
locals: rdi|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: rdi|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:1|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: vstack:6|QWORD[.] vstack:4|QWORD[.] vstack:7|DWORD vstack:8|DWORD vstack:1|QWORD[.] vstack:1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction vstack:1|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction vstack:8|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  622  <|@ instruction vstack:7|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction vstack:6|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  636  <|@ instruction r10|DWORD = MOVE input: int[-98067|0xfffffffffffe80ed] <|@ <|@
      nr  638  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction r8|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction rcx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction vstack:8|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1184  <|@ instruction vstack:7|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1186  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1188  <|@ instruction vstack:6|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92947 size: DWORD <|@ <|@
      nr 1206  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1208  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: vstack:6|QWORD[.] vstack:4|QWORD[.] vstack:7|DWORD vstack:8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction vstack:1|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction vstack:8|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction vstack:7|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction vstack:6|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  540  <|@ instruction r10|DWORD = MOVE input: int[-96019|0xfffffffffffe88ed] <|@ <|@
      nr  542  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction r8|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr  546  <|@ instruction rcx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  548  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction vstack:1|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction vstack:8|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1130  <|@ instruction vstack:7|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1132  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction vstack:6|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction r11|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr 1144  <|@ instruction r10|DWORD = MOVE input: int[-93971|0xfffffffffffe90ed] <|@ <|@
      nr 1146  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1148  <|@ instruction r8|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr 1150  <|@ instruction rcx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1154  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B12" "B41" "B14" "B16" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1178  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: r9|DWORD 
locals: rsi|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - rbp|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // java.io.Writer.lock:java.lang.Object
     4: astore        4
     6: aload         4
     8: instanceof    #49         // jdk.internal.misc.InternalLock
    11: ifeq          54
    14: aload         4
    16: checkcast     #49         // jdk.internal.misc.InternalLock
    19: astore        5
    21: aload         5
    23: invokevirtual #10         // jdk.internal.misc.InternalLock.lock:()void
    26: aload_0       
    27: aload_1       
    28: iload_2       
    29: iload_3       
    30: invokevirtual #15         // lockedWrite:(char[], int, int)void
    33: aload         5
    35: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    38: goto          51
    41: astore        6
    43: aload         5
    45: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    48: aload         6
    50: athrow        
    51: goto          81
    54: aload         4
    56: dup           
    57: astore        6
    59: monitorenter  
    60: aload_0       
    61: aload_1       
    62: iload_2       
    63: iload_3       
    64: invokevirtual #15         // lockedWrite:(char[], int, int)void
    67: aload         6
    69: monitorexit   
    70: goto          81
    73: astore        7
    75: aload         6
    77: monitorexit   
    78: aload         7
    80: athrow        
    81: return        
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|d DWORD "[vstack:0|d]" vstack:0|d -1 [34, 788[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [144, 1146[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[vstack:4|q]" vstack:4|q -1 [150, 1208[ "NOT_SUPPORTED"
  vstack:5|q QWORD "[vstack:5|q]" vstack:5|q -1 [230, 280[ "NOT_SUPPORTED"
  vstack:6|q QWORD "[vstack:6|q]" vstack:6|q -1 [152, 1208[ "NOT_SUPPORTED"
  vstack:7|d DWORD "[vstack:7|d]" vstack:7|d -1 [148, 1208[ "NOT_SUPPORTED"
  vstack:8|d DWORD "[vstack:8|d]" vstack:8|d -1 [146, 1208[ "NOT_SUPPORTED"
  vstack:9|d DWORD "[vstack:9|d]" vstack:9|d -1 [196, 310[ "NOT_SUPPORTED"
  vstack:10|q QWORD "[vstack:10|q]" vstack:10|q -1 [1036, 1064[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|d DWORD "[stack:40|d]" vstack:0|d -1 [34, 788[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:48|q]" vstack:1|q -1 [144, 1146[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[stack:56|q]" vstack:4|q -1 [150, 1208[ "NOT_SUPPORTED"
  vstack:5|q QWORD "[stack:72|q]" vstack:5|q -1 [230, 280[ "NOT_SUPPORTED"
  vstack:6|q QWORD "[stack:64|q]" vstack:6|q -1 [152, 1208[ "NOT_SUPPORTED"
  vstack:7|d DWORD "[stack:32|d]" vstack:7|d -1 [148, 1208[ "NOT_SUPPORTED"
  vstack:8|d DWORD "[stack:28|d]" vstack:8|d -1 [146, 1208[ "NOT_SUPPORTED"
  vstack:9|d DWORD "[stack:36|d]" vstack:9|d -1 [196, 310[ "NOT_SUPPORTED"
  vstack:10|q QWORD "[stack:72|q]" vstack:10|q -1 [1036, 1064[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44d0a7e slotKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction stack:40|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction rax|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction r9|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   82  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction NULLCHECK address: [r9|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   84  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   86  <|@ instruction rbx|QWORD[.] = MOV input: [rax|QWORD] size: QWORD <|@ <|@
      nr   88  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   94  <|@ instruction r13|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   96  <|@ instruction rax|DWORD = CAS (address: [r9|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r13|DWORD) accessKind: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r9|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  438  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  442  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rdi|QWORD[.], ~newValue: rbx|QWORD[.]) {temp: r9|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction rax|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  118  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rbx|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction r9|DWORD = MOVZXB input: [rsi|QWORD[.] + 26] size: DWORD <|@ <|@
      nr  460  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction rbx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  614  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30] <|@ <|@
      nr  788  <|@ instruction r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  792  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30] <|@ <|@
      nr  794  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30] <|@ <|@
      nr  796  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  798  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  800  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  802  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  804  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  856  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  890  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  892  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8633858966180564 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B38 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605951908349848457
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  908  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B39" 
    xhandlers
    flags 
    probability 4605946476645549382
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 4594090062091211228
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B29" "B38" "B37" "B33" "B31" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4558701288473823891
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  934  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 4558140721140330403
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4544093902097985275
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 4543132494893730501
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  230  <|@ instruction stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:72|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD stack:48|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23] <|@ <|@
      nr  234  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7455315145813735 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4539431807497542773
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  270  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  272  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  274  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  276  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  278  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD stack:48|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23] <|@ <|@
      nr  282  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD <|@ <|@
      nr  286  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4532132168167648385
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  982  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533808883141386669
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1010  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1012  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1016  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529305283514016173
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35] <|@ <|@
      nr 1032  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1036  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1060  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr 1062  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35] <|@ <|@
      nr 1066  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  586  <|@ instruction r10|DWORD = MOVE input: int[-97043|0xfffffffffffe84ed] <|@ <|@
      nr  588  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  592  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr 1118  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101139 size: DWORD <|@ <|@
      nr 1120  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1122  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  480  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  494  <|@ instruction r10|DWORD = MOVE input: int[-94995|0xfffffffffffe8ced] <|@ <|@
      nr  496  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction r11|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-100115|0xfffffffffffe78ed] <|@ <|@
      nr  730  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  734  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  736  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  682  <|@ instruction r10|DWORD = MOVE input: int[-99091|0xfffffffffffe7ced] <|@ <|@
      nr  684  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102419 size: DWORD <|@ <|@
      nr  170  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: rbx|DWORD 
locals: rdi|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: rdi|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD stack:48|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  622  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  636  <|@ instruction r10|DWORD = MOVE input: int[-98067|0xfffffffffffe80ed] <|@ <|@
      nr  638  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1184  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1186  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1188  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92947 size: DWORD <|@ <|@
      nr 1206  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1208  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  540  <|@ instruction r10|DWORD = MOVE input: int[-96019|0xfffffffffffe88ed] <|@ <|@
      nr  542  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  546  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  548  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1130  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1132  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction r11|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr 1144  <|@ instruction r10|DWORD = MOVE input: int[-93971|0xfffffffffffe90ed] <|@ <|@
      nr 1146  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1148  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1150  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1154  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B12" "B41" "B14" "B16" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1178  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: r9|DWORD 
locals: rsi|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - rbp|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // java.io.Writer.lock:java.lang.Object
     4: astore        4
     6: aload         4
     8: instanceof    #49         // jdk.internal.misc.InternalLock
    11: ifeq          54
    14: aload         4
    16: checkcast     #49         // jdk.internal.misc.InternalLock
    19: astore        5
    21: aload         5
    23: invokevirtual #10         // jdk.internal.misc.InternalLock.lock:()void
    26: aload_0       
    27: aload_1       
    28: iload_2       
    29: iload_3       
    30: invokevirtual #15         // lockedWrite:(char[], int, int)void
    33: aload         5
    35: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    38: goto          51
    41: astore        6
    43: aload         5
    45: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    48: aload         6
    50: athrow        
    51: goto          81
    54: aload         4
    56: dup           
    57: astore        6
    59: monitorenter  
    60: aload_0       
    61: aload_1       
    62: iload_2       
    63: iload_3       
    64: invokevirtual #15         // lockedWrite:(char[], int, int)void
    67: aload         6
    69: monitorexit   
    70: goto          81
    73: astore        7
    75: aload         6
    77: monitorexit   
    78: aload         7
    80: athrow        
    81: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44d0a7e slotKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction stack:40|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction rax|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction r9|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   82  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction NULLCHECK address: [r9|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   84  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   86  <|@ instruction rbx|QWORD[.] = MOV input: [rax|QWORD] size: QWORD <|@ <|@
      nr   88  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   94  <|@ instruction r13|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   96  <|@ instruction rax|DWORD = CAS (address: [r9|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r13|DWORD) accessKind: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r9|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  438  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  442  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rdi|QWORD[.], ~newValue: rbx|QWORD[.]) {temp: r9|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction rax|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  118  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rbx|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction r9|DWORD = MOVZXB input: [rsi|QWORD[.] + 26] size: DWORD <|@ <|@
      nr  460  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction rbx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  614  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30] <|@ <|@
      nr  788  <|@ instruction r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  792  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30] <|@ <|@
      nr  794  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30] <|@ <|@
      nr  796  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  798  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  800  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  802  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  804  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  856  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  890  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  892  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8633858966180564 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B38 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605951908349848457
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  908  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B39" 
    xhandlers
    flags 
    probability 4605946476645549382
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 4594090062091211228
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B29" "B38" "B37" "B33" "B31" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4558701288473823891
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  934  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 4558140721140330403
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4544093902097985275
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 4543132494893730501
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  230  <|@ instruction stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:72|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD stack:48|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23] <|@ <|@
      nr  234  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7455315145813735 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4539431807497542773
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  270  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  272  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  274  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  276  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  278  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD stack:48|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23] <|@ <|@
      nr  282  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD <|@ <|@
      nr  286  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4532132168167648385
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  982  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533808883141386669
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1010  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1012  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1016  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529305283514016173
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35] <|@ <|@
      nr 1032  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1036  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1060  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr 1062  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35] <|@ <|@
      nr 1066  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  586  <|@ instruction r10|DWORD = MOVE input: int[-97043|0xfffffffffffe84ed] <|@ <|@
      nr  588  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  592  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr 1118  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101139 size: DWORD <|@ <|@
      nr 1120  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1122  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  480  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  494  <|@ instruction r10|DWORD = MOVE input: int[-94995|0xfffffffffffe8ced] <|@ <|@
      nr  496  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction r11|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-100115|0xfffffffffffe78ed] <|@ <|@
      nr  730  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  734  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  736  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  682  <|@ instruction r10|DWORD = MOVE input: int[-99091|0xfffffffffffe7ced] <|@ <|@
      nr  684  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102419 size: DWORD <|@ <|@
      nr  170  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: rbx|DWORD 
locals: rdi|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: rdi|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD stack:48|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  622  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  636  <|@ instruction r10|DWORD = MOVE input: int[-98067|0xfffffffffffe80ed] <|@ <|@
      nr  638  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1184  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1186  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1188  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92947 size: DWORD <|@ <|@
      nr 1206  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1208  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  540  <|@ instruction r10|DWORD = MOVE input: int[-96019|0xfffffffffffe88ed] <|@ <|@
      nr  542  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  546  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  548  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1130  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1132  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction r11|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr 1144  <|@ instruction r10|DWORD = MOVE input: int[-93971|0xfffffffffffe90ed] <|@ <|@
      nr 1146  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1148  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1150  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1154  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B12" "B41" "B14" "B16" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1178  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: r9|DWORD 
locals: rsi|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - rbp|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // java.io.Writer.lock:java.lang.Object
     4: astore        4
     6: aload         4
     8: instanceof    #49         // jdk.internal.misc.InternalLock
    11: ifeq          54
    14: aload         4
    16: checkcast     #49         // jdk.internal.misc.InternalLock
    19: astore        5
    21: aload         5
    23: invokevirtual #10         // jdk.internal.misc.InternalLock.lock:()void
    26: aload_0       
    27: aload_1       
    28: iload_2       
    29: iload_3       
    30: invokevirtual #15         // lockedWrite:(char[], int, int)void
    33: aload         5
    35: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    38: goto          51
    41: astore        6
    43: aload         5
    45: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    48: aload         6
    50: athrow        
    51: goto          81
    54: aload         4
    56: dup           
    57: astore        6
    59: monitorenter  
    60: aload_0       
    61: aload_1       
    62: iload_2       
    63: iload_3       
    64: invokevirtual #15         // lockedWrite:(char[], int, int)void
    67: aload         6
    69: monitorexit   
    70: goto          81
    73: astore        7
    75: aload         6
    77: monitorexit   
    78: aload         7
    80: athrow        
    81: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44d0a7e slotKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction stack:40|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction rax|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction r9|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   82  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction NULLCHECK address: [r9|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   84  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   86  <|@ instruction rbx|QWORD[.] = MOV input: [rax|QWORD] size: QWORD <|@ <|@
      nr   88  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   94  <|@ instruction r13|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   96  <|@ instruction rax|DWORD = CAS (address: [r9|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r13|DWORD) accessKind: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r9|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  438  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  442  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rdi|QWORD[.], ~newValue: rbx|QWORD[.]) {temp: r9|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction rax|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  118  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rbx|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction r9|DWORD = MOVZXB input: [rsi|QWORD[.] + 26] size: DWORD <|@ <|@
      nr  460  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction rbx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  614  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30] <|@ <|@
      nr  788  <|@ instruction r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  792  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30] <|@ <|@
      nr  794  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30] <|@ <|@
      nr  796  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  798  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  800  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  802  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  804  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  856  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  890  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  892  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8633858966180564 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B38 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605951908349848457
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  908  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B39" 
    xhandlers
    flags 
    probability 4605946476645549382
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 4594090062091211228
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B29" "B38" "B37" "B33" "B31" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4558701288473823891
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  934  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 4558140721140330403
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4544093902097985275
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 4543132494893730501
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  230  <|@ instruction stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:72|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD stack:48|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23] <|@ <|@
      nr  234  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7455315145813735 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4539431807497542773
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  270  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  272  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  274  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  276  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  278  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD stack:48|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23] <|@ <|@
      nr  282  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD <|@ <|@
      nr  286  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4532132168167648385
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  982  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533808883141386669
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1010  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1012  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1016  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529305283514016173
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35] <|@ <|@
      nr 1032  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1036  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1060  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr 1062  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35] <|@ <|@
      nr 1066  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  586  <|@ instruction r10|DWORD = MOVE input: int[-97043|0xfffffffffffe84ed] <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr 1118  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101139 size: DWORD <|@ <|@
      nr 1120  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1122  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  480  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  494  <|@ instruction r10|DWORD = MOVE input: int[-94995|0xfffffffffffe8ced] <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction r11|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-100115|0xfffffffffffe78ed] <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  682  <|@ instruction r10|DWORD = MOVE input: int[-99091|0xfffffffffffe7ced] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102419 size: DWORD <|@ <|@
      nr  170  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: rbx|DWORD 
locals: rdi|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: rdi|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD stack:48|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  622  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  636  <|@ instruction r10|DWORD = MOVE input: int[-98067|0xfffffffffffe80ed] <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1184  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1186  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1188  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92947 size: DWORD <|@ <|@
      nr 1206  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1208  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  540  <|@ instruction r10|DWORD = MOVE input: int[-96019|0xfffffffffffe88ed] <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1130  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1132  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction r11|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr 1144  <|@ instruction r10|DWORD = MOVE input: int[-93971|0xfffffffffffe90ed] <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B12" "B41" "B14" "B16" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  496  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1178  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: r9|DWORD 
locals: rsi|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - rbp|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // java.io.Writer.lock:java.lang.Object
     4: astore        4
     6: aload         4
     8: instanceof    #49         // jdk.internal.misc.InternalLock
    11: ifeq          54
    14: aload         4
    16: checkcast     #49         // jdk.internal.misc.InternalLock
    19: astore        5
    21: aload         5
    23: invokevirtual #10         // jdk.internal.misc.InternalLock.lock:()void
    26: aload_0       
    27: aload_1       
    28: iload_2       
    29: iload_3       
    30: invokevirtual #15         // lockedWrite:(char[], int, int)void
    33: aload         5
    35: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    38: goto          51
    41: astore        6
    43: aload         5
    45: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    48: aload         6
    50: athrow        
    51: goto          81
    54: aload         4
    56: dup           
    57: astore        6
    59: monitorenter  
    60: aload_0       
    61: aload_1       
    62: iload_2       
    63: iload_3       
    64: invokevirtual #15         // lockedWrite:(char[], int, int)void
    67: aload         6
    69: monitorexit   
    70: goto          81
    73: astore        7
    75: aload         6
    77: monitorexit   
    78: aload         7
    80: athrow        
    81: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44d0a7e slotKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction stack:40|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction rax|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction r9|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   82  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction NULLCHECK address: [r9|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   84  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   86  <|@ instruction rbx|QWORD[.] = MOV input: [rax|QWORD] size: QWORD <|@ <|@
      nr   88  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   94  <|@ instruction r13|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   96  <|@ instruction rax|DWORD = CAS (address: [r9|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r13|DWORD) accessKind: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r9|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  438  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  442  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rdi|QWORD[.], ~newValue: rbx|QWORD[.]) {temp: r9|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction rax|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  118  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rbx|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction r9|DWORD = MOVZXB input: [rsi|QWORD[.] + 26] size: DWORD <|@ <|@
      nr  460  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction rbx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  614  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30] <|@ <|@
      nr  788  <|@ instruction r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  792  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30] <|@ <|@
      nr  794  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30] <|@ <|@
      nr  796  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  798  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  800  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  802  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  804  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  856  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  890  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  892  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8633858966180564 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B38 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605951908349848457
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  908  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B39" 
    xhandlers
    flags 
    probability 4605946476645549382
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 4594090062091211228
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B29" "B38" "B37" "B33" "B31" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4558701288473823891
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  934  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 4558140721140330403
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4544093902097985275
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 4543132494893730501
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  230  <|@ instruction stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:72|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD stack:48|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23] <|@ <|@
      nr  234  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7455315145813735 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4539431807497542773
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  270  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  272  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  274  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  276  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  278  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD stack:48|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23] <|@ <|@
      nr  282  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD <|@ <|@
      nr  286  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4532132168167648385
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  982  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533808883141386669
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1010  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1012  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1016  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529305283514016173
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35] <|@ <|@
      nr 1032  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1036  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1060  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr 1062  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35] <|@ <|@
      nr 1066  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  586  <|@ instruction r10|DWORD = MOVE input: int[-97043|0xfffffffffffe84ed] <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr 1118  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101139 size: DWORD <|@ <|@
      nr 1120  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1122  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  480  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  494  <|@ instruction r10|DWORD = MOVE input: int[-94995|0xfffffffffffe8ced] <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction r11|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-100115|0xfffffffffffe78ed] <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  682  <|@ instruction r10|DWORD = MOVE input: int[-99091|0xfffffffffffe7ced] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102419 size: DWORD <|@ <|@
      nr  170  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: rbx|DWORD 
locals: rdi|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: rdi|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD stack:48|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  622  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  636  <|@ instruction r10|DWORD = MOVE input: int[-98067|0xfffffffffffe80ed] <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1184  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1186  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1188  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92947 size: DWORD <|@ <|@
      nr 1206  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1208  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  540  <|@ instruction r10|DWORD = MOVE input: int[-96019|0xfffffffffffe88ed] <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1130  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1132  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction r11|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr 1144  <|@ instruction r10|DWORD = MOVE input: int[-93971|0xfffffffffffe90ed] <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B12" "B41" "B14" "B16" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  496  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1178  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: r9|DWORD 
locals: rsi|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - rbp|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // java.io.Writer.lock:java.lang.Object
     4: astore        4
     6: aload         4
     8: instanceof    #49         // jdk.internal.misc.InternalLock
    11: ifeq          54
    14: aload         4
    16: checkcast     #49         // jdk.internal.misc.InternalLock
    19: astore        5
    21: aload         5
    23: invokevirtual #10         // jdk.internal.misc.InternalLock.lock:()void
    26: aload_0       
    27: aload_1       
    28: iload_2       
    29: iload_3       
    30: invokevirtual #15         // lockedWrite:(char[], int, int)void
    33: aload         5
    35: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    38: goto          51
    41: astore        6
    43: aload         5
    45: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    48: aload         6
    50: athrow        
    51: goto          81
    54: aload         4
    56: dup           
    57: astore        6
    59: monitorenter  
    60: aload_0       
    61: aload_1       
    62: iload_2       
    63: iload_3       
    64: invokevirtual #15         // lockedWrite:(char[], int, int)void
    67: aload         6
    69: monitorexit   
    70: goto          81
    73: astore        7
    75: aload         6
    77: monitorexit   
    78: aload         7
    80: athrow        
    81: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44d0a7e slotKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction stack:40|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction rax|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction r9|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   82  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction NULLCHECK address: [r9|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   84  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   86  <|@ instruction rbx|QWORD[.] = MOV input: [rax|QWORD] size: QWORD <|@ <|@
      nr   88  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   94  <|@ instruction r13|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   96  <|@ instruction rax|DWORD = CAS (address: [r9|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r13|DWORD) accessKind: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r9|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  438  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  442  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rdi|QWORD[.], ~newValue: rbx|QWORD[.]) {temp: r9|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction rax|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  118  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rbx|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction r9|DWORD = MOVZXB input: [rsi|QWORD[.] + 26] size: DWORD <|@ <|@
      nr  460  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction rbx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  614  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30] <|@ <|@
      nr  788  <|@ instruction r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  792  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30] <|@ <|@
      nr  794  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30] <|@ <|@
      nr  796  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  798  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  800  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  802  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  804  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  856  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  890  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  892  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8633858966180564 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B38 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605951908349848457
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  908  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B39" 
    xhandlers
    flags 
    probability 4605946476645549382
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 4594090062091211228
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B29" "B38" "B37" "B33" "B31" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4558701288473823891
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  934  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 4558140721140330403
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4544093902097985275
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 4543132494893730501
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  230  <|@ instruction stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:72|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD stack:48|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23] <|@ <|@
      nr  234  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7455315145813735 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4539431807497542773
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  270  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  272  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  274  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  276  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  278  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD stack:48|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23] <|@ <|@
      nr  282  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD <|@ <|@
      nr  286  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4532132168167648385
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  982  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533808883141386669
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1010  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1012  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1016  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529305283514016173
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35] <|@ <|@
      nr 1032  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1036  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1060  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr 1062  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35] <|@ <|@
      nr 1066  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  586  <|@ instruction r10|DWORD = MOVE input: int[-97043|0xfffffffffffe84ed] <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr 1118  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101139 size: DWORD <|@ <|@
      nr 1120  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1122  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  480  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  494  <|@ instruction r10|DWORD = MOVE input: int[-94995|0xfffffffffffe8ced] <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction r11|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-100115|0xfffffffffffe78ed] <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  682  <|@ instruction r10|DWORD = MOVE input: int[-99091|0xfffffffffffe7ced] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102419 size: DWORD <|@ <|@
      nr  170  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: rbx|DWORD 
locals: rdi|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: rdi|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD stack:48|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  622  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  636  <|@ instruction r10|DWORD = MOVE input: int[-98067|0xfffffffffffe80ed] <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1184  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1186  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1188  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92947 size: DWORD <|@ <|@
      nr 1206  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1208  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  540  <|@ instruction r10|DWORD = MOVE input: int[-96019|0xfffffffffffe88ed] <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1130  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1132  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction r11|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr 1144  <|@ instruction r10|DWORD = MOVE input: int[-93971|0xfffffffffffe90ed] <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B12" "B41" "B14" "B16" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  496  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1178  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: r9|DWORD 
locals: rsi|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - rbp|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // java.io.Writer.lock:java.lang.Object
     4: astore        4
     6: aload         4
     8: instanceof    #49         // jdk.internal.misc.InternalLock
    11: ifeq          54
    14: aload         4
    16: checkcast     #49         // jdk.internal.misc.InternalLock
    19: astore        5
    21: aload         5
    23: invokevirtual #10         // jdk.internal.misc.InternalLock.lock:()void
    26: aload_0       
    27: aload_1       
    28: iload_2       
    29: iload_3       
    30: invokevirtual #15         // lockedWrite:(char[], int, int)void
    33: aload         5
    35: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    38: goto          51
    41: astore        6
    43: aload         5
    45: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    48: aload         6
    50: athrow        
    51: goto          81
    54: aload         4
    56: dup           
    57: astore        6
    59: monitorenter  
    60: aload_0       
    61: aload_1       
    62: iload_2       
    63: iload_3       
    64: invokevirtual #15         // lockedWrite:(char[], int, int)void
    67: aload         6
    69: monitorexit   
    70: goto          81
    73: astore        7
    75: aload         6
    77: monitorexit   
    78: aload         7
    80: athrow        
    81: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44d0a7e slotKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction stack:40|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction rax|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction r9|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   82  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction NULLCHECK address: [r9|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   84  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   86  <|@ instruction rbx|QWORD[.] = MOV input: [rax|QWORD] size: QWORD <|@ <|@
      nr   88  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   94  <|@ instruction r13|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   96  <|@ instruction rax|DWORD = CAS (address: [r9|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r13|DWORD) accessKind: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r9|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  438  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  442  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rdi|QWORD[.], ~newValue: rbx|QWORD[.]) {temp: r9|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction rax|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  118  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rbx|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction r9|DWORD = MOVZXB input: [rsi|QWORD[.] + 26] size: DWORD <|@ <|@
      nr  460  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction rbx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  614  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30] <|@ <|@
      nr  788  <|@ instruction r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  792  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30] <|@ <|@
      nr  794  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30] <|@ <|@
      nr  796  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  798  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  800  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  802  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  804  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  856  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  890  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  892  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8633858966180564 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B38 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605951908349848457
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  908  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B39" 
    xhandlers
    flags 
    probability 4605946476645549382
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 4594090062091211228
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B29" "B38" "B37" "B33" "B31" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4558701288473823891
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  934  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 4558140721140330403
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4544093902097985275
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 4543132494893730501
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  230  <|@ instruction stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:72|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD stack:48|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23] <|@ <|@
      nr  234  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7455315145813735 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4539431807497542773
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  270  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  272  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  274  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  276  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  278  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD stack:48|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23] <|@ <|@
      nr  282  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD <|@ <|@
      nr  286  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4532132168167648385
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  982  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533808883141386669
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1010  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1012  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1016  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529305283514016173
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35] <|@ <|@
      nr 1032  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1036  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1060  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr 1062  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35] <|@ <|@
      nr 1066  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  586  <|@ instruction r10|DWORD = MOVE input: int[-97043|0xfffffffffffe84ed] <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr 1118  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101139 size: DWORD <|@ <|@
      nr 1120  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1122  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  480  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  494  <|@ instruction r10|DWORD = MOVE input: int[-94995|0xfffffffffffe8ced] <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction r11|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-100115|0xfffffffffffe78ed] <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  682  <|@ instruction r10|DWORD = MOVE input: int[-99091|0xfffffffffffe7ced] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102419 size: DWORD <|@ <|@
      nr  170  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: rbx|DWORD 
locals: rdi|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: rdi|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD stack:48|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  622  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  636  <|@ instruction r10|DWORD = MOVE input: int[-98067|0xfffffffffffe80ed] <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1184  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1186  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1188  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92947 size: DWORD <|@ <|@
      nr 1206  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1208  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  540  <|@ instruction r10|DWORD = MOVE input: int[-96019|0xfffffffffffe88ed] <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1130  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1132  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction r11|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr 1144  <|@ instruction r10|DWORD = MOVE input: int[-93971|0xfffffffffffe90ed] <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B12" "B41" "B14" "B16" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  496  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1178  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: r9|DWORD 
locals: rsi|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - rbp|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // java.io.Writer.lock:java.lang.Object
     4: astore        4
     6: aload         4
     8: instanceof    #49         // jdk.internal.misc.InternalLock
    11: ifeq          54
    14: aload         4
    16: checkcast     #49         // jdk.internal.misc.InternalLock
    19: astore        5
    21: aload         5
    23: invokevirtual #10         // jdk.internal.misc.InternalLock.lock:()void
    26: aload_0       
    27: aload_1       
    28: iload_2       
    29: iload_3       
    30: invokevirtual #15         // lockedWrite:(char[], int, int)void
    33: aload         5
    35: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    38: goto          51
    41: astore        6
    43: aload         5
    45: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    48: aload         6
    50: athrow        
    51: goto          81
    54: aload         4
    56: dup           
    57: astore        6
    59: monitorenter  
    60: aload_0       
    61: aload_1       
    62: iload_2       
    63: iload_3       
    64: invokevirtual #15         // lockedWrite:(char[], int, int)void
    67: aload         6
    69: monitorexit   
    70: goto          81
    73: astore        7
    75: aload         6
    77: monitorexit   
    78: aload         7
    80: athrow        
    81: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44d0a7e slotKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction stack:40|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction rax|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction r9|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   82  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction NULLCHECK address: [r9|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   84  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   86  <|@ instruction rbx|QWORD[.] = MOV input: [rax|QWORD] size: QWORD <|@ <|@
      nr   88  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   94  <|@ instruction r13|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   96  <|@ instruction rax|DWORD = CAS (address: [r9|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r13|DWORD) accessKind: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r9|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  438  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  442  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rdi|QWORD[.], ~newValue: rbx|QWORD[.]) {temp: r9|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction r9|DWORD = MOVZXB input: [rsi|QWORD[.] + 26] size: DWORD <|@ <|@
      nr  460  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction rbx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  614  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30] <|@ <|@
      nr  788  <|@ instruction r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  792  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30] <|@ <|@
      nr  794  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30] <|@ <|@
      nr  796  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  798  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  800  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  802  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  804  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  856  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  890  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  892  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8633858966180564 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B38 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605951908349848457
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  908  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B39" 
    xhandlers
    flags 
    probability 4605946476645549382
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B29" "B38" "B37" "B33" "B31" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 4594090062091211228
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction rax|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  118  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rbx|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4558701288473823891
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  934  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 4558140721140330403
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4544093902097985275
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 4543132494893730501
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  230  <|@ instruction stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:72|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD stack:48|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23] <|@ <|@
      nr  234  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7455315145813735 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4539431807497542773
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  270  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  272  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  274  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  276  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  278  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD stack:48|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23] <|@ <|@
      nr  282  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD <|@ <|@
      nr  286  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4532132168167648385
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  982  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529305283514016173
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35] <|@ <|@
      nr 1032  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533808883141386669
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1010  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1012  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1016  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1036  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1060  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr 1062  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35] <|@ <|@
      nr 1066  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1130  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1132  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction r11|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr 1144  <|@ instruction r10|DWORD = MOVE input: int[-93971|0xfffffffffffe90ed] <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B12" "B41" "B14" "B16" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  496  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1178  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: r9|DWORD 
locals: rsi|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - rbp|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102419 size: DWORD <|@ <|@
      nr  170  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: rbx|DWORD 
locals: rdi|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: rdi|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD stack:48|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  540  <|@ instruction r10|DWORD = MOVE input: int[-96019|0xfffffffffffe88ed] <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr 1118  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101139 size: DWORD <|@ <|@
      nr 1120  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1122  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction r11|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-100115|0xfffffffffffe78ed] <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  586  <|@ instruction r10|DWORD = MOVE input: int[-97043|0xfffffffffffe84ed] <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  682  <|@ instruction r10|DWORD = MOVE input: int[-99091|0xfffffffffffe7ced] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1184  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1186  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1188  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92947 size: DWORD <|@ <|@
      nr 1206  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1208  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  622  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  636  <|@ instruction r10|DWORD = MOVE input: int[-98067|0xfffffffffffe80ed] <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  480  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  494  <|@ instruction r10|DWORD = MOVE input: int[-94995|0xfffffffffffe8ced] <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B42 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // java.io.Writer.lock:java.lang.Object
     4: astore        4
     6: aload         4
     8: instanceof    #49         // jdk.internal.misc.InternalLock
    11: ifeq          54
    14: aload         4
    16: checkcast     #49         // jdk.internal.misc.InternalLock
    19: astore        5
    21: aload         5
    23: invokevirtual #10         // jdk.internal.misc.InternalLock.lock:()void
    26: aload_0       
    27: aload_1       
    28: iload_2       
    29: iload_3       
    30: invokevirtual #15         // lockedWrite:(char[], int, int)void
    33: aload         5
    35: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    38: goto          51
    41: astore        6
    43: aload         5
    45: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    48: aload         6
    50: athrow        
    51: goto          81
    54: aload         4
    56: dup           
    57: astore        6
    59: monitorenter  
    60: aload_0       
    61: aload_1       
    62: iload_2       
    63: iload_3       
    64: invokevirtual #15         // lockedWrite:(char[], int, int)void
    67: aload         6
    69: monitorexit   
    70: goto          81
    73: astore        7
    75: aload         6
    77: monitorexit   
    78: aload         7
    80: athrow        
    81: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44d0a7e slotKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction stack:40|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction rax|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction r9|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   82  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction NULLCHECK address: [r9|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   84  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   86  <|@ instruction rbx|QWORD[.] = MOV input: [rax|QWORD] size: QWORD <|@ <|@
      nr   88  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   94  <|@ instruction r13|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   96  <|@ instruction rax|DWORD = CAS (address: [r9|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r13|DWORD) accessKind: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r9|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  438  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  442  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rdi|QWORD[.], ~newValue: rbx|QWORD[.]) {temp: r9|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction r9|DWORD = MOVZXB input: [rsi|QWORD[.] + 26] size: DWORD <|@ <|@
      nr  460  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction rbx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  614  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30] <|@ <|@
      nr  788  <|@ instruction r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  792  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30] <|@ <|@
      nr  794  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30] <|@ <|@
      nr  796  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  798  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  800  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  802  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  804  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  856  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  890  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  892  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8633858966180564 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B38 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605951908349848457
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  908  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B39" 
    xhandlers
    flags 
    probability 4605946476645549382
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B29" "B38" "B37" "B33" "B31" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 4594090062091211228
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction rax|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  118  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rbx|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4558701288473823891
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  934  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 4558140721140330403
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4544093902097985275
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 4543132494893730501
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  230  <|@ instruction stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:72|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD stack:48|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23] <|@ <|@
      nr  234  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7455315145813735 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4539431807497542773
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  270  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  272  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  274  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  276  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  278  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD stack:48|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23] <|@ <|@
      nr  282  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD <|@ <|@
      nr  286  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4532132168167648385
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  982  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529305283514016173
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35] <|@ <|@
      nr 1032  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533808883141386669
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1010  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1012  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1016  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1036  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1060  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr 1062  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35] <|@ <|@
      nr 1066  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1130  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1132  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction r11|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr 1144  <|@ instruction r10|DWORD = MOVE input: int[-93971|0xfffffffffffe90ed] <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B12" "B41" "B14" "B16" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  496  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1178  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: r9|DWORD 
locals: rsi|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - rbp|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102419 size: DWORD <|@ <|@
      nr  170  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: rbx|DWORD 
locals: rdi|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: rdi|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD stack:48|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  540  <|@ instruction r10|DWORD = MOVE input: int[-96019|0xfffffffffffe88ed] <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr 1118  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101139 size: DWORD <|@ <|@
      nr 1120  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1122  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction r11|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-100115|0xfffffffffffe78ed] <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  586  <|@ instruction r10|DWORD = MOVE input: int[-97043|0xfffffffffffe84ed] <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  682  <|@ instruction r10|DWORD = MOVE input: int[-99091|0xfffffffffffe7ced] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1184  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1186  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1188  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92947 size: DWORD <|@ <|@
      nr 1206  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1208  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  622  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  636  <|@ instruction r10|DWORD = MOVE input: int[-98067|0xfffffffffffe80ed] <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  480  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  494  <|@ instruction r10|DWORD = MOVE input: int[-94995|0xfffffffffffe8ced] <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B42 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // java.io.Writer.lock:java.lang.Object
     4: astore        4
     6: aload         4
     8: instanceof    #49         // jdk.internal.misc.InternalLock
    11: ifeq          54
    14: aload         4
    16: checkcast     #49         // jdk.internal.misc.InternalLock
    19: astore        5
    21: aload         5
    23: invokevirtual #10         // jdk.internal.misc.InternalLock.lock:()void
    26: aload_0       
    27: aload_1       
    28: iload_2       
    29: iload_3       
    30: invokevirtual #15         // lockedWrite:(char[], int, int)void
    33: aload         5
    35: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    38: goto          51
    41: astore        6
    43: aload         5
    45: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    48: aload         6
    50: athrow        
    51: goto          81
    54: aload         4
    56: dup           
    57: astore        6
    59: monitorenter  
    60: aload_0       
    61: aload_1       
    62: iload_2       
    63: iload_3       
    64: invokevirtual #15         // lockedWrite:(char[], int, int)void
    67: aload         6
    69: monitorexit   
    70: goto          81
    73: astore        7
    75: aload         6
    77: monitorexit   
    78: aload         7
    80: athrow        
    81: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44d0a7e slotKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction stack:40|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction rax|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction r9|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   82  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction NULLCHECK address: [r9|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   84  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   86  <|@ instruction rbx|QWORD[.] = MOV input: [rax|QWORD] size: QWORD <|@ <|@
      nr   88  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   94  <|@ instruction r13|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   96  <|@ instruction rax|DWORD = CAS (address: [r9|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r13|DWORD) accessKind: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r9|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  438  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  442  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rdi|QWORD[.], ~newValue: rbx|QWORD[.]) {temp: r9|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction r9|DWORD = MOVZXB input: [rsi|QWORD[.] + 26] size: DWORD <|@ <|@
      nr  460  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction rbx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  614  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30] <|@ <|@
      nr  788  <|@ instruction r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  792  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30] <|@ <|@
      nr  794  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30] <|@ <|@
      nr  796  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  798  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  800  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  802  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  804  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  856  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  890  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  892  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8633858966180564 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B38 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605951908349848457
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  908  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B39" 
    xhandlers
    flags 
    probability 4605946476645549382
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B29" "B38" "B37" "B33" "B31" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 4594090062091211228
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction rax|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  118  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rbx|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4558701288473823891
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  934  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 4558140721140330403
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4544093902097985275
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 4543132494893730501
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  230  <|@ instruction stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:72|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD stack:48|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23] <|@ <|@
      nr  234  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7455315145813735 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4539431807497542773
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  270  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  272  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  274  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  276  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  278  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD stack:48|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23] <|@ <|@
      nr  282  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD <|@ <|@
      nr  286  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4532132168167648385
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  982  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529305283514016173
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35] <|@ <|@
      nr 1032  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533808883141386669
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1010  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1012  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1016  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1036  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1060  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr 1062  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35] <|@ <|@
      nr 1066  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1130  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1132  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction r11|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr 1144  <|@ instruction r10|DWORD = MOVE input: int[-93971|0xfffffffffffe90ed] <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B12" "B41" "B14" "B16" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  496  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1178  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: r9|DWORD 
locals: rsi|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - rbp|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102419 size: DWORD <|@ <|@
      nr  170  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: rbx|DWORD 
locals: rdi|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: rdi|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD stack:48|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  540  <|@ instruction r10|DWORD = MOVE input: int[-96019|0xfffffffffffe88ed] <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr 1118  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101139 size: DWORD <|@ <|@
      nr 1120  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1122  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction r11|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-100115|0xfffffffffffe78ed] <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  586  <|@ instruction r10|DWORD = MOVE input: int[-97043|0xfffffffffffe84ed] <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  682  <|@ instruction r10|DWORD = MOVE input: int[-99091|0xfffffffffffe7ced] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1184  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1186  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1188  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92947 size: DWORD <|@ <|@
      nr 1206  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1208  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  622  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  636  <|@ instruction r10|DWORD = MOVE input: int[-98067|0xfffffffffffe80ed] <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  480  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  494  <|@ instruction r10|DWORD = MOVE input: int[-94995|0xfffffffffffe8ced] <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B42 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // java.io.Writer.lock:java.lang.Object
     4: astore        4
     6: aload         4
     8: instanceof    #49         // jdk.internal.misc.InternalLock
    11: ifeq          54
    14: aload         4
    16: checkcast     #49         // jdk.internal.misc.InternalLock
    19: astore        5
    21: aload         5
    23: invokevirtual #10         // jdk.internal.misc.InternalLock.lock:()void
    26: aload_0       
    27: aload_1       
    28: iload_2       
    29: iload_3       
    30: invokevirtual #15         // lockedWrite:(char[], int, int)void
    33: aload         5
    35: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    38: goto          51
    41: astore        6
    43: aload         5
    45: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    48: aload         6
    50: athrow        
    51: goto          81
    54: aload         4
    56: dup           
    57: astore        6
    59: monitorenter  
    60: aload_0       
    61: aload_1       
    62: iload_2       
    63: iload_3       
    64: invokevirtual #15         // lockedWrite:(char[], int, int)void
    67: aload         6
    69: monitorexit   
    70: goto          81
    73: astore        7
    75: aload         6
    77: monitorexit   
    78: aload         7
    80: athrow        
    81: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44d0a7e slotKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction stack:40|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r11:0, stack:40]
live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction rax|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r11:0, stack:40]
live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction r9|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, r11:0, stack:40]
live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction NULLCHECK address: [r9|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   84  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   86  <|@ instruction rbx|QWORD[.] = MOV input: [rax|QWORD] size: QWORD <|@ <|@
      nr   88  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   94  <|@ instruction r13|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   96  <|@ instruction rax|DWORD = CAS (address: [r9|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r13|DWORD) accessKind: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r9|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  438  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  442  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rdi|QWORD[.], ~newValue: rbx|QWORD[.]) {temp: r9|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction r9|DWORD = MOVZXB input: [rsi|QWORD[.] + 26] size: DWORD <|@ <|@
      nr  460  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction rbx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  614  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ st <@st|@reference-map: [stack:32, stack:40]
live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30] <|@ <|@
      nr  788  <|@ instruction r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  792  <|@ st <@st|@reference-map: [rsi:0, stack:32]
live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30] <|@ <|@
      nr  794  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:32]
live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30] <|@ <|@
      nr  796  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  798  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  800  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  802  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  804  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  856  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  890  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  892  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8633858966180564 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B38 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605951908349848457
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  908  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B39" 
    xhandlers
    flags 
    probability 4605946476645549382
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B29" "B38" "B37" "B33" "B31" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 4594090062091211228
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction rax|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  118  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rbx|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4558701288473823891
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  934  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 4558140721140330403
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4544093902097985275
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 4543132494893730501
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  230  <|@ instruction stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32, stack:40]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:72|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD stack:48|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23] <|@ <|@
      nr  234  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7455315145813735 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4539431807497542773
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  270  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  272  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  274  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  276  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  278  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  280  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32, stack:40]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD stack:48|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23] <|@ <|@
      nr  282  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD <|@ <|@
      nr  286  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4532132168167648385
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  982  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529305283514016173
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:32]
live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35] <|@ <|@
      nr 1032  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533808883141386669
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1010  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1012  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1016  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1036  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1060  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr 1062  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@reference-map: [stack:8, stack:32]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35] <|@ <|@
      nr 1066  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1130  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1132  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction r11|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr 1144  <|@ instruction r10|DWORD = MOVE input: int[-93971|0xfffffffffffe90ed] <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B12" "B41" "B14" "B16" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  496  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1178  <|@ st <@st|@reference-map: [rdx:0, rbp:0, rsi:0]
live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: r9|DWORD 
locals: rsi|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - rbp|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102419 size: DWORD <|@ <|@
      nr  170  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  172  <|@ st <@st|@reference-map: [rdi:0, stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: rbx|DWORD 
locals: rdi|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: rdi|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD stack:48|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  540  <|@ instruction r10|DWORD = MOVE input: int[-96019|0xfffffffffffe88ed] <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr 1118  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101139 size: DWORD <|@ <|@
      nr 1120  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1122  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:32]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction r11|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-100115|0xfffffffffffe78ed] <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  586  <|@ instruction r10|DWORD = MOVE input: int[-97043|0xfffffffffffe84ed] <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  682  <|@ instruction r10|DWORD = MOVE input: int[-99091|0xfffffffffffe7ced] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1184  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1186  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1188  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92947 size: DWORD <|@ <|@
      nr 1206  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1208  <|@ st <@st|@reference-map: [stack:16, stack:24]
live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  622  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  636  <|@ instruction r10|DWORD = MOVE input: int[-98067|0xfffffffffffe80ed] <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  480  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  494  <|@ instruction r10|DWORD = MOVE input: int[-94995|0xfffffffffffe8ced] <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B42 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // java.io.Writer.lock:java.lang.Object
     4: astore        4
     6: aload         4
     8: instanceof    #49         // jdk.internal.misc.InternalLock
    11: ifeq          54
    14: aload         4
    16: checkcast     #49         // jdk.internal.misc.InternalLock
    19: astore        5
    21: aload         5
    23: invokevirtual #10         // jdk.internal.misc.InternalLock.lock:()void
    26: aload_0       
    27: aload_1       
    28: iload_2       
    29: iload_3       
    30: invokevirtual #15         // lockedWrite:(char[], int, int)void
    33: aload         5
    35: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    38: goto          51
    41: astore        6
    43: aload         5
    45: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    48: aload         6
    50: athrow        
    51: goto          81
    54: aload         4
    56: dup           
    57: astore        6
    59: monitorenter  
    60: aload_0       
    61: aload_1       
    62: iload_2       
    63: iload_3       
    64: invokevirtual #15         // lockedWrite:(char[], int, int)void
    67: aload         6
    69: monitorexit   
    70: goto          81
    73: astore        7
    75: aload         6
    77: monitorexit   
    78: aload         7
    80: athrow        
    81: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44d0a7e slotKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction stack:40|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r11:0, stack:40]
live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction rax|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r11:0, stack:40]
live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction r9|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, r11:0, stack:40]
live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction NULLCHECK address: [r9|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   84  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   86  <|@ instruction rbx|QWORD[.] = MOV input: [rax|QWORD] size: QWORD <|@ <|@
      nr   88  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   94  <|@ instruction r13|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   96  <|@ instruction rax|DWORD = CAS (address: [r9|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r13|DWORD) accessKind: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r9|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  438  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  442  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rdi|QWORD[.], ~newValue: rbx|QWORD[.]) {temp: r9|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" "B5" 
    successors "B11" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction r9|DWORD = MOVZXB input: [rsi|QWORD[.] + 26] size: DWORD <|@ <|@
      nr  460  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction rbx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  614  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ st <@st|@reference-map: [stack:32, stack:40]
live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30] <|@ <|@
      nr  788  <|@ instruction r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  792  <|@ st <@st|@reference-map: [rsi:0, stack:32]
live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30] <|@ <|@
      nr  794  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:32]
live-base-pointers: []
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52]
locals: - - - - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30] <|@ <|@
      nr  796  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  798  <|@ instruction r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  800  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  802  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  804  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72 <|@ <|@
      nr  856  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction rdx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  890  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  892  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8633858966180564 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B38 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605951908349848457
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  908  <|@ instruction TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B39" 
    xhandlers
    flags 
    probability 4605946476645549382
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B29" "B38" "B37" "B33" "B31" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B39" 
    xhandlers
    flags 
    probability 4594090062091211228
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction rax|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  118  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rbx|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4558701288473823891
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  934  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B39" 
    xhandlers
    flags 
    probability 4558140721140330403
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4544093902097985275
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 4543132494893730501
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  230  <|@ instruction stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32, stack:40]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:72|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD stack:48|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23] <|@ <|@
      nr  234  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7455315145813735 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4539431807497542773
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  270  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  272  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  274  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  276  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  278  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  280  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32, stack:40]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD stack:48|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23] <|@ <|@
      nr  282  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD <|@ <|@
      nr  286  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4532132168167648385
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr  982  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529305283514016173
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:32]
live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35] <|@ <|@
      nr 1032  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533808883141386669
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1010  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1012  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1016  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4529305283514016173
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1036  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1060  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr 1062  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@reference-map: [stack:8, stack:32]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:72|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35] <|@ <|@
      nr 1066  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1130  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1132  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction r11|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr 1144  <|@ instruction r10|DWORD = MOVE input: int[-93971|0xfffffffffffe90ed] <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B12" "B41" "B14" "B16" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  496  <|@ instruction rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1178  <|@ st <@st|@reference-map: [rdx:0, rbp:0, rsi:0]
live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4]
stack: r9|DWORD 
locals: rsi|QWORD[.] 
sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30]
locals: - - - - - rbp|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 1, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV x: [r15|QWORD + 1156] y: -102419 size: DWORD <|@ <|@
      nr  170  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  172  <|@ st <@st|@reference-map: [rdi:0, stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: rbx|DWORD 
locals: rdi|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: rdi|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD stack:48|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  540  <|@ instruction r10|DWORD = MOVE input: int[-96019|0xfffffffffffe88ed] <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3 <|@ <|@
      nr 1118  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101139 size: DWORD <|@ <|@
      nr 1120  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1122  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:32]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rsi|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35]
locals: - - - - - stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction r11|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-100115|0xfffffffffffe78ed] <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  586  <|@ instruction r10|DWORD = MOVE input: int[-97043|0xfffffffffffe84ed] <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  682  <|@ instruction r10|DWORD = MOVE input: int[-99091|0xfffffffffffe7ced] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1184  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1186  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1188  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92947 size: DWORD <|@ <|@
      nr 1206  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1208  <|@ st <@st|@reference-map: [stack:16, stack:24]
live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0]
locals: stack:64|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  622  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  636  <|@ instruction r10|DWORD = MOVE input: int[-98067|0xfffffffffffe80ed] <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  480  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  494  <|@ instruction r10|DWORD = MOVE input: int[-94995|0xfffffffffffe8ced] <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B42 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // java.io.Writer.lock:java.lang.Object
     4: astore        4
     6: aload         4
     8: instanceof    #49         // jdk.internal.misc.InternalLock
    11: ifeq          54
    14: aload         4
    16: checkcast     #49         // jdk.internal.misc.InternalLock
    19: astore        5
    21: aload         5
    23: invokevirtual #10         // jdk.internal.misc.InternalLock.lock:()void
    26: aload_0       
    27: aload_1       
    28: iload_2       
    29: iload_3       
    30: invokevirtual #15         // lockedWrite:(char[], int, int)void
    33: aload         5
    35: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    38: goto          51
    41: astore        6
    43: aload         5
    45: invokevirtual #12         // jdk.internal.misc.InternalLock.unlock:()void
    48: aload         6
    50: athrow        
    51: goto          81
    54: aload         4
    56: dup           
    57: astore        6
    59: monitorenter  
    60: aload_0       
    61: aload_1       
    62: iload_2       
    63: iload_3       
    64: invokevirtual #15         // lockedWrite:(char[], int, int)void
    67: aload         6
    69: monitorexit   
    70: goto          81
    73: astore        7
    75: aload         6
    77: monitorexit   
    78: aload         7
    80: athrow        
    81: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec489041817f20000000000f852507000090909090909090909090909048896c2440448b520c448b5e1044895c242842813cdd08000000addeadde0f855e06000090909090909090909090909090909090909090428b04dd0c000000448b0cc50c000000428504cd00000000498b8780030000488b18418bf948c1e703418beb48c1e503b80000000041bd01000000f0460fb12ccd100000000f859b020000909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f8432000000468b2ccd0c00000049c1e5034d85ed0f841d000000498b47284883f8000f84410600004883e80849894728490347384c8928488bc348c1e803428904cd0c0000004c8bcf4c33cb49c1e9160f84450000004c8bcf49c1e90948b800e0368d787f00004c03c841803902742bf08304240041803900742041c60100498b47484885c00f84ec0500004883e80849894748490347584c89089090909090440fb64e1a4585c90f85950300009090909085c90f8c7205000090909090413bca0f8f17040000909090904585c00f8c9404000090909090908bd94103d8413bda0f8f180500009090909085db0f8ca2040000909090904585c00f843b04000048896c24209090909090909090909090909090909090909090e8000000000f1f840000000000448b5c2428428b34dd0c000000448b14f50c000000468b1cd510000000428b14d50c0000004d8b878003000048c1e20348c1e603493b100f85a8030000909090904183fb010f85e4000000909090909090909090909090909090909041807f40000f8432000000468b04d50c00000049c1e0034d85c00f841d000000498b57284883fa000f84d70400004883ea0849895728490357384c890242c704d50c0000000000000090909090909090418bd3ffca428914d510000000f0830424004183fb010f85620000009090909090428b14d51400000085d20f85a700000090909090909090909090488b6c24404883c448493ba7d804000072234883ec08498bff48b90000000000000000ffd14883c40848b90000000000000000ffe1493ba7500400000f8747040000c3909090ebb1909090e96effffff90909090909090428b04cd0c00000048c1e003483bd80f856a000000909090909090428b1ccd100000008bc3ffc085c00f8c090200009090909090428904cd10000000f083042400e9f1fdffff9090909090448b14d5140000004585d20f8508000000909090e93effffff9090909042833cd50c000000000f85ec000000909090e923ffffff48896c2420448954242c4489442434894c24304889542418488974241090909090909090909090488bf7ba0100000048897c24086690e8000000000f1f84000000000085c00f856f0000009090909090909090909090909090488b74240848c7c200000000b90100000041b80000000041b900000000bf0000000048c7042400000000666690e8000000000f1f840000000000488b6c2420448b5c2428448b54242c448b4424348b4c2430488b542418488b742410e9fefcffff909090488b6c2420448b5c2428448b54242c448b4424348b4c2430488b542418488b742410e9d4fcffff9090909090458bda49c1e303e911000000669090909090904d8b8f580400004185019090909090909090909090468b04d50c000000458bc84183e1fe418bc0f0460fb10cd50c00000075c8488974240890909090909090909090468b14d51800000049c1e203498bf290e8000000000f1f840000000000e9c3fdffff48896c24204489442434894c24304889542418488974241090909049c7c39425000041baed90feff488b6c2420488b542418488b74241090909090909090458997840400004d899f90040000e8000000000f1f84000000000048896c24204489442434894c2430488954241848897424109090909090909041c78784040000ed6ffeff49c7879004000094020000e8000000000f1f84000000000048896c24204489442434894c24304889542418488974241090909049c7c39420000041baed88feffe960ffffff90909090909090909049c1e20341c78784040000ed74feff49c7879004000014280000e8000000000f1f84000000000048896c24204489442434894c24304889542418488974241090909049c7c31423000041baed78feffe903ffffff48896c24204489442434894c24304889542418488974241090909049c7c39420000041baed84feffe9d6feffff48896c24204489442434894c24304889542418488974241090909049c7c39420000041baed7cfeffe9a9feffff4489442434894c2430488954241848897424109090909090909041c78784040000ed94feff49c7879004000014000000e8000000000f1f84000000000048896c24204489442434894c24304889542418488974241090909049c7c39420000041baed80feffe93ffeffff48896c24204489442434894c24304889542418488974241090909049c7c39420000041baed8cfeffe912feffff48896c2440e800000000e9ccf8fffff44c892c24e800000000e9c0f9fffff44c890c24e800000000e915fafffff44c890424e800000000e92afbfffff4488d0da5fbffff49898f68040000e951f8fffff441c78784040000f501ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000ed94feff49c7879004000014000000e8000000000f1f84000000000041c78784040000f50dffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5fafeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5f6feff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 75 28 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44d0a7e slotKind: QWORD  <||@
  Comment 75 30 r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 75 [rdx:0, rsi:0]at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-  |-  |-   <||@
  Comment 75 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 79 32 r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 83 34 stack:40|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD  <||@
  Comment 88 36 CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0]  <||@
  Comment 88 [rdx:0, rsi:0, r11:0, stack:40]at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-  |-  |-   <||@
  Comment 88 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 88 {meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed}}  <||@
  Comment 106 block B1 null  <||@
  Comment 106 38 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 106 40 NOP  <||@
  Comment 107 42 NOP  <||@
  Comment 108 44 NOP  <||@
  Comment 109 46 NOP  <||@
  Comment 110 48 NOP  <||@
  Comment 111 50 NOP  <||@
  Comment 112 52 NOP  <||@
  Comment 113 54 NOP  <||@
  Comment 114 56 NOP  <||@
  Comment 115 58 NOP  <||@
  Comment 116 60 NOP  <||@
  Comment 117 62 NOP  <||@
  Comment 118 64 NOP  <||@
  Comment 119 66 NOP  <||@
  Comment 120 68 NOP  <||@
  Comment 121 70 NOP  <||@
  Comment 122 72 NOP  <||@
  Comment 123 74 NOP  <||@
  Comment 124 76 NOP  <||@
  Comment 125 78 rax|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 133 80 r9|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 133 [rdx:0, rsi:0, r11:0, stack:40]at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-  |-  |-   <||@
  Comment 133 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 141 82 NULLCHECK address: [r9|DWORD[_] * 8] state [bci:0]  <||@
  Comment 141 [rdx:0, rsi:0, r9:0, r11:0, stack:40]at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-  |-  |-   <||@
  Comment 141 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 149 84 rax|QWORD = MOV input: [r15|QWORD + 896] size: QWORD  <||@
  Comment 156 86 rbx|QWORD[.] = MOV input: [rax|QWORD] size: QWORD  <||@
  Comment 159 88 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3  <||@
  Comment 166 90 rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3  <||@
  Comment 173 92 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 178 94 r13|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 184 96 rax|DWORD = CAS (address: [r9|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r13|DWORD) accessKind: DWORD  <||@
  Comment 194 98 BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9  <||@
  Comment 200 block B9 null  <||@
  Comment 200 322 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 200 324 NOP  <||@
  Comment 201 326 NOP  <||@
  Comment 202 328 NOP  <||@
  Comment 203 330 NOP  <||@
  Comment 204 332 NOP  <||@
  Comment 205 334 NOP  <||@
  Comment 206 336 NOP  <||@
  Comment 207 338 NOP  <||@
  Comment 208 340 NOP  <||@
  Comment 209 342 NOP  <||@
  Comment 210 344 NOP  <||@
  Comment 211 346 NOP  <||@
  Comment 212 348 NOP  <||@
  Comment 213 350 NOP  <||@
  Comment 214 352 NOP  <||@
  Comment 215 354 NOP  <||@
  Comment 216 356 NOP  <||@
  Comment 217 358 NOP  <||@
  Comment 218 360 NOP  <||@
  Comment 219 362 NOP  <||@
  Comment 220 364 NOP  <||@
  Comment 221 366 NOP  <||@
  Comment 222 368 NOP  <||@
  Comment 223 370 NOP  <||@
  Comment 224 372 NOP  <||@
  Comment 225 374 NOP  <||@
  Comment 226 376 NOP  <||@
  Comment 227 378 NOP  <||@
  Comment 228 380 NOP  <||@
  Comment 229 382 NOP  <||@
  Comment 230 384 NOP  <||@
  Comment 231 386 NOP  <||@
  Comment 232 388 NOP  <||@
  Comment 233 390 NOP  <||@
  Comment 234 392 NOP  <||@
  Comment 235 394 NOP  <||@
  Comment 236 396 NOP  <||@
  Comment 237 398 NOP  <||@
  Comment 238 400 NOP  <||@
  Comment 239 402 NOP  <||@
  Comment 240 404 NOP  <||@
  Comment 241 406 NOP  <||@
  Comment 242 408 NOP  <||@
  Comment 243 410 NOP  <||@
  Comment 244 412 NOP  <||@
  Comment 245 414 NOP  <||@
  Comment 246 416 NOP  <||@
  Comment 247 418 NOP  <||@
  Comment 248 420 NOP  <||@
  Comment 249 422 NOP  <||@
  Comment 250 424 NOP  <||@
  Comment 251 426 NOP  <||@
  Comment 252 428 NOP  <||@
  Comment 253 430 NOP  <||@
  Comment 254 432 NOP  <||@
  Comment 255 434 NOP  <||@
  Comment 256 436 AMD64G1PREWRITEBARRIER (~address: [r9|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72  <||@
  Comment 317 438 rax|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3  <||@
  Comment 324 440 MOV (x: [r9|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD  <||@
  Comment 332 442 AMD64G1POSTWRITEBARRIER (~address: rdi|QWORD[.], ~newValue: rbx|QWORD[.]) {temp: r9|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72  <||@
  Comment 417 444 JUMP ~outgoingValues: [] destination: B9 -> B10  <||@
  Comment 417 block B10 null  <||@
  Comment 417 446 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 417 448 NOP  <||@
  Comment 418 450 NOP  <||@
  Comment 419 452 NOP  <||@
  Comment 420 454 NOP  <||@
  Comment 421 456 NOP  <||@
  Comment 422 458 r9|DWORD = MOVZXB input: [rsi|QWORD[.] + 26] size: DWORD  <||@
  Comment 427 460 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B41 size: DWORD  <||@
  Comment 436 block B11 null  <||@
  Comment 436 462 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 436 464 NOP  <||@
  Comment 437 466 NOP  <||@
  Comment 438 468 NOP  <||@
  Comment 439 470 NOP  <||@
  Comment 440 472 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD  <||@
  Comment 448 block B13 null  <||@
  Comment 448 508 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 448 510 NOP  <||@
  Comment 449 512 NOP  <||@
  Comment 450 514 NOP  <||@
  Comment 451 516 NOP  <||@
  Comment 452 518 CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD  <||@
  Comment 461 block B15 null  <||@
  Comment 461 554 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 461 556 NOP  <||@
  Comment 462 558 NOP  <||@
  Comment 463 560 NOP  <||@
  Comment 464 562 NOP  <||@
  Comment 465 564 TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD  <||@
  Comment 474 block B17 null  <||@
  Comment 474 600 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 474 602 NOP  <||@
  Comment 475 604 NOP  <||@
  Comment 476 606 NOP  <||@
  Comment 477 608 NOP  <||@
  Comment 478 610 NOP  <||@
  Comment 479 612 rbx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 484 614 CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD  <||@
  Comment 493 block B19 null  <||@
  Comment 493 650 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 493 652 NOP  <||@
  Comment 494 654 NOP  <||@
  Comment 495 656 NOP  <||@
  Comment 496 658 NOP  <||@
  Comment 497 660 TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD  <||@
  Comment 505 block B21 null  <||@
  Comment 505 696 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 505 698 NOP  <||@
  Comment 506 700 NOP  <||@
  Comment 507 702 NOP  <||@
  Comment 508 704 NOP  <||@
  Comment 509 706 TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD  <||@
  Comment 518 block B23 null  <||@
  Comment 518 742 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 518 744 stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 523 746 NOP  <||@
  Comment 524 748 NOP  <||@
  Comment 525 750 NOP  <||@
  Comment 526 752 NOP  <||@
  Comment 527 754 NOP  <||@
  Comment 528 756 NOP  <||@
  Comment 529 758 NOP  <||@
  Comment 530 760 NOP  <||@
  Comment 531 762 NOP  <||@
  Comment 532 764 NOP  <||@
  Comment 533 766 NOP  <||@
  Comment 534 768 NOP  <||@
  Comment 535 770 NOP  <||@
  Comment 536 772 NOP  <||@
  Comment 537 774 NOP  <||@
  Comment 538 776 NOP  <||@
  Comment 539 778 NOP  <||@
  Comment 540 780 NOP  <||@
  Comment 541 782 NOP  <||@
  Comment 542 784 NOP  <||@
  Comment 543 786 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30]  <||@
  Comment 543 {HotSpotMethod<StreamEncoder.implWrite(char[], int, int)>}  <||@
  Comment 543 INVOKESPECIAL  <||@
  Comment 548 [stack:32, stack:40]at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  |6  |7 
     locals:  |-  |-  |-  |-  |-  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 556 788 r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD  <||@
  Comment 561 790 rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 569 792 r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30]  <||@
  Comment 569 [rsi:0, stack:32]at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  |6  |7 
     locals:  |-  |-  |-  |-  |-  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 569 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 577 794 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30]  <||@
  Comment 577 [rsi:0, r10:0, stack:32]at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  |6  |7 
     locals:  |-  |-  |-  |-  |-  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 577 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 585 796 rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 593 798 r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD  <||@
  Comment 600 800 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3  <||@
  Comment 604 802 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3  <||@
  Comment 608 804 CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B40 size: QWORD  <||@
  Comment 617 block B24 null  <||@
  Comment 617 806 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 617 808 NOP  <||@
  Comment 618 810 NOP  <||@
  Comment 619 812 NOP  <||@
  Comment 620 814 NOP  <||@
  Comment 621 816 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: DWORD inlinedY: null  <||@
  Comment 631 block B25 null  <||@
  Comment 631 818 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 631 820 NOP  <||@
  Comment 632 822 NOP  <||@
  Comment 633 824 NOP  <||@
  Comment 634 826 NOP  <||@
  Comment 635 828 NOP  <||@
  Comment 636 830 NOP  <||@
  Comment 637 832 NOP  <||@
  Comment 638 834 NOP  <||@
  Comment 639 836 NOP  <||@
  Comment 640 838 NOP  <||@
  Comment 641 840 NOP  <||@
  Comment 642 842 NOP  <||@
  Comment 643 844 NOP  <||@
  Comment 644 846 NOP  <||@
  Comment 645 848 NOP  <||@
  Comment 646 850 NOP  <||@
  Comment 647 852 NOP  <||@
  Comment 648 854 AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72  <||@
  Comment 709 856 MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD  <||@
  Comment 721 858 JUMP ~outgoingValues: [] destination: B25 -> B27  <||@
  Comment 721 block B27 null  <||@
  Comment 721 870 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 721 872 NOP  <||@
  Comment 722 874 NOP  <||@
  Comment 723 876 NOP  <||@
  Comment 724 878 NOP  <||@
  Comment 725 880 NOP  <||@
  Comment 726 882 NOP  <||@
  Comment 727 884 NOP  <||@
  Comment 728 886 rdx|DWORD = DEC value: r11|DWORD size: DWORD  <||@
  Comment 733 888 MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD  <||@
  Comment 741 890 MEMBAR barriers: 4  <||@
  Comment 746 892 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8633858966180564 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B38 y: 1 size: DWORD inlinedY: null  <||@
  Comment 756 block B28 null  <||@
  Comment 756 894 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 756 896 NOP  <||@
  Comment 757 898 NOP  <||@
  Comment 758 900 NOP  <||@
  Comment 759 902 NOP  <||@
  Comment 760 904 NOP  <||@
  Comment 761 906 rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 769 908 TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD  <||@
  Comment 777 block B29 null  <||@
  Comment 777 910 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 777 912 NOP  <||@
  Comment 778 914 NOP  <||@
  Comment 779 916 NOP  <||@
  Comment 780 918 JUMP ~outgoingValues: [] destination: B29 -> B39  <||@
  Comment 780 block B39 null  <||@
  Comment 780 1078 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 780 1080 NOP  <||@
  Comment 781 1082 NOP  <||@
  Comment 782 1084 NOP  <||@
  Comment 783 1086 NOP  <||@
  Comment 784 1088 NOP  <||@
  Comment 785 1090 NOP  <||@
  Comment 786 1092 NOP  <||@
  Comment 787 1094 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 812 {HotSpotForeignCallDescriptor{enableStackReservedZoneEntry(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[], transition=LEAF_NO_VZERO}@0x7f78b1985d50:CallingConvention[rdi|QWORD]:CallingConvention[rdi|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL}  <||@
  Comment 828 {Field[name=StubRoutines::_throw_delayed_StackOverflowError_entry, type=address, offset=0, address=0x7f78b2050498, value=140155947307648]:0x7f789973d280}  <||@
  Comment 840 POLL_RETURN_FAR  <||@
  Comment 854 block B38 null  <||@
  Comment 854 1068 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 854 1070 NOP  <||@
  Comment 855 1072 NOP  <||@
  Comment 856 1074 NOP  <||@
  Comment 857 1076 JUMP ~outgoingValues: [] destination: B38 -> B39  <||@
  Comment 859 block B26 null  <||@
  Comment 859 860 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 859 862 NOP  <||@
  Comment 860 864 NOP  <||@
  Comment 861 866 NOP  <||@
  Comment 862 868 JUMP ~outgoingValues: [] destination: B26 -> B27  <||@
  Comment 867 block B2 null  <||@
  Comment 867 100 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 867 102 NOP  <||@
  Comment 868 104 NOP  <||@
  Comment 869 106 NOP  <||@
  Comment 870 108 NOP  <||@
  Comment 871 110 NOP  <||@
  Comment 872 112 NOP  <||@
  Comment 873 114 NOP  <||@
  Comment 874 116 rax|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 882 118 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3  <||@
  Comment 886 120 CMPBRANCH (x: rbx|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD  <||@
  Comment 895 block B3 null  <||@
  Comment 895 122 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 895 124 NOP  <||@
  Comment 896 126 NOP  <||@
  Comment 897 128 NOP  <||@
  Comment 898 130 NOP  <||@
  Comment 899 132 NOP  <||@
  Comment 900 134 NOP  <||@
  Comment 901 136 rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 909 138 rax|DWORD = INC value: rbx|DWORD size: DWORD  <||@
  Comment 913 140 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD  <||@
  Comment 921 block B5 null  <||@
  Comment 921 174 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 921 176 NOP  <||@
  Comment 922 178 NOP  <||@
  Comment 923 180 NOP  <||@
  Comment 924 182 NOP  <||@
  Comment 925 184 NOP  <||@
  Comment 926 186 MOV (x: [r9|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 934 188 MEMBAR barriers: 4  <||@
  Comment 939 190 JUMP ~outgoingValues: [] destination: B5 -> B10  <||@
  Comment 944 block B30 null  <||@
  Comment 944 920 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 944 922 NOP  <||@
  Comment 945 924 NOP  <||@
  Comment 946 926 NOP  <||@
  Comment 947 928 NOP  <||@
  Comment 948 930 NOP  <||@
  Comment 949 932 r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 957 934 TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD  <||@
  Comment 966 block B31 null  <||@
  Comment 966 936 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 966 938 NOP  <||@
  Comment 967 940 NOP  <||@
  Comment 968 942 NOP  <||@
  Comment 969 944 JUMP ~outgoingValues: [] destination: B31 -> B39  <||@
  Comment 974 block B32 null  <||@
  Comment 974 946 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 974 948 NOP  <||@
  Comment 975 950 NOP  <||@
  Comment 976 952 NOP  <||@
  Comment 977 954 NOP  <||@
  Comment 978 956 CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: DWORD inlinedY: null  <||@
  Comment 993 block B33 null  <||@
  Comment 993 958 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 993 960 NOP  <||@
  Comment 994 962 NOP  <||@
  Comment 995 964 NOP  <||@
  Comment 996 966 JUMP ~outgoingValues: [] destination: B33 -> B39  <||@
  Comment 1001 block B6 null  <||@
  Comment 1001 192 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1001 194 stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1006 196 stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1011 198 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1016 200 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1020 202 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1025 204 stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1030 206 NOP  <||@
  Comment 1031 208 NOP  <||@
  Comment 1032 210 NOP  <||@
  Comment 1033 212 NOP  <||@
  Comment 1034 214 NOP  <||@
  Comment 1035 216 NOP  <||@
  Comment 1036 218 NOP  <||@
  Comment 1037 220 NOP  <||@
  Comment 1038 222 NOP  <||@
  Comment 1039 224 NOP  <||@
  Comment 1040 226 rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1043 228 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1048 230 stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1053 232 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23]  <||@
  Comment 1055 {HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)>}  <||@
  Comment 1055 INVOKESPECIAL  <||@
  Comment 1060 [stack:8, stack:16, stack:24, stack:32, stack:40]at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1          
     locals:  |stack:72|QWORD[.]  |int[1|0x1] 
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:72|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:48|QWORD[.] 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5                  |6  |7 
     locals:  |stack:64|QWORD[.]  |stack:56|QWORD[.]  |stack:32|DWORD  |stack:28|DWORD  |stack:48|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 1068 234 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7455315145813735 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD  <||@
  Comment 1076 block B7 null  <||@
  Comment 1076 236 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1076 238 NOP  <||@
  Comment 1077 240 NOP  <||@
  Comment 1078 242 NOP  <||@
  Comment 1079 244 NOP  <||@
  Comment 1080 246 NOP  <||@
  Comment 1081 248 NOP  <||@
  Comment 1082 250 NOP  <||@
  Comment 1083 252 NOP  <||@
  Comment 1084 254 NOP  <||@
  Comment 1085 256 NOP  <||@
  Comment 1086 258 NOP  <||@
  Comment 1087 260 NOP  <||@
  Comment 1088 262 NOP  <||@
  Comment 1089 264 NOP  <||@
  Comment 1090 266 rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1095 268 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1102 270 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1107 272 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1113 274 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1119 276 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1124 278 out:0|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1132 280 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23]  <||@
  Comment 1135 {HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)>}  <||@
  Comment 1135 INVOKESPECIAL  <||@
  Comment 1140 [stack:8, stack:16, stack:24, stack:32, stack:40]at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:72|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:48|QWORD[.] 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5                  |6  |7 
     locals:  |stack:64|QWORD[.]  |stack:56|QWORD[.]  |stack:32|DWORD  |stack:28|DWORD  |stack:48|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 1148 282 rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1153 284 r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD  <||@
  Comment 1158 286 r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1163 288 r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1168 290 rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1172 292 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1177 294 rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1182 296 JUMP ~outgoingValues: [] destination: B7 -> B10  <||@
  Comment 1187 block B8 null  <||@
  Comment 1187 298 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1187 300 NOP  <||@
  Comment 1188 302 NOP  <||@
  Comment 1189 304 NOP  <||@
  Comment 1190 306 rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1195 308 r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD  <||@
  Comment 1200 310 r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1205 312 r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1210 314 rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1214 316 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1219 318 rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1224 320 JUMP ~outgoingValues: [] destination: B8 -> B10  <||@
  Comment 1229 block B34 null  <||@
  Comment 1229 968 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1229 970 NOP  <||@
  Comment 1230 972 NOP  <||@
  Comment 1231 974 NOP  <||@
  Comment 1232 976 NOP  <||@
  Comment 1233 978 NOP  <||@
  Comment 1234 980 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3  <||@
  Comment 1241 982 JUMP ~outgoingValues: [] destination: B34 -> B35  <||@
  Comment 1246 block B36 loop 0 depth 1 header:208|LoopBegin  <||@
  Comment 1246 1018 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1248 1020 NOP  <||@
  Comment 1249 1022 NOP  <||@
  Comment 1250 1024 NOP  <||@
  Comment 1251 1026 NOP  <||@
  Comment 1252 1028 NOP  <||@
  Comment 1253 1030 SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35]  <||@
  Comment 1260 [rsi:0, r10:0, r11:0, stack:32]at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21, duringCall: false, rethrow: false]
              |0                         |1             |2             |3  |4                           |5        
     locals:  |Object[Unsafe@679697080]  |r11|QWORD[.]  |long[12|0xc]  |-  |int[-2|0xfffffffffffffffe]  |r8|DWORD 
     stack:   |int[0|0x0]                |              |              |   |                            |         
  at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10, duringCall: true, rethrow: false]
              |0             |1          
     locals:  |r11|QWORD[.]  |int[1|0x1] 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |r11|QWORD[.] 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:48|QWORD[.] 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  |6  |7 
     locals:  |-  |-  |-  |-  |-  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 1260 {infopoint: SAFEPOINT}  <||@
  Comment 1260 POLL_FAR  <||@
  Comment 1263 1032 JUMP ~outgoingValues: [] destination: B36 -> B35  <||@
  Comment 1263 block B35 loop 0 depth 1 header:208|LoopBegin  <||@
  Comment 1263 984 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1263 986 NOP  <||@
  Comment 1264 988 NOP  <||@
  Comment 1265 990 NOP  <||@
  Comment 1266 992 NOP  <||@
  Comment 1267 994 NOP  <||@
  Comment 1268 996 NOP  <||@
  Comment 1269 998 NOP  <||@
  Comment 1270 1000 NOP  <||@
  Comment 1271 1002 NOP  <||@
  Comment 1272 1004 NOP  <||@
  Comment 1273 1006 NOP  <||@
  Comment 1274 1008 r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1282 1010 r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD  <||@
  Comment 1289 1012 rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1292 1014 rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD  <||@
  Comment 1302 1016 BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 1304 block B37 null  <||@
  Comment 1304 1034 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1304 1036 stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1309 1038 NOP  <||@
  Comment 1310 1040 NOP  <||@
  Comment 1311 1042 NOP  <||@
  Comment 1312 1044 NOP  <||@
  Comment 1313 1046 NOP  <||@
  Comment 1314 1048 NOP  <||@
  Comment 1315 1050 NOP  <||@
  Comment 1316 1052 NOP  <||@
  Comment 1317 1054 NOP  <||@
  Comment 1318 1056 NOP  <||@
  Comment 1319 1058 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD  <||@
  Comment 1327 1060 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3  <||@
  Comment 1331 1062 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1334 1064 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35]  <||@
  Comment 1335 {HotSpotMethod<LockSupport.unpark(Thread)>}  <||@
  Comment 1335 INVOKESTATIC  <||@
  Comment 1340 [stack:8, stack:32]at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:72|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:48|QWORD[.] 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  |6  |7 
     locals:  |-  |-  |-  |-  |-  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 1348 1066 JUMP ~outgoingValues: [] destination: B37 -> B39  <||@
  Comment 1353 block B41 null  <||@
  Comment 1353 1124 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1353 1126 stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1358 1128 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1363 1130 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1367 1132 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1372 1134 stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1377 1136 NOP  <||@
  Comment 1378 1138 NOP  <||@
  Comment 1379 1140 NOP  <||@
  Comment 1380 1142 r11|QWORD = MOVE input: long[9620|0x2594]  <||@
  Comment 1387 1144 r10|DWORD = MOVE input: int[-93971|0xfffffffffffe90ed]  <||@
  Comment 1393 1156 JUMP ~outgoingValues: [] destination: B41 -> B42  <||@
  Comment 1393 block B42 null  <||@
  Comment 1393 1158 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1393 496 rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1398 502 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1403 504 rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1408 1160 NOP  <||@
  Comment 1409 1162 NOP  <||@
  Comment 1410 1164 NOP  <||@
  Comment 1411 1166 NOP  <||@
  Comment 1412 1168 NOP  <||@
  Comment 1413 1170 NOP  <||@
  Comment 1414 1172 NOP  <||@
  Comment 1415 1174 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1422 1176 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 1429 1178 DEOPT info [bci:4, 1, 30]  <||@
  Comment 1429 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1434 [rdx:0, rbp:0, rsi:0]at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.] 
     stack:   |r9|DWORD     
  at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1, duringCall: true, rethrow: false]
              |0             |1             |2          |3        
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5             |6  |7 
     locals:  |-  |-  |-  |-  |-  |rbp|QWORD[.]  |-  |-   <||@
  Comment 1442 block B4 null  <||@
  Comment 1442 142 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1442 144 stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1447 146 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1452 148 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1456 150 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1461 152 stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1466 154 NOP  <||@
  Comment 1467 156 NOP  <||@
  Comment 1468 158 NOP  <||@
  Comment 1469 160 NOP  <||@
  Comment 1470 162 NOP  <||@
  Comment 1471 164 NOP  <||@
  Comment 1472 166 NOP  <||@
  Comment 1473 168 MOV x: [r15|QWORD + 1156] y: -102419 size: DWORD  <||@
  Comment 1484 170 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 1495 172 DEOPT info [bci:32, 1, 4, 4, 23]  <||@
  Comment 1495 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1500 [rdi:0, stack:16, stack:24, stack:32]at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rdi|QWORD[.]  |-  |- 
     stack:   |rbx|DWORD     |   |  
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |rdi|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:48|QWORD[.] 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5                  |6  |7 
     locals:  |stack:64|QWORD[.]  |stack:56|QWORD[.]  |stack:32|DWORD  |stack:28|DWORD  |stack:48|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 1508 block B14 null  <||@
  Comment 1508 520 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1508 522 stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1513 524 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1518 526 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1522 528 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1527 530 stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1532 532 NOP  <||@
  Comment 1533 534 NOP  <||@
  Comment 1534 536 NOP  <||@
  Comment 1535 538 r11|QWORD = MOVE input: long[8340|0x2094]  <||@
  Comment 1542 540 r10|DWORD = MOVE input: int[-96019|0xfffffffffffe88ed]  <||@
  Comment 1548 552 JUMP ~outgoingValues: [] destination: B14 -> B42  <||@
  Comment 1553 block B40 null  <||@
  Comment 1553 1096 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1553 1098 NOP  <||@
  Comment 1554 1100 NOP  <||@
  Comment 1555 1102 NOP  <||@
  Comment 1556 1104 NOP  <||@
  Comment 1557 1106 NOP  <||@
  Comment 1558 1108 NOP  <||@
  Comment 1559 1110 NOP  <||@
  Comment 1560 1112 NOP  <||@
  Comment 1561 1114 NOP  <||@
  Comment 1562 1116 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3  <||@
  Comment 1566 1118 MOV x: [r15|QWORD + 1156] y: -101139 size: DWORD  <||@
  Comment 1577 1120 MOV x: [r15|QWORD + 1168] y: 10260 size: QWORD  <||@
  Comment 1588 1122 DEOPT info [bci:4, 2, 5, 4, 35]  <||@
  Comment 1588 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1593 [rsi:0, r10:0, stack:32]at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4, duringCall: false, rethrow: false]
              |0             |1           |2  |3 
     locals:  |r10|QWORD[.]  |int[1|0x1]  |-  |- 
     stack:   |r11|DWORD     |            |   |  
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:48|QWORD[.] 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  |6  |7 
     locals:  |-  |-  |-  |-  |-  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 1601 block B22 null  <||@
  Comment 1601 708 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1601 710 stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1606 712 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1611 714 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1615 716 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1620 718 stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1625 720 NOP  <||@
  Comment 1626 722 NOP  <||@
  Comment 1627 724 NOP  <||@
  Comment 1628 726 r11|QWORD = MOVE input: long[8980|0x2314]  <||@
  Comment 1635 728 r10|DWORD = MOVE input: int[-100115|0xfffffffffffe78ed]  <||@
  Comment 1641 740 JUMP ~outgoingValues: [] destination: B22 -> B42  <||@
  Comment 1646 block B16 null  <||@
  Comment 1646 566 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1646 568 stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1651 570 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1656 572 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1660 574 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1665 576 stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1670 578 NOP  <||@
  Comment 1671 580 NOP  <||@
  Comment 1672 582 NOP  <||@
  Comment 1673 584 r11|QWORD = MOVE input: long[8340|0x2094]  <||@
  Comment 1680 586 r10|DWORD = MOVE input: int[-97043|0xfffffffffffe84ed]  <||@
  Comment 1686 598 JUMP ~outgoingValues: [] destination: B16 -> B42  <||@
  Comment 1691 block B20 null  <||@
  Comment 1691 662 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1691 664 stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1696 666 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1701 668 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1705 670 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1710 672 stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1715 674 NOP  <||@
  Comment 1716 676 NOP  <||@
  Comment 1717 678 NOP  <||@
  Comment 1718 680 r11|QWORD = MOVE input: long[8340|0x2094]  <||@
  Comment 1725 682 r10|DWORD = MOVE input: int[-99091|0xfffffffffffe7ced]  <||@
  Comment 1731 694 JUMP ~outgoingValues: [] destination: B20 -> B42  <||@
  Comment 1736 block B43 null  <||@
  Comment 1736 1180 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1736 1182 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1741 1184 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1745 1186 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1750 1188 stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1755 1190 NOP  <||@
  Comment 1756 1192 NOP  <||@
  Comment 1757 1194 NOP  <||@
  Comment 1758 1196 NOP  <||@
  Comment 1759 1198 NOP  <||@
  Comment 1760 1200 NOP  <||@
  Comment 1761 1202 NOP  <||@
  Comment 1762 1204 MOV x: [r15|QWORD + 1156] y: -92947 size: DWORD  <||@
  Comment 1773 1206 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 1784 1208 DEOPT info [bci:0]  <||@
  Comment 1784 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1789 [stack:16, stack:24]at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3               |4  |5  |6  |7 
     locals:  |stack:64|QWORD[.]  |stack:56|QWORD[.]  |stack:32|DWORD  |stack:28|DWORD  |-  |-  |-  |-   <||@
  Comment 1797 block B18 null  <||@
  Comment 1797 616 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1797 618 stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1802 620 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1807 622 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1811 624 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1816 626 stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1821 628 NOP  <||@
  Comment 1822 630 NOP  <||@
  Comment 1823 632 NOP  <||@
  Comment 1824 634 r11|QWORD = MOVE input: long[8340|0x2094]  <||@
  Comment 1831 636 r10|DWORD = MOVE input: int[-98067|0xfffffffffffe80ed]  <||@
  Comment 1837 648 JUMP ~outgoingValues: [] destination: B18 -> B42  <||@
  Comment 1842 block B12 null  <||@
  Comment 1842 474 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1842 476 stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1847 478 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1852 480 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1856 482 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1861 484 stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1866 486 NOP  <||@
  Comment 1867 488 NOP  <||@
  Comment 1868 490 NOP  <||@
  Comment 1869 492 r11|QWORD = MOVE input: long[8340|0x2094]  <||@
  Comment 1876 494 r10|DWORD = MOVE input: int[-94995|0xfffffffffffe8ced]  <||@
  Comment 1882 506 JUMP ~outgoingValues: [] destination: B12 -> B42  <||@
  Comment 1892 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1907 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1922 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 1937 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1962 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1990 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1995 [rdx:0, rsi:0]at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-  |-  |-   <||@
  Comment 2025 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2030 [rdx:0, rsi:0, r11:0, stack:40]at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-  |-  |-   <||@
  Comment 2060 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2065 [rdx:0, rsi:0, r11:0, stack:40]at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-  |-  |-   <||@
  Comment 2095 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2100 [rsi:0, stack:32]at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  |6  |7 
     locals:  |-  |-  |-  |-  |-  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 2130 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2135 [rsi:0, r10:0, stack:32]at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  |6  |7 
     locals:  |-  |-  |-  |-  |-  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 2143 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2143 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2149 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 2149 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-4844[sun.nio.cs.StreamEncoder.write(char[], int, int)]"
  method "HotSpotCompilation-4844[sun.nio.cs.StreamEncoder.write(char[], int, int)]"
  date 1724269738672
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789ae00660 448b560849bc0000002b787f00004d03d44d33e4493bc20f85034a98fe66669089842400c0feff4883ec489041817f20000000000f852507000090909090909090909090909048896c2440448b520c448b5e1044895c242842813cdd08000000200d11000f855e06000090909090909090909090909090909090909090428b04dd0c000000448b0cc50c000000428504cd00000000498b8780030000488b18418bf948c1e703418beb48c1e503b80000000041bd01000000f0460fb12ccd100000000f859b020000909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f8432000000468b2ccd0c00000049c1e5034d85ed0f841d000000498b47284883f8000f84410600004883e80849894728490347384c8928488bc348c1e803428904cd0c0000004c8bcf4c33cb49c1e9160f84450000004c8bcf49c1e90948b800e0368d787f00004c03c841803902742bf08304240041803900742041c60100498b47484885c00f84ec0500004883e80849894748490347584c89089090909090440fb64e1a4585c90f85950300009090909085c90f8c7205000090909090413bca0f8f17040000909090904585c00f8c9404000090909090908bd94103d8413bda0f8f180500009090909085db0f8ca2040000909090904585c00f843b04000048896c24209090909090909090909090909090909090909090e8fc4a98fe0f1f8400f4030004448b5c2428428b34dd0c000000448b14f50c000000468b1cd510000000428b14d50c0000004d8b878003000048c1e20348c1e603493b100f85a8030000909090904183fb010f85e4000000909090909090909090909090909090909041807f40000f8432000000468b04d50c00000049c1e0034d85c00f841d000000498b57284883fa000f84d70400004883ea0849895728490357384c890242c704d50c0000000000000090909090909090418bd3ffca428914d510000000f0830424004183fb010f85620000009090909090428b14d51400000085d20f85a700000090909090909090909090488b6c24404883c448493ba7d804000072234883ec08498bff48b9505d98b1787f0000ffd14883c40848b980d27399787f0000ffe1493ba7500400000f8747040000c3909090ebb1909090e96effffff90909090909090428b04cd0c00000048c1e003483bd80f856a000000909090909090428b1ccd100000008bc3ffc085c00f8c090200009090909090428904cd10000000f083042400e9f1fdffff9090909090448b14d5140000004585d20f8508000000909090e93effffff9090909042833cd50c000000000f85ec000000909090e923ffffff48896c2420448954242c4489442434894c24304889542418488974241090909090909090909090488bf7ba0100000048897c24086690e8fc4898fe0f1f8400f405000785c00f856f0000009090909090909090909090909090488b74240848c7c200000000b90100000041b80000000041b900000000bf0000000048c7042400000000666690e8ac4898fe0f1f840044060008488b6c2420448b5c2428448b54242c448b4424348b4c2430488b542418488b742410e9fefcffff909090488b6c2420448b5c2428448b54242c448b4424348b4c2430488b542418488b742410e9d4fcffff9090909090458bda49c1e303e911000000669090909090904d8b8f580400004185019090909090909090909090468b04d50c000000458bc84183e1fe418bc0f0460fb10cd50c00000075c8488974240890909090909090909090468b14d51800000049c1e203498bf290e8e44d98fe0f1f84000c07000ae9c3fdffff48896c24204489442434894c24304889542418488974241090909049c7c39425000041baed90feff488b6c2420488b542418488b74241090909090909090458997840400004d899f90040000e880a598fe0f1f84000000000048896c24204489442434894c2430488954241848897424109090909090909041c78784040000ed6ffeff49c7879004000094020000e83ea598fe0f1f84000000000048896c24204489442434894c24304889542418488974241090909049c7c39420000041baed88feffe960ffffff90909090909090909049c1e20341c78784040000ed74feff49c7879004000014280000e8e1a498fe0f1f84000000000048896c24204489442434894c24304889542418488974241090909049c7c31423000041baed78feffe903ffffff48896c24204489442434894c24304889542418488974241090909049c7c39420000041baed84feffe9d6feffff48896c24204489442434894c24304889542418488974241090909049c7c39420000041baed7cfeffe9a9feffff4489442434894c2430488954241848897424109090909090909041c78784040000ed94feff49c7879004000014000000e81da498fe0f1f84000000000048896c24204489442434894c24304889542418488974241090909049c7c39420000041baed80feffe93ffeffff48896c24204489442434894c24304889542418488974241090909049c7c39420000041baed8cfeffe912feffff48896c2440e857a496fee9ccf8fffff44c892c24e82874acfee9c0f9fffff44c890c24e89995acfee915fafffff44c890424e80a74acfee92afbfffff4488d0da5fbffff49898f68040000e9f1b198fef441c78784040000f501ffff49c7879004000000000000e84fa398fe0f1f84000000000041c78784040000ed94feff49c7879004000014000000e82ca398fe0f1f84000000000041c78784040000f50dffff49c7879004000000000000e809a398fe0f1f84000000000041c78784040000f5fafeff49c7879004000000000000e8e6a298fe0f1f84000000000041c78784040000f5f6feff49c7879004000000000000e8c3a298fe0f1f840000000000e83c44acfef4e856a098fef4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 75 28 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44d0a7e slotKind: QWORD  <||@
  Comment 75 30 r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 75 [rdx:0, rsi:0]at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-  |-  |-   <||@
  Comment 75 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 79 32 r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 83 34 stack:40|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD  <||@
  Comment 88 36 CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B43 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed} state [bci:0]  <||@
  Comment 88 [rdx:0, rsi:0, r11:0, stack:40]at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-  |-  |-   <||@
  Comment 88 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 88 {meta{HotSpotType<Ljdk/internal/misc/InternalLock;, resolved>;compressed}}  <||@
  Comment 106 block B1 null  <||@
  Comment 106 38 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 106 40 NOP  <||@
  Comment 107 42 NOP  <||@
  Comment 108 44 NOP  <||@
  Comment 109 46 NOP  <||@
  Comment 110 48 NOP  <||@
  Comment 111 50 NOP  <||@
  Comment 112 52 NOP  <||@
  Comment 113 54 NOP  <||@
  Comment 114 56 NOP  <||@
  Comment 115 58 NOP  <||@
  Comment 116 60 NOP  <||@
  Comment 117 62 NOP  <||@
  Comment 118 64 NOP  <||@
  Comment 119 66 NOP  <||@
  Comment 120 68 NOP  <||@
  Comment 121 70 NOP  <||@
  Comment 122 72 NOP  <||@
  Comment 123 74 NOP  <||@
  Comment 124 76 NOP  <||@
  Comment 125 78 rax|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 133 80 r9|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 133 [rdx:0, rsi:0, r11:0, stack:40]at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-  |-  |-   <||@
  Comment 133 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 141 82 NULLCHECK address: [r9|DWORD[_] * 8] state [bci:0]  <||@
  Comment 141 [rdx:0, rsi:0, r9:0, r11:0, stack:40]at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-  |-  |-   <||@
  Comment 141 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 149 84 rax|QWORD = MOV input: [r15|QWORD + 896] size: QWORD  <||@
  Comment 156 86 rbx|QWORD[.] = MOV input: [rax|QWORD] size: QWORD  <||@
  Comment 159 88 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3  <||@
  Comment 166 90 rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3  <||@
  Comment 173 92 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 178 94 r13|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 184 96 rax|DWORD = CAS (address: [r9|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: r13|DWORD) accessKind: DWORD  <||@
  Comment 194 98 BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B1 -> B2 falseDestination: B1 -> B9  <||@
  Comment 200 block B9 null  <||@
  Comment 200 322 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 200 324 NOP  <||@
  Comment 201 326 NOP  <||@
  Comment 202 328 NOP  <||@
  Comment 203 330 NOP  <||@
  Comment 204 332 NOP  <||@
  Comment 205 334 NOP  <||@
  Comment 206 336 NOP  <||@
  Comment 207 338 NOP  <||@
  Comment 208 340 NOP  <||@
  Comment 209 342 NOP  <||@
  Comment 210 344 NOP  <||@
  Comment 211 346 NOP  <||@
  Comment 212 348 NOP  <||@
  Comment 213 350 NOP  <||@
  Comment 214 352 NOP  <||@
  Comment 215 354 NOP  <||@
  Comment 216 356 NOP  <||@
  Comment 217 358 NOP  <||@
  Comment 218 360 NOP  <||@
  Comment 219 362 NOP  <||@
  Comment 220 364 NOP  <||@
  Comment 221 366 NOP  <||@
  Comment 222 368 NOP  <||@
  Comment 223 370 NOP  <||@
  Comment 224 372 NOP  <||@
  Comment 225 374 NOP  <||@
  Comment 226 376 NOP  <||@
  Comment 227 378 NOP  <||@
  Comment 228 380 NOP  <||@
  Comment 229 382 NOP  <||@
  Comment 230 384 NOP  <||@
  Comment 231 386 NOP  <||@
  Comment 232 388 NOP  <||@
  Comment 233 390 NOP  <||@
  Comment 234 392 NOP  <||@
  Comment 235 394 NOP  <||@
  Comment 236 396 NOP  <||@
  Comment 237 398 NOP  <||@
  Comment 238 400 NOP  <||@
  Comment 239 402 NOP  <||@
  Comment 240 404 NOP  <||@
  Comment 241 406 NOP  <||@
  Comment 242 408 NOP  <||@
  Comment 243 410 NOP  <||@
  Comment 244 412 NOP  <||@
  Comment 245 414 NOP  <||@
  Comment 246 416 NOP  <||@
  Comment 247 418 NOP  <||@
  Comment 248 420 NOP  <||@
  Comment 249 422 NOP  <||@
  Comment 250 424 NOP  <||@
  Comment 251 426 NOP  <||@
  Comment 252 428 NOP  <||@
  Comment 253 430 NOP  <||@
  Comment 254 432 NOP  <||@
  Comment 255 434 NOP  <||@
  Comment 256 436 AMD64G1PREWRITEBARRIER (~address: [r9|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: r13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72  <||@
  Comment 317 438 rax|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3  <||@
  Comment 324 440 MOV (x: [r9|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD  <||@
  Comment 332 442 AMD64G1POSTWRITEBARRIER (~address: rdi|QWORD[.], ~newValue: rbx|QWORD[.]) {temp: r9|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72  <||@
  Comment 417 444 JUMP ~outgoingValues: [] destination: B9 -> B10  <||@
  Comment 417 block B10 null  <||@
  Comment 417 446 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 417 448 NOP  <||@
  Comment 418 450 NOP  <||@
  Comment 419 452 NOP  <||@
  Comment 420 454 NOP  <||@
  Comment 421 456 NOP  <||@
  Comment 422 458 r9|DWORD = MOVZXB input: [rsi|QWORD[.] + 26] size: DWORD  <||@
  Comment 427 460 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B41 size: DWORD  <||@
  Comment 436 block B11 null  <||@
  Comment 436 462 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 436 464 NOP  <||@
  Comment 437 466 NOP  <||@
  Comment 438 468 NOP  <||@
  Comment 439 470 NOP  <||@
  Comment 440 472 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD  <||@
  Comment 448 block B13 null  <||@
  Comment 448 508 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 448 510 NOP  <||@
  Comment 449 512 NOP  <||@
  Comment 450 514 NOP  <||@
  Comment 451 516 NOP  <||@
  Comment 452 518 CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD  <||@
  Comment 461 block B15 null  <||@
  Comment 461 554 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 461 556 NOP  <||@
  Comment 462 558 NOP  <||@
  Comment 463 560 NOP  <||@
  Comment 464 562 NOP  <||@
  Comment 465 564 TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD  <||@
  Comment 474 block B17 null  <||@
  Comment 474 600 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 474 602 NOP  <||@
  Comment 475 604 NOP  <||@
  Comment 476 606 NOP  <||@
  Comment 477 608 NOP  <||@
  Comment 478 610 NOP  <||@
  Comment 479 612 rbx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 484 614 CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD  <||@
  Comment 493 block B19 null  <||@
  Comment 493 650 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 493 652 NOP  <||@
  Comment 494 654 NOP  <||@
  Comment 495 656 NOP  <||@
  Comment 496 658 NOP  <||@
  Comment 497 660 TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD  <||@
  Comment 505 block B21 null  <||@
  Comment 505 696 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 505 698 NOP  <||@
  Comment 506 700 NOP  <||@
  Comment 507 702 NOP  <||@
  Comment 508 704 NOP  <||@
  Comment 509 706 TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD  <||@
  Comment 518 block B23 null  <||@
  Comment 518 742 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 518 744 stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 523 746 NOP  <||@
  Comment 524 748 NOP  <||@
  Comment 525 750 NOP  <||@
  Comment 526 752 NOP  <||@
  Comment 527 754 NOP  <||@
  Comment 528 756 NOP  <||@
  Comment 529 758 NOP  <||@
  Comment 530 760 NOP  <||@
  Comment 531 762 NOP  <||@
  Comment 532 764 NOP  <||@
  Comment 533 766 NOP  <||@
  Comment 534 768 NOP  <||@
  Comment 535 770 NOP  <||@
  Comment 536 772 NOP  <||@
  Comment 537 774 NOP  <||@
  Comment 538 776 NOP  <||@
  Comment 539 778 NOP  <||@
  Comment 540 780 NOP  <||@
  Comment 541 782 NOP  <||@
  Comment 542 784 NOP  <||@
  Comment 543 786 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<StreamEncoder.implWrite(char[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:49, 30]  <||@
  Comment 543 {HotSpotMethod<StreamEncoder.implWrite(char[], int, int)>}  <||@
  Comment 543 INVOKESPECIAL  <||@
  Comment 548 [stack:32, stack:40]at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:158) [bci: 49, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  |6  |7 
     locals:  |-  |-  |-  |-  |-  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 556 788 r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD  <||@
  Comment 561 790 rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 569 792 r10|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 30]  <||@
  Comment 569 [rsi:0, stack:32]at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  |6  |7 
     locals:  |-  |-  |-  |-  |-  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 569 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 577 794 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:52, 30]  <||@
  Comment 577 [rsi:0, r10:0, stack:32]at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  |6  |7 
     locals:  |-  |-  |-  |-  |-  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 577 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 585 796 rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 593 798 r8|QWORD = MOV input: [r15|QWORD + 896] size: QWORD  <||@
  Comment 600 800 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3  <||@
  Comment 604 802 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3  <||@
  Comment 608 804 CMPBRANCH (x: rdx|QWORD[.], y: [r8|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B40 size: QWORD  <||@
  Comment 617 block B24 null  <||@
  Comment 617 806 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 617 808 NOP  <||@
  Comment 618 810 NOP  <||@
  Comment 619 812 NOP  <||@
  Comment 620 814 NOP  <||@
  Comment 621 816 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: DWORD inlinedY: null  <||@
  Comment 631 block B25 null  <||@
  Comment 631 818 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 631 820 NOP  <||@
  Comment 632 822 NOP  <||@
  Comment 633 824 NOP  <||@
  Comment 634 826 NOP  <||@
  Comment 635 828 NOP  <||@
  Comment 636 830 NOP  <||@
  Comment 637 832 NOP  <||@
  Comment 638 834 NOP  <||@
  Comment 639 836 NOP  <||@
  Comment 640 838 NOP  <||@
  Comment 641 840 NOP  <||@
  Comment 642 842 NOP  <||@
  Comment 643 844 NOP  <||@
  Comment 644 846 NOP  <||@
  Comment 645 848 NOP  <||@
  Comment 646 850 NOP  <||@
  Comment 647 852 NOP  <||@
  Comment 648 854 AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rdx|QWORD, temp2: r8|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1eeffd72  <||@
  Comment 709 856 MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD  <||@
  Comment 721 858 JUMP ~outgoingValues: [] destination: B25 -> B27  <||@
  Comment 721 block B27 null  <||@
  Comment 721 870 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 721 872 NOP  <||@
  Comment 722 874 NOP  <||@
  Comment 723 876 NOP  <||@
  Comment 724 878 NOP  <||@
  Comment 725 880 NOP  <||@
  Comment 726 882 NOP  <||@
  Comment 727 884 NOP  <||@
  Comment 728 886 rdx|DWORD = DEC value: r11|DWORD size: DWORD  <||@
  Comment 733 888 MOV (x: [r10|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD  <||@
  Comment 741 890 MEMBAR barriers: 4  <||@
  Comment 746 892 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8633858966180564 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B38 y: 1 size: DWORD inlinedY: null  <||@
  Comment 756 block B28 null  <||@
  Comment 756 894 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 756 896 NOP  <||@
  Comment 757 898 NOP  <||@
  Comment 758 900 NOP  <||@
  Comment 759 902 NOP  <||@
  Comment 760 904 NOP  <||@
  Comment 761 906 rdx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 769 908 TESTBRANCH (x: rdx|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD  <||@
  Comment 777 block B29 null  <||@
  Comment 777 910 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 777 912 NOP  <||@
  Comment 778 914 NOP  <||@
  Comment 779 916 NOP  <||@
  Comment 780 918 JUMP ~outgoingValues: [] destination: B29 -> B39  <||@
  Comment 780 block B39 null  <||@
  Comment 780 1078 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 780 1080 NOP  <||@
  Comment 781 1082 NOP  <||@
  Comment 782 1084 NOP  <||@
  Comment 783 1086 NOP  <||@
  Comment 784 1088 NOP  <||@
  Comment 785 1090 NOP  <||@
  Comment 786 1092 NOP  <||@
  Comment 787 1094 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 812 {HotSpotForeignCallDescriptor{enableStackReservedZoneEntry(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[], transition=LEAF_NO_VZERO}@0x7f78b1985d50:CallingConvention[rdi|QWORD]:CallingConvention[rdi|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL}  <||@
  Comment 828 {Field[name=StubRoutines::_throw_delayed_StackOverflowError_entry, type=address, offset=0, address=0x7f78b2050498, value=140155947307648]:0x7f789973d280}  <||@
  Comment 840 POLL_RETURN_FAR  <||@
  Comment 854 block B38 null  <||@
  Comment 854 1068 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 854 1070 NOP  <||@
  Comment 855 1072 NOP  <||@
  Comment 856 1074 NOP  <||@
  Comment 857 1076 JUMP ~outgoingValues: [] destination: B38 -> B39  <||@
  Comment 859 block B26 null  <||@
  Comment 859 860 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 859 862 NOP  <||@
  Comment 860 864 NOP  <||@
  Comment 861 866 NOP  <||@
  Comment 862 868 JUMP ~outgoingValues: [] destination: B26 -> B27  <||@
  Comment 867 block B2 null  <||@
  Comment 867 100 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 867 102 NOP  <||@
  Comment 868 104 NOP  <||@
  Comment 869 106 NOP  <||@
  Comment 870 108 NOP  <||@
  Comment 871 110 NOP  <||@
  Comment 872 112 NOP  <||@
  Comment 873 114 NOP  <||@
  Comment 874 116 rax|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 882 118 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3  <||@
  Comment 886 120 CMPBRANCH (x: rbx|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: QWORD  <||@
  Comment 895 block B3 null  <||@
  Comment 895 122 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 895 124 NOP  <||@
  Comment 896 126 NOP  <||@
  Comment 897 128 NOP  <||@
  Comment 898 130 NOP  <||@
  Comment 899 132 NOP  <||@
  Comment 900 134 NOP  <||@
  Comment 901 136 rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 909 138 rax|DWORD = INC value: rbx|DWORD size: DWORD  <||@
  Comment 913 140 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD  <||@
  Comment 921 block B5 null  <||@
  Comment 921 174 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 921 176 NOP  <||@
  Comment 922 178 NOP  <||@
  Comment 923 180 NOP  <||@
  Comment 924 182 NOP  <||@
  Comment 925 184 NOP  <||@
  Comment 926 186 MOV (x: [r9|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 934 188 MEMBAR barriers: 4  <||@
  Comment 939 190 JUMP ~outgoingValues: [] destination: B5 -> B10  <||@
  Comment 944 block B30 null  <||@
  Comment 944 920 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 944 922 NOP  <||@
  Comment 945 924 NOP  <||@
  Comment 946 926 NOP  <||@
  Comment 947 928 NOP  <||@
  Comment 948 930 NOP  <||@
  Comment 949 932 r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 957 934 TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD  <||@
  Comment 966 block B31 null  <||@
  Comment 966 936 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 966 938 NOP  <||@
  Comment 967 940 NOP  <||@
  Comment 968 942 NOP  <||@
  Comment 969 944 JUMP ~outgoingValues: [] destination: B31 -> B39  <||@
  Comment 974 block B32 null  <||@
  Comment 974 946 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 974 948 NOP  <||@
  Comment 975 950 NOP  <||@
  Comment 976 952 NOP  <||@
  Comment 977 954 NOP  <||@
  Comment 978 956 CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: DWORD inlinedY: null  <||@
  Comment 993 block B33 null  <||@
  Comment 993 958 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 993 960 NOP  <||@
  Comment 994 962 NOP  <||@
  Comment 995 964 NOP  <||@
  Comment 996 966 JUMP ~outgoingValues: [] destination: B33 -> B39  <||@
  Comment 1001 block B6 null  <||@
  Comment 1001 192 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1001 194 stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1006 196 stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1011 198 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1016 200 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1020 202 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1025 204 stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1030 206 NOP  <||@
  Comment 1031 208 NOP  <||@
  Comment 1032 210 NOP  <||@
  Comment 1033 212 NOP  <||@
  Comment 1034 214 NOP  <||@
  Comment 1035 216 NOP  <||@
  Comment 1036 218 NOP  <||@
  Comment 1037 220 NOP  <||@
  Comment 1038 222 NOP  <||@
  Comment 1039 224 NOP  <||@
  Comment 1040 226 rsi|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1043 228 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1048 230 stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1053 232 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 23]  <||@
  Comment 1055 {HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)>}  <||@
  Comment 1055 INVOKESPECIAL  <||@
  Comment 1060 [stack:8, stack:16, stack:24, stack:32, stack:40]at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1          
     locals:  |stack:72|QWORD[.]  |int[1|0x1] 
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:72|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:48|QWORD[.] 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5                  |6  |7 
     locals:  |stack:64|QWORD[.]  |stack:56|QWORD[.]  |stack:32|DWORD  |stack:28|DWORD  |stack:48|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 1068 234 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7455315145813735 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD  <||@
  Comment 1076 block B7 null  <||@
  Comment 1076 236 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1076 238 NOP  <||@
  Comment 1077 240 NOP  <||@
  Comment 1078 242 NOP  <||@
  Comment 1079 244 NOP  <||@
  Comment 1080 246 NOP  <||@
  Comment 1081 248 NOP  <||@
  Comment 1082 250 NOP  <||@
  Comment 1083 252 NOP  <||@
  Comment 1084 254 NOP  <||@
  Comment 1085 256 NOP  <||@
  Comment 1086 258 NOP  <||@
  Comment 1087 260 NOP  <||@
  Comment 1088 262 NOP  <||@
  Comment 1089 264 NOP  <||@
  Comment 1090 266 rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1095 268 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1102 270 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1107 272 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1113 274 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1119 276 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1124 278 out:0|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1132 280 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 23]  <||@
  Comment 1135 {HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)>}  <||@
  Comment 1135 INVOKESPECIAL  <||@
  Comment 1140 [stack:8, stack:16, stack:24, stack:32, stack:40]at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:72|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:48|QWORD[.] 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5                  |6  |7 
     locals:  |stack:64|QWORD[.]  |stack:56|QWORD[.]  |stack:32|DWORD  |stack:28|DWORD  |stack:48|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 1148 282 rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1153 284 r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD  <||@
  Comment 1158 286 r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1163 288 r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1168 290 rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1172 292 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1177 294 rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1182 296 JUMP ~outgoingValues: [] destination: B7 -> B10  <||@
  Comment 1187 block B8 null  <||@
  Comment 1187 298 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1187 300 NOP  <||@
  Comment 1188 302 NOP  <||@
  Comment 1189 304 NOP  <||@
  Comment 1190 306 rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1195 308 r11|DWORD[_] = MOVE input: stack:40|DWORD[_] moveKind: DWORD  <||@
  Comment 1200 310 r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1205 312 r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1210 314 rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1214 316 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1219 318 rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1224 320 JUMP ~outgoingValues: [] destination: B8 -> B10  <||@
  Comment 1229 block B34 null  <||@
  Comment 1229 968 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1229 970 NOP  <||@
  Comment 1230 972 NOP  <||@
  Comment 1231 974 NOP  <||@
  Comment 1232 976 NOP  <||@
  Comment 1233 978 NOP  <||@
  Comment 1234 980 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3  <||@
  Comment 1241 982 JUMP ~outgoingValues: [] destination: B34 -> B35  <||@
  Comment 1246 block B36 loop 0 depth 1 header:208|LoopBegin  <||@
  Comment 1246 1018 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1248 1020 NOP  <||@
  Comment 1249 1022 NOP  <||@
  Comment 1250 1024 NOP  <||@
  Comment 1251 1026 NOP  <||@
  Comment 1252 1028 NOP  <||@
  Comment 1253 1030 SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 35]  <||@
  Comment 1260 [rsi:0, r10:0, r11:0, stack:32]at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21, duringCall: false, rethrow: false]
              |0                         |1             |2             |3  |4                           |5        
     locals:  |Object[Unsafe@679697080]  |r11|QWORD[.]  |long[12|0xc]  |-  |int[-2|0xfffffffffffffffe]  |r8|DWORD 
     stack:   |int[0|0x0]                |              |              |   |                            |         
  at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10, duringCall: true, rethrow: false]
              |0             |1          
     locals:  |r11|QWORD[.]  |int[1|0x1] 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |r11|QWORD[.] 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:48|QWORD[.] 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  |6  |7 
     locals:  |-  |-  |-  |-  |-  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 1260 {infopoint: SAFEPOINT}  <||@
  Comment 1260 POLL_FAR  <||@
  Comment 1263 1032 JUMP ~outgoingValues: [] destination: B36 -> B35  <||@
  Comment 1263 block B35 loop 0 depth 1 header:208|LoopBegin  <||@
  Comment 1263 984 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1263 986 NOP  <||@
  Comment 1264 988 NOP  <||@
  Comment 1265 990 NOP  <||@
  Comment 1266 992 NOP  <||@
  Comment 1267 994 NOP  <||@
  Comment 1268 996 NOP  <||@
  Comment 1269 998 NOP  <||@
  Comment 1270 1000 NOP  <||@
  Comment 1271 1002 NOP  <||@
  Comment 1272 1004 NOP  <||@
  Comment 1273 1006 NOP  <||@
  Comment 1274 1008 r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1282 1010 r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD  <||@
  Comment 1289 1012 rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1292 1014 rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD  <||@
  Comment 1302 1016 BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 1304 block B37 null  <||@
  Comment 1304 1034 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1304 1036 stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1309 1038 NOP  <||@
  Comment 1310 1040 NOP  <||@
  Comment 1311 1042 NOP  <||@
  Comment 1312 1044 NOP  <||@
  Comment 1313 1046 NOP  <||@
  Comment 1314 1048 NOP  <||@
  Comment 1315 1050 NOP  <||@
  Comment 1316 1052 NOP  <||@
  Comment 1317 1054 NOP  <||@
  Comment 1318 1056 NOP  <||@
  Comment 1319 1058 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD  <||@
  Comment 1327 1060 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3  <||@
  Comment 1331 1062 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1334 1064 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 35]  <||@
  Comment 1335 {HotSpotMethod<LockSupport.unpark(Thread)>}  <||@
  Comment 1335 INVOKESTATIC  <||@
  Comment 1340 [stack:8, stack:32]at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:72|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:48|QWORD[.] 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  |6  |7 
     locals:  |-  |-  |-  |-  |-  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 1348 1066 JUMP ~outgoingValues: [] destination: B37 -> B39  <||@
  Comment 1353 block B41 null  <||@
  Comment 1353 1124 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1353 1126 stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1358 1128 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1363 1130 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1367 1132 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1372 1134 stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1377 1136 NOP  <||@
  Comment 1378 1138 NOP  <||@
  Comment 1379 1140 NOP  <||@
  Comment 1380 1142 r11|QWORD = MOVE input: long[9620|0x2594]  <||@
  Comment 1387 1144 r10|DWORD = MOVE input: int[-93971|0xfffffffffffe90ed]  <||@
  Comment 1393 1156 JUMP ~outgoingValues: [] destination: B41 -> B42  <||@
  Comment 1393 block B42 null  <||@
  Comment 1393 1158 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1393 496 rbp|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1398 502 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1403 504 rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1408 1160 NOP  <||@
  Comment 1409 1162 NOP  <||@
  Comment 1410 1164 NOP  <||@
  Comment 1411 1166 NOP  <||@
  Comment 1412 1168 NOP  <||@
  Comment 1413 1170 NOP  <||@
  Comment 1414 1172 NOP  <||@
  Comment 1415 1174 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1422 1176 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 1429 1178 DEOPT info [bci:4, 1, 30]  <||@
  Comment 1429 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1434 [rdx:0, rbp:0, rsi:0]at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:51) [bci: 4, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.] 
     stack:   |r9|DWORD     
  at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:151) [bci: 1, duringCall: true, rethrow: false]
              |0             |1             |2          |3        
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5             |6  |7 
     locals:  |-  |-  |-  |-  |-  |rbp|QWORD[.]  |-  |-   <||@
  Comment 1442 block B4 null  <||@
  Comment 1442 142 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1442 144 stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1447 146 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1452 148 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1456 150 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1461 152 stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1466 154 NOP  <||@
  Comment 1467 156 NOP  <||@
  Comment 1468 158 NOP  <||@
  Comment 1469 160 NOP  <||@
  Comment 1470 162 NOP  <||@
  Comment 1471 164 NOP  <||@
  Comment 1472 166 NOP  <||@
  Comment 1473 168 MOV x: [r15|QWORD + 1156] y: -102419 size: DWORD  <||@
  Comment 1484 170 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 1495 172 DEOPT info [bci:32, 1, 4, 4, 23]  <||@
  Comment 1495 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1500 [rdi:0, stack:16, stack:24, stack:32]at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rdi|QWORD[.]  |-  |- 
     stack:   |rbx|DWORD     |   |  
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |rdi|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:48|QWORD[.] 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:137) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5                  |6  |7 
     locals:  |stack:64|QWORD[.]  |stack:56|QWORD[.]  |stack:32|DWORD  |stack:28|DWORD  |stack:48|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 1508 block B14 null  <||@
  Comment 1508 520 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1508 522 stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1513 524 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1518 526 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1522 528 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1527 530 stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1532 532 NOP  <||@
  Comment 1533 534 NOP  <||@
  Comment 1534 536 NOP  <||@
  Comment 1535 538 r11|QWORD = MOVE input: long[8340|0x2094]  <||@
  Comment 1542 540 r10|DWORD = MOVE input: int[-96019|0xfffffffffffe88ed]  <||@
  Comment 1548 552 JUMP ~outgoingValues: [] destination: B14 -> B42  <||@
  Comment 1553 block B40 null  <||@
  Comment 1553 1096 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1553 1098 NOP  <||@
  Comment 1554 1100 NOP  <||@
  Comment 1555 1102 NOP  <||@
  Comment 1556 1104 NOP  <||@
  Comment 1557 1106 NOP  <||@
  Comment 1558 1108 NOP  <||@
  Comment 1559 1110 NOP  <||@
  Comment 1560 1112 NOP  <||@
  Comment 1561 1114 NOP  <||@
  Comment 1562 1116 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c632507 encoding: base: 0 shift: 3  <||@
  Comment 1566 1118 MOV x: [r15|QWORD + 1156] y: -101139 size: DWORD  <||@
  Comment 1577 1120 MOV x: [r15|QWORD + 1168] y: 10260 size: QWORD  <||@
  Comment 1588 1122 DEOPT info [bci:4, 2, 5, 4, 35]  <||@
  Comment 1588 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1593 [rsi:0, r10:0, stack:32]at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4, duringCall: false, rethrow: false]
              |0             |1           |2  |3 
     locals:  |r10|QWORD[.]  |int[1|0x1]  |-  |- 
     stack:   |r11|DWORD     |            |   |  
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:48|QWORD[.] 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:141) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  |6  |7 
     locals:  |-  |-  |-  |-  |-  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 1601 block B22 null  <||@
  Comment 1601 708 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1601 710 stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1606 712 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1611 714 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1615 716 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1620 718 stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1625 720 NOP  <||@
  Comment 1626 722 NOP  <||@
  Comment 1627 724 NOP  <||@
  Comment 1628 726 r11|QWORD = MOVE input: long[8980|0x2314]  <||@
  Comment 1635 728 r10|DWORD = MOVE input: int[-100115|0xfffffffffffe78ed]  <||@
  Comment 1641 740 JUMP ~outgoingValues: [] destination: B22 -> B42  <||@
  Comment 1646 block B16 null  <||@
  Comment 1646 566 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1646 568 stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1651 570 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1656 572 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1660 574 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1665 576 stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1670 578 NOP  <||@
  Comment 1671 580 NOP  <||@
  Comment 1672 582 NOP  <||@
  Comment 1673 584 r11|QWORD = MOVE input: long[8340|0x2094]  <||@
  Comment 1680 586 r10|DWORD = MOVE input: int[-97043|0xfffffffffffe84ed]  <||@
  Comment 1686 598 JUMP ~outgoingValues: [] destination: B16 -> B42  <||@
  Comment 1691 block B20 null  <||@
  Comment 1691 662 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1691 664 stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1696 666 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1701 668 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1705 670 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1710 672 stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1715 674 NOP  <||@
  Comment 1716 676 NOP  <||@
  Comment 1717 678 NOP  <||@
  Comment 1718 680 r11|QWORD = MOVE input: long[8340|0x2094]  <||@
  Comment 1725 682 r10|DWORD = MOVE input: int[-99091|0xfffffffffffe7ced]  <||@
  Comment 1731 694 JUMP ~outgoingValues: [] destination: B20 -> B42  <||@
  Comment 1736 block B43 null  <||@
  Comment 1736 1180 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1736 1182 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1741 1184 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1745 1186 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1750 1188 stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1755 1190 NOP  <||@
  Comment 1756 1192 NOP  <||@
  Comment 1757 1194 NOP  <||@
  Comment 1758 1196 NOP  <||@
  Comment 1759 1198 NOP  <||@
  Comment 1760 1200 NOP  <||@
  Comment 1761 1202 NOP  <||@
  Comment 1762 1204 MOV x: [r15|QWORD + 1156] y: -92947 size: DWORD  <||@
  Comment 1773 1206 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 1784 1208 DEOPT info [bci:0]  <||@
  Comment 1784 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1789 [stack:16, stack:24]at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3               |4  |5  |6  |7 
     locals:  |stack:64|QWORD[.]  |stack:56|QWORD[.]  |stack:32|DWORD  |stack:28|DWORD  |-  |-  |-  |-   <||@
  Comment 1797 block B18 null  <||@
  Comment 1797 616 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1797 618 stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1802 620 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1807 622 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1811 624 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1816 626 stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1821 628 NOP  <||@
  Comment 1822 630 NOP  <||@
  Comment 1823 632 NOP  <||@
  Comment 1824 634 r11|QWORD = MOVE input: long[8340|0x2094]  <||@
  Comment 1831 636 r10|DWORD = MOVE input: int[-98067|0xfffffffffffe80ed]  <||@
  Comment 1837 648 JUMP ~outgoingValues: [] destination: B18 -> B42  <||@
  Comment 1842 block B12 null  <||@
  Comment 1842 474 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1842 476 stack:48|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1847 478 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1852 480 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1856 482 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1861 484 stack:64|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1866 486 NOP  <||@
  Comment 1867 488 NOP  <||@
  Comment 1868 490 NOP  <||@
  Comment 1869 492 r11|QWORD = MOVE input: long[8340|0x2094]  <||@
  Comment 1876 494 r10|DWORD = MOVE input: int[-94995|0xfffffffffffe8ced]  <||@
  Comment 1882 506 JUMP ~outgoingValues: [] destination: B12 -> B42  <||@
  Comment 1892 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1907 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1922 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 1937 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1962 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1990 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1995 [rdx:0, rsi:0]at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-  |-  |-   <||@
  Comment 2025 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2030 [rdx:0, rsi:0, r11:0, stack:40]at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-  |-  |-   <||@
  Comment 2060 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2065 [rdx:0, rsi:0, r11:0, stack:40]at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:135) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-  |-  |-   <||@
  Comment 2095 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2100 [rsi:0, stack:32]at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  |6  |7 
     locals:  |-  |-  |-  |-  |-  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 2130 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2135 [rsi:0, r10:0, stack:32]at sun.nio.cs.StreamEncoder.lockedWrite(StreamEncoder.java:159) [bci: 52, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:139) [bci: 30, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  |6  |7 
     locals:  |-  |-  |-  |-  |-  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 2143 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2143 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2149 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 2149 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
