begin_compilation
  name " HotSpotCompilation-10488[java.lang.StringLatin1.indexOf(byte[], byte[])]"
  method "HotSpotCompilation-10488[java.lang.StringLatin1.indexOf(byte[], byte[])]"
  date 1724269762029
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i160 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i160  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a# byte[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v164 i56 i68 i44 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# byte[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v163 v165 v166 i68 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_1
code: ResolvedJavaMethodBytecode<StringLatin1.indexOf(byte[], byte[])>
localsSize: 2
locksSize: 0
sourceFile: StringLatin1.java
sourceLine: 220
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v143 i160 i161 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i160 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i160 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-5643|0xffffffffffffe9f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 1]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v163 
lastLocationAccess: - 
=== Succesors ===
next: i161 
=== Usages ===
v6 i68 v110 v39 i135 v61 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v163 lastLocationAccess: - #next: i161  <|@  <|@
f <@~|@floating>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i161 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i161 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-7179|0xffffffffffffe3f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:223) [bci: 8]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v164 
lastLocationAccess: - 
=== Succesors ===
next: v126 
=== Usages ===
v9 i135 v110 i44 
=== Predecessor ===
i160 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v164 lastLocationAccess: - #next: v126  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v6 v9 v69 v57 i44 i55 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i160 
y: i5 
=== Succesors ===
=== Usages ===
v126 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i160 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v6 
=== Succesors ===
trueSuccessor: v124 
falseSuccessor: v125 
=== Usages ===
=== Predecessor ===
i161 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v6 #trueSuccessor: v124 #falseSuccessor: v125  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v146  <|@  <|@
f <@~|@floating>@ <|@
tid j148 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 1]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j142 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i147 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 1]
rawvalue: -31507
stableDimension: 0
stamp: i32 [-31507]
stampKind: i32
value: int[-31507|0xffffffffffff84ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i141 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
v124 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:223) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v130 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v130  <|@  <|@
f <@~|@floating>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:223) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i161 
y: i5 
=== Succesors ===
=== Usages ===
v130 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i161 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:223) [bci: 9]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v9 
=== Succesors ===
trueSuccessor: v128 
falseSuccessor: v129 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v9 #trueSuccessor: v128 #falseSuccessor: v129  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:223) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v149 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v149  <|@  <|@
f <@~|@floating>@ <|@
tid j151 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 1]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j142 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i150 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 1]
rawvalue: -32531
stableDimension: 0
stamp: i32 [-32531]
stampKind: i32
value: int[-32531|0xffffffffffff80ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i141 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
v128 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 1]
stamp: i32 [-32531 - -31507] bits:1...10000x0011101101
valueDescription: i32
=== Inputs ===
merge: v137 
values: i147 i150 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v137 values: i147 i150  <|@  <|@
f <@~|@floating>@ <|@
tid j142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 1]
stamp: i64 [20 - 660] bits:0...0x0x0010100
valueDescription: i64
=== Inputs ===
merge: v137 
values: j148 j151 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v137 values: j148 j151  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v146 v149 
=== Succesors ===
next: v143 
=== Usages ===
i141 j142 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v146 v149 #next: v143  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 1]
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i141 
speculation: j142 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i141 speculation: j142  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v37  <|@  <|@
f <@~|@floating>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:73) [bci: 37] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i161 
y: i160 
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i161 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:75) [bci: 51] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i91 i91 i91 i91 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:73) [bci: 48] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 0.25
stamp: void
=== Inputs ===
condition: v110 
=== Succesors ===
trueSuccessor: v35 
falseSuccessor: v36 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v110 #trueSuccessor: v35 #falseSuccessor: v36  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:75) [bci: 51] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v90 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v90  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
v35 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:77) [bci: 53] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v42  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:71) [bci: 2] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 i74 v111 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:77) [bci: 58] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i160 
y: i32 
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i160 y: i32  <|@  <|@
f <@~|@floating>@ <|@
tid j43 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.byteArrayOffset(StringLatin1Snippets.java:66) [bci: 6]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:78) [bci: 83] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i44 i56 j67 i68 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i81 i82 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:77) [bci: 69] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 0.25
stamp: void
=== Inputs ===
condition: v39 
=== Succesors ===
trueSuccessor: v40 
falseSuccessor: v41 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v39 #trueSuccessor: v40 #falseSuccessor: v41  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:78) [bci: 72] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: i81 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i81  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i81 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.StringHelperIntrinsics.getByte(byte[], int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:79) [bci: 91] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v165 
lastLocationAccess: - 
=== Succesors ===
next: i44 
=== Usages ===
i85 
=== Predecessor ===
v40 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v165 lastLocationAccess: - #next: i44  <|@  <|@
f <@~|@floating>@ <|@
tid i85 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.Byte.toUnsignedInt(Byte.java:554) [bci: 4]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:79) [bci: 94] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i81 
=== Succesors ===
=== Usages ===
i44 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i81  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i44 <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode.optimizedArrayIndexOf(JavaKind, Stride, LIRGeneratorTool$ArrayIndexOfVariant, Object, long, int, int, int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:78) [bci: 97] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
runtimeCheckedCPUFeatures: [null]
stamp: i32
stride: S1
variant: MatchAny
=== Inputs ===
lastLocationAccess: - 
arrayPointer: a1 
arrayOffset: j43 
arrayLength: i161 
fromIndex: i5 
searchValues: i85 
=== Succesors ===
next: v92 
=== Usages ===
i91 
=== Predecessor ===
i81 >@ <|@
instruction <@ArrayIndexOf|@jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode>@ lastLocationAccess: - arrayPointer: a1 arrayOffset: j43 arrayLength: i161 fromIndex: i5 searchValues: i85 #next: v92  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
i44 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:81) [bci: 101] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v52  <|@  <|@
f <@~|@floating>@ <|@
tid i135 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i161 
y: i160 
=== Succesors ===
=== Usages ===
i136 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i161 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:81) [bci: 103] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v61 i136 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i136 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i135 
y: i45 
=== Succesors ===
=== Usages ===
v111 i56 v75 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i135 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:83) [bci: 119] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i136 
y: i32 
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i136 y: i32  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:83) [bci: 130] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 0.25
stamp: void
=== Inputs ===
condition: v111 
=== Succesors ===
trueSuccessor: v51 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v111 #trueSuccessor: v51 #falseSuccessor: v50  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:105) [bci: 288] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v96  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
v51 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:84) [bci: 133] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: i82 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i82  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i82 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.StringHelperIntrinsics.getByte(byte[], int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:84) [bci: 135] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v165 
lastLocationAccess: - 
=== Succesors ===
next: i84 
=== Usages ===
i86 
=== Predecessor ===
v50 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v165 lastLocationAccess: - #next: i84  <|@  <|@
f <@~|@floating>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
displacement: 17
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i84 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i84 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.StringHelperIntrinsics.getByte(byte[], int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:85) [bci: 142] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v166 
lastLocationAccess: - 
=== Succesors ===
next: v53 
=== Usages ===
i88 
=== Predecessor ===
i82 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v166 lastLocationAccess: - #next: v53  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.Byte.toUnsignedInt(Byte.java:554) [bci: 4]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:89) [bci: 172] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i84 
=== Succesors ===
=== Usages ===
i56 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i84  <|@  <|@
f <@~|@floating>@ <|@
tid i86 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.Byte.toUnsignedInt(Byte.java:554) [bci: 4]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:88) [bci: 167] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i82 
=== Succesors ===
=== Usages ===
i56 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i82  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:94) [bci: 210] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i160 
y: i45 
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i160 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
i84 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v54 
values: i5 i74 
=== Succesors ===
=== Usages ===
i56 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v54 values: i5 i74  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 39
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v53 
=== Succesors ===
next: i56 
=== Usages ===
i55 v58 v62 v70 v76 v77 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v53 #next: i56  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i56 <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode.optimizedArrayIndexOf(JavaKind, Stride, LIRGeneratorTool$ArrayIndexOfVariant, Object, long, int, int, int, int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 175] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
runtimeCheckedCPUFeatures: [null]
stamp: i32
stride: S1
variant: FindTwoConsecutive
=== Inputs ===
lastLocationAccess: - 
arrayPointer: a1 
arrayOffset: j43 
arrayLength: i136 
fromIndex: i55 
searchValues: i86 i88 
=== Succesors ===
next: v60 
=== Usages ===
v57 i91 j162 i91 i74 
=== Predecessor ===
v54 >@ <|@
instruction <@ArrayIndexOf|@jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode>@ lastLocationAccess: - arrayPointer: a1 arrayOffset: j43 arrayLength: i136 fromIndex: i55 searchValues: i86 i88 #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:90) [bci: 185] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i56 
y: i5 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i56 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:90) [bci: 196] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 0.25
stamp: void
=== Inputs ===
condition: v57 
=== Succesors ===
trueSuccessor: v58 
falseSuccessor: v59 
=== Usages ===
=== Predecessor ===
i56 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v57 #trueSuccessor: v58 #falseSuccessor: v59  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:93) [bci: 201] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v65  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:94) [bci: 221] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 0.25
stamp: void
=== Inputs ===
condition: v61 
=== Succesors ===
trueSuccessor: v62 
falseSuccessor: v64 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v61 #trueSuccessor: v62 #falseSuccessor: v64  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:97) [bci: 227] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: i68 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i68  <|@  <|@
f <@~|@floating>@ <|@
tid j162 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i56 
=== Succesors ===
=== Usages ===
j67 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i56  <|@  <|@
f <@~|@floating>@ <|@
tid j67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.byteArrayOffset(StringLatin1Snippets.java:66) [bci: 15]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:98) [bci: 234] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: i64 [16 - 4294967311] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j162 
y: j43 
=== Succesors ===
=== Usages ===
i68 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j162 y: j43  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i68 <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ArrayRegionEqualsNode.regionEquals(Object, long, Object, long, int, JavaKind, Stride, Stride) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:98) [bci: 252] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
runtimeCheckedCPUFeatures: [null]
stamp: i32 [0 - 1] bits:0...0x
strideA: S1
strideB: S1
=== Inputs ===
lastLocationAccess: - 
arrayA: a1 
offsetA: j67 
arrayB: a2 
offsetB: j43 
length: i160 
dynamicStrides: - 
=== Succesors ===
next: v73 
=== Usages ===
v69 
=== Predecessor ===
v64 >@ <|@
instruction <@ArrayRegionEquals|@jdk.graal.compiler.replacements.nodes.ArrayRegionEqualsNode>@ lastLocationAccess: - arrayA: a1 offsetA: j67 arrayB: a2 offsetB: j43 length: i160 dynamicStrides: - #next: v73  <|@  <|@
f <@~|@floating>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:97) [bci: 258] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i68 
y: i5 
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i68 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:97) [bci: 258] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 0.75
stamp: void
=== Inputs ===
condition: v69 
=== Succesors ===
trueSuccessor: v72 
falseSuccessor: v70 
=== Usages ===
=== Predecessor ===
i68 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v69 #trueSuccessor: v72 #falseSuccessor: v70  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:102) [bci: 264] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v79 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v79  <|@  <|@
f <@~|@floating>@ <|@
tid i74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:102) [bci: 264] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: i32
=== Inputs ===
x: i56 
y: i32 
=== Succesors ===
=== Usages ===
i55 v75 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i56 y: i32  <|@  <|@
f <@~|@floating>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:103) [bci: 274] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i74 
y: i136 
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i74 y: i136  <|@  <|@
f <@*|@fixed>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:103) [bci: 285] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 0.75
stamp: void
=== Inputs ===
condition: v75 
=== Succesors ===
trueSuccessor: v78 
falseSuccessor: v77 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v75 #trueSuccessor: v78 #falseSuccessor: v77  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v76  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
loopBegin: v54 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v54  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:105) [bci: 288] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v54 
=== Succesors ===
next: v98 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v54 #next: v98  <|@  <|@
f <@*|@fixed>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:105) [bci: 288] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
v77 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:99) [bci: 261] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v54 
=== Succesors ===
next: v95 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v54 #next: v95  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
v70 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:95) [bci: 224] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v54 
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v54 #next: v94  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
v62 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:91) [bci: 199] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v54 
=== Succesors ===
next: v93 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v54 #next: v93  <|@  <|@
f <@*|@fixed>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
v58 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B20" "B19" "B18" "B10" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v89 
values: i38 i44 i38 i56 i56 i38 i38 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v89 values: i38 i44 i38 i56 i56 i38 i38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v90 v92 v93 v94 v95 v96 v98 
=== Succesors ===
next: v19 
=== Usages ===
i91 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v90 v92 v93 v94 v95 v96 v98 #next: v19  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 24]
stamp: void
=== Inputs ===
memoryMap: - 
result: i91 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i91  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@25e59b6d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVZXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = INC value: v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v17|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B6 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVZXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B10 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B20" "B19" "B18" "B10" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-32531|0xffffffffffff80ed], long[660|0x294]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-31507|0xffffffffffff84ed], long[20|0x14]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v4|DWORD, v5|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: arraylength   
     2: ifne          7
     5: iconst_0      
     6: ireturn       
     7: aload_0       
     8: arraylength   
     9: ifne          14
    12: iconst_m1     
    13: ireturn       
    14: aload_0       
    15: aload_0       
    16: arraylength   
    17: aload_1       
    18: aload_1       
    19: arraylength   
    20: iconst_0      
    21: invokestatic  #23         // indexOf:(byte[], int, byte[], int, int)int
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i160 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i160  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a# byte[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v164 i56 i68 i44 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# byte[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v163 v165 v166 i68 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_1
code: ResolvedJavaMethodBytecode<StringLatin1.indexOf(byte[], byte[])>
localsSize: 2
locksSize: 0
sourceFile: StringLatin1.java
sourceLine: 220
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v143 i160 i161 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i160 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i160 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-5643|0xffffffffffffe9f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 1]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v163 
lastLocationAccess: - 
=== Succesors ===
next: i161 
=== Usages ===
v6 i68 v110 v39 i135 v61 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v163 lastLocationAccess: - #next: i161  <|@  <|@
f <@~|@floating>@ <|@
tid v164 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i161 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i161 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-7179|0xffffffffffffe3f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:223) [bci: 8]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v164 
lastLocationAccess: - 
=== Succesors ===
next: v126 
=== Usages ===
v9 i135 v110 i44 
=== Predecessor ===
i160 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v164 lastLocationAccess: - #next: v126  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v6 v9 v69 v57 i44 i55 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i160 
y: i5 
=== Succesors ===
=== Usages ===
v126 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i160 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v6 
=== Succesors ===
trueSuccessor: v124 
falseSuccessor: v125 
=== Usages ===
=== Predecessor ===
i161 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v6 #trueSuccessor: v124 #falseSuccessor: v125  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@25e59b6d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v146  <|@  <|@
f <@~|@floating>@ <|@
tid j148 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 1]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j142 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i147 <|@
result int[-31507|0xffffffffffff84ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 1]
rawvalue: -31507
stableDimension: 0
stamp: i32 [-31507]
stampKind: i32
value: int[-31507|0xffffffffffff84ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i141 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
v124 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-31507|0xffffffffffff84ed], long[20|0x14]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:223) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v130 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v130  <|@  <|@
f <@~|@floating>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:223) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i161 
y: i5 
=== Succesors ===
=== Usages ===
v130 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i161 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:223) [bci: 9]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v9 
=== Succesors ===
trueSuccessor: v128 
falseSuccessor: v129 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v9 #trueSuccessor: v128 #falseSuccessor: v129  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:223) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v149 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v149  <|@  <|@
f <@~|@floating>@ <|@
tid j151 <|@
result long[660|0x294] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 1]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j142 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i150 <|@
result int[-32531|0xffffffffffff80ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 1]
rawvalue: -32531
stableDimension: 0
stamp: i32 [-32531]
stampKind: i32
value: int[-32531|0xffffffffffff80ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i141 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
v128 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-32531|0xffffffffffff80ed], long[660|0x294]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i141 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 1]
stamp: i32 [-32531 - -31507] bits:1...10000x0011101101
valueDescription: i32
=== Inputs ===
merge: v137 
values: i147 i150 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v137 values: i147 i150  <|@  <|@
f <@~|@floating>@ <|@
tid j142 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 1]
stamp: i64 [20 - 660] bits:0...0x0x0010100
valueDescription: i64
=== Inputs ===
merge: v137 
values: j148 j151 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v137 values: j148 j151  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v146 v149 
=== Succesors ===
next: v143 
=== Usages ===
i141 j142 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v146 v149 #next: v143  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 1]
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i141 
speculation: j142 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i141 speculation: j142  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v4|DWORD, v5|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v37  <|@  <|@
f <@~|@floating>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:73) [bci: 37] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i161 
y: i160 
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i161 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:75) [bci: 51] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i91 i91 i91 i91 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:73) [bci: 48] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 0.25
stamp: void
=== Inputs ===
condition: v110 
=== Succesors ===
trueSuccessor: v35 
falseSuccessor: v36 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v110 #trueSuccessor: v35 #falseSuccessor: v36  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:75) [bci: 51] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v90 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v90  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
v35 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B6 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:77) [bci: 53] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v42  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:71) [bci: 2] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 i74 v111 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:77) [bci: 58] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i160 
y: i32 
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i160 y: i32  <|@  <|@
f <@~|@floating>@ <|@
tid j43 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.byteArrayOffset(StringLatin1Snippets.java:66) [bci: 6]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:78) [bci: 83] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i44 i56 j67 i68 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v165 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i81 i82 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:77) [bci: 69] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 0.25
stamp: void
=== Inputs ===
condition: v39 
=== Succesors ===
trueSuccessor: v40 
falseSuccessor: v41 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v39 #trueSuccessor: v40 #falseSuccessor: v41  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:78) [bci: 72] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: i81 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i81  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i81 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.StringHelperIntrinsics.getByte(byte[], int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:79) [bci: 91] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v165 
lastLocationAccess: - 
=== Succesors ===
next: i44 
=== Usages ===
i85 
=== Predecessor ===
v40 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v165 lastLocationAccess: - #next: i44  <|@  <|@
f <@~|@floating>@ <|@
tid i85 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.Byte.toUnsignedInt(Byte.java:554) [bci: 4]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:79) [bci: 94] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i81 
=== Succesors ===
=== Usages ===
i44 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i81  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i44 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode.optimizedArrayIndexOf(JavaKind, Stride, LIRGeneratorTool$ArrayIndexOfVariant, Object, long, int, int, int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:78) [bci: 97] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
runtimeCheckedCPUFeatures: [null]
stamp: i32
stride: S1
variant: MatchAny
=== Inputs ===
lastLocationAccess: - 
arrayPointer: a1 
arrayOffset: j43 
arrayLength: i161 
fromIndex: i5 
searchValues: i85 
=== Succesors ===
next: v92 
=== Usages ===
i91 
=== Predecessor ===
i81 >@ <|@
instruction <@ArrayIndexOf|@jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode>@ lastLocationAccess: - arrayPointer: a1 arrayOffset: j43 arrayLength: i161 fromIndex: i5 searchValues: i85 #next: v92  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
i44 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVZXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:81) [bci: 101] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v52  <|@  <|@
f <@~|@floating>@ <|@
tid i135 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i161 
y: i160 
=== Succesors ===
=== Usages ===
i136 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i161 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:81) [bci: 103] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v61 i136 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i136 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i135 
y: i45 
=== Succesors ===
=== Usages ===
v111 i56 v75 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i135 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:83) [bci: 119] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i136 
y: i32 
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i136 y: i32  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:83) [bci: 130] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 0.25
stamp: void
=== Inputs ===
condition: v111 
=== Succesors ===
trueSuccessor: v51 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v111 #trueSuccessor: v51 #falseSuccessor: v50  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:105) [bci: 288] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v96  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
v51 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B10 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:84) [bci: 133] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: i82 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i82  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i82 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.StringHelperIntrinsics.getByte(byte[], int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:84) [bci: 135] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v165 
lastLocationAccess: - 
=== Succesors ===
next: i84 
=== Usages ===
i86 
=== Predecessor ===
v50 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v165 lastLocationAccess: - #next: i84  <|@  <|@
f <@~|@floating>@ <|@
tid v166 <|@
result [v1|QWORD[.] + 17] <|@
d <@d|@=== Debug Properties ===
displacement: 17
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i84 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i84 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.StringHelperIntrinsics.getByte(byte[], int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:85) [bci: 142] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v166 
lastLocationAccess: - 
=== Succesors ===
next: v53 
=== Usages ===
i88 
=== Predecessor ===
i82 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v166 lastLocationAccess: - #next: v53  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.Byte.toUnsignedInt(Byte.java:554) [bci: 4]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:89) [bci: 172] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i84 
=== Succesors ===
=== Usages ===
i56 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i84  <|@  <|@
f <@~|@floating>@ <|@
tid i86 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.Byte.toUnsignedInt(Byte.java:554) [bci: 4]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:88) [bci: 167] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i82 
=== Succesors ===
=== Usages ===
i56 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i82  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:94) [bci: 210] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i160 
y: i45 
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i160 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
i84 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVZXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i55 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v54 
values: i5 i74 
=== Succesors ===
=== Usages ===
i56 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v54 values: i5 i74  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 39
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v53 
=== Succesors ===
next: i56 
=== Usages ===
i55 v58 v62 v70 v76 v77 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v53 #next: i56  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i56 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode.optimizedArrayIndexOf(JavaKind, Stride, LIRGeneratorTool$ArrayIndexOfVariant, Object, long, int, int, int, int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 175] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
runtimeCheckedCPUFeatures: [null]
stamp: i32
stride: S1
variant: FindTwoConsecutive
=== Inputs ===
lastLocationAccess: - 
arrayPointer: a1 
arrayOffset: j43 
arrayLength: i136 
fromIndex: i55 
searchValues: i86 i88 
=== Succesors ===
next: v60 
=== Usages ===
v57 i91 j162 i91 i74 
=== Predecessor ===
v54 >@ <|@
instruction <@ArrayIndexOf|@jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode>@ lastLocationAccess: - arrayPointer: a1 arrayOffset: j43 arrayLength: i136 fromIndex: i55 searchValues: i86 i88 #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:90) [bci: 185] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i56 
y: i5 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i56 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:90) [bci: 196] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 0.25
stamp: void
=== Inputs ===
condition: v57 
=== Succesors ===
trueSuccessor: v58 
falseSuccessor: v59 
=== Usages ===
=== Predecessor ===
i56 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v57 #trueSuccessor: v58 #falseSuccessor: v59  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:93) [bci: 201] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v65  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:94) [bci: 221] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 0.25
stamp: void
=== Inputs ===
condition: v61 
=== Succesors ===
trueSuccessor: v62 
falseSuccessor: v64 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v61 #trueSuccessor: v62 #falseSuccessor: v64  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:97) [bci: 227] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: i68 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i68  <|@  <|@
f <@~|@floating>@ <|@
tid j162 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i56 
=== Succesors ===
=== Usages ===
j67 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i56  <|@  <|@
f <@~|@floating>@ <|@
tid j67 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.byteArrayOffset(StringLatin1Snippets.java:66) [bci: 15]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:98) [bci: 234] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: i64 [16 - 4294967311] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j162 
y: j43 
=== Succesors ===
=== Usages ===
i68 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j162 y: j43  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i68 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ArrayRegionEqualsNode.regionEquals(Object, long, Object, long, int, JavaKind, Stride, Stride) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:98) [bci: 252] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
runtimeCheckedCPUFeatures: [null]
stamp: i32 [0 - 1] bits:0...0x
strideA: S1
strideB: S1
=== Inputs ===
lastLocationAccess: - 
arrayA: a1 
offsetA: j67 
arrayB: a2 
offsetB: j43 
length: i160 
dynamicStrides: - 
=== Succesors ===
next: v73 
=== Usages ===
v69 
=== Predecessor ===
v64 >@ <|@
instruction <@ArrayRegionEquals|@jdk.graal.compiler.replacements.nodes.ArrayRegionEqualsNode>@ lastLocationAccess: - arrayA: a1 offsetA: j67 arrayB: a2 offsetB: j43 length: i160 dynamicStrides: - #next: v73  <|@  <|@
f <@~|@floating>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:97) [bci: 258] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i68 
y: i5 
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i68 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:97) [bci: 258] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 0.75
stamp: void
=== Inputs ===
condition: v69 
=== Succesors ===
trueSuccessor: v72 
falseSuccessor: v70 
=== Usages ===
=== Predecessor ===
i68 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v69 #trueSuccessor: v72 #falseSuccessor: v70  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:102) [bci: 264] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v79 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v79  <|@  <|@
f <@~|@floating>@ <|@
tid i74 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:102) [bci: 264] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: i32
=== Inputs ===
x: i56 
y: i32 
=== Succesors ===
=== Usages ===
i55 v75 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i56 y: i32  <|@  <|@
f <@~|@floating>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:103) [bci: 274] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i74 
y: i136 
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i74 y: i136  <|@  <|@
f <@*|@fixed>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:103) [bci: 285] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 0.75
stamp: void
=== Inputs ===
condition: v75 
=== Succesors ===
trueSuccessor: v78 
falseSuccessor: v77 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v75 #trueSuccessor: v78 #falseSuccessor: v77  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = INC value: v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v17|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v76  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
loopBegin: v54 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v54  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:105) [bci: 288] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v54 
=== Succesors ===
next: v98 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v54 #next: v98  <|@  <|@
f <@*|@fixed>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:105) [bci: 288] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
v77 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:99) [bci: 261] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v54 
=== Succesors ===
next: v95 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v54 #next: v95  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
v70 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:95) [bci: 224] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v54 
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v54 #next: v94  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
v62 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:91) [bci: 199] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v54 
=== Succesors ===
next: v93 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v54 #next: v93  <|@  <|@
f <@*|@fixed>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
v58 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B20" "B19" "B18" "B10" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i91 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v89 
values: i38 i44 i38 i56 i56 i38 i38 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v89 values: i38 i44 i38 i56 i56 i38 i38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v90 v92 v93 v94 v95 v96 v98 
=== Succesors ===
next: v19 
=== Usages ===
i91 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v90 v92 v93 v94 v95 v96 v98 #next: v19  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 24]
stamp: void
=== Inputs ===
memoryMap: - 
result: i91 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i91  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@25e59b6d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVZXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = INC value: v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v17|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B6 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVZXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B10 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B20" "B19" "B18" "B10" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-32531|0xffffffffffff80ed], long[660|0x294]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-31507|0xffffffffffff84ed], long[20|0x14]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v4|DWORD, v5|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: arraylength   
     2: ifne          7
     5: iconst_0      
     6: ireturn       
     7: aload_0       
     8: arraylength   
     9: ifne          14
    12: iconst_m1     
    13: ireturn       
    14: aload_0       
    15: aload_0       
    16: arraylength   
    17: aload_1       
    18: aload_1       
    19: arraylength   
    20: iconst_0      
    21: invokestatic  #23         // indexOf:(byte[], int, byte[], int, int)int
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@25e59b6d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVZXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = INC value: v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v17|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B6 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVZXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B10 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B20" "B19" "B18" "B10" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-32531|0xffffffffffff80ed], long[660|0x294]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-31507|0xffffffffffff84ed], long[20|0x14]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v4|DWORD, v5|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: arraylength   
     2: ifne          7
     5: iconst_0      
     6: ireturn       
     7: aload_0       
     8: arraylength   
     9: ifne          14
    12: iconst_m1     
    13: ireturn       
    14: aload_0       
    15: aload_0       
    16: arraylength   
    17: aload_1       
    18: aload_1       
    19: arraylength   
    20: iconst_0      
    21: invokestatic  #23         // indexOf:(byte[], int, byte[], int, int)int
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@25e59b6d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVZXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = INC value: v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v17|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B6 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVZXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B10 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B20" "B19" "B18" "B10" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-32531|0xffffffffffff80ed], long[660|0x294]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-31507|0xffffffffffff84ed], long[20|0x14]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v4|DWORD, v5|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: arraylength   
     2: ifne          7
     5: iconst_0      
     6: ireturn       
     7: aload_0       
     8: arraylength   
     9: ifne          14
    12: iconst_m1     
    13: ireturn       
    14: aload_0       
    15: aload_0       
    16: arraylength   
    17: aload_1       
    18: aload_1       
    19: arraylength   
    20: iconst_0      
    21: invokestatic  #23         // indexOf:(byte[], int, byte[], int, int)int
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@25e59b6d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVZXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = INC value: v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v17|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B6 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVZXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B10 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B20" "B19" "B18" "B10" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-32531|0xffffffffffff80ed], long[660|0x294]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-31507|0xffffffffffff84ed], long[20|0x14]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v4|DWORD, v5|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: arraylength   
     2: ifne          7
     5: iconst_0      
     6: ireturn       
     7: aload_0       
     8: arraylength   
     9: ifne          14
    12: iconst_m1     
    13: ireturn       
    14: aload_0       
    15: aload_0       
    16: arraylength   
    17: aload_1       
    18: aload_1       
    19: arraylength   
    20: iconst_0      
    21: invokestatic  #23         // indexOf:(byte[], int, byte[], int, int)int
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@25e59b6d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVZXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = INC value: v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v17|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B6 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVZXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B10 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B20" "B19" "B18" "B10" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-32531|0xffffffffffff80ed], long[660|0x294]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-31507|0xffffffffffff84ed], long[20|0x14]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v4|DWORD, v5|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: arraylength   
     2: ifne          7
     5: iconst_0      
     6: ireturn       
     7: aload_0       
     8: arraylength   
     9: ifne          14
    12: iconst_m1     
    13: ireturn       
    14: aload_0       
    15: aload_0       
    16: arraylength   
    17: aload_1       
    18: aload_1       
    19: arraylength   
    20: iconst_0      
    21: invokestatic  #23         // indexOf:(byte[], int, byte[], int, int)int
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@25e59b6d slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction v8|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   94  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction v10|DWORD = MOVZXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  110  <|@ instruction v11|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  114  <|@ instruction [v12|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction r8|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction r9|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction rdi|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  156  <|@ instruction v13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction v14|QWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD = MOVE input: v15|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  218  <|@ instruction r9|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  222  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction v17|DWORD = INC value: v13|DWORD size: DWORD <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v17|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B6 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction v6|DWORD = MOVZXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  298  <|@ instruction r9|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  302  <|@ instruction v7|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B10 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B20" "B19" "B18" "B10" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  356  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction rax|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [int[-32531|0xffffffffffff80ed], long[660|0x294]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [int[-31507|0xffffffffffff84ed], long[20|0x14]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  398  <|@ instruction [v4|DWORD, v5|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v4|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v5|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: arraylength   
     2: ifne          7
     5: iconst_0      
     6: ireturn       
     7: aload_0       
     8: arraylength   
     9: ifne          14
    12: iconst_m1     
    13: ireturn       
    14: aload_0       
    15: aload_0       
    16: arraylength   
    17: aload_1       
    18: aload_1       
    19: arraylength   
    20: iconst_0      
    21: invokestatic  #23         // indexOf:(byte[], int, byte[], int, int)int
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@25e59b6d slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction v8|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   94  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction v10|DWORD = MOVZXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  110  <|@ instruction v11|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  114  <|@ instruction [v12|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction r8|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction r9|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction rdi|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  156  <|@ instruction v13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction v14|QWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD = MOVE input: v15|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  218  <|@ instruction r9|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  222  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction v17|DWORD = INC value: v13|DWORD size: DWORD <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v17|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B6 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction v6|DWORD = MOVZXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  298  <|@ instruction r9|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  302  <|@ instruction v7|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B10 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B20" "B19" "B18" "B10" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  356  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction rax|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [int[-32531|0xffffffffffff80ed], long[660|0x294]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [int[-31507|0xffffffffffff84ed], long[20|0x14]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  398  <|@ instruction [v4|DWORD, v5|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v4|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v5|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: arraylength   
     2: ifne          7
     5: iconst_0      
     6: ireturn       
     7: aload_0       
     8: arraylength   
     9: ifne          14
    12: iconst_m1     
    13: ireturn       
    14: aload_0       
    15: aload_0       
    16: arraylength   
    17: aload_1       
    18: aload_1       
    19: arraylength   
    20: iconst_0      
    21: invokestatic  #23         // indexOf:(byte[], int, byte[], int, int)int
    24: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v18|d [0, 1[[154, 156[[220, 222[[300, 302[[374, 376[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v9|d [0, 1[[146, 155[[214, 221[[294, 301[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v15|q [0, 28[[144, 155[[212, 221[[292, 301[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 22[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 26[[142, 155[[210, 221[[290, 301[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v11|d [0, 1[[152, 155[[220, 221[[300, 301[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d v12|d [0, 1[[148, 155[[216, 220[[296, 300[ "NoOptimization"
  r9|d fixed "[r9|d]" r9|d v10|d [0, 1[[150, 154[[218, 220[[298, 300[ "NoOptimization"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[154, 155[[220, 221[[300, 301[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[154, 155[[220, 221[[300, 301[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[154, 155[[220, 221[[300, 301[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[154, 155[[300, 301[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[154, 155[[300, 301[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[154, 155[[300, 301[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[154, 155[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [26, 252[[262, 290[[378, 419[26 MustHaveRegister 32 MustHaveRegister 142 ShouldHaveRegister 210 ShouldHaveRegister 251 LiveAtLoopEnd 290 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|- [28, 252[[262, 288[[378, 419[28 MustHaveRegister 30 MustHaveRegister 108 MustHaveRegister 110 MustHaveRegister 214 ShouldHaveRegister 251 LiveAtLoopEnd 288 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [30, 252[30 MustHaveRegister 34 MustHaveRegister 58 MustHaveRegister 70 ShouldHaveRegister 90 ShouldHaveRegister 170 ShouldHaveRegister 218 ShouldHaveRegister 251 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [32, 90[[262, 294[32 MustHaveRegister 46 MustHaveRegister 58 ShouldHaveRegister 90 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [398, 414[414 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q -1 [398, 416[416 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [288, 298[288 MustHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d rax|d [302, 305[302 MustHaveRegister 304 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d v3|d [90, 92[90 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d -1 [92, 252[92 MustHaveRegister 94 ShouldHaveRegister 146 ShouldHaveRegister 240 MustHaveRegister 251 LiveAtLoopEnd  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [108, 252[108 MustHaveRegister 150 ShouldHaveRegister 251 LiveAtLoopEnd  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d -1 [110, 252[110 MustHaveRegister 152 ShouldHaveRegister 251 LiveAtLoopEnd  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d v17|d [114, 148[148 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d rax|d [156, 238[[326, 335[[336, 345[156 MustHaveRegister 158 MustHaveRegister 206 ShouldHaveRegister 238 ShouldHaveRegister 334 ShouldHaveRegister 344 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q v13|d [206, 208[206 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q -1 [208, 212[208 MustHaveRegister 212 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d rax|d [222, 224[222 MustHaveRegister 224 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d v13|d [238, 251[238 MustHaveRegister 240 ShouldHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d v7|d [356, 374[374 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v18|d [0, 1[[154, 156[[220, 222[[300, 302[[374, 376[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v9|d [0, 1[[146, 155[[214, 221[[294, 301[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v15|q [0, 28[[144, 155[[212, 221[[292, 301[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 22[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 26[[142, 155[[210, 221[[290, 301[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v11|d [0, 1[[152, 155[[220, 221[[300, 301[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d v12|d [0, 1[[148, 155[[216, 220[[296, 300[ "NoOptimization"
  r9|d fixed "[r9|d]" r9|d v10|d [0, 1[[150, 154[[218, 220[[298, 300[ "NoOptimization"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[154, 155[[220, 221[[300, 301[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[154, 155[[220, 221[[300, 301[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[154, 155[[220, 221[[300, 301[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[154, 155[[300, 301[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[154, 155[[300, 301[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[154, 155[[300, 301[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[154, 155[ "NoDefinitionFound"
  v0|q QWORD "[r11|q]" v0|q rsi|- [26, 219[26 MustHaveRegister 32 MustHaveRegister 142 ShouldHaveRegister 210 ShouldHaveRegister  "SpillInDominator"
  v1|q QWORD "[rbx|q]" v1|q rdx|- [28, 252[[262, 288[[378, 419[28 MustHaveRegister 30 MustHaveRegister 108 MustHaveRegister 110 MustHaveRegister 214 ShouldHaveRegister 251 LiveAtLoopEnd 288 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rbp|d]" v2|d -1 [30, 252[30 MustHaveRegister 34 MustHaveRegister 58 MustHaveRegister 70 ShouldHaveRegister 90 ShouldHaveRegister 170 ShouldHaveRegister 218 ShouldHaveRegister 251 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [32, 90[[262, 294[32 MustHaveRegister 46 MustHaveRegister 58 ShouldHaveRegister 90 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r10|d]" v4|d -1 [398, 414[414 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r11|q]" v5|q -1 [398, 416[416 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r9|d]" v6|d -1 [288, 298[288 MustHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[rax|d]" v7|d rax|d [302, 305[302 MustHaveRegister 304 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[r10|d]" v8|d v3|d [90, 92[90 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r13|d]" v9|d -1 [92, 252[92 MustHaveRegister 94 ShouldHaveRegister 146 ShouldHaveRegister 240 MustHaveRegister 251 LiveAtLoopEnd  "NoSpillStore"
  v10|d DWORD "[r14|d]" v10|d -1 [108, 252[108 MustHaveRegister 150 ShouldHaveRegister 251 LiveAtLoopEnd  "NoSpillStore"
  v11|d DWORD "[r10|d]" v11|d -1 [110, 153[110 MustHaveRegister 152 ShouldHaveRegister  "SpillInDominator"
  v12|d DWORD "[r8|d]" v12|d v17|d [114, 148[148 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[rax|d]" v13|d rax|d [156, 219[156 MustHaveRegister 158 MustHaveRegister 206 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rsi|q]" v14|q v13|d [206, 208[206 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rdx|q]" v15|q -1 [208, 212[208 MustHaveRegister 212 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d rax|d [222, 224[222 MustHaveRegister 224 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d v13|d [238, 251[238 MustHaveRegister 240 ShouldHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d v7|d [356, 374[374 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[vstack:0|d]" v11|d v11|d [153, 252[251 LiveAtLoopEnd  "SpillInDominator"
  v20|d DWORD "[r11|d]" v13|d v13|d [219, 238[[326, 335[[336, 345[238 ShouldHaveRegister 334 ShouldHaveRegister 344 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[r8|q]" v0|q v0|q [398, 419[ "SpillInDominator"
  v22|q QWORD "[vstack:1|q]" v0|q v0|q [219, 252[[262, 290[[378, 398[251 LiveAtLoopEnd 290 ShouldHaveRegister  "SpillInDominator"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@25e59b6d slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction v8|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   94  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction v10|DWORD = MOVZXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  110  <|@ instruction v11|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  114  <|@ instruction [v12|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction r8|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction r9|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction rdi|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  156  <|@ instruction v13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction v14|QWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD = MOVE input: v15|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  218  <|@ instruction r9|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  222  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction v17|DWORD = INC value: v13|DWORD size: DWORD <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v17|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B6 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction v6|DWORD = MOVZXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  298  <|@ instruction r9|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  302  <|@ instruction v7|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B10 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B20" "B19" "B18" "B10" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  356  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction rax|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [int[-32531|0xffffffffffff80ed], long[660|0x294]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [int[-31507|0xffffffffffff84ed], long[20|0x14]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  398  <|@ instruction [v4|DWORD, v5|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v4|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v5|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: arraylength   
     2: ifne          7
     5: iconst_0      
     6: ireturn       
     7: aload_0       
     8: arraylength   
     9: ifne          14
    12: iconst_m1     
    13: ireturn       
    14: aload_0       
    15: aload_0       
    16: arraylength   
    17: aload_1       
    18: aload_1       
    19: arraylength   
    20: iconst_0      
    21: invokestatic  #23         // indexOf:(byte[], int, byte[], int, int)int
    24: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v18|d [0, 1[[154, 156[[220, 222[[300, 302[[374, 376[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v9|d [0, 1[[146, 155[[214, 221[[294, 301[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v15|q [0, 28[[144, 155[[212, 221[[292, 301[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 22[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 26[[142, 155[[210, 221[[290, 301[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v11|d [0, 1[[152, 155[[220, 221[[300, 301[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d v12|d [0, 1[[148, 155[[216, 220[[296, 300[ "NoOptimization"
  r9|d fixed "[r9|d]" r9|d v10|d [0, 1[[150, 154[[218, 220[[298, 300[ "NoOptimization"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[154, 155[[220, 221[[300, 301[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[154, 155[[220, 221[[300, 301[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[154, 155[[220, 221[[300, 301[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[154, 155[[300, 301[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[154, 155[[300, 301[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[154, 155[[300, 301[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[154, 155[ "NoDefinitionFound"
  v0|q QWORD "[r11|q]" v0|q rsi|- [26, 219[26 MustHaveRegister 32 MustHaveRegister 142 ShouldHaveRegister 210 ShouldHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[rbx|q]" v1|q rdx|- [28, 252[[262, 288[[378, 419[28 MustHaveRegister 30 MustHaveRegister 108 MustHaveRegister 110 MustHaveRegister 214 ShouldHaveRegister 251 LiveAtLoopEnd 288 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rbp|d]" v2|d -1 [30, 252[30 MustHaveRegister 34 MustHaveRegister 58 MustHaveRegister 70 ShouldHaveRegister 90 ShouldHaveRegister 170 ShouldHaveRegister 218 ShouldHaveRegister 251 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [32, 90[[262, 294[32 MustHaveRegister 46 MustHaveRegister 58 ShouldHaveRegister 90 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r10|d]" v4|d -1 [398, 414[414 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r11|q]" v5|q -1 [398, 416[416 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r9|d]" v6|d -1 [288, 298[288 MustHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[rax|d]" v7|d rax|d [302, 305[302 MustHaveRegister 304 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[r10|d]" v8|d v3|d [90, 92[90 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r13|d]" v9|d -1 [92, 252[92 MustHaveRegister 94 ShouldHaveRegister 146 ShouldHaveRegister 240 MustHaveRegister 251 LiveAtLoopEnd  "NoSpillStore"
  v10|d DWORD "[r14|d]" v10|d -1 [108, 252[108 MustHaveRegister 150 ShouldHaveRegister 251 LiveAtLoopEnd  "NoSpillStore"
  v11|d DWORD "[r10|d]" v11|d -1 [110, 153[110 MustHaveRegister 152 ShouldHaveRegister  "StoreAtDefinition"
  v12|d DWORD "[r8|d]" v12|d v17|d [114, 148[148 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[rax|d]" v13|d rax|d [156, 219[156 MustHaveRegister 158 MustHaveRegister 206 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rsi|q]" v14|q v13|d [206, 208[206 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rdx|q]" v15|q -1 [208, 212[208 MustHaveRegister 212 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d rax|d [222, 224[222 MustHaveRegister 224 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d v13|d [238, 251[238 MustHaveRegister 240 ShouldHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d v7|d [356, 374[374 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[vstack:0|d]" v11|d v11|d [153, 252[251 LiveAtLoopEnd  "StoreAtDefinition"
  v20|d DWORD "[r11|d]" v13|d v13|d [219, 238[[326, 335[[336, 345[238 ShouldHaveRegister 334 ShouldHaveRegister 344 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[r8|q]" v0|q v0|q [398, 419[ "StoreAtDefinition"
  v22|q QWORD "[vstack:1|q]" v0|q v0|q [219, 252[[262, 290[[378, 398[251 LiveAtLoopEnd 290 ShouldHaveRegister  "StoreAtDefinition"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@25e59b6d slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction v8|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   94  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction v10|DWORD = MOVZXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  110  <|@ instruction v11|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  114  <|@ instruction [v12|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction r8|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction r9|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction rdi|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  156  <|@ instruction v13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction v14|QWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD = MOVE input: v15|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  218  <|@ instruction r9|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  222  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction v17|DWORD = INC value: v13|DWORD size: DWORD <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v17|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B6 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction v6|DWORD = MOVZXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  298  <|@ instruction r9|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  302  <|@ instruction v7|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B10 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B20" "B19" "B18" "B10" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  356  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction rax|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [int[-32531|0xffffffffffff80ed], long[660|0x294]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [int[-31507|0xffffffffffff84ed], long[20|0x14]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  398  <|@ instruction [v4|DWORD, v5|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v4|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v5|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: arraylength   
     2: ifne          7
     5: iconst_0      
     6: ireturn       
     7: aload_0       
     8: arraylength   
     9: ifne          14
    12: iconst_m1     
    13: ireturn       
    14: aload_0       
    15: aload_0       
    16: arraylength   
    17: aload_1       
    18: aload_1       
    19: arraylength   
    20: iconst_0      
    21: invokestatic  #23         // indexOf:(byte[], int, byte[], int, int)int
    24: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v18|d [0, 1[[154, 156[[220, 222[[300, 302[[374, 376[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v9|d [0, 1[[146, 155[[214, 221[[294, 301[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v15|q [0, 28[[144, 155[[212, 221[[292, 301[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 22[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 26[[142, 155[[210, 221[[290, 301[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v11|d [0, 1[[152, 155[[220, 221[[300, 301[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d v12|d [0, 1[[148, 155[[216, 220[[296, 300[ "NoOptimization"
  r9|d fixed "[r9|d]" r9|d v10|d [0, 1[[150, 154[[218, 220[[298, 300[ "NoOptimization"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[154, 155[[220, 221[[300, 301[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[154, 155[[220, 221[[300, 301[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[154, 155[[220, 221[[300, 301[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[154, 155[[300, 301[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[154, 155[[300, 301[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[154, 155[[300, 301[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[154, 155[ "NoDefinitionFound"
  v0|q QWORD "[r11|q]" v0|q rsi|- [26, 219[26 MustHaveRegister 32 MustHaveRegister 142 ShouldHaveRegister 210 ShouldHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[rbx|q]" v1|q rdx|- [28, 252[[262, 288[[378, 419[28 MustHaveRegister 30 MustHaveRegister 108 MustHaveRegister 110 MustHaveRegister 214 ShouldHaveRegister 251 LiveAtLoopEnd 288 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rbp|d]" v2|d -1 [30, 252[30 MustHaveRegister 34 MustHaveRegister 58 MustHaveRegister 70 ShouldHaveRegister 90 ShouldHaveRegister 170 ShouldHaveRegister 218 ShouldHaveRegister 251 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [32, 90[[262, 294[32 MustHaveRegister 46 MustHaveRegister 58 ShouldHaveRegister 90 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r10|d]" v4|d -1 [398, 414[414 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r11|q]" v5|q -1 [398, 416[416 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r9|d]" v6|d -1 [288, 298[288 MustHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[rax|d]" v7|d rax|d [302, 305[302 MustHaveRegister 304 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[r10|d]" v8|d v3|d [90, 92[90 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r13|d]" v9|d -1 [92, 252[92 MustHaveRegister 94 ShouldHaveRegister 146 ShouldHaveRegister 240 MustHaveRegister 251 LiveAtLoopEnd  "NoSpillStore"
  v10|d DWORD "[r14|d]" v10|d -1 [108, 252[108 MustHaveRegister 150 ShouldHaveRegister 251 LiveAtLoopEnd  "NoSpillStore"
  v11|d DWORD "[r10|d]" v11|d -1 [110, 153[110 MustHaveRegister 152 ShouldHaveRegister  "StoreAtDefinition"
  v12|d DWORD "[r8|d]" v12|d v17|d [114, 148[148 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[rax|d]" v13|d rax|d [156, 219[156 MustHaveRegister 158 MustHaveRegister 206 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rsi|q]" v14|q v13|d [206, 208[206 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rdx|q]" v15|q -1 [208, 212[208 MustHaveRegister 212 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d rax|d [222, 224[222 MustHaveRegister 224 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d v13|d [238, 251[238 MustHaveRegister 240 ShouldHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d v7|d [356, 374[374 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[vstack:0|d]" v11|d v11|d [153, 252[251 LiveAtLoopEnd  "StoreAtDefinition"
  v20|d DWORD "[r11|d]" v13|d v13|d [219, 238[[326, 335[[336, 345[238 ShouldHaveRegister 334 ShouldHaveRegister 344 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[r8|q]" v0|q v0|q [398, 419[ "StoreAtDefinition"
  v22|q QWORD "[vstack:1|q]" v0|q v0|q [219, 252[[262, 290[[378, 398[251 LiveAtLoopEnd 290 ShouldHaveRegister  "StoreAtDefinition"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@25e59b6d slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction v8|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   94  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction v10|DWORD = MOVZXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  110  <|@ instruction v11|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  114  <|@ instruction [v12|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction r8|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction r9|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction rdi|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  156  <|@ instruction v13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction v14|QWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD = MOVE input: v15|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  218  <|@ instruction r9|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  222  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction v17|DWORD = INC value: v13|DWORD size: DWORD <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v17|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: v17|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: v19|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction v6|DWORD = MOVZXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  298  <|@ instruction r9|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  302  <|@ instruction v7|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: v20|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: v20|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  344  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B20" "B19" "B18" "B10" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  356  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction rax|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: int[-32531|0xffffffffffff80ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: int[-31507|0xffffffffffff84ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  398  <|@ instruction [v4|DWORD, v5|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v4|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v5|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: arraylength   
     2: ifne          7
     5: iconst_0      
     6: ireturn       
     7: aload_0       
     8: arraylength   
     9: ifne          14
    12: iconst_m1     
    13: ireturn       
    14: aload_0       
    15: aload_0       
    16: arraylength   
    17: aload_1       
    18: aload_1       
    19: arraylength   
    20: iconst_0      
    21: invokestatic  #23         // indexOf:(byte[], int, byte[], int, int)int
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@25e59b6d slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   28  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction v8|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   94  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction v10|DWORD = MOVZXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  110  <|@ instruction v11|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r10|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction r8|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction r9|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction rdi|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  154  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  156  <|@ instruction v13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction v14|QWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD = MOVE input: v15|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  218  <|@ instruction r9|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  222  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction v17|DWORD = INC value: v13|DWORD size: DWORD <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v17|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: v17|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: v19|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction v6|DWORD = MOVZXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  298  <|@ instruction r9|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  302  <|@ instruction v7|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: v20|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: v20|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  344  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B20" "B19" "B18" "B10" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction rax|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: int[-32531|0xffffffffffff80ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: int[-31507|0xffffffffffff84ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v4|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v5|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: arraylength   
     2: ifne          7
     5: iconst_0      
     6: ireturn       
     7: aload_0       
     8: arraylength   
     9: ifne          14
    12: iconst_m1     
    13: ireturn       
    14: aload_0       
    15: aload_0       
    16: arraylength   
    17: aload_1       
    18: aload_1       
    19: arraylength   
    20: iconst_0      
    21: invokestatic  #23         // indexOf:(byte[], int, byte[], int, int)int
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@25e59b6d slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   28  <|@ instruction rbx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r11|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r11|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r10|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr   94  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction r14|DWORD = MOVZXB input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  110  <|@ instruction r10|DWORD = MOVZXB input: [rbx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r10|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  158  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  218  <|@ instruction r9|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  224  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction r9|DWORD = MOVZXB input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  300  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  344  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B20" "B19" "B18" "B10" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-32531|0xffffffffffff80ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-31507|0xffffffffffff84ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r8|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: arraylength   
     2: ifne          7
     5: iconst_0      
     6: ireturn       
     7: aload_0       
     8: arraylength   
     9: ifne          14
    12: iconst_m1     
    13: ireturn       
    14: aload_0       
    15: aload_0       
    16: arraylength   
    17: aload_1       
    18: aload_1       
    19: arraylength   
    20: iconst_0      
    21: invokestatic  #23         // indexOf:(byte[], int, byte[], int, int)int
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@25e59b6d slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   28  <|@ instruction rbx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r11|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r11|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r10|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr   94  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction r14|DWORD = MOVZXB input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  110  <|@ instruction r10|DWORD = MOVZXB input: [rbx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r10|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  158  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  218  <|@ instruction r9|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  224  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction r9|DWORD = MOVZXB input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  300  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  344  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B20" "B19" "B18" "B10" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-32531|0xffffffffffff80ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-31507|0xffffffffffff84ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r8|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: arraylength   
     2: ifne          7
     5: iconst_0      
     6: ireturn       
     7: aload_0       
     8: arraylength   
     9: ifne          14
    12: iconst_m1     
    13: ireturn       
    14: aload_0       
    15: aload_0       
    16: arraylength   
    17: aload_1       
    18: aload_1       
    19: arraylength   
    20: iconst_0      
    21: invokestatic  #23         // indexOf:(byte[], int, byte[], int, int)int
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@25e59b6d slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction vstack:1|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r11|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r11|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r10|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  202  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction r14|DWORD = MOVZXB input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction r10|DWORD = MOVZXB input: [rbx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  232  <|@ instruction vstack:0|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  270  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  278  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  336  <|@ instruction r9|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  342  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction r10|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r11|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction r9|DWORD = MOVZXB input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  172  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  176  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B20" "B19" "B18" "B10" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: int[-32531|0xffffffffffff80ed] <|@ <|@
      nr   78  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr   48  <|@ instruction r10|DWORD = MOVE input: int[-31507|0xffffffffffff84ed] <|@ <|@
      nr   50  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r8|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: arraylength   
     2: ifne          7
     5: iconst_0      
     6: ireturn       
     7: aload_0       
     8: arraylength   
     9: ifne          14
    12: iconst_m1     
    13: ireturn       
    14: aload_0       
    15: aload_0       
    16: arraylength   
    17: aload_1       
    18: aload_1       
    19: arraylength   
    20: iconst_0      
    21: invokestatic  #23         // indexOf:(byte[], int, byte[], int, int)int
    24: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|d DWORD "[vstack:0|d]" vstack:0|d -1 [232, 375[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [28, 375[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|d DWORD "[stack:28|d]" vstack:0|d -1 [232, 375[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:40|q]" vstack:1|q -1 [28, 375[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@25e59b6d slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:40|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r11|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r11|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r10|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  202  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction r14|DWORD = MOVZXB input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction r10|DWORD = MOVZXB input: [rbx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  232  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  270  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  278  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  336  <|@ instruction r9|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  342  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction r9|DWORD = MOVZXB input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  172  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  176  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B20" "B19" "B18" "B10" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: int[-32531|0xffffffffffff80ed] <|@ <|@
      nr   78  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr   48  <|@ instruction r10|DWORD = MOVE input: int[-31507|0xffffffffffff84ed] <|@ <|@
      nr   50  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r8|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: arraylength   
     2: ifne          7
     5: iconst_0      
     6: ireturn       
     7: aload_0       
     8: arraylength   
     9: ifne          14
    12: iconst_m1     
    13: ireturn       
    14: aload_0       
    15: aload_0       
    16: arraylength   
    17: aload_1       
    18: aload_1       
    19: arraylength   
    20: iconst_0      
    21: invokestatic  #23         // indexOf:(byte[], int, byte[], int, int)int
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@25e59b6d slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:40|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r11|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r11|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r10|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  202  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction r14|DWORD = MOVZXB input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction r10|DWORD = MOVZXB input: [rbx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  232  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  270  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  278  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  336  <|@ instruction r9|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  342  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction r9|DWORD = MOVZXB input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  172  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  176  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B20" "B19" "B18" "B10" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: int[-32531|0xffffffffffff80ed] <|@ <|@
      nr   78  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr   48  <|@ instruction r10|DWORD = MOVE input: int[-31507|0xffffffffffff84ed] <|@ <|@
      nr   50  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r8|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: arraylength   
     2: ifne          7
     5: iconst_0      
     6: ireturn       
     7: aload_0       
     8: arraylength   
     9: ifne          14
    12: iconst_m1     
    13: ireturn       
    14: aload_0       
    15: aload_0       
    16: arraylength   
    17: aload_1       
    18: aload_1       
    19: arraylength   
    20: iconst_0      
    21: invokestatic  #23         // indexOf:(byte[], int, byte[], int, int)int
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@25e59b6d slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:40|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r11|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r11|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r10|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  202  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction r14|DWORD = MOVZXB input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction r10|DWORD = MOVZXB input: [rbx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  232  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  270  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  278  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  336  <|@ instruction r9|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  342  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction r9|DWORD = MOVZXB input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  172  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  176  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B20" "B19" "B18" "B10" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: int[-32531|0xffffffffffff80ed] <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr   48  <|@ instruction r10|DWORD = MOVE input: int[-31507|0xffffffffffff84ed] <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   50  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r8|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: arraylength   
     2: ifne          7
     5: iconst_0      
     6: ireturn       
     7: aload_0       
     8: arraylength   
     9: ifne          14
    12: iconst_m1     
    13: ireturn       
    14: aload_0       
    15: aload_0       
    16: arraylength   
    17: aload_1       
    18: aload_1       
    19: arraylength   
    20: iconst_0      
    21: invokestatic  #23         // indexOf:(byte[], int, byte[], int, int)int
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@25e59b6d slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:40|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r11|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r11|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r10|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  202  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction r14|DWORD = MOVZXB input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction r10|DWORD = MOVZXB input: [rbx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  232  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  270  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  278  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  336  <|@ instruction r9|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  342  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction r9|DWORD = MOVZXB input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  172  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  176  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B20" "B19" "B18" "B10" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: int[-32531|0xffffffffffff80ed] <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr   48  <|@ instruction r10|DWORD = MOVE input: int[-31507|0xffffffffffff84ed] <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   50  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r8|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: arraylength   
     2: ifne          7
     5: iconst_0      
     6: ireturn       
     7: aload_0       
     8: arraylength   
     9: ifne          14
    12: iconst_m1     
    13: ireturn       
    14: aload_0       
    15: aload_0       
    16: arraylength   
    17: aload_1       
    18: aload_1       
    19: arraylength   
    20: iconst_0      
    21: invokestatic  #23         // indexOf:(byte[], int, byte[], int, int)int
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@25e59b6d slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:40|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r11|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r11|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r10|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  202  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction r14|DWORD = MOVZXB input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction r10|DWORD = MOVZXB input: [rbx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  232  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  270  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  278  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  336  <|@ instruction r9|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  342  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction r9|DWORD = MOVZXB input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  172  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  176  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B20" "B19" "B18" "B10" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: int[-32531|0xffffffffffff80ed] <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr   48  <|@ instruction r10|DWORD = MOVE input: int[-31507|0xffffffffffff84ed] <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   50  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r8|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: arraylength   
     2: ifne          7
     5: iconst_0      
     6: ireturn       
     7: aload_0       
     8: arraylength   
     9: ifne          14
    12: iconst_m1     
    13: ireturn       
    14: aload_0       
    15: aload_0       
    16: arraylength   
    17: aload_1       
    18: aload_1       
    19: arraylength   
    20: iconst_0      
    21: invokestatic  #23         // indexOf:(byte[], int, byte[], int, int)int
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@25e59b6d slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:40|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r11|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r11|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r10|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  202  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction r14|DWORD = MOVZXB input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction r10|DWORD = MOVZXB input: [rbx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  232  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  270  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  278  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  336  <|@ instruction r9|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  342  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction r9|DWORD = MOVZXB input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  172  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  176  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B20" "B19" "B18" "B10" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: int[-32531|0xffffffffffff80ed] <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr   48  <|@ instruction r10|DWORD = MOVE input: int[-31507|0xffffffffffff84ed] <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   50  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r8|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: arraylength   
     2: ifne          7
     5: iconst_0      
     6: ireturn       
     7: aload_0       
     8: arraylength   
     9: ifne          14
    12: iconst_m1     
    13: ireturn       
    14: aload_0       
    15: aload_0       
    16: arraylength   
    17: aload_1       
    18: aload_1       
    19: arraylength   
    20: iconst_0      
    21: invokestatic  #23         // indexOf:(byte[], int, byte[], int, int)int
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@25e59b6d slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:40|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r11|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r11|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r10|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  202  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction r14|DWORD = MOVZXB input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction r10|DWORD = MOVZXB input: [rbx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  232  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  336  <|@ instruction r9|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  342  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  270  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  278  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B20" "B19" "B18" "B10" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction r9|DWORD = MOVZXB input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  172  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  176  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: int[-32531|0xffffffffffff80ed] <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   50  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r8|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr   48  <|@ instruction r10|DWORD = MOVE input: int[-31507|0xffffffffffff84ed] <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: arraylength   
     2: ifne          7
     5: iconst_0      
     6: ireturn       
     7: aload_0       
     8: arraylength   
     9: ifne          14
    12: iconst_m1     
    13: ireturn       
    14: aload_0       
    15: aload_0       
    16: arraylength   
    17: aload_1       
    18: aload_1       
    19: arraylength   
    20: iconst_0      
    21: invokestatic  #23         // indexOf:(byte[], int, byte[], int, int)int
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@25e59b6d slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:40|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r11|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r11|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r10|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  202  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction r14|DWORD = MOVZXB input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction r10|DWORD = MOVZXB input: [rbx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  232  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  336  <|@ instruction r9|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  342  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  270  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  278  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B20" "B19" "B18" "B10" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction r9|DWORD = MOVZXB input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  172  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  176  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: int[-32531|0xffffffffffff80ed] <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   50  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r8|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr   48  <|@ instruction r10|DWORD = MOVE input: int[-31507|0xffffffffffff84ed] <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: arraylength   
     2: ifne          7
     5: iconst_0      
     6: ireturn       
     7: aload_0       
     8: arraylength   
     9: ifne          14
    12: iconst_m1     
    13: ireturn       
    14: aload_0       
    15: aload_0       
    16: arraylength   
    17: aload_1       
    18: aload_1       
    19: arraylength   
    20: iconst_0      
    21: invokestatic  #23         // indexOf:(byte[], int, byte[], int, int)int
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@25e59b6d slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:40|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r11|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r11|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r10|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  202  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction r14|DWORD = MOVZXB input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction r10|DWORD = MOVZXB input: [rbx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  232  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  336  <|@ instruction r9|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  342  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  270  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  278  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B20" "B19" "B18" "B10" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction r9|DWORD = MOVZXB input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  172  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  176  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: int[-32531|0xffffffffffff80ed] <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   50  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r8|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr   48  <|@ instruction r10|DWORD = MOVE input: int[-31507|0xffffffffffff84ed] <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: arraylength   
     2: ifne          7
     5: iconst_0      
     6: ireturn       
     7: aload_0       
     8: arraylength   
     9: ifne          14
    12: iconst_m1     
    13: ireturn       
    14: aload_0       
    15: aload_0       
    16: arraylength   
    17: aload_1       
    18: aload_1       
    19: arraylength   
    20: iconst_0      
    21: invokestatic  #23         // indexOf:(byte[], int, byte[], int, int)int
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@25e59b6d slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:40|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rbx:0, r11:0, stack:8]
live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r11|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rbx:0, r11:0, stack:8]
live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r11|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r10|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  202  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction r14|DWORD = MOVZXB input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction r10|DWORD = MOVZXB input: [rbx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  232  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  336  <|@ instruction r9|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  342  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  270  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  278  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B20" "B19" "B18" "B10" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction r9|DWORD = MOVZXB input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  172  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  176  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: int[-32531|0xffffffffffff80ed] <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   50  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  102  <|@ st <@st|@reference-map: [rbx:0, r8:0]
live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r8|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr   48  <|@ instruction r10|DWORD = MOVE input: int[-31507|0xffffffffffff84ed] <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: arraylength   
     2: ifne          7
     5: iconst_0      
     6: ireturn       
     7: aload_0       
     8: arraylength   
     9: ifne          14
    12: iconst_m1     
    13: ireturn       
    14: aload_0       
    15: aload_0       
    16: arraylength   
    17: aload_1       
    18: aload_1       
    19: arraylength   
    20: iconst_0      
    21: invokestatic  #23         // indexOf:(byte[], int, byte[], int, int)int
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@25e59b6d slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:40|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rbx:0, r11:0, stack:8]
live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r11|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rbx:0, r11:0, stack:8]
live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r11|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r10|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  202  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction r14|DWORD = MOVZXB input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction r10|DWORD = MOVZXB input: [rbx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  232  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  336  <|@ instruction r9|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  342  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B16" 
    successors "B20" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  270  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  278  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B20" "B19" "B18" "B10" "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction r9|DWORD = MOVZXB input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  172  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  176  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  424  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: int[-32531|0xffffffffffff80ed] <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   50  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  102  <|@ st <@st|@reference-map: [rbx:0, r8:0]
live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0]
locals: r8|QWORD[.] rbx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr   48  <|@ instruction r10|DWORD = MOVE input: int[-31507|0xffffffffffff84ed] <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: arraylength   
     2: ifne          7
     5: iconst_0      
     6: ireturn       
     7: aload_0       
     8: arraylength   
     9: ifne          14
    12: iconst_m1     
    13: ireturn       
    14: aload_0       
    15: aload_0       
    16: arraylength   
    17: aload_1       
    18: aload_1       
    19: arraylength   
    20: iconst_0      
    21: invokestatic  #23         // indexOf:(byte[], int, byte[], int, int)int
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec289041817f20000000000f850c0200009090909090909090909048896c24204c8bde4c895c2408488bda8b6b0c458b530c85ed0f84d1010000909090904585d20f848d01000090909090413bea0f87fb0000009090909083fd010f84180100009090909090909090442bd5458d6a024183fd010f8c360100009090909090440fb67310440fb65311448954241441b800000000e9840000006666660f1f840000000000666666906666660f1f840000000000666666909090909083fd020f84f6000000909090909090909090909090909090908bf0488d5610498bf3488bcb49c7c010000000448bcd448bd8e80000000085c00f85c80000009090909090418bc3ffc0443be80f8ebd000000909090448bc0448b5424144c8b5c240890909090909090909090909090498bf348c7c210000000418bcd458bce418bfae80000000085c00f8d6dffffffe957000000909090b8ffffffff9090909090909090488b6c24204883c428493ba7500400000f87b8000000c5f877c3909090909090909090909090440fb64b10488b74240848c7c210000000418bca41b800000000e800000000ebb1909090b8ffffffffeba7909090b8ffffffffeb9d448bd8909090eb95909090418bc3eb8d909090b8ffffffffeb8390909049c7c39402000041baed80ffff4c8b44240890909090909090458997840400004d899f90040000e8000000000f1f84000000000090909049c7c31400000041baed84ffffebc748896c2420e800000000e9e5fdfffff4488d0d34ffffff49898f68040000e9b7fdfffff441c78784040000f5e9ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5e3ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 NOP  <||@
  Comment 27 4 NOP  <||@
  Comment 28 6 NOP  <||@
  Comment 29 8 NOP  <||@
  Comment 30 10 NOP  <||@
  Comment 31 12 NOP  <||@
  Comment 32 14 NOP  <||@
  Comment 33 16 NOP  <||@
  Comment 34 18 NOP  <||@
  Comment 35 20 NOP  <||@
  Comment 36 22 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 41 24 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@25e59b6d slotKind: QWORD  <||@
  Comment 41 26 r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 44 28 stack:40|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 49 30 rbx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 52 32 rbp|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 52 [rbx:0, r11:0, stack:8]at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |r11|QWORD[.]  |rbx|QWORD[.]   <||@
  Comment 52 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 55 34 r10|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 55 [rbx:0, r11:0, stack:8]at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |r11|QWORD[.]  |rbx|QWORD[.]   <||@
  Comment 55 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 36 TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 67 block B2 null  <||@
  Comment 67 54 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 67 56 NOP  <||@
  Comment 68 58 NOP  <||@
  Comment 69 60 NOP  <||@
  Comment 70 62 NOP  <||@
  Comment 71 64 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD  <||@
  Comment 80 block B5 null  <||@
  Comment 80 104 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 80 106 NOP  <||@
  Comment 81 108 NOP  <||@
  Comment 82 110 NOP  <||@
  Comment 83 112 NOP  <||@
  Comment 84 114 CMPBRANCH (x: rbp|DWORD, y: r10|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD  <||@
  Comment 93 block B7 null  <||@
  Comment 93 128 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 93 130 NOP  <||@
  Comment 94 132 NOP  <||@
  Comment 95 134 NOP  <||@
  Comment 96 136 NOP  <||@
  Comment 97 138 CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null  <||@
  Comment 106 block B9 null  <||@
  Comment 106 180 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 106 182 NOP  <||@
  Comment 107 184 NOP  <||@
  Comment 108 186 NOP  <||@
  Comment 109 188 NOP  <||@
  Comment 110 190 NOP  <||@
  Comment 111 192 NOP  <||@
  Comment 112 194 NOP  <||@
  Comment 113 196 NOP  <||@
  Comment 114 198 r10|DWORD = SUB (x: r10|DWORD, ~y: rbp|DWORD) size: DWORD  <||@
  Comment 117 200 r13|DWORD = LEA address: [r10|DWORD + 2] size: DWORD  <||@
  Comment 121 202 CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 1 size: DWORD inlinedY: null  <||@
  Comment 131 block B11 null  <||@
  Comment 131 216 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 131 218 NOP  <||@
  Comment 132 220 NOP  <||@
  Comment 133 222 NOP  <||@
  Comment 134 224 NOP  <||@
  Comment 135 226 NOP  <||@
  Comment 136 228 r14|DWORD = MOVZXB input: [rbx|QWORD[.] + 16] size: DWORD  <||@
  Comment 141 230 r10|DWORD = MOVZXB input: [rbx|QWORD[.] + 17] size: DWORD  <||@
  Comment 146 232 stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 151 234 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 157 236 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 162 block B13 loop 0 depth 1 header:54|LoopBegin  <||@
  Comment 162 280 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 192 282 NOP  <||@
  Comment 193 284 NOP  <||@
  Comment 194 286 NOP  <||@
  Comment 195 288 NOP  <||@
  Comment 196 290 CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null  <||@
  Comment 205 block B14 loop 0 depth 1 header:54|LoopBegin  <||@
  Comment 205 292 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 205 294 NOP  <||@
  Comment 206 296 NOP  <||@
  Comment 207 298 NOP  <||@
  Comment 208 300 NOP  <||@
  Comment 209 302 NOP  <||@
  Comment 210 304 NOP  <||@
  Comment 211 306 NOP  <||@
  Comment 212 308 NOP  <||@
  Comment 213 310 NOP  <||@
  Comment 214 312 NOP  <||@
  Comment 215 314 NOP  <||@
  Comment 216 316 NOP  <||@
  Comment 217 318 NOP  <||@
  Comment 218 320 NOP  <||@
  Comment 219 322 NOP  <||@
  Comment 220 324 NOP  <||@
  Comment 221 326 rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 223 328 rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD  <||@
  Comment 227 330 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 230 332 rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 233 334 r8|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 240 336 r9|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 243 338 r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 246 340 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL  <||@
  Comment 246 {Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 251 342 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD  <||@
  Comment 259 block B15 loop 0 depth 1 header:54|LoopBegin  <||@
  Comment 259 344 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 259 346 NOP  <||@
  Comment 260 348 NOP  <||@
  Comment 261 350 NOP  <||@
  Comment 262 352 NOP  <||@
  Comment 263 354 NOP  <||@
  Comment 264 356 rax|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 269 358 CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD  <||@
  Comment 278 block B16 loop 0 depth 1 header:54|LoopBegin  <||@
  Comment 278 360 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 278 362 NOP  <||@
  Comment 279 364 NOP  <||@
  Comment 280 366 NOP  <||@
  Comment 281 368 r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 284 370 r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 289 372 r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 294 374 JUMP ~outgoingValues: [] destination: B16 -> B12  <||@
  Comment 294 block B12 loop 0 depth 1 header:54|LoopBegin  <||@
  Comment 294 238 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 294 240 NOP  <||@
  Comment 295 242 NOP  <||@
  Comment 296 244 NOP  <||@
  Comment 297 246 NOP  <||@
  Comment 298 248 NOP  <||@
  Comment 299 250 NOP  <||@
  Comment 300 252 NOP  <||@
  Comment 301 254 NOP  <||@
  Comment 302 256 NOP  <||@
  Comment 303 258 NOP  <||@
  Comment 304 260 NOP  <||@
  Comment 305 262 NOP  <||@
  Comment 306 264 NOP  <||@
  Comment 307 266 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 310 268 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 317 270 rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 320 272 r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 323 274 rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 326 276 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL  <||@
  Comment 326 {Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL}  <||@
  Comment 331 278 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD  <||@
  Comment 344 block B6 null  <||@
  Comment 344 116 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 344 118 NOP  <||@
  Comment 345 120 NOP  <||@
  Comment 346 122 NOP  <||@
  Comment 347 124 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 352 126 JUMP ~outgoingValues: [] destination: B6 -> B21  <||@
  Comment 352 block B21 null  <||@
  Comment 352 426 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 352 428 NOP  <||@
  Comment 353 430 NOP  <||@
  Comment 354 432 NOP  <||@
  Comment 355 434 NOP  <||@
  Comment 356 436 NOP  <||@
  Comment 357 438 NOP  <||@
  Comment 358 440 NOP  <||@
  Comment 359 442 NOP  <||@
  Comment 360 444 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 369 POLL_RETURN_FAR  <||@
  Comment 386 block B8 null  <||@
  Comment 386 140 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 386 142 NOP  <||@
  Comment 387 144 NOP  <||@
  Comment 388 146 NOP  <||@
  Comment 389 148 NOP  <||@
  Comment 390 150 NOP  <||@
  Comment 391 152 NOP  <||@
  Comment 392 154 NOP  <||@
  Comment 393 156 NOP  <||@
  Comment 394 158 NOP  <||@
  Comment 395 160 NOP  <||@
  Comment 396 162 NOP  <||@
  Comment 397 164 NOP  <||@
  Comment 398 166 r9|DWORD = MOVZXB input: [rbx|QWORD[.] + 16] size: DWORD  <||@
  Comment 403 168 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 408 170 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 415 172 rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 418 174 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 424 176 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL  <||@
  Comment 424 {Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 429 178 JUMP ~outgoingValues: [] destination: B8 -> B21  <||@
  Comment 431 block B20 null  <||@
  Comment 431 414 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 431 416 NOP  <||@
  Comment 432 418 NOP  <||@
  Comment 433 420 NOP  <||@
  Comment 434 422 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 439 424 JUMP ~outgoingValues: [] destination: B20 -> B21  <||@
  Comment 441 block B10 null  <||@
  Comment 441 204 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 441 206 NOP  <||@
  Comment 442 208 NOP  <||@
  Comment 443 210 NOP  <||@
  Comment 444 212 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 449 214 JUMP ~outgoingValues: [] destination: B10 -> B21  <||@
  Comment 451 block B19 null  <||@
  Comment 451 400 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 451 402 r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 454 404 NOP  <||@
  Comment 455 406 NOP  <||@
  Comment 456 408 NOP  <||@
  Comment 457 412 JUMP ~outgoingValues: [] destination: B19 -> B21  <||@
  Comment 459 block B18 null  <||@
  Comment 459 388 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 459 390 NOP  <||@
  Comment 460 392 NOP  <||@
  Comment 461 394 NOP  <||@
  Comment 462 396 rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 465 398 JUMP ~outgoingValues: [] destination: B18 -> B21  <||@
  Comment 467 block B17 null  <||@
  Comment 467 376 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 467 378 NOP  <||@
  Comment 468 380 NOP  <||@
  Comment 469 382 NOP  <||@
  Comment 470 384 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 475 386 JUMP ~outgoingValues: [] destination: B17 -> B21  <||@
  Comment 477 block B3 null  <||@
  Comment 477 66 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 477 68 NOP  <||@
  Comment 478 70 NOP  <||@
  Comment 479 72 NOP  <||@
  Comment 480 74 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 487 76 r10|DWORD = MOVE input: int[-32531|0xffffffffffff80ed]  <||@
  Comment 493 80 JUMP ~outgoingValues: [] destination: B3 -> B4  <||@
  Comment 493 block B4 null  <||@
  Comment 493 82 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 493 50 r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 498 84 NOP  <||@
  Comment 499 86 NOP  <||@
  Comment 500 88 NOP  <||@
  Comment 501 90 NOP  <||@
  Comment 502 92 NOP  <||@
  Comment 503 94 NOP  <||@
  Comment 504 96 NOP  <||@
  Comment 505 98 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 512 100 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 519 102 DEOPT info [bci:0]  <||@
  Comment 519 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 524 [rbx:0, r8:0]at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0, duringCall: false, rethrow: false]
              |0            |1            
     locals:  |r8|QWORD[.]  |rbx|QWORD[.]   <||@
  Comment 532 block B1 null  <||@
  Comment 532 38 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 532 40 NOP  <||@
  Comment 533 42 NOP  <||@
  Comment 534 44 NOP  <||@
  Comment 535 46 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 542 48 r10|DWORD = MOVE input: int[-31507|0xffffffffffff84ed]  <||@
  Comment 548 52 JUMP ~outgoingValues: [] destination: B1 -> B4  <||@
  Comment 555 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 580 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 608 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 613 [rbx:0, r11:0, stack:8]at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |r11|QWORD[.]  |rbx|QWORD[.]   <||@
  Comment 643 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 648 [rbx:0, r11:0, stack:8]at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |r11|QWORD[.]  |rbx|QWORD[.]   <||@
  Comment 656 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 656 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 662 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 662 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-10488[java.lang.StringLatin1.indexOf(byte[], byte[])]"
  method "HotSpotCompilation-10488[java.lang.StringLatin1.indexOf(byte[], byte[])]"
  date 1724269762189
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789af57300 89842400c0feff4883ec289041817f20000000000f850c0200009090909090909090909048896c24204c8bde4c895c2408488bda8b6b0c458b530c85ed0f84d1010000909090904585d20f848d01000090909090413bea0f87fb0000009090909083fd010f84180100009090909090909090442bd5458d6a024183fd010f8c360100009090909090440fb67310440fb65311448954241441b800000000e9840000006666660f1f840000000000666666906666660f1f840000000000666666909090909083fd020f84f6000000909090909090909090909090909090908bf0488d5610498bf3488bcb49c7c010000000448bcd448bd8e8856998fe85c00f85c80000009090909090418bc3ffc0443be80f8ebd000000909090448bc0448b5424144c8b5c240890909090909090909090909090498bf348c7c210000000418bcd458bce418bfae8351e98fe85c00f8d6dffffffe957000000909090b8ffffffff9090909090909090488b6c24204883c428493ba7500400000f87b8000000c5f877c3909090909090909090909090440fb64b10488b74240848c7c210000000418bca41b800000000e8531a98feebb1909090b8ffffffffeba7909090b8ffffffffeb9d448bd8909090eb95909090418bc3eb8d909090b8ffffffffeb8390909049c7c39402000041baed80ffff4c8b44240890909090909090458997840400004d899f90040000e86e3c83fe0f1f84000000000090909049c7c31400000041baed84ffffebc748896c2420e8f03c81fee9e5fdfffff4488d0d34ffffff49898f68040000e9b74a83fef441c78784040000f5e9ffff49c7879004000000000000e8153c83fe0f1f84000000000041c78784040000f5e3ffff49c7879004000000000000e8f23b83fe0f1f840000000000e86bdd96fef4e8853983fef4f4f4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 NOP  <||@
  Comment 27 4 NOP  <||@
  Comment 28 6 NOP  <||@
  Comment 29 8 NOP  <||@
  Comment 30 10 NOP  <||@
  Comment 31 12 NOP  <||@
  Comment 32 14 NOP  <||@
  Comment 33 16 NOP  <||@
  Comment 34 18 NOP  <||@
  Comment 35 20 NOP  <||@
  Comment 36 22 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 41 24 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@25e59b6d slotKind: QWORD  <||@
  Comment 41 26 r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 44 28 stack:40|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 49 30 rbx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 52 32 rbp|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 52 [rbx:0, r11:0, stack:8]at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |r11|QWORD[.]  |rbx|QWORD[.]   <||@
  Comment 52 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 55 34 r10|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 55 [rbx:0, r11:0, stack:8]at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |r11|QWORD[.]  |rbx|QWORD[.]   <||@
  Comment 55 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 36 TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 67 block B2 null  <||@
  Comment 67 54 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 67 56 NOP  <||@
  Comment 68 58 NOP  <||@
  Comment 69 60 NOP  <||@
  Comment 70 62 NOP  <||@
  Comment 71 64 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD  <||@
  Comment 80 block B5 null  <||@
  Comment 80 104 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 80 106 NOP  <||@
  Comment 81 108 NOP  <||@
  Comment 82 110 NOP  <||@
  Comment 83 112 NOP  <||@
  Comment 84 114 CMPBRANCH (x: rbp|DWORD, y: r10|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD  <||@
  Comment 93 block B7 null  <||@
  Comment 93 128 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 93 130 NOP  <||@
  Comment 94 132 NOP  <||@
  Comment 95 134 NOP  <||@
  Comment 96 136 NOP  <||@
  Comment 97 138 CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null  <||@
  Comment 106 block B9 null  <||@
  Comment 106 180 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 106 182 NOP  <||@
  Comment 107 184 NOP  <||@
  Comment 108 186 NOP  <||@
  Comment 109 188 NOP  <||@
  Comment 110 190 NOP  <||@
  Comment 111 192 NOP  <||@
  Comment 112 194 NOP  <||@
  Comment 113 196 NOP  <||@
  Comment 114 198 r10|DWORD = SUB (x: r10|DWORD, ~y: rbp|DWORD) size: DWORD  <||@
  Comment 117 200 r13|DWORD = LEA address: [r10|DWORD + 2] size: DWORD  <||@
  Comment 121 202 CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 1 size: DWORD inlinedY: null  <||@
  Comment 131 block B11 null  <||@
  Comment 131 216 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 131 218 NOP  <||@
  Comment 132 220 NOP  <||@
  Comment 133 222 NOP  <||@
  Comment 134 224 NOP  <||@
  Comment 135 226 NOP  <||@
  Comment 136 228 r14|DWORD = MOVZXB input: [rbx|QWORD[.] + 16] size: DWORD  <||@
  Comment 141 230 r10|DWORD = MOVZXB input: [rbx|QWORD[.] + 17] size: DWORD  <||@
  Comment 146 232 stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 151 234 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 157 236 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 162 block B13 loop 0 depth 1 header:54|LoopBegin  <||@
  Comment 162 280 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 192 282 NOP  <||@
  Comment 193 284 NOP  <||@
  Comment 194 286 NOP  <||@
  Comment 195 288 NOP  <||@
  Comment 196 290 CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B13 -> B19 falseDestination: B13 -> B14 y: 2 size: DWORD inlinedY: null  <||@
  Comment 205 block B14 loop 0 depth 1 header:54|LoopBegin  <||@
  Comment 205 292 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 205 294 NOP  <||@
  Comment 206 296 NOP  <||@
  Comment 207 298 NOP  <||@
  Comment 208 300 NOP  <||@
  Comment 209 302 NOP  <||@
  Comment 210 304 NOP  <||@
  Comment 211 306 NOP  <||@
  Comment 212 308 NOP  <||@
  Comment 213 310 NOP  <||@
  Comment 214 312 NOP  <||@
  Comment 215 314 NOP  <||@
  Comment 216 316 NOP  <||@
  Comment 217 318 NOP  <||@
  Comment 218 320 NOP  <||@
  Comment 219 322 NOP  <||@
  Comment 220 324 NOP  <||@
  Comment 221 326 rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 223 328 rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD  <||@
  Comment 227 330 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 230 332 rcx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 233 334 r8|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 240 336 r9|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 243 338 r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 246 340 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL  <||@
  Comment 246 {Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 251 342 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD  <||@
  Comment 259 block B15 loop 0 depth 1 header:54|LoopBegin  <||@
  Comment 259 344 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 259 346 NOP  <||@
  Comment 260 348 NOP  <||@
  Comment 261 350 NOP  <||@
  Comment 262 352 NOP  <||@
  Comment 263 354 NOP  <||@
  Comment 264 356 rax|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 269 358 CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD  <||@
  Comment 278 block B16 loop 0 depth 1 header:54|LoopBegin  <||@
  Comment 278 360 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 278 362 NOP  <||@
  Comment 279 364 NOP  <||@
  Comment 280 366 NOP  <||@
  Comment 281 368 r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 284 370 r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 289 372 r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 294 374 JUMP ~outgoingValues: [] destination: B16 -> B12  <||@
  Comment 294 block B12 loop 0 depth 1 header:54|LoopBegin  <||@
  Comment 294 238 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 294 240 NOP  <||@
  Comment 295 242 NOP  <||@
  Comment 296 244 NOP  <||@
  Comment 297 246 NOP  <||@
  Comment 298 248 NOP  <||@
  Comment 299 250 NOP  <||@
  Comment 300 252 NOP  <||@
  Comment 301 254 NOP  <||@
  Comment 302 256 NOP  <||@
  Comment 303 258 NOP  <||@
  Comment 304 260 NOP  <||@
  Comment 305 262 NOP  <||@
  Comment 306 264 NOP  <||@
  Comment 307 266 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 310 268 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 317 270 rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 320 272 r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 323 274 rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 326 276 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL  <||@
  Comment 326 {Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL}  <||@
  Comment 331 278 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B12 -> B20 falseDestination: B12 -> B13 size: DWORD  <||@
  Comment 344 block B6 null  <||@
  Comment 344 116 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 344 118 NOP  <||@
  Comment 345 120 NOP  <||@
  Comment 346 122 NOP  <||@
  Comment 347 124 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 352 126 JUMP ~outgoingValues: [] destination: B6 -> B21  <||@
  Comment 352 block B21 null  <||@
  Comment 352 426 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 352 428 NOP  <||@
  Comment 353 430 NOP  <||@
  Comment 354 432 NOP  <||@
  Comment 355 434 NOP  <||@
  Comment 356 436 NOP  <||@
  Comment 357 438 NOP  <||@
  Comment 358 440 NOP  <||@
  Comment 359 442 NOP  <||@
  Comment 360 444 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 369 POLL_RETURN_FAR  <||@
  Comment 386 block B8 null  <||@
  Comment 386 140 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 386 142 NOP  <||@
  Comment 387 144 NOP  <||@
  Comment 388 146 NOP  <||@
  Comment 389 148 NOP  <||@
  Comment 390 150 NOP  <||@
  Comment 391 152 NOP  <||@
  Comment 392 154 NOP  <||@
  Comment 393 156 NOP  <||@
  Comment 394 158 NOP  <||@
  Comment 395 160 NOP  <||@
  Comment 396 162 NOP  <||@
  Comment 397 164 NOP  <||@
  Comment 398 166 r9|DWORD = MOVZXB input: [rbx|QWORD[.] + 16] size: DWORD  <||@
  Comment 403 168 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 408 170 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 415 172 rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 418 174 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 424 176 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL  <||@
  Comment 424 {Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 429 178 JUMP ~outgoingValues: [] destination: B8 -> B21  <||@
  Comment 431 block B20 null  <||@
  Comment 431 414 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 431 416 NOP  <||@
  Comment 432 418 NOP  <||@
  Comment 433 420 NOP  <||@
  Comment 434 422 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 439 424 JUMP ~outgoingValues: [] destination: B20 -> B21  <||@
  Comment 441 block B10 null  <||@
  Comment 441 204 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 441 206 NOP  <||@
  Comment 442 208 NOP  <||@
  Comment 443 210 NOP  <||@
  Comment 444 212 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 449 214 JUMP ~outgoingValues: [] destination: B10 -> B21  <||@
  Comment 451 block B19 null  <||@
  Comment 451 400 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 451 402 r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 454 404 NOP  <||@
  Comment 455 406 NOP  <||@
  Comment 456 408 NOP  <||@
  Comment 457 412 JUMP ~outgoingValues: [] destination: B19 -> B21  <||@
  Comment 459 block B18 null  <||@
  Comment 459 388 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 459 390 NOP  <||@
  Comment 460 392 NOP  <||@
  Comment 461 394 NOP  <||@
  Comment 462 396 rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 465 398 JUMP ~outgoingValues: [] destination: B18 -> B21  <||@
  Comment 467 block B17 null  <||@
  Comment 467 376 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 467 378 NOP  <||@
  Comment 468 380 NOP  <||@
  Comment 469 382 NOP  <||@
  Comment 470 384 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 475 386 JUMP ~outgoingValues: [] destination: B17 -> B21  <||@
  Comment 477 block B3 null  <||@
  Comment 477 66 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 477 68 NOP  <||@
  Comment 478 70 NOP  <||@
  Comment 479 72 NOP  <||@
  Comment 480 74 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 487 76 r10|DWORD = MOVE input: int[-32531|0xffffffffffff80ed]  <||@
  Comment 493 80 JUMP ~outgoingValues: [] destination: B3 -> B4  <||@
  Comment 493 block B4 null  <||@
  Comment 493 82 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 493 50 r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 498 84 NOP  <||@
  Comment 499 86 NOP  <||@
  Comment 500 88 NOP  <||@
  Comment 501 90 NOP  <||@
  Comment 502 92 NOP  <||@
  Comment 503 94 NOP  <||@
  Comment 504 96 NOP  <||@
  Comment 505 98 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 512 100 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 519 102 DEOPT info [bci:0]  <||@
  Comment 519 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 524 [rbx:0, r8:0]at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0, duringCall: false, rethrow: false]
              |0            |1            
     locals:  |r8|QWORD[.]  |rbx|QWORD[.]   <||@
  Comment 532 block B1 null  <||@
  Comment 532 38 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 532 40 NOP  <||@
  Comment 533 42 NOP  <||@
  Comment 534 44 NOP  <||@
  Comment 535 46 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 542 48 r10|DWORD = MOVE input: int[-31507|0xffffffffffff84ed]  <||@
  Comment 548 52 JUMP ~outgoingValues: [] destination: B1 -> B4  <||@
  Comment 555 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 580 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 608 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 613 [rbx:0, r11:0, stack:8]at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |r11|QWORD[.]  |rbx|QWORD[.]   <||@
  Comment 643 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 648 [rbx:0, r11:0, stack:8]at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |r11|QWORD[.]  |rbx|QWORD[.]   <||@
  Comment 656 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 656 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 662 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 662 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
