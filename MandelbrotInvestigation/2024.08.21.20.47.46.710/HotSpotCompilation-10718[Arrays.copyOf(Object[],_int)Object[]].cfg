begin_compilation
  name " HotSpotCompilation-10718[java.util.Arrays.copyOf(Object[], int)]"
  method "HotSpotCompilation-10718[java.util.Arrays.copyOf(Object[], int)]"
  date 1724269765474
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v495 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v495  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a java.lang.Object[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v446 v548 ?29 v517 j455 j467 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 i46 v274 v376 ?29 v45 v99 j303 a240 a350 v292 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Arrays.copyOf(Object[], int)>
localsSize: 2
locksSize: 0
sourceFile: Arrays.java
sourceLine: 3482
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v555 v509 v514 a240 a350 v396 v388 i500 v495 v516 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-13067|0xffffffffffffccf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHub(HotSpotReplacementsUtil.java:722) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:82) [bci: 39]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v548 
lastLocationAccess: - 
=== Succesors ===
next: i496 
=== Usages ===
v472 v202 v492 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v548 lastLocationAccess: - #next: i496  <|@  <|@
f <@~|@floating>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i496 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i496 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 30]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v517 
lastLocationAccess: - 
=== Succesors ===
next: v16 
=== Usages ===
v45 i46 v98 
=== Predecessor ===
v495 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v517 lastLocationAccess: - #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:84) [bci: 77]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v474 v492 v273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3512) [bci: 3]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v495 
y: v473 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v495 y: v473  <|@  <|@
f <@~|@floating>@ <|@
tid j199 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3512) [bci: 3]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j346 j236 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 26]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 v428 v493 v292 v378 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j131 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v275 v377 v186 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j254 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v220 v328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j217 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v270 v372 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3512) [bci: 3]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a240 v141 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j303 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
j304 j209 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid j210 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j211 j309 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3512) [bci: 3]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
profileData: PROFILED designatedSuccessorProbability: 0.9291083219275948
stamp: void
=== Inputs ===
condition: v492 
=== Succesors ===
trueSuccessor: v15 
falseSuccessor: v14 
=== Usages ===
=== Predecessor ===
i496 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v492 #trueSuccessor: v15 #falseSuccessor: v14  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v285 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v285  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: j205 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j205 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j267 
=== Usages ===
v522 v523 
=== Predecessor ===
v285 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j267  <|@  <|@
f <@~|@floating>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j205 
index: - 
=== Succesors ===
=== Usages ===
j267 v269 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j205 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j267 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v522 
lastLocationAccess: - 
=== Succesors ===
next: j268 
=== Usages ===
j212 v524 v525 v526 a239 v527 v531 v528 v529 v530 
=== Predecessor ===
j205 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v522 lastLocationAccess: - #next: j268  <|@  <|@
f <@~|@floating>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j205 
index: - 
=== Succesors ===
=== Usages ===
j268 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j205 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j268 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v523 
lastLocationAccess: - 
=== Succesors ===
next: v216 
=== Usages ===
v213 
=== Predecessor ===
j267 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v523 lastLocationAccess: - #next: v216  <|@  <|@
f <@~|@floating>@ <|@
tid i204 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j209 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 7]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64 [0 - 17179869180] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00
=== Inputs ===
x: j303 
y: i204 
=== Succesors ===
=== Usages ===
j250 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j303 y: i204  <|@  <|@
f <@~|@floating>@ <|@
tid j249 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j250 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64 [23 - 17179869203] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx11
=== Inputs ===
x: j209 
y: j249 
=== Succesors ===
=== Usages ===
j211 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j209 y: j249  <|@  <|@
f <@~|@floating>@ <|@
tid j211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64 [0 - 17179869200] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j250 
y: j210 
=== Succesors ===
=== Usages ===
j212 v228 j253 v528 v529 v530 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j250 y: j210  <|@  <|@
f <@~|@floating>@ <|@
tid j212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64
=== Inputs ===
x: j211 
y: j267 
=== Succesors ===
=== Usages ===
v213 v269 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j211 y: j267  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j268 
y: j212 
=== Succesors ===
=== Usages ===
v216 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j268 y: j212  <|@  <|@
f <@*|@fixed>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v213 
=== Succesors ===
trueSuccessor: v215 
falseSuccessor: v214 
=== Usages ===
=== Predecessor ===
j268 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v213 #trueSuccessor: v215 #falseSuccessor: v214  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a240 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a240 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v115 i2 
=== Succesors ===
next: v509 
=== Usages ===
v509 a28 
=== Predecessor ===
v215 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v115 i2 #next: v509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-72049|0xfffffffffffee68f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a240 
=== Succesors ===
next: v505 
=== Usages ===
=== Predecessor ===
a240 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a240 #next: v505  <|@  <|@
f <@*|@fixed>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
v509 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v269 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v269  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v522 
lastLocationAccess: - 
value: j212 
stateAfter: - 
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v522 lastLocationAccess: - value: j212 stateAfter: - #next: v257  <|@  <|@
f <@~|@floating>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j211 
index: j267 
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j211 index: j267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
address: v528 
=== Succesors ===
next: v260 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v528 #next: v260  <|@  <|@
f <@~|@floating>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j211 
index: j267 
=== Succesors ===
=== Usages ===
v260 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j211 index: j267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
address: v529 
=== Succesors ===
next: v263 
=== Usages ===
=== Predecessor ===
v257 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v529 #next: v263  <|@  <|@
f <@~|@floating>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j211 
index: j267 
=== Succesors ===
=== Usages ===
v263 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j211 index: j267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
address: v530 
=== Succesors ===
next: v270 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v530 #next: v270  <|@  <|@
f <@~|@floating>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j267 
index: - 
=== Succesors ===
=== Usages ===
v270 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j267 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v524 
lastLocationAccess: - 
value: j217 
stateAfter: - 
=== Succesors ===
next: v273 
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v524 lastLocationAccess: - value: j217 stateAfter: - #next: v273  <|@  <|@
f <@~|@floating>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j267 
index: - 
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j267 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v531 
lastLocationAccess: - 
value: v473 
stateAfter: - 
=== Succesors ===
next: v274 
=== Usages ===
=== Predecessor ===
v270 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v531 lastLocationAccess: - value: v473 stateAfter: - #next: v274  <|@  <|@
f <@~|@floating>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j267 
index: - 
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j267 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v525 
lastLocationAccess: - 
value: i2 
stateAfter: - 
=== Succesors ===
next: v223 
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v525 lastLocationAccess: - value: i2 stateAfter: - #next: v223  <|@  <|@
f <@~|@floating>@ <|@
tid j252 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j253 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64 [-16 - 17179869184] bits:x...x000
=== Inputs ===
x: j211 
y: j252 
=== Succesors ===
=== Usages ===
v220 v224 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j211 y: j252  <|@  <|@
f <@~|@floating>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j253 
y: j254 
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j253 y: j254  <|@  <|@
f <@*|@fixed>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v220 
=== Succesors ===
trueSuccessor: v222 
falseSuccessor: v221 
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v220 #trueSuccessor: v222 #falseSuccessor: v221  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v225 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid j251 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:175) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j227 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
v222 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v226 
values: j251 j236 
=== Succesors ===
=== Usages ===
v228 v526 j236 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v226 values: j251 j236  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 58
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v225 
=== Succesors ===
next: v234 
=== Usages ===
j227 v233 v237 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v225 #next: v234  <|@  <|@
f <@~|@floating>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j227 
y: j211 
=== Succesors ===
=== Usages ===
v234 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j227 y: j211  <|@  <|@
f <@*|@fixed>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v228 
=== Succesors ===
trueSuccessor: v229 
falseSuccessor: v233 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v228 #trueSuccessor: v229 #falseSuccessor: v233  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v275 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v275  <|@  <|@
f <@~|@floating>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j267 
index: j227 
=== Succesors ===
=== Usages ===
v275 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j267 index: j227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v526 
lastLocationAccess: - 
value: j131 
stateAfter: - 
=== Succesors ===
next: v237 
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v526 lastLocationAccess: - value: j131 stateAfter: - #next: v237  <|@  <|@
f <@~|@floating>@ <|@
tid j236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64
=== Inputs ===
x: j227 
y: j199 
=== Succesors ===
=== Usages ===
j227 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j227 y: j199  <|@  <|@
f <@*|@fixed>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
loopBegin: v226 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v275 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v226  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v226 
=== Succesors ===
next: v232 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v226 #next: v232  <|@  <|@
f <@*|@fixed>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
v233 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v224 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v224  <|@  <|@
f <@~|@floating>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j267 
index: - 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j267 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v527 
lastLocationAccess: - 
length: j253 
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v221 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v527 lastLocationAccess: - length: j253 #next: v230  <|@  <|@
f <@*|@fixed>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
v224 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v230 v232 
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v230 v232 #next: v238  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a239 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a239 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j267 
=== Succesors ===
next: v25 
=== Usages ===
a28 
=== Predecessor ===
v238 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j267 #next: v25  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
a239 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 13]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: j497 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j497  <|@  <|@
f <@~|@floating>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3512) [bci: 3]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v495 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v495  <|@  <|@
f <@~|@floating>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
displacement: 112
stamp: void*
stride: S1
=== Inputs ===
base: v202 
index: - 
=== Succesors ===
=== Usages ===
j497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v202 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j497 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Klass::_java_mirror:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 3]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v519 
lastLocationAccess: - 
=== Succesors ===
next: a498 
=== Usages ===
v520 
=== Predecessor ===
v14 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v519 lastLocationAccess: - #next: a498  <|@  <|@
f <@~|@floating>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j497 
index: - 
=== Succesors ===
=== Usages ===
a498 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j497 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a498 <|@
d <@d|@=== Debug Properties ===
accessStamp: a!# java.lang.Class
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: OopHandle contents:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 3]
stamp: a!# java.lang.Class
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v520 
lastLocationAccess: - 
=== Succesors ===
next: a499 
=== Usages ===
v518 
=== Predecessor ===
j497 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v520 lastLocationAccess: - #next: a499  <|@  <|@
f <@~|@floating>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: a498 
index: - 
=== Succesors ===
=== Usages ===
a499 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a498 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a499 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.Class
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Class.componentType
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Class.getComponentType(Class.java:1313) [bci: 8]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 14]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: n# java.lang.Class
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v518 
lastLocationAccess: - 
=== Succesors ===
next: v516 
=== Usages ===
v554 v507 v542 
=== Predecessor ===
a498 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v518 lastLocationAccess: - #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a499 
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a499  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?3 
object: v554 
=== Succesors ===
next: v406 
=== Usages ===
=== Predecessor ===
a499 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: v554 #next: v406  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid a506 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.java.DynamicNewArrayNode.throwsIllegalArgumentException(DynamicNewArrayNode.java:116) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:240) [bci: 58] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: Class:void
stableDimension: 0
stamp: n!# java.lang.Class
stampKind: n java.lang.Object
value: NarrowOop[Class:void]
=== Inputs ===
=== Succesors ===
=== Usages ===
v507 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.nodes.java.DynamicNewArrayNode.throwsIllegalArgumentException(DynamicNewArrayNode.java:116) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:240) [bci: 58] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a499 
y: a506 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a499 y: a506  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:240) [bci: 64] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v507 
=== Succesors ===
trueSuccessor: v389 
falseSuccessor: v390 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v507 #trueSuccessor: v389 #falseSuccessor: v390  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:240) [bci: 64] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v388 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v388  <|@  <|@
f <@*|@fixed>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:240) [bci: 64] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
reason: RuntimeConstraint
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:245) [bci: 76] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v368  <|@  <|@
f <@~|@floating>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a499 
=== Succesors ===
=== Usages ===
v368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a499  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Class._array_klass:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadKlassFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadKlassFromObject(HotSpotReplacementsUtil.java:767) [bci: 28]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:245) [bci: 86] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: Klass*
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v542 
lastLocationAccess: - 
=== Succesors ===
next: i500 
=== Usages ===
a350 v544 v373 
=== Predecessor ===
v390 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v542 lastLocationAccess: - #next: i500  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: v368 
index: - 
=== Succesors ===
=== Usages ===
i500 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v368 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i500 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-100465|0xfffffffffffe778f]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Klass::_layout_helper:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readLayoutHelper(KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:256) [bci: 157] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v544 
lastLocationAccess: - 
=== Succesors ===
next: v399 
=== Usages ===
i294 i298 
=== Predecessor ===
v368 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v544 lastLocationAccess: - #next: v399  <|@  <|@
f <@~|@floating>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:251) [bci: 124] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i30 
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i30  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:251) [bci: 135] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v292 
=== Succesors ===
trueSuccessor: v397 
falseSuccessor: v398 
=== Usages ===
=== Predecessor ===
i500 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v292 #trueSuccessor: v397 #falseSuccessor: v398  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:251) [bci: 135] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v396 
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v396  <|@  <|@
f <@*|@fixed>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:251) [bci: 135] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
reason: RuntimeConstraint
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v397 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:255) [bci: 147] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: j300 
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j300  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j300 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j369 
=== Usages ===
v532 v533 
=== Predecessor ===
v398 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j369  <|@  <|@
f <@~|@floating>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j300 
index: - 
=== Succesors ===
=== Usages ===
j369 v371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j300 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j369 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v532 
lastLocationAccess: - 
=== Succesors ===
next: j370 
=== Usages ===
j310 v534 v535 v536 v537 v538 a349 v543 v539 v540 v541 
=== Predecessor ===
j300 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v532 lastLocationAccess: - #next: j370  <|@  <|@
f <@~|@floating>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j300 
index: - 
=== Succesors ===
=== Usages ===
j370 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j300 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j370 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v533 
lastLocationAccess: - 
=== Succesors ===
next: v314 
=== Usages ===
v311 
=== Predecessor ===
j369 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v533 lastLocationAccess: - #next: v314  <|@  <|@
f <@~|@floating>@ <|@
tid i297 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.layoutHelperLog2ElementSizeMask(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:275) [bci: 219] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: 63
stableDimension: 0
stamp: i32 [63]
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i298 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:275) [bci: 222] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i32 [0 - 63] bits:0...0xxxxxx
=== Inputs ===
x: i500 
y: i297 
=== Succesors ===
=== Usages ===
j304 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i500 y: i297  <|@  <|@
f <@~|@floating>@ <|@
tid j304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 7]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64
=== Inputs ===
x: j303 
y: i298 
=== Succesors ===
=== Usages ===
j306 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j303 y: i298  <|@  <|@
f <@~|@floating>@ <|@
tid i293 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.layoutHelperHeaderSizeShift(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:274) [bci: 194] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: 16
stableDimension: 0
stamp: i32 [16]
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i294 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:274) [bci: 197] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i32 [-32768 - 32767]
=== Inputs ===
x: i500 
y: i293 
=== Succesors ===
=== Usages ===
i296 
=== Predecessor ===
- >@ <|@
instruction <@>>|@jdk.graal.compiler.nodes.calc.RightShiftNode>@ x: i500 y: i293  <|@  <|@
f <@~|@floating>@ <|@
tid i295 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.layoutHelperHeaderSizeMask(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:274) [bci: 201] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: 255
stableDimension: 0
stamp: i32 [255]
stampKind: i32
value: int[255|0xff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i296 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i296 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:274) [bci: 204] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
x: i294 
y: i295 
=== Succesors ===
=== Usages ===
j305 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i294 y: i295  <|@  <|@
f <@~|@floating>@ <|@
tid j305 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
resultBits: 64
stamp: i64 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i296 
=== Succesors ===
=== Usages ===
j306 v536 j322 j326 v357 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i296  <|@  <|@
f <@~|@floating>@ <|@
tid j306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64
=== Inputs ===
x: j304 
y: j305 
=== Succesors ===
=== Usages ===
j308 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j304 y: j305  <|@  <|@
f <@~|@floating>@ <|@
tid j307 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 14]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: 7
stableDimension: 0
stamp: i64 [7]
stampKind: i64
value: long[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
j308 v357 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j308 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64
=== Inputs ===
x: j306 
y: j307 
=== Succesors ===
=== Usages ===
j309 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j306 y: j307  <|@  <|@
f <@~|@floating>@ <|@
tid j309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64 [-9223372036854775808 - 9223372036854775800] bits:x...x000
=== Inputs ===
x: j308 
y: j210 
=== Succesors ===
=== Usages ===
j310 j327 v338 v539 v540 v541 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j308 y: j210  <|@  <|@
f <@~|@floating>@ <|@
tid j310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64
=== Inputs ===
x: j309 
y: j369 
=== Succesors ===
=== Usages ===
v311 v371 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j309 y: j369  <|@  <|@
f <@~|@floating>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j370 
y: j310 
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j370 y: j310  <|@  <|@
f <@*|@fixed>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v311 
=== Succesors ===
trueSuccessor: v313 
falseSuccessor: v312 
=== Usages ===
=== Predecessor ===
j370 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v311 #trueSuccessor: v313 #falseSuccessor: v312  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a350 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a350  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a350 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v368 i2 
=== Succesors ===
next: v514 
=== Usages ===
v514 a365 
=== Predecessor ===
v313 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v368 i2 #next: v514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-102513|0xfffffffffffe6f8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a350 
=== Succesors ===
next: v354 
=== Usages ===
=== Predecessor ===
a350 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a350 #next: v354  <|@  <|@
f <@*|@fixed>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
v514 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v371 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v371  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v532 
lastLocationAccess: - 
value: j310 
stateAfter: - 
=== Succesors ===
next: v360 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v532 lastLocationAccess: - value: j310 stateAfter: - #next: v360  <|@  <|@
f <@~|@floating>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j309 
index: j369 
=== Succesors ===
=== Usages ===
v360 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j309 index: j369  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
address: v539 
=== Succesors ===
next: v362 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v539 #next: v362  <|@  <|@
f <@~|@floating>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j309 
index: j369 
=== Succesors ===
=== Usages ===
v362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j309 index: j369  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
address: v540 
=== Succesors ===
next: v364 
=== Usages ===
=== Predecessor ===
v360 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v540 #next: v364  <|@  <|@
f <@~|@floating>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j309 
index: j369 
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j309 index: j369  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
address: v541 
=== Succesors ===
next: v372 
=== Usages ===
=== Predecessor ===
v362 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v541 #next: v372  <|@  <|@
f <@~|@floating>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j369 
index: - 
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j369 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v534 
lastLocationAccess: - 
value: j217 
stateAfter: - 
=== Succesors ===
next: v375 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v534 lastLocationAccess: - value: j217 stateAfter: - #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j369 
index: - 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j369 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
op: Compress
stamp: Klass*(compressed base: 140154094223360 shift: 0)
=== Inputs ===
value: v368 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v368  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v543 
lastLocationAccess: - 
value: v373 
stateAfter: - 
=== Succesors ===
next: v376 
=== Usages ===
=== Predecessor ===
v372 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v543 lastLocationAccess: - value: v373 stateAfter: - #next: v376  <|@  <|@
f <@~|@floating>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j369 
index: - 
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j369 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v535 
lastLocationAccess: - 
value: i2 
stateAfter: - 
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v535 lastLocationAccess: - value: i2 stateAfter: - #next: v320  <|@  <|@
f <@~|@floating>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:176) [bci: 40]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
x: j305 
y: j307 
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j305 y: j307  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:176) [bci: 48]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v357 
=== Succesors ===
trueSuccessor: v319 
falseSuccessor: v318 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v357 #trueSuccessor: v319 #falseSuccessor: v318  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:180) [bci: 72]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
v320 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v323  <|@  <|@
f <@*|@fixed>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:180) [bci: 72]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
v319 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:177) [bci: 51]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v378 
=== Usages ===
=== Predecessor ===
v320 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v378  <|@  <|@
f <@~|@floating>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j369 
index: j305 
=== Succesors ===
=== Usages ===
v378 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j369 index: j305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:177) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v536 
lastLocationAccess: - 
value: i30 
stateAfter: - 
=== Succesors ===
next: v325 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v536 lastLocationAccess: - value: i30 stateAfter: - #next: v325  <|@  <|@
f <@~|@floating>@ <|@
tid j358 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:178) [bci: 65]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: 4
stableDimension: 0
stamp: i64 [4]
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j322 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:178) [bci: 65]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64 [4 - 259] bits:0...0xxxxxxxxx
=== Inputs ===
x: j305 
y: j358 
=== Succesors ===
=== Usages ===
j326 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j305 y: j358  <|@  <|@
f <@*|@fixed>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:180) [bci: 72]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
v378 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:180) [bci: 72]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64 [0 - 259] bits:0...0xxxxxxxxx
valueDescription: i64
=== Inputs ===
merge: v324 
values: j305 j322 
=== Succesors ===
=== Usages ===
j327 v537 j337 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v324 values: j305 j322  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:180) [bci: 72]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v323 v325 
=== Succesors ===
next: v331 
=== Usages ===
j326 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v323 v325 #next: v331  <|@  <|@
f <@~|@floating>@ <|@
tid j327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64
=== Inputs ===
x: j309 
y: j326 
=== Succesors ===
=== Usages ===
v328 v334 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: j309 y: j326  <|@  <|@
f <@~|@floating>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j327 
y: j254 
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j327 y: j254  <|@  <|@
f <@*|@fixed>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v328 
=== Succesors ===
trueSuccessor: v330 
falseSuccessor: v329 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v328 #trueSuccessor: v330 #falseSuccessor: v329  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v335 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v335  <|@  <|@
f <@*|@fixed>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
v330 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v336 
values: j326 j346 
=== Succesors ===
=== Usages ===
v338 v538 j346 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v336 values: j326 j346  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 93
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v335 
=== Succesors ===
next: v344 
=== Usages ===
j337 v343 v347 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v335 #next: v344  <|@  <|@
f <@~|@floating>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j337 
y: j309 
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j337 y: j309  <|@  <|@
f <@*|@fixed>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v338 
=== Succesors ===
trueSuccessor: v339 
falseSuccessor: v343 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v338 #trueSuccessor: v339 #falseSuccessor: v343  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v377 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v377  <|@  <|@
f <@~|@floating>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j369 
index: j337 
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j369 index: j337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v538 
lastLocationAccess: - 
value: j131 
stateAfter: - 
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v538 lastLocationAccess: - value: j131 stateAfter: - #next: v347  <|@  <|@
f <@~|@floating>@ <|@
tid j346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64
=== Inputs ===
x: j337 
y: j199 
=== Succesors ===
=== Usages ===
j337 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j337 y: j199  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
loopBegin: v336 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v336  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v336 
=== Succesors ===
next: v342 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v336 #next: v342  <|@  <|@
f <@*|@fixed>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
v343 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v334  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j326 
index: j369 
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j326 index: j369  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v537 
lastLocationAccess: - 
length: j327 
=== Succesors ===
next: v340 
=== Usages ===
=== Predecessor ===
v329 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v537 lastLocationAccess: - length: j327 #next: v340  <|@  <|@
f <@*|@fixed>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
v334 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v340 v342 
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v340 v342 #next: v348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a349 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a349  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j369 
=== Succesors ===
next: v352 
=== Usages ===
a365 
=== Predecessor ===
v348 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j369 #next: v352  <|@  <|@
f <@*|@fixed>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
a349 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v353 
values: a349 a350 
=== Succesors ===
=== Usages ===
v545 a28 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v353 values: a349 a350  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v352 v354 
=== Succesors ===
next: v501 
=== Usages ===
a365 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v352 v354 #next: v501  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a365 
index: - 
=== Succesors ===
=== Usages ===
v501 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a365 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 40] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(KlassPointer, Object, int, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 21]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v545 
lastLocationAccess: - 
=== Succesors ===
next: v502 
=== Usages ===
v410 
=== Predecessor ===
v353 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v545 lastLocationAccess: - #next: v502  <|@  <|@
f <@~|@floating>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 40] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(KlassPointer, Object, int, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 21]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v501 
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v501  <|@  <|@
f <@~|@floating>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: v410 
index: - 
=== Succesors ===
=== Usages ===
v502 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v410 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrimarySupers:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:157) [bci: 54] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(KlassPointer, Object, int, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 21]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: Klass*
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v521 
lastLocationAccess: - 
=== Succesors ===
next: v113 
=== Usages ===
v141 
=== Predecessor ===
v501 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v521 lastLocationAccess: - #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:157) [bci: 58] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(KlassPointer, Object, int, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 21]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v502 
y: v115 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v502 y: v115  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 21]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v141 
=== Succesors ===
trueSuccessor: v110 
falseSuccessor: v112 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v141 #trueSuccessor: v110 #falseSuccessor: v112  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 21]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v27 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v27  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
v110 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: a! java.lang.Object[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v26 
values: a239 a365 a240 
=== Succesors ===
=== Usages ===
?29 j460 j469 ?170 v11 v446 v549 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v26 values: a239 a365 a240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v25 v27 v505 
=== Succesors ===
next: v158 
=== Usages ===
a28 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v25 v27 v505 #next: v158  <|@  <|@
f <@~|@floating>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOf(Arrays.java:3516) [bci: 32]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i496 
=== Succesors ===
=== Usages ===
i46 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i496  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOf(Arrays.java:3516) [bci: 32]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i32
=== Inputs ===
condition: v45 
trueValue: i2 
falseValue: i496 
=== Succesors ===
=== Usages ===
i438 v59 v98 v99 j494 v493 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v45 trueValue: i2 falseValue: i496  <|@  <|@
f <@~|@floating>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 89]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i46 
y: i30 
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i46 y: i30  <|@  <|@
tid ?47 <|@
d <@d|@=== Debug Properties ===
bci: 6
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Arrays.copyOf(Object[], int)>
localsSize: 2
locksSize: 0
sourceFile: Arrays.java
sourceLine: 3482
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?29 ?170 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v59 
=== Succesors ===
trueSuccessor: v156 
falseSuccessor: v157 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v59 #trueSuccessor: v156 #falseSuccessor: v157  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid i183 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: -39705
stableDimension: 0
stamp: i32 [-39705]
stampKind: i32
value: int[-39705|0xffffffffffff64e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i184 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
v156 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:409) [bci: 120]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v162  <|@  <|@
f <@~|@floating>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 140]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i496 
y: i46 
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i496 y: i46  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v98 
=== Succesors ===
trueSuccessor: v160 
falseSuccessor: v161 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v98 #trueSuccessor: v160 #falseSuccessor: v161  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v187 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v187  <|@  <|@
f <@~|@floating>@ <|@
tid i188 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: -40729
stableDimension: 0
stamp: i32 [-40729]
stampKind: i32
value: int[-40729|0xffffffffffff60e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i184 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
v160 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 171]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v166 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v166  <|@  <|@
f <@~|@floating>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i46 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i2 y: i46  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v99 
=== Succesors ===
trueSuccessor: v164 
falseSuccessor: v165 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v99 #trueSuccessor: v164 #falseSuccessor: v165  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v189  <|@  <|@
f <@~|@floating>@ <|@
tid i190 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: -41753
stableDimension: 0
stamp: i32 [-41753]
stampKind: i32
value: int[-41753|0xffffffffffff5ce7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i184 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
v164 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i32 [-41753 - -39705] bits:1...101xxxx0011100111
valueDescription: i32
=== Inputs ===
merge: v181 
values: i183 i188 i190 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v181 values: i183 i188 i190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v182 v187 v189 
=== Succesors ===
next: v186 
=== Usages ===
i184 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v182 v187 v189 #next: v186  <|@  <|@
tid ?29 <|@
d <@d|@=== Debug Properties ===
bci: 24
bytecode: astore_3
code: ResolvedJavaMethodBytecode<Arrays.copyOf(Object[], int, Class)>
localsSize: 4
locksSize: 0
sourceFile: Arrays.java
sourceLine: 3514
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?47 
values: a28 a1 i2 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?47 values: a28 a1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
stateBefore: ?29 
actionAndReason: i184 
speculation: j131 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?29 actionAndReason: i184 speculation: j131  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:79) [bci: 5]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i46 
y: i30 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i46 y: i30  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:79) [bci: 16]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v493 
=== Succesors ===
trueSuccessor: v414 
falseSuccessor: v413 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v493 #trueSuccessor: v414 #falseSuccessor: v413  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:107) [bci: 227]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v430 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v430  <|@  <|@
f <@*|@fixed>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:107) [bci: 227]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
v414 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:80) [bci: 19]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v503 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v503  <|@  <|@
f <@~|@floating>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a28 
index: - 
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a28 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHub(HotSpotReplacementsUtil.java:722) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:83) [bci: 46]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v549 
lastLocationAccess: - 
=== Succesors ===
next: v418 
=== Usages ===
v454 v472 v474 
=== Predecessor ===
v413 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v549 lastLocationAccess: - #next: v418  <|@  <|@
f <@~|@floating>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:84) [bci: 58]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v495 
y: v503 
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v495 y: v503  <|@  <|@
f <@~|@floating>@ <|@
tid j494 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.CheckcastArrayCopyCallNode.checkcastArraycopy(Object, int, Object, int, int, Word, Object, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:96) [bci: 176]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i46 
=== Succesors ===
=== Usages ===
i466 v471 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i46  <|@  <|@
f <@*|@fixed>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:84) [bci: 64]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.6
stamp: void
=== Inputs ===
condition: v472 
=== Succesors ===
trueSuccessor: v416 
falseSuccessor: v417 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v472 #trueSuccessor: v416 #falseSuccessor: v417  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:86) [bci: 91]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v419  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:86) [bci: 91]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
v416 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:84) [bci: 67]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v424 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v424  <|@  <|@
f <@~|@floating>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:84) [bci: 77]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v503 
y: v473 
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v503 y: v473  <|@  <|@
f <@*|@fixed>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:84) [bci: 88]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.6
stamp: void
=== Inputs ===
condition: v474 
=== Succesors ===
trueSuccessor: v423 
falseSuccessor: v422 
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v474 #trueSuccessor: v423 #falseSuccessor: v422  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:86) [bci: 91]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v421  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:86) [bci: 91]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
v423 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:86) [bci: 91]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v419 v421 
=== Succesors ===
next: j467 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v419 v421 #next: j467  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopyObjectKillsAny(ArrayCopyCallNode.java:247) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:88) [bci: 122]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64
=== Inputs ===
object: a1 
=== Succesors ===
next: j469 
=== Usages ===
v552 
=== Predecessor ===
v420 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a1 #next: j469  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j469 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopyObjectKillsAny(ArrayCopyCallNode.java:247) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:88) [bci: 122]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64
=== Inputs ===
object: a28 
=== Succesors ===
next: v471 
=== Usages ===
v553 
=== Predecessor ===
j467 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a28 #next: v471  <|@  <|@
f <@~|@floating>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j467 
index: - 
=== Succesors ===
=== Usages ===
v471 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j467 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j469 
index: - 
=== Succesors ===
=== Usages ===
v471 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j469 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}
descriptorName: ObjectArraycopyKillAny
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopyObjectKillsAny(ArrayCopyCallNode.java:247) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:88) [bci: 122]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v552 v553 j494 
=== Succesors ===
next: v441 
=== Usages ===
=== Predecessor ===
j469 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v552 v553 j494 #next: v441  <|@  <|@
f <@*|@fixed>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:107) [bci: 227]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
v471 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:90) [bci: 128]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v504 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v504  <|@  <|@
f <@~|@floating>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHub(HotSpotReplacementsUtil.java:722) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:83) [bci: 46]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v503 
=== Succesors ===
=== Usages ===
v546 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v503  <|@  <|@
f <@~|@floating>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
displacement: 208
stamp: void*
stride: S1
=== Inputs ===
base: v454 
index: - 
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v454 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ObjArrayKlass::_element_klass:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.getDestElemClass(HotSpotArraycopySnippets.java:67) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:90) [bci: 131]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: Klass*
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v546 
lastLocationAccess: - 
=== Succesors ===
next: i445 
=== Usages ===
v547 i466 
=== Predecessor ===
v422 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v546 lastLocationAccess: - #next: i445  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: v504 
index: - 
=== Succesors ===
=== Usages ===
i445 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v504 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i445 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Klass::_super_check_offset:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.getSuperCheckOffset(HotSpotArraycopySnippets.java:56) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:91) [bci: 139]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v547 
lastLocationAccess: - 
=== Succesors ===
next: j455 
=== Usages ===
j427 
=== Predecessor ===
v504 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v547 lastLocationAccess: - #next: j455  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.CheckcastArrayCopyCallNode.checkcastArraycopy(Object, int, Object, int, int, Word, Object, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:96) [bci: 176]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64
=== Inputs ===
object: a1 
=== Succesors ===
next: j460 
=== Usages ===
v550 
=== Predecessor ===
i445 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a1 #next: j460  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.CheckcastArrayCopyCallNode.checkcastArraycopy(Object, int, Object, int, int, Word, Object, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:96) [bci: 176]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64
=== Inputs ===
object: a28 
=== Succesors ===
next: i466 
=== Usages ===
v551 
=== Predecessor ===
j455 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a28 #next: i466  <|@  <|@
f <@~|@floating>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j455 
index: - 
=== Succesors ===
=== Usages ===
i466 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j455 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j460 
index: - 
=== Succesors ===
=== Usages ===
i466 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j460 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j427 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.getSuperCheckOffset(HotSpotArraycopySnippets.java:56) [bci: 13]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:91) [bci: 139]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i445 
=== Succesors ===
=== Usages ===
i466 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i466 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}
descriptorName: ObjectCheckcastArraycopy
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.CheckcastArrayCopyCallNode.checkcastArraycopy(Object, int, Object, int, int, Word, Object, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:96) [bci: 176]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i32
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v550 v551 j494 j427 v504 
=== Succesors ===
next: v434 
=== Usages ===
v428 i435 
=== Predecessor ===
j460 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v550 v551 j494 j427 v504 #next: v434  <|@  <|@
f <@~|@floating>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:97) [bci: 186]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i466 
y: i30 
=== Succesors ===
=== Usages ===
v434 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i466 y: i30  <|@  <|@
f <@*|@fixed>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:97) [bci: 197]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v428 
=== Succesors ===
trueSuccessor: v433 
falseSuccessor: v429 
=== Usages ===
=== Predecessor ===
i466 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v428 #trueSuccessor: v433 #falseSuccessor: v429  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:107) [bci: 227]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v432 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v432  <|@  <|@
f <@*|@fixed>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:107) [bci: 227]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
v433 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:102) [bci: 200]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v439 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v439  <|@  <|@
f <@~|@floating>@ <|@
tid i435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:102) [bci: 203]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i32
=== Inputs ===
value: i466 
=== Succesors ===
=== Usages ===
v446 v446 i438 
=== Predecessor ===
- >@ <|@
instruction <@Not|@jdk.graal.compiler.nodes.calc.NotNode>@ value: i466  <|@  <|@
f <@~|@floating>@ <|@
tid i438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:103) [bci: 223]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i32
=== Inputs ===
x: i46 
y: i435 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i46 y: i435  <|@  <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:103) [bci: 224]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
referencedType: [null]
returnStamp: void
signature: [UnresolvedJavaType<Ljava/lang/Object;>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/Object;>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)>
=== Inputs ===
arguments: a1 i435 a28 i435 i438 
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i435 a28 i435 i438  <|@  <|@
tid ?170 <|@
d <@d|@=== Debug Properties ===
bci: 35
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Arrays.copyOf(Object[], int, Class)>
localsSize: 4
locksSize: 0
sourceFile: Arrays.java
sourceLine: 3515
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?47 
values: - - - a28 
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?47 values: - - - a28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
bci: -5
identity: ANY_LOCATION
inlineControl: BytecodesOnly
isInOOMETry: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:103) [bci: 224]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
polymorphic: false
stamp: void
targetMethod: Direct#System.arraycopy
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v446 
stateDuring: ?170 
=== Succesors ===
next: v440 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v446 stateDuring: ?170 #next: v440  <|@  <|@
f <@*|@fixed>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:107) [bci: 227]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
v439 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:107) [bci: 227]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v430 v432 v440 v441 
=== Succesors ===
next: v11 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v430 v432 v440 v441 #next: v11  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 9]
stamp: void
=== Inputs ===
memoryMap: - 
result: a28 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a28  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 21]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v555 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v555  <|@  <|@
f <@*|@fixed>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 91
mayConvertToGuard: true
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 3]
reason: ClassCastException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6632e17a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = LEA address: [v7|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = AND x: v8|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = ADD (x: v9|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA address: [v9|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + v13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|QWORD] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v1|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v49|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v49|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOV input: [v48|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVE input: v49|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v51|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v52|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = UNCOMPRESSPOINTER (input: v51|DWORD, ~baseRegister: v56|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV input: [v55|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOVSXD input: [v57|QWORD + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v59|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v60|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v52|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: v57|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v61|DWORD, y: v61|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v18|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV input: [v17|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOV input: [v19|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV input: [v20|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v21|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV input: [v21|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v23|DWORD = MOV input: [v22|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = AND x: v23|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = SHL (x: v5|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SAR x: v23|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = AND x: v27|DWORD y: 255 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = ADD (x: v26|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 7] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = COMPRESSPOINTER (input: v22|QWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD + 8], y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v29|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|QWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = SUB (x: v32|QWORD, ~y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v39|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v32|QWORD, y: v40|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + v40|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|QWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOV input: [v44|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = UNCOMPRESSPOINTER (input: v45|DWORD, ~baseRegister: v47|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|QWORD, y: [v46|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v11|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v6|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = NOT value: v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = SUB (x: v49|DWORD, ~y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - v48|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + v29|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA address: [v29|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v38|QWORD + v24|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -99441 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-41753|0xffffffffffff5ce7]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23331 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-39705|0xffffffffffff64e7]] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-40729|0xffffffffffff60e7]] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: v48|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction DEOPT info [bci:24, 6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101489 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: aload_0       
     3: invokevirtual #18         // java.lang.Object.getClass:()java.lang.Class
     6: invokestatic  #76         // copyOf:(java.lang.Object[], int, java.lang.Class)java.lang.Object[]
     9: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v495 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v495  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a java.lang.Object[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v446 v548 ?29 v517 j455 j467 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 i46 v274 v376 ?29 v45 v99 j303 a240 a350 v292 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Arrays.copyOf(Object[], int)>
localsSize: 2
locksSize: 0
sourceFile: Arrays.java
sourceLine: 3482
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v555 v509 v514 a240 a350 v396 v388 i500 v495 v516 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
result [v0|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v495 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-13067|0xffffffffffffccf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHub(HotSpotReplacementsUtil.java:722) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:82) [bci: 39]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v548 
lastLocationAccess: - 
=== Succesors ===
next: i496 
=== Usages ===
v472 v202 v492 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v548 lastLocationAccess: - #next: i496  <|@  <|@
f <@~|@floating>@ <|@
tid v517 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i496 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i496 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 30]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v517 
lastLocationAccess: - 
=== Succesors ===
next: v16 
=== Usages ===
v45 i46 v98 
=== Predecessor ===
v495 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v517 lastLocationAccess: - #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid v473 <|@
result meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:84) [bci: 77]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v474 v492 v273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3512) [bci: 3]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v495 
y: v473 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v495 y: v473  <|@  <|@
f <@~|@floating>@ <|@
tid j199 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3512) [bci: 3]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j346 j236 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 26]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 v428 v493 v292 v378 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j131 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v275 v377 v186 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j254 <|@
result long[2048|0x800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v220 v328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j217 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v270 v372 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3512) [bci: 3]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a240 v141 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j303 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
j304 j209 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid j210 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j211 j309 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3512) [bci: 3]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
profileData: PROFILED designatedSuccessorProbability: 0.9291083219275948
stamp: void
=== Inputs ===
condition: v492 
=== Succesors ===
trueSuccessor: v15 
falseSuccessor: v14 
=== Usages ===
=== Predecessor ===
i496 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v492 #trueSuccessor: v15 #falseSuccessor: v14  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6632e17a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v285 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v285  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: j205 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j205 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j267 
=== Usages ===
v522 v523 
=== Predecessor ===
v285 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j267  <|@  <|@
f <@~|@floating>@ <|@
tid v522 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j205 
index: - 
=== Succesors ===
=== Usages ===
j267 v269 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j205 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j267 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v522 
lastLocationAccess: - 
=== Succesors ===
next: j268 
=== Usages ===
j212 v524 v525 v526 a239 v527 v531 v528 v529 v530 
=== Predecessor ===
j205 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v522 lastLocationAccess: - #next: j268  <|@  <|@
f <@~|@floating>@ <|@
tid v523 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j205 
index: - 
=== Succesors ===
=== Usages ===
j268 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j205 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j268 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v523 
lastLocationAccess: - 
=== Succesors ===
next: v216 
=== Usages ===
v213 
=== Predecessor ===
j267 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v523 lastLocationAccess: - #next: v216  <|@  <|@
f <@~|@floating>@ <|@
tid i204 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j209 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j209 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 7]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64 [0 - 17179869180] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00
=== Inputs ===
x: j303 
y: i204 
=== Succesors ===
=== Usages ===
j250 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j303 y: i204  <|@  <|@
f <@~|@floating>@ <|@
tid j249 <|@
result long[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j250 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j250 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64 [23 - 17179869203] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx11
=== Inputs ===
x: j209 
y: j249 
=== Succesors ===
=== Usages ===
j211 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j209 y: j249  <|@  <|@
f <@~|@floating>@ <|@
tid j211 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64 [0 - 17179869200] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j250 
y: j210 
=== Succesors ===
=== Usages ===
j212 v228 j253 v528 v529 v530 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j250 y: j210  <|@  <|@
f <@~|@floating>@ <|@
tid j212 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64
=== Inputs ===
x: j211 
y: j267 
=== Succesors ===
=== Usages ===
v213 v269 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j211 y: j267  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j268 
y: j212 
=== Succesors ===
=== Usages ===
v216 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j268 y: j212  <|@  <|@
f <@*|@fixed>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v213 
=== Succesors ===
trueSuccessor: v215 
falseSuccessor: v214 
=== Usages ===
=== Predecessor ===
j268 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v213 #trueSuccessor: v215 #falseSuccessor: v214  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = LEA address: [v7|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = AND x: v8|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = ADD (x: v9|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a240 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a240 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v115 i2 
=== Succesors ===
next: v509 
=== Usages ===
v509 a28 
=== Predecessor ===
v215 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v115 i2 #next: v509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-72049|0xfffffffffffee68f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a240 
=== Succesors ===
next: v505 
=== Usages ===
=== Predecessor ===
a240 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a240 #next: v505  <|@  <|@
f <@*|@fixed>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
v509 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v11|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v269 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v269  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v522 
lastLocationAccess: - 
value: j212 
stateAfter: - 
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v522 lastLocationAccess: - value: j212 stateAfter: - #next: v257  <|@  <|@
f <@~|@floating>@ <|@
tid v528 <|@
result [v9|QWORD + v6|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j211 
index: j267 
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j211 index: j267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
address: v528 
=== Succesors ===
next: v260 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v528 #next: v260  <|@  <|@
f <@~|@floating>@ <|@
tid v529 <|@
result [v9|QWORD + v6|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j211 
index: j267 
=== Succesors ===
=== Usages ===
v260 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j211 index: j267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
address: v529 
=== Succesors ===
next: v263 
=== Usages ===
=== Predecessor ===
v257 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v529 #next: v263  <|@  <|@
f <@~|@floating>@ <|@
tid v530 <|@
result [v9|QWORD + v6|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j211 
index: j267 
=== Succesors ===
=== Usages ===
v263 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j211 index: j267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
address: v530 
=== Succesors ===
next: v270 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v530 #next: v270  <|@  <|@
f <@~|@floating>@ <|@
tid v524 <|@
result [v6|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j267 
index: - 
=== Succesors ===
=== Usages ===
v270 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j267 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v524 
lastLocationAccess: - 
value: j217 
stateAfter: - 
=== Succesors ===
next: v273 
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v524 lastLocationAccess: - value: j217 stateAfter: - #next: v273  <|@  <|@
f <@~|@floating>@ <|@
tid v531 <|@
result [v6|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j267 
index: - 
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j267 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v531 
lastLocationAccess: - 
value: v473 
stateAfter: - 
=== Succesors ===
next: v274 
=== Usages ===
=== Predecessor ===
v270 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v531 lastLocationAccess: - value: v473 stateAfter: - #next: v274  <|@  <|@
f <@~|@floating>@ <|@
tid v525 <|@
result [v6|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j267 
index: - 
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j267 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v525 
lastLocationAccess: - 
value: i2 
stateAfter: - 
=== Succesors ===
next: v223 
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v525 lastLocationAccess: - value: i2 stateAfter: - #next: v223  <|@  <|@
f <@~|@floating>@ <|@
tid j252 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j253 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j253 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64 [-16 - 17179869184] bits:x...x000
=== Inputs ===
x: j211 
y: j252 
=== Succesors ===
=== Usages ===
v220 v224 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j211 y: j252  <|@  <|@
f <@~|@floating>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j253 
y: j254 
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j253 y: j254  <|@  <|@
f <@*|@fixed>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v220 
=== Succesors ===
trueSuccessor: v222 
falseSuccessor: v221 
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v220 #trueSuccessor: v222 #falseSuccessor: v221  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA address: [v9|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v225 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid j251 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:175) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j227 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
v222 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j227 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v226 
values: j251 j236 
=== Succesors ===
=== Usages ===
v228 v526 j236 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v226 values: j251 j236  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 58
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v225 
=== Succesors ===
next: v234 
=== Usages ===
j227 v233 v237 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v225 #next: v234  <|@  <|@
f <@~|@floating>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j227 
y: j211 
=== Succesors ===
=== Usages ===
v234 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j227 y: j211  <|@  <|@
f <@*|@fixed>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v228 
=== Succesors ===
trueSuccessor: v229 
falseSuccessor: v233 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v228 #trueSuccessor: v229 #falseSuccessor: v233  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v275 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v275  <|@  <|@
f <@~|@floating>@ <|@
tid v526 <|@
result [v6|QWORD + v13|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j267 
index: j227 
=== Succesors ===
=== Usages ===
v275 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j267 index: j227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v526 
lastLocationAccess: - 
value: j131 
stateAfter: - 
=== Succesors ===
next: v237 
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v526 lastLocationAccess: - value: j131 stateAfter: - #next: v237  <|@  <|@
f <@~|@floating>@ <|@
tid j236 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64
=== Inputs ===
x: j227 
y: j199 
=== Succesors ===
=== Usages ===
j227 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j227 y: j199  <|@  <|@
f <@*|@fixed>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
loopBegin: v226 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v275 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v226  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + v13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|QWORD] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v226 
=== Succesors ===
next: v232 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v226 #next: v232  <|@  <|@
f <@*|@fixed>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
v233 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v224 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v224  <|@  <|@
f <@~|@floating>@ <|@
tid v527 <|@
result [v6|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j267 
index: - 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j267 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v527 
lastLocationAccess: - 
length: j253 
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v221 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v527 lastLocationAccess: - length: j253 #next: v230  <|@  <|@
f <@*|@fixed>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
v224 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v6|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v230 v232 
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v230 v232 #next: v238  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a239 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a239 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j267 
=== Succesors ===
next: v25 
=== Usages ===
a28 
=== Predecessor ===
v238 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j267 #next: v25  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
a239 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 13]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: j497 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j497  <|@  <|@
f <@~|@floating>@ <|@
tid v202 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3512) [bci: 3]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v495 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v495  <|@  <|@
f <@~|@floating>@ <|@
tid v519 <|@
result [v17|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
stamp: void*
stride: S1
=== Inputs ===
base: v202 
index: - 
=== Succesors ===
=== Usages ===
j497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v202 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j497 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Klass::_java_mirror:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 3]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v519 
lastLocationAccess: - 
=== Succesors ===
next: a498 
=== Usages ===
v520 
=== Predecessor ===
v14 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v519 lastLocationAccess: - #next: a498  <|@  <|@
f <@~|@floating>@ <|@
tid v520 <|@
result [v19|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j497 
index: - 
=== Succesors ===
=== Usages ===
a498 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j497 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a498 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
accessStamp: a!# java.lang.Class
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: OopHandle contents:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 3]
stamp: a!# java.lang.Class
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v520 
lastLocationAccess: - 
=== Succesors ===
next: a499 
=== Usages ===
v518 
=== Predecessor ===
j497 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v520 lastLocationAccess: - #next: a499  <|@  <|@
f <@~|@floating>@ <|@
tid v518 <|@
result [v20|QWORD[.] + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: a498 
index: - 
=== Succesors ===
=== Usages ===
a499 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a498 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a499 <|@
result v21|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.Class
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Class.componentType
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Class.getComponentType(Class.java:1313) [bci: 8]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 14]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: n# java.lang.Class
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v518 
lastLocationAccess: - 
=== Succesors ===
next: v516 
=== Usages ===
v554 v507 v542 
=== Predecessor ===
a498 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v518 lastLocationAccess: - #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid v554 <|@
result [v21|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a499 
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a499  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?3 
object: v554 
=== Succesors ===
next: v406 
=== Usages ===
=== Predecessor ===
a499 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: v554 #next: v406  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid a506 <|@
result NarrowOop[Class:void] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.java.DynamicNewArrayNode.throwsIllegalArgumentException(DynamicNewArrayNode.java:116) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:240) [bci: 58] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: Class:void
stableDimension: 0
stamp: n!# java.lang.Class
stampKind: n java.lang.Object
value: NarrowOop[Class:void]
=== Inputs ===
=== Succesors ===
=== Usages ===
v507 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.nodes.java.DynamicNewArrayNode.throwsIllegalArgumentException(DynamicNewArrayNode.java:116) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:240) [bci: 58] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a499 
y: a506 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a499 y: a506  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:240) [bci: 64] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v507 
=== Succesors ===
trueSuccessor: v389 
falseSuccessor: v390 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v507 #trueSuccessor: v389 #falseSuccessor: v390  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v18|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV input: [v17|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOV input: [v19|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV input: [v20|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v21|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:240) [bci: 64] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v388 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v388  <|@  <|@
f <@*|@fixed>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:240) [bci: 64] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
reason: RuntimeConstraint
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -99441 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:245) [bci: 76] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v368  <|@  <|@
f <@~|@floating>@ <|@
tid v542 <|@
result [v21|DWORD[_] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a499 
=== Succesors ===
=== Usages ===
v368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a499  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v368 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Class._array_klass:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadKlassFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadKlassFromObject(HotSpotReplacementsUtil.java:767) [bci: 28]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:245) [bci: 86] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: Klass*
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v542 
lastLocationAccess: - 
=== Succesors ===
next: i500 
=== Usages ===
a350 v544 v373 
=== Predecessor ===
v390 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v542 lastLocationAccess: - #next: i500  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
result [v22|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: v368 
index: - 
=== Succesors ===
=== Usages ===
i500 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v368 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i500 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-100465|0xfffffffffffe778f]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Klass::_layout_helper:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readLayoutHelper(KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:256) [bci: 157] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v544 
lastLocationAccess: - 
=== Succesors ===
next: v399 
=== Usages ===
i294 i298 
=== Predecessor ===
v368 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v544 lastLocationAccess: - #next: v399  <|@  <|@
f <@~|@floating>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:251) [bci: 124] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i30 
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i30  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:251) [bci: 135] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v292 
=== Succesors ===
trueSuccessor: v397 
falseSuccessor: v398 
=== Usages ===
=== Predecessor ===
i500 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v292 #trueSuccessor: v397 #falseSuccessor: v398  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV input: [v21|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v23|DWORD = MOV input: [v22|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:251) [bci: 135] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v396 
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v396  <|@  <|@
f <@*|@fixed>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:251) [bci: 135] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
reason: RuntimeConstraint
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v397 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101489 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:255) [bci: 147] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: j300 
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j300  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j300 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j369 
=== Usages ===
v532 v533 
=== Predecessor ===
v398 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j369  <|@  <|@
f <@~|@floating>@ <|@
tid v532 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j300 
index: - 
=== Succesors ===
=== Usages ===
j369 v371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j300 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j369 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v532 
lastLocationAccess: - 
=== Succesors ===
next: j370 
=== Usages ===
j310 v534 v535 v536 v537 v538 a349 v543 v539 v540 v541 
=== Predecessor ===
j300 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v532 lastLocationAccess: - #next: j370  <|@  <|@
f <@~|@floating>@ <|@
tid v533 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j300 
index: - 
=== Succesors ===
=== Usages ===
j370 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j300 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j370 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v533 
lastLocationAccess: - 
=== Succesors ===
next: v314 
=== Usages ===
v311 
=== Predecessor ===
j369 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v533 lastLocationAccess: - #next: v314  <|@  <|@
f <@~|@floating>@ <|@
tid i297 <|@
result int[63|0x3f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.layoutHelperLog2ElementSizeMask(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:275) [bci: 219] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: 63
stableDimension: 0
stamp: i32 [63]
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i298 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i298 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:275) [bci: 222] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i32 [0 - 63] bits:0...0xxxxxx
=== Inputs ===
x: i500 
y: i297 
=== Succesors ===
=== Usages ===
j304 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i500 y: i297  <|@  <|@
f <@~|@floating>@ <|@
tid j304 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 7]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64
=== Inputs ===
x: j303 
y: i298 
=== Succesors ===
=== Usages ===
j306 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j303 y: i298  <|@  <|@
f <@~|@floating>@ <|@
tid i293 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.layoutHelperHeaderSizeShift(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:274) [bci: 194] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: 16
stableDimension: 0
stamp: i32 [16]
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i294 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i294 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:274) [bci: 197] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i32 [-32768 - 32767]
=== Inputs ===
x: i500 
y: i293 
=== Succesors ===
=== Usages ===
i296 
=== Predecessor ===
- >@ <|@
instruction <@>>|@jdk.graal.compiler.nodes.calc.RightShiftNode>@ x: i500 y: i293  <|@  <|@
f <@~|@floating>@ <|@
tid i295 <|@
result int[255|0xff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.layoutHelperHeaderSizeMask(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:274) [bci: 201] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: 255
stableDimension: 0
stamp: i32 [255]
stampKind: i32
value: int[255|0xff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i296 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i296 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:274) [bci: 204] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
x: i294 
y: i295 
=== Succesors ===
=== Usages ===
j305 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i294 y: i295  <|@  <|@
f <@~|@floating>@ <|@
tid j305 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
resultBits: 64
stamp: i64 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i296 
=== Succesors ===
=== Usages ===
j306 v536 j322 j326 v357 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i296  <|@  <|@
f <@~|@floating>@ <|@
tid j306 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64
=== Inputs ===
x: j304 
y: j305 
=== Succesors ===
=== Usages ===
j308 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j304 y: j305  <|@  <|@
f <@~|@floating>@ <|@
tid j307 <|@
result long[7|0x7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 14]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: 7
stableDimension: 0
stamp: i64 [7]
stampKind: i64
value: long[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
j308 v357 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j308 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64
=== Inputs ===
x: j306 
y: j307 
=== Succesors ===
=== Usages ===
j309 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j306 y: j307  <|@  <|@
f <@~|@floating>@ <|@
tid j309 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64 [-9223372036854775808 - 9223372036854775800] bits:x...x000
=== Inputs ===
x: j308 
y: j210 
=== Succesors ===
=== Usages ===
j310 j327 v338 v539 v540 v541 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j308 y: j210  <|@  <|@
f <@~|@floating>@ <|@
tid j310 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64
=== Inputs ===
x: j309 
y: j369 
=== Succesors ===
=== Usages ===
v311 v371 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j309 y: j369  <|@  <|@
f <@~|@floating>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j370 
y: j310 
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j370 y: j310  <|@  <|@
f <@*|@fixed>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v311 
=== Succesors ===
trueSuccessor: v313 
falseSuccessor: v312 
=== Usages ===
=== Predecessor ===
j370 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v311 #trueSuccessor: v313 #falseSuccessor: v312  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = AND x: v23|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = SHL (x: v5|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SAR x: v23|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = AND x: v27|DWORD y: 255 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = ADD (x: v26|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 7] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a350 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a350  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a350 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v368 i2 
=== Succesors ===
next: v514 
=== Usages ===
v514 a365 
=== Predecessor ===
v313 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v368 i2 #next: v514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-102513|0xfffffffffffe6f8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a350 
=== Succesors ===
next: v354 
=== Usages ===
=== Predecessor ===
a350 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a350 #next: v354  <|@  <|@
f <@*|@fixed>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
v514 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v371 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v371  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v532 
lastLocationAccess: - 
value: j310 
stateAfter: - 
=== Succesors ===
next: v360 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v532 lastLocationAccess: - value: j310 stateAfter: - #next: v360  <|@  <|@
f <@~|@floating>@ <|@
tid v539 <|@
result [v32|QWORD + v24|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j309 
index: j369 
=== Succesors ===
=== Usages ===
v360 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j309 index: j369  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
address: v539 
=== Succesors ===
next: v362 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v539 #next: v362  <|@  <|@
f <@~|@floating>@ <|@
tid v540 <|@
result [v32|QWORD + v24|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j309 
index: j369 
=== Succesors ===
=== Usages ===
v362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j309 index: j369  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
address: v540 
=== Succesors ===
next: v364 
=== Usages ===
=== Predecessor ===
v360 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v540 #next: v364  <|@  <|@
f <@~|@floating>@ <|@
tid v541 <|@
result [v32|QWORD + v24|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j309 
index: j369 
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j309 index: j369  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
address: v541 
=== Succesors ===
next: v372 
=== Usages ===
=== Predecessor ===
v362 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v541 #next: v372  <|@  <|@
f <@~|@floating>@ <|@
tid v534 <|@
result [v24|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j369 
index: - 
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j369 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v534 
lastLocationAccess: - 
value: j217 
stateAfter: - 
=== Succesors ===
next: v375 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v534 lastLocationAccess: - value: j217 stateAfter: - #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid v543 <|@
result [v24|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j369 
index: - 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j369 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v373 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
op: Compress
stamp: Klass*(compressed base: 140154094223360 shift: 0)
=== Inputs ===
value: v368 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v368  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v543 
lastLocationAccess: - 
value: v373 
stateAfter: - 
=== Succesors ===
next: v376 
=== Usages ===
=== Predecessor ===
v372 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v543 lastLocationAccess: - value: v373 stateAfter: - #next: v376  <|@  <|@
f <@~|@floating>@ <|@
tid v535 <|@
result [v24|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j369 
index: - 
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j369 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v535 
lastLocationAccess: - 
value: i2 
stateAfter: - 
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v535 lastLocationAccess: - value: i2 stateAfter: - #next: v320  <|@  <|@
f <@~|@floating>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:176) [bci: 40]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
x: j305 
y: j307 
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j305 y: j307  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:176) [bci: 48]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v357 
=== Succesors ===
trueSuccessor: v319 
falseSuccessor: v318 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v357 #trueSuccessor: v319 #falseSuccessor: v318  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = COMPRESSPOINTER (input: v22|QWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD + 8], y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v29|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:180) [bci: 72]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
v320 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v323  <|@  <|@
f <@*|@fixed>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:180) [bci: 72]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
v319 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|QWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:177) [bci: 51]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v378 
=== Usages ===
=== Predecessor ===
v320 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v378  <|@  <|@
f <@~|@floating>@ <|@
tid v536 <|@
result [v24|QWORD + v29|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j369 
index: j305 
=== Succesors ===
=== Usages ===
v378 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j369 index: j305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:177) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v536 
lastLocationAccess: - 
value: i30 
stateAfter: - 
=== Succesors ===
next: v325 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v536 lastLocationAccess: - value: i30 stateAfter: - #next: v325  <|@  <|@
f <@~|@floating>@ <|@
tid j358 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:178) [bci: 65]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: 4
stableDimension: 0
stamp: i64 [4]
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j322 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j322 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:178) [bci: 65]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64 [4 - 259] bits:0...0xxxxxxxxx
=== Inputs ===
x: j305 
y: j358 
=== Succesors ===
=== Usages ===
j326 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j305 y: j358  <|@  <|@
f <@*|@fixed>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:180) [bci: 72]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
v378 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + v29|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA address: [v29|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j326 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:180) [bci: 72]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64 [0 - 259] bits:0...0xxxxxxxxx
valueDescription: i64
=== Inputs ===
merge: v324 
values: j305 j322 
=== Succesors ===
=== Usages ===
j327 v537 j337 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v324 values: j305 j322  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:180) [bci: 72]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v323 v325 
=== Succesors ===
next: v331 
=== Usages ===
j326 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v323 v325 #next: v331  <|@  <|@
f <@~|@floating>@ <|@
tid j327 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64
=== Inputs ===
x: j309 
y: j326 
=== Succesors ===
=== Usages ===
v328 v334 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: j309 y: j326  <|@  <|@
f <@~|@floating>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j327 
y: j254 
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j327 y: j254  <|@  <|@
f <@*|@fixed>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v328 
=== Succesors ===
trueSuccessor: v330 
falseSuccessor: v329 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v328 #trueSuccessor: v330 #falseSuccessor: v329  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = SUB (x: v32|QWORD, ~y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v39|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v335 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v335  <|@  <|@
f <@*|@fixed>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
v330 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j337 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v336 
values: j326 j346 
=== Succesors ===
=== Usages ===
v338 v538 j346 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v336 values: j326 j346  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 93
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v335 
=== Succesors ===
next: v344 
=== Usages ===
j337 v343 v347 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v335 #next: v344  <|@  <|@
f <@~|@floating>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j337 
y: j309 
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j337 y: j309  <|@  <|@
f <@*|@fixed>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v338 
=== Succesors ===
trueSuccessor: v339 
falseSuccessor: v343 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v338 #trueSuccessor: v339 #falseSuccessor: v343  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v32|QWORD, y: v40|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v377 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v377  <|@  <|@
f <@~|@floating>@ <|@
tid v538 <|@
result [v24|QWORD + v40|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j369 
index: j337 
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j369 index: j337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v538 
lastLocationAccess: - 
value: j131 
stateAfter: - 
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v538 lastLocationAccess: - value: j131 stateAfter: - #next: v347  <|@  <|@
f <@~|@floating>@ <|@
tid j346 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64
=== Inputs ===
x: j337 
y: j199 
=== Succesors ===
=== Usages ===
j337 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j337 y: j199  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
loopBegin: v336 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v336  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + v40|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|QWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v336 
=== Succesors ===
next: v342 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v336 #next: v342  <|@  <|@
f <@*|@fixed>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
v343 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v334  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
result [v38|QWORD + v24|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j326 
index: j369 
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j326 index: j369  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v537 
lastLocationAccess: - 
length: j327 
=== Succesors ===
next: v340 
=== Usages ===
=== Predecessor ===
v329 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v537 lastLocationAccess: - length: j327 #next: v340  <|@  <|@
f <@*|@fixed>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
v334 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v38|QWORD + v24|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v340 v342 
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v340 v342 #next: v348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a349 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a349  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a349 <|@
result v43|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j369 
=== Succesors ===
next: v352 
=== Usages ===
a365 
=== Predecessor ===
v348 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j369 #next: v352  <|@  <|@
f <@*|@fixed>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
a349 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a365 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v353 
values: a349 a350 
=== Succesors ===
=== Usages ===
v545 a28 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v353 values: a349 a350  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v352 v354 
=== Succesors ===
next: v501 
=== Usages ===
a365 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v352 v354 #next: v501  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
result [v44|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a365 
index: - 
=== Succesors ===
=== Usages ===
v501 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a365 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v501 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 40] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(KlassPointer, Object, int, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 21]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v545 
lastLocationAccess: - 
=== Succesors ===
next: v502 
=== Usages ===
v410 
=== Predecessor ===
v353 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v545 lastLocationAccess: - #next: v502  <|@  <|@
f <@~|@floating>@ <|@
tid v410 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 40] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(KlassPointer, Object, int, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 21]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v501 
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v501  <|@  <|@
f <@~|@floating>@ <|@
tid v521 <|@
result [v46|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: v410 
index: - 
=== Succesors ===
=== Usages ===
v502 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v410 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrimarySupers:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:157) [bci: 54] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(KlassPointer, Object, int, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 21]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: Klass*
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v521 
lastLocationAccess: - 
=== Succesors ===
next: v113 
=== Usages ===
v141 
=== Predecessor ===
v501 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v521 lastLocationAccess: - #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:157) [bci: 58] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(KlassPointer, Object, int, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 21]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v502 
y: v115 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v502 y: v115  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 21]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v141 
=== Succesors ===
trueSuccessor: v110 
falseSuccessor: v112 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v141 #trueSuccessor: v110 #falseSuccessor: v112  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOV input: [v44|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = UNCOMPRESSPOINTER (input: v45|DWORD, ~baseRegister: v47|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|QWORD, y: [v46|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 21]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v27 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v27  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
v110 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a28 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: a! java.lang.Object[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v26 
values: a239 a365 a240 
=== Succesors ===
=== Usages ===
?29 j460 j469 ?170 v11 v446 v549 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v26 values: a239 a365 a240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v25 v27 v505 
=== Succesors ===
next: v158 
=== Usages ===
a28 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v25 v27 v505 #next: v158  <|@  <|@
f <@~|@floating>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOf(Arrays.java:3516) [bci: 32]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i496 
=== Succesors ===
=== Usages ===
i46 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i496  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOf(Arrays.java:3516) [bci: 32]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i32
=== Inputs ===
condition: v45 
trueValue: i2 
falseValue: i496 
=== Succesors ===
=== Usages ===
i438 v59 v98 v99 j494 v493 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v45 trueValue: i2 falseValue: i496  <|@  <|@
f <@~|@floating>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 89]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i46 
y: i30 
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i46 y: i30  <|@  <|@
tid ?47 <|@
d <@d|@=== Debug Properties ===
bci: 6
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Arrays.copyOf(Object[], int)>
localsSize: 2
locksSize: 0
sourceFile: Arrays.java
sourceLine: 3482
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?29 ?170 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v59 
=== Succesors ===
trueSuccessor: v156 
falseSuccessor: v157 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v59 #trueSuccessor: v156 #falseSuccessor: v157  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v1|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid i183 <|@
result int[-39705|0xffffffffffff64e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: -39705
stableDimension: 0
stamp: i32 [-39705]
stampKind: i32
value: int[-39705|0xffffffffffff64e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i184 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
v156 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-39705|0xffffffffffff64e7]] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:409) [bci: 120]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v162  <|@  <|@
f <@~|@floating>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 140]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i496 
y: i46 
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i496 y: i46  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v98 
=== Succesors ===
trueSuccessor: v160 
falseSuccessor: v161 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v98 #trueSuccessor: v160 #falseSuccessor: v161  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v49|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v187 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v187  <|@  <|@
f <@~|@floating>@ <|@
tid i188 <|@
result int[-40729|0xffffffffffff60e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: -40729
stableDimension: 0
stamp: i32 [-40729]
stampKind: i32
value: int[-40729|0xffffffffffff60e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i184 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
v160 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-40729|0xffffffffffff60e7]] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 171]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v166 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v166  <|@  <|@
f <@~|@floating>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i46 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i2 y: i46  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v99 
=== Succesors ===
trueSuccessor: v164 
falseSuccessor: v165 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v99 #trueSuccessor: v164 #falseSuccessor: v165  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v49|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v189  <|@  <|@
f <@~|@floating>@ <|@
tid i190 <|@
result int[-41753|0xffffffffffff5ce7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
rawvalue: -41753
stableDimension: 0
stamp: i32 [-41753]
stampKind: i32
value: int[-41753|0xffffffffffff5ce7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i184 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
v164 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-41753|0xffffffffffff5ce7]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i184 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i32 [-41753 - -39705] bits:1...101xxxx0011100111
valueDescription: i32
=== Inputs ===
merge: v181 
values: i183 i188 i190 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v181 values: i183 i188 i190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v182 v187 v189 
=== Succesors ===
next: v186 
=== Usages ===
i184 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v182 v187 v189 #next: v186  <|@  <|@
tid ?29 <|@
d <@d|@=== Debug Properties ===
bci: 24
bytecode: astore_3
code: ResolvedJavaMethodBytecode<Arrays.copyOf(Object[], int, Class)>
localsSize: 4
locksSize: 0
sourceFile: Arrays.java
sourceLine: 3514
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?47 
values: a28 a1 i2 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?47 values: a28 a1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
stateBefore: ?29 
actionAndReason: i184 
speculation: j131 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?29 actionAndReason: i184 speculation: j131  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: v48|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction DEOPT info [bci:24, 6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:79) [bci: 5]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i46 
y: i30 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i46 y: i30  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:79) [bci: 16]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v493 
=== Succesors ===
trueSuccessor: v414 
falseSuccessor: v413 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v493 #trueSuccessor: v414 #falseSuccessor: v413  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:107) [bci: 227]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v430 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v430  <|@  <|@
f <@*|@fixed>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:107) [bci: 227]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
v414 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:80) [bci: 19]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v503 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v503  <|@  <|@
f <@~|@floating>@ <|@
tid v549 <|@
result [v48|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a28 
index: - 
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a28 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v503 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHub(HotSpotReplacementsUtil.java:722) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:83) [bci: 46]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v549 
lastLocationAccess: - 
=== Succesors ===
next: v418 
=== Usages ===
v454 v472 v474 
=== Predecessor ===
v413 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v549 lastLocationAccess: - #next: v418  <|@  <|@
f <@~|@floating>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:84) [bci: 58]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v495 
y: v503 
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v495 y: v503  <|@  <|@
f <@~|@floating>@ <|@
tid j494 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.CheckcastArrayCopyCallNode.checkcastArraycopy(Object, int, Object, int, int, Word, Object, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:96) [bci: 176]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i46 
=== Succesors ===
=== Usages ===
i466 v471 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i46  <|@  <|@
f <@*|@fixed>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:84) [bci: 64]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.6
stamp: void
=== Inputs ===
condition: v472 
=== Succesors ===
trueSuccessor: v416 
falseSuccessor: v417 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v472 #trueSuccessor: v416 #falseSuccessor: v417  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOV input: [v48|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVE input: v49|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:86) [bci: 91]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v419  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:86) [bci: 91]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
v416 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:84) [bci: 67]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v424 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v424  <|@  <|@
f <@~|@floating>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:84) [bci: 77]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v503 
y: v473 
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v503 y: v473  <|@  <|@
f <@*|@fixed>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:84) [bci: 88]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.6
stamp: void
=== Inputs ===
condition: v474 
=== Succesors ===
trueSuccessor: v423 
falseSuccessor: v422 
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v474 #trueSuccessor: v423 #falseSuccessor: v422  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v51|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:86) [bci: 91]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v421  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:86) [bci: 91]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
v423 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:86) [bci: 91]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v419 v421 
=== Succesors ===
next: j467 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v419 v421 #next: j467  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j467 <|@
result v53|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopyObjectKillsAny(ArrayCopyCallNode.java:247) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:88) [bci: 122]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64
=== Inputs ===
object: a1 
=== Succesors ===
next: j469 
=== Usages ===
v552 
=== Predecessor ===
v420 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a1 #next: j469  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j469 <|@
result v54|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopyObjectKillsAny(ArrayCopyCallNode.java:247) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:88) [bci: 122]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64
=== Inputs ===
object: a28 
=== Succesors ===
next: v471 
=== Usages ===
v553 
=== Predecessor ===
j467 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a28 #next: v471  <|@  <|@
f <@~|@floating>@ <|@
tid v552 <|@
result [v53|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j467 
index: - 
=== Succesors ===
=== Usages ===
v471 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j467 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v553 <|@
result [v54|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j469 
index: - 
=== Succesors ===
=== Usages ===
v471 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j469 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}
descriptorName: ObjectArraycopyKillAny
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopyObjectKillsAny(ArrayCopyCallNode.java:247) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:88) [bci: 122]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v552 v553 j494 
=== Succesors ===
next: v441 
=== Usages ===
=== Predecessor ===
j469 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v552 v553 j494 #next: v441  <|@  <|@
f <@*|@fixed>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:107) [bci: 227]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
v471 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v52|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:90) [bci: 128]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v504 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v504  <|@  <|@
f <@~|@floating>@ <|@
tid v454 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHub(HotSpotReplacementsUtil.java:722) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:83) [bci: 46]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v503 
=== Succesors ===
=== Usages ===
v546 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v503  <|@  <|@
f <@~|@floating>@ <|@
tid v546 <|@
result [v55|QWORD + 208] <|@
d <@d|@=== Debug Properties ===
displacement: 208
stamp: void*
stride: S1
=== Inputs ===
base: v454 
index: - 
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v454 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v504 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ObjArrayKlass::_element_klass:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.getDestElemClass(HotSpotArraycopySnippets.java:67) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:90) [bci: 131]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: Klass*
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v546 
lastLocationAccess: - 
=== Succesors ===
next: i445 
=== Usages ===
v547 i466 
=== Predecessor ===
v422 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v546 lastLocationAccess: - #next: i445  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
result [v57|QWORD + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: v504 
index: - 
=== Succesors ===
=== Usages ===
i445 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v504 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i445 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Klass::_super_check_offset:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.getSuperCheckOffset(HotSpotArraycopySnippets.java:56) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:91) [bci: 139]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v547 
lastLocationAccess: - 
=== Succesors ===
next: j455 
=== Usages ===
j427 
=== Predecessor ===
v504 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v547 lastLocationAccess: - #next: j455  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j455 <|@
result v59|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.CheckcastArrayCopyCallNode.checkcastArraycopy(Object, int, Object, int, int, Word, Object, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:96) [bci: 176]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64
=== Inputs ===
object: a1 
=== Succesors ===
next: j460 
=== Usages ===
v550 
=== Predecessor ===
i445 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a1 #next: j460  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j460 <|@
result v60|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.CheckcastArrayCopyCallNode.checkcastArraycopy(Object, int, Object, int, int, Word, Object, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:96) [bci: 176]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i64
=== Inputs ===
object: a28 
=== Succesors ===
next: i466 
=== Usages ===
v551 
=== Predecessor ===
j455 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a28 #next: i466  <|@  <|@
f <@~|@floating>@ <|@
tid v550 <|@
result [v59|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j455 
index: - 
=== Succesors ===
=== Usages ===
i466 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j455 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v551 <|@
result [v60|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j460 
index: - 
=== Succesors ===
=== Usages ===
i466 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j460 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j427 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.getSuperCheckOffset(HotSpotArraycopySnippets.java:56) [bci: 13]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:91) [bci: 139]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i445 
=== Succesors ===
=== Usages ===
i466 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i466 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}
descriptorName: ObjectCheckcastArraycopy
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.CheckcastArrayCopyCallNode.checkcastArraycopy(Object, int, Object, int, int, Word, Object, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:96) [bci: 176]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i32
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v550 v551 j494 j427 v504 
=== Succesors ===
next: v434 
=== Usages ===
v428 i435 
=== Predecessor ===
j460 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v550 v551 j494 j427 v504 #next: v434  <|@  <|@
f <@~|@floating>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:97) [bci: 186]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i466 
y: i30 
=== Succesors ===
=== Usages ===
v434 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i466 y: i30  <|@  <|@
f <@*|@fixed>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:97) [bci: 197]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v428 
=== Succesors ===
trueSuccessor: v433 
falseSuccessor: v429 
=== Usages ===
=== Predecessor ===
i466 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v428 #trueSuccessor: v433 #falseSuccessor: v429  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = UNCOMPRESSPOINTER (input: v51|DWORD, ~baseRegister: v56|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV input: [v55|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOVSXD input: [v57|QWORD + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v59|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v60|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v52|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: v57|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v61|DWORD, y: v61|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:107) [bci: 227]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v432 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v432  <|@  <|@
f <@*|@fixed>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:107) [bci: 227]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
v433 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:102) [bci: 200]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v439 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v439  <|@  <|@
f <@~|@floating>@ <|@
tid i435 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:102) [bci: 203]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i32
=== Inputs ===
value: i466 
=== Succesors ===
=== Usages ===
v446 v446 i438 
=== Predecessor ===
- >@ <|@
instruction <@Not|@jdk.graal.compiler.nodes.calc.NotNode>@ value: i466  <|@  <|@
f <@~|@floating>@ <|@
tid i438 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:103) [bci: 223]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: i32
=== Inputs ===
x: i46 
y: i435 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i46 y: i435  <|@  <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:103) [bci: 224]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
referencedType: [null]
returnStamp: void
signature: [UnresolvedJavaType<Ljava/lang/Object;>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/Object;>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)>
=== Inputs ===
arguments: a1 i435 a28 i435 i438 
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i435 a28 i435 i438  <|@  <|@
tid ?170 <|@
d <@d|@=== Debug Properties ===
bci: 35
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Arrays.copyOf(Object[], int, Class)>
localsSize: 4
locksSize: 0
sourceFile: Arrays.java
sourceLine: 3515
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?47 
values: - - - a28 
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?47 values: - - - a28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
bci: -5
identity: ANY_LOCATION
inlineControl: BytecodesOnly
isInOOMETry: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:103) [bci: 224]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
polymorphic: false
stamp: void
targetMethod: Direct#System.arraycopy
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v446 
stateDuring: ?170 
=== Succesors ===
next: v440 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v446 stateDuring: ?170 #next: v440  <|@  <|@
f <@*|@fixed>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:107) [bci: 227]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
v439 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = NOT value: v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = SUB (x: v49|DWORD, ~y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - v48|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:107) [bci: 227]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v430 v432 v440 v441 
=== Succesors ===
next: v11 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v430 v432 v440 v441 #next: v11  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 9]
stamp: void
=== Inputs ===
memoryMap: - 
result: a28 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a28  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 21]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v555 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v555  <|@  <|@
f <@*|@fixed>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 91
mayConvertToGuard: true
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 3]
reason: ClassCastException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23331 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6632e17a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = LEA address: [v7|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = AND x: v8|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = ADD (x: v9|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA address: [v9|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + v13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|QWORD] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v1|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v49|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v49|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOV input: [v48|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVE input: v49|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v51|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v52|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = UNCOMPRESSPOINTER (input: v51|DWORD, ~baseRegister: v56|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV input: [v55|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOVSXD input: [v57|QWORD + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v59|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v60|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v52|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: v57|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v61|DWORD, y: v61|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v18|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV input: [v17|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOV input: [v19|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV input: [v20|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v21|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV input: [v21|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v23|DWORD = MOV input: [v22|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = AND x: v23|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = SHL (x: v5|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SAR x: v23|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = AND x: v27|DWORD y: 255 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = ADD (x: v26|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 7] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = COMPRESSPOINTER (input: v22|QWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD + 8], y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v29|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|QWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = SUB (x: v32|QWORD, ~y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v39|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v32|QWORD, y: v40|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + v40|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|QWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOV input: [v44|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = UNCOMPRESSPOINTER (input: v45|DWORD, ~baseRegister: v47|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|QWORD, y: [v46|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v11|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v6|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = NOT value: v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = SUB (x: v49|DWORD, ~y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - v48|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + v29|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA address: [v29|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v38|QWORD + v24|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -99441 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-41753|0xffffffffffff5ce7]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23331 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-39705|0xffffffffffff64e7]] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-40729|0xffffffffffff60e7]] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: v48|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction DEOPT info [bci:24, 6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101489 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: aload_0       
     3: invokevirtual #18         // java.lang.Object.getClass:()java.lang.Class
     6: invokestatic  #76         // copyOf:(java.lang.Object[], int, java.lang.Class)java.lang.Object[]
     9: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6632e17a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = LEA address: [v7|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = AND x: v8|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = ADD (x: v9|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA address: [v9|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + v13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|QWORD] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v1|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v49|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v49|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOV input: [v48|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVE input: v49|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v51|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v52|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = UNCOMPRESSPOINTER (input: v51|DWORD, ~baseRegister: v56|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV input: [v55|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOVSXD input: [v57|QWORD + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v59|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v60|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v52|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: v57|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v61|DWORD, y: v61|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v18|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV input: [v17|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOV input: [v19|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV input: [v20|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v21|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV input: [v21|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v23|DWORD = MOV input: [v22|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = AND x: v23|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = SHL (x: v5|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SAR x: v23|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = AND x: v27|DWORD y: 255 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = ADD (x: v26|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 7] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = COMPRESSPOINTER (input: v22|QWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD + 8], y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v29|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|QWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = SUB (x: v32|QWORD, ~y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v39|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v32|QWORD, y: v40|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + v40|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|QWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOV input: [v44|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = UNCOMPRESSPOINTER (input: v45|DWORD, ~baseRegister: v47|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|QWORD, y: [v46|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v65|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v11|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v6|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = NOT value: v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = SUB (x: v49|DWORD, ~y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - v48|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + v29|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA address: [v29|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v38|QWORD + v24|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -99441 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-41753|0xffffffffffff5ce7]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23331 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-39705|0xffffffffffff64e7]] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-40729|0xffffffffffff60e7]] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: v48|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction DEOPT info [bci:24, 6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101489 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: aload_0       
     3: invokevirtual #18         // java.lang.Object.getClass:()java.lang.Class
     6: invokestatic  #76         // copyOf:(java.lang.Object[], int, java.lang.Class)java.lang.Object[]
     9: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6632e17a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = LEA address: [v7|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = AND x: v8|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = ADD (x: v9|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA address: [v9|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + v13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|QWORD] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v1|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v49|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v49|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOV input: [v48|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVE input: v49|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v51|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v52|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = UNCOMPRESSPOINTER (input: v51|DWORD, ~baseRegister: v56|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV input: [v55|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOVSXD input: [v57|QWORD + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v59|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v60|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v52|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: v57|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v61|DWORD, y: v61|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v18|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV input: [v17|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOV input: [v19|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV input: [v20|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v21|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV input: [v21|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v23|DWORD = MOV input: [v22|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = AND x: v23|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = SHL (x: v5|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SAR x: v23|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = AND x: v27|DWORD y: 255 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = ADD (x: v26|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 7] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = COMPRESSPOINTER (input: v22|QWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD + 8], y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v29|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|QWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = SUB (x: v32|QWORD, ~y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v39|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v32|QWORD, y: v40|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + v40|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|QWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOV input: [v44|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = UNCOMPRESSPOINTER (input: v45|DWORD, ~baseRegister: v47|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|QWORD, y: [v46|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v65|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v11|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v6|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = NOT value: v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = SUB (x: v49|DWORD, ~y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - v48|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + v29|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA address: [v29|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v38|QWORD + v24|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -99441 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-41753|0xffffffffffff5ce7]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23331 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-39705|0xffffffffffff64e7]] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-40729|0xffffffffffff60e7]] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: v48|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction DEOPT info [bci:24, 6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101489 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: aload_0       
     3: invokevirtual #18         // java.lang.Object.getClass:()java.lang.Class
     6: invokestatic  #76         // copyOf:(java.lang.Object[], int, java.lang.Class)java.lang.Object[]
     9: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6632e17a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = LEA address: [v7|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = AND x: v8|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = ADD (x: v9|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA address: [v9|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + v13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|QWORD] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v1|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v49|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v49|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOV input: [v48|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVE input: v49|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v51|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v52|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = UNCOMPRESSPOINTER (input: v51|DWORD, ~baseRegister: v56|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV input: [v55|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOVSXD input: [v57|QWORD + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v59|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v60|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v52|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: v57|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v61|DWORD, y: v61|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v18|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV input: [v17|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOV input: [v19|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV input: [v20|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v21|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV input: [v21|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v23|DWORD = MOV input: [v22|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = AND x: v23|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = SHL (x: v5|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SAR x: v23|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = AND x: v27|DWORD y: 255 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = ADD (x: v26|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 7] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = COMPRESSPOINTER (input: v22|QWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD + 8], y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v29|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|QWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = SUB (x: v32|QWORD, ~y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v39|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v32|QWORD, y: v40|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + v40|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|QWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOV input: [v44|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = UNCOMPRESSPOINTER (input: v45|DWORD, ~baseRegister: v47|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|QWORD, y: [v46|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v65|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v11|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v6|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = NOT value: v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = SUB (x: v49|DWORD, ~y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - v48|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + v29|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA address: [v29|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v38|QWORD + v24|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -99441 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-41753|0xffffffffffff5ce7]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23331 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-39705|0xffffffffffff64e7]] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-40729|0xffffffffffff60e7]] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: v48|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction DEOPT info [bci:24, 6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101489 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: aload_0       
     3: invokevirtual #18         // java.lang.Object.getClass:()java.lang.Class
     6: invokestatic  #76         // copyOf:(java.lang.Object[], int, java.lang.Class)java.lang.Object[]
     9: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6632e17a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = LEA address: [v7|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = AND x: v8|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = ADD (x: v9|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA address: [v9|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD + v13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|QWORD] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v1|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v49|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v49|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOV input: [v48|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVE input: v49|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v51|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v52|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = UNCOMPRESSPOINTER (input: v51|DWORD, ~baseRegister: v56|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV input: [v55|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOVSXD input: [v57|QWORD + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v59|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v60|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v52|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: v57|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v61|DWORD, y: v61|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v18|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV input: [v17|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOV input: [v19|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV input: [v20|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v21|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV input: [v21|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v23|DWORD = MOV input: [v22|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = AND x: v23|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = SHL (x: v5|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SAR x: v23|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = AND x: v27|DWORD y: 255 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = ADD (x: v26|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 7] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = COMPRESSPOINTER (input: v22|QWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD + 8], y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v29|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|QWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = SUB (x: v32|QWORD, ~y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v39|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v32|QWORD, y: v40|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + v40|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|QWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOV input: [v44|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = UNCOMPRESSPOINTER (input: v45|DWORD, ~baseRegister: v47|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|QWORD, y: [v46|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v65|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v11|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v6|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = NOT value: v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = SUB (x: v49|DWORD, ~y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - v48|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + v29|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA address: [v29|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v38|QWORD + v24|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -99441 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-41753|0xffffffffffff5ce7]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23331 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-39705|0xffffffffffff64e7]] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-40729|0xffffffffffff60e7]] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: v48|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction DEOPT info [bci:24, 6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101489 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: aload_0       
     3: invokevirtual #18         // java.lang.Object.getClass:()java.lang.Class
     6: invokestatic  #76         // copyOf:(java.lang.Object[], int, java.lang.Class)java.lang.Object[]
     9: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6632e17a slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   68  <|@ instruction v7|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   70  <|@ instruction v8|QWORD = LEA address: [v7|QWORD + 23] size: QWORD <|@ <|@
      nr   72  <|@ instruction v9|QWORD = AND x: v8|QWORD y: -8 size: QWORD <|@ <|@
      nr   74  <|@ instruction v10|QWORD = ADD (x: v9|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  112  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  114  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  116  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  120  <|@ instruction MOV (x: [v6|QWORD + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr  122  <|@ instruction v12|QWORD = LEA address: [v9|QWORD - 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction CMPCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  136  <|@ instruction [v13|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction MOV x: [v6|QWORD + v13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  166  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 8] size: QWORD <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [v14|QWORD] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction v16|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  194  <|@ instruction [v48|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction CMP (x: v3|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction v49|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v1|DWORD) condition: > <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction CMPBRANCH (x: v49|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction CMPBRANCH (x: v49|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction v51|DWORD = MOV input: [v48|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  266  <|@ instruction v52|QWORD = MOVE input: v49|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction CMPCONSTBRANCH x: v51|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction v53|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction v54|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  338  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  340  <|@ instruction rdx|QWORD = MOVE input: v52|QWORD moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  344  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction v56|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  396  <|@ instruction v55|QWORD = UNCOMPRESSPOINTER (input: v51|DWORD, ~baseRegister: v56|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  398  <|@ instruction v57|QWORD = MOV input: [v55|QWORD + 208] size: QWORD <|@ <|@
      nr  400  <|@ instruction v58|QWORD = MOVSXD input: [v57|QWORD + 20] size: QWORD <|@ <|@
      nr  402  <|@ instruction v59|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction v60|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rdi|QWORD = LEA address: [v59|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|QWORD = LEA address: [v60|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  410  <|@ instruction rdx|QWORD = MOVE input: v52|QWORD moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction rcx|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction r8|QWORD = MOVE input: v57|QWORD moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  418  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: v61|DWORD, y: v61|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction rax|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction v18|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  490  <|@ instruction v17|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v18|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  492  <|@ instruction v19|QWORD = MOV input: [v17|QWORD + 112] size: QWORD <|@ <|@
      nr  494  <|@ instruction v20|QWORD[.] = MOV input: [v19|QWORD] size: QWORD <|@ <|@
      nr  496  <|@ instruction v21|DWORD[_] = MOV input: [v20|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  498  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v21|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  500  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction v22|QWORD = MOV input: [v21|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v23|DWORD = MOV input: [v22|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  560  <|@ instruction v25|DWORD = AND x: v23|DWORD y: 63 size: DWORD <|@ <|@
      nr  562  <|@ instruction rcx|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction v26|QWORD = SHL (x: v5|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  566  <|@ instruction v27|DWORD = SAR x: v23|DWORD y: 16 size: DWORD <|@ <|@
      nr  568  <|@ instruction v28|DWORD = AND x: v27|DWORD y: 255 size: DWORD <|@ <|@
      nr  570  <|@ instruction v29|QWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction v30|QWORD = ADD (x: v26|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 7] size: QWORD <|@ <|@
      nr  576  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr  578  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr  612  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  614  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  616  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  618  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr  620  <|@ instruction v36|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  622  <|@ instruction v35|DWORD = COMPRESSPOINTER (input: v22|QWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  624  <|@ instruction MOV (x: [v24|QWORD + 8], y: v35|DWORD) size: DWORD <|@ <|@
      nr  626  <|@ instruction MOV (x: [v24|QWORD + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr  628  <|@ instruction TESTCONSTBRANCH x: v29|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [v29|QWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  640  <|@ instruction [v38|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction v39|QWORD = SUB (x: v32|QWORD, ~y: v38|QWORD) size: QWORD <|@ <|@
      nr  654  <|@ instruction CMPCONSTBRANCH x: v39|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [v38|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  666  <|@ instruction [v40|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction CMPBRANCH (x: v32|QWORD, y: v40|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction MOV x: [v24|QWORD + v40|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  696  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 8] size: QWORD <|@ <|@
      nr  698  <|@ instruction JUMP ~outgoingValues: [v41|QWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction v43|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction JUMP ~outgoingValues: [v43|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  724  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  726  <|@ instruction v64|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction v45|DWORD = MOV input: [v44|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  746  <|@ instruction v47|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  748  <|@ instruction v46|QWORD = UNCOMPRESSPOINTER (input: v45|DWORD, ~baseRegister: v47|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: v64|QWORD, y: [v46|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction v65|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction rsi|QWORD = MOVE input: v65|QWORD moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  790  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v11|QWORD[.]] state [bci:0] <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction rcx|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction ZERO_MEMORY (pointer: [v6|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction v62|DWORD = NOT value: v61|DWORD size: DWORD <|@ <|@
      nr  852  <|@ instruction v63|DWORD = SUB (x: v49|DWORD, ~y: v62|DWORD) size: DWORD <|@ <|@
      nr  854  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction rdx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr  858  <|@ instruction rcx|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction r8|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction r9|DWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr  864  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - v48|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6] <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction rsi|QWORD = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  894  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:0] <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction MOV x: [v24|QWORD + v29|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  918  <|@ instruction v37|QWORD = LEA address: [v29|QWORD + 4] size: QWORD <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [v37|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction rcx|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction ZERO_MEMORY (pointer: [v38|QWORD + v24|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction MOV x: [r15|QWORD + 1156] y: -99441 size: DWORD <|@ <|@
      nr  966  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  968  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction JUMP ~outgoingValues: [int[-41753|0xffffffffffff5ce7]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23331 size: DWORD <|@ <|@
      nr  998  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1000  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [int[-39705|0xffffffffffff64e7]] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [int[-40729|0xffffffffffff60e7]] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1022  <|@ instruction [v50|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v50|DWORD) size: DWORD <|@ <|@
      nr 1040  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1042  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: v48|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction DEOPT info [bci:24, 6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101489 size: DWORD <|@ <|@
      nr 1062  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: aload_0       
     3: invokevirtual #18         // java.lang.Object.getClass:()java.lang.Class
     6: invokestatic  #76         // copyOf:(java.lang.Object[], int, java.lang.Class)java.lang.Object[]
     9: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6632e17a slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   68  <|@ instruction v7|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   70  <|@ instruction v8|QWORD = LEA address: [v7|QWORD + 23] size: QWORD <|@ <|@
      nr   72  <|@ instruction v9|QWORD = AND x: v8|QWORD y: -8 size: QWORD <|@ <|@
      nr   74  <|@ instruction v10|QWORD = ADD (x: v9|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  112  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  114  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  116  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  120  <|@ instruction MOV (x: [v6|QWORD + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr  122  <|@ instruction v12|QWORD = LEA address: [v9|QWORD - 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction CMPCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  136  <|@ instruction [v13|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction MOV x: [v6|QWORD + v13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  166  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 8] size: QWORD <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [v14|QWORD] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction v16|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  194  <|@ instruction [v48|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction CMP (x: v3|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction v49|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v1|DWORD) condition: > <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction CMPBRANCH (x: v49|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction CMPBRANCH (x: v49|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction v51|DWORD = MOV input: [v48|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  266  <|@ instruction v52|QWORD = MOVE input: v49|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction CMPCONSTBRANCH x: v51|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction v53|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction v54|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  338  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  340  <|@ instruction rdx|QWORD = MOVE input: v52|QWORD moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  344  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction v56|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  396  <|@ instruction v55|QWORD = UNCOMPRESSPOINTER (input: v51|DWORD, ~baseRegister: v56|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  398  <|@ instruction v57|QWORD = MOV input: [v55|QWORD + 208] size: QWORD <|@ <|@
      nr  400  <|@ instruction v58|QWORD = MOVSXD input: [v57|QWORD + 20] size: QWORD <|@ <|@
      nr  402  <|@ instruction v59|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction v60|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rdi|QWORD = LEA address: [v59|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|QWORD = LEA address: [v60|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  410  <|@ instruction rdx|QWORD = MOVE input: v52|QWORD moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction rcx|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction r8|QWORD = MOVE input: v57|QWORD moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  418  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: v61|DWORD, y: v61|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction rax|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction v18|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  490  <|@ instruction v17|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v18|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  492  <|@ instruction v19|QWORD = MOV input: [v17|QWORD + 112] size: QWORD <|@ <|@
      nr  494  <|@ instruction v20|QWORD[.] = MOV input: [v19|QWORD] size: QWORD <|@ <|@
      nr  496  <|@ instruction v21|DWORD[_] = MOV input: [v20|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  498  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v21|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  500  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction v22|QWORD = MOV input: [v21|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v23|DWORD = MOV input: [v22|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  560  <|@ instruction v25|DWORD = AND x: v23|DWORD y: 63 size: DWORD <|@ <|@
      nr  562  <|@ instruction rcx|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction v26|QWORD = SHL (x: v5|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  566  <|@ instruction v27|DWORD = SAR x: v23|DWORD y: 16 size: DWORD <|@ <|@
      nr  568  <|@ instruction v28|DWORD = AND x: v27|DWORD y: 255 size: DWORD <|@ <|@
      nr  570  <|@ instruction v29|QWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction v30|QWORD = ADD (x: v26|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 7] size: QWORD <|@ <|@
      nr  576  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr  578  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr  612  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  614  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  616  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  618  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr  620  <|@ instruction v36|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  622  <|@ instruction v35|DWORD = COMPRESSPOINTER (input: v22|QWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  624  <|@ instruction MOV (x: [v24|QWORD + 8], y: v35|DWORD) size: DWORD <|@ <|@
      nr  626  <|@ instruction MOV (x: [v24|QWORD + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr  628  <|@ instruction TESTCONSTBRANCH x: v29|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [v29|QWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  640  <|@ instruction [v38|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction v39|QWORD = SUB (x: v32|QWORD, ~y: v38|QWORD) size: QWORD <|@ <|@
      nr  654  <|@ instruction CMPCONSTBRANCH x: v39|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [v38|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  666  <|@ instruction [v40|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction CMPBRANCH (x: v32|QWORD, y: v40|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction MOV x: [v24|QWORD + v40|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  696  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 8] size: QWORD <|@ <|@
      nr  698  <|@ instruction JUMP ~outgoingValues: [v41|QWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction v43|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction JUMP ~outgoingValues: [v43|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  724  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  726  <|@ instruction v64|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction v45|DWORD = MOV input: [v44|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  746  <|@ instruction v47|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  748  <|@ instruction v46|QWORD = UNCOMPRESSPOINTER (input: v45|DWORD, ~baseRegister: v47|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: v64|QWORD, y: [v46|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction v65|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction rsi|QWORD = MOVE input: v65|QWORD moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  790  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v11|QWORD[.]] state [bci:0] <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction rcx|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction ZERO_MEMORY (pointer: [v6|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction v62|DWORD = NOT value: v61|DWORD size: DWORD <|@ <|@
      nr  852  <|@ instruction v63|DWORD = SUB (x: v49|DWORD, ~y: v62|DWORD) size: DWORD <|@ <|@
      nr  854  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction rdx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr  858  <|@ instruction rcx|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction r8|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction r9|DWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr  864  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - v48|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6] <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction rsi|QWORD = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  894  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:0] <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction MOV x: [v24|QWORD + v29|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  918  <|@ instruction v37|QWORD = LEA address: [v29|QWORD + 4] size: QWORD <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [v37|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction rcx|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction ZERO_MEMORY (pointer: [v38|QWORD + v24|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction MOV x: [r15|QWORD + 1156] y: -99441 size: DWORD <|@ <|@
      nr  966  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  968  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction JUMP ~outgoingValues: [int[-41753|0xffffffffffff5ce7]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23331 size: DWORD <|@ <|@
      nr  998  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1000  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [int[-39705|0xffffffffffff64e7]] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [int[-40729|0xffffffffffff60e7]] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1022  <|@ instruction [v50|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v50|DWORD) size: DWORD <|@ <|@
      nr 1040  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1042  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: v48|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction DEOPT info [bci:24, 6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101489 size: DWORD <|@ <|@
      nr 1062  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: aload_0       
     3: invokevirtual #18         // java.lang.Object.getClass:()java.lang.Class
     6: invokestatic  #76         // copyOf:(java.lang.Object[], int, java.lang.Class)java.lang.Object[]
     9: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v48|q [0, 1[[342, 343[[416, 418[[460, 462[[788, 790[[818, 819[[864, 865[[892, 894[[944, 945[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v58|q [0, 1[[342, 343[[412, 417[[562, 565[[816, 819[[858, 865[[942, 945[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v52|q [0, 32[[340, 343[[410, 417[[786, 788[[856, 865[[890, 892[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 26[[342, 343[[416, 417[[864, 865[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v65|q [0, 30[[338, 343[[408, 417[[784, 788[[854, 865[[888, 892[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[336, 343[[406, 417[[818, 819[[864, 865[[944, 945[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- v57|q [0, 1[[342, 343[[414, 417[[860, 865[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- v63|d [0, 1[[342, 343[[416, 417[[862, 865[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|q [30, 332[[346, 422[[464, 854[[868, 969[[970, 1001[[1002, 1043[[1044, 1065[30 MustHaveRegister 34 MustHaveRegister 36 MustHaveRegister 332 ShouldHaveRegister 402 ShouldHaveRegister 854 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|d [32, 238[[464, 822[[868, 969[[970, 1001[[1002, 1043[[1044, 1065[32 MustHaveRegister 38 ShouldHaveRegister 120 MustHaveRegister 208 ShouldHaveRegister 210 MustHaveRegister 236 ShouldHaveRegister 520 MustHaveRegister 626 MustHaveRegister 786 ShouldHaveRegister 890 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [34, 268[[464, 822[[868, 948[34 MustHaveRegister 40 ShouldHaveRegister 268 ShouldHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [36, 224[[464, 822[[868, 948[36 MustHaveRegister 208 MustHaveRegister 210 ShouldHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q -1 [38, 68[[464, 564[38 MustHaveRegister 68 MustHaveRegister 564 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [66, 190[[796, 822[66 MustHaveRegister 74 ShouldHaveRegister 110 MustHaveRegister 112 MustHaveRegister 114 MustHaveRegister 116 MustHaveRegister 118 MustHaveRegister 120 MustHaveRegister 164 MustHaveRegister 169 LiveAtLoopEnd 190 ShouldHaveRegister 818 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q v5|q [68, 70[68 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q -1 [70, 72[70 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q v8|q [72, 170[72 MustHaveRegister 74 ShouldHaveRegister 110 MustHaveRegister 112 MustHaveRegister 114 MustHaveRegister 122 MustHaveRegister 146 MustHaveRegister 169 LiveAtLoopEnd  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q v9|q [74, 108[74 MustHaveRegister 76 MustHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q rax|q [790, 795[790 MustHaveRegister 792 MustHaveRegister 794 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q -1 [122, 126[[796, 816[122 MustHaveRegister 124 ShouldHaveRegister 816 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q v14|q [136, 166[146 ShouldHaveRegister 164 MustHaveRegister 166 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q v13|q [166, 169[166 MustHaveRegister 168 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q v6|q [190, 193[190 MustHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q v2|d [490, 492[490 MustHaveRegister 492 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q -1 [488, 491[488 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q -1 [492, 494[492 MustHaveRegister 494 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q -1 [494, 496[494 MustHaveRegister 496 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d -1 [496, 516[496 MustHaveRegister 498 MustHaveRegister 500 ShouldHaveRegister 516 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q -1 [516, 622[[868, 888[516 MustHaveRegister 518 MustHaveRegister 622 MustHaveRegister 888 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d -1 [518, 566[518 MustHaveRegister 560 MustHaveRegister 566 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q -1 [558, 720[[900, 948[558 MustHaveRegister 578 ShouldHaveRegister 612 MustHaveRegister 614 MustHaveRegister 616 MustHaveRegister 618 MustHaveRegister 624 MustHaveRegister 626 MustHaveRegister 694 MustHaveRegister 699 LiveAtLoopEnd 720 ShouldHaveRegister 916 MustHaveRegister 944 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d v23|d [560, 562[560 MustHaveRegister 562 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q v5|q [564, 572[564 MustHaveRegister 572 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[v27|d]" v27|d v23|d [566, 568[566 MustHaveRegister 568 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d v27|d [568, 570[568 MustHaveRegister 570 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q v28|d [570, 639[[900, 918[570 MustHaveRegister 572 ShouldHaveRegister 628 ShouldHaveRegister 638 ShouldHaveRegister 916 MustHaveRegister 918 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q v26|q [572, 574[572 MustHaveRegister 574 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q -1 [574, 576[574 MustHaveRegister 576 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q v31|q [576, 700[[900, 922[576 MustHaveRegister 578 ShouldHaveRegister 612 MustHaveRegister 614 MustHaveRegister 616 MustHaveRegister 652 MustHaveRegister 676 MustHaveRegister 699 LiveAtLoopEnd  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q v32|q [578, 610[578 MustHaveRegister 580 MustHaveRegister 610 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q rax|q [894, 899[894 MustHaveRegister 896 MustHaveRegister 898 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[v35|d]" v35|d v22|q [622, 624[622 MustHaveRegister 624 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q -1 [620, 623[620 MustHaveRegister 622 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q -1 [918, 921[918 MustHaveRegister 920 ShouldHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q v29|q [640, 665[[922, 944[652 ShouldHaveRegister 664 ShouldHaveRegister 944 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q v32|q [652, 656[[922, 942[652 MustHaveRegister 654 ShouldHaveRegister 942 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q v41|q [666, 696[676 ShouldHaveRegister 694 MustHaveRegister 696 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q v40|q [696, 699[696 MustHaveRegister 698 ShouldHaveRegister  "NoSpillStore"
  v43|q QWORD "[v43|q]" v43|q v24|q [720, 723[720 MustHaveRegister 722 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q v43|q [724, 761[744 MustHaveRegister 760 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[v45|d]" v45|d -1 [744, 748[744 MustHaveRegister 748 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q v45|d [748, 750[748 MustHaveRegister 750 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[v47|q]" v47|q -1 [746, 749[746 MustHaveRegister 748 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[v48|q]" v48|q v16|q [194, 460[[822, 868[[970, 980[[1002, 1043[264 MustHaveRegister 334 ShouldHaveRegister 404 ShouldHaveRegister 460 ShouldHaveRegister 858 ShouldHaveRegister  "NoSpillStore"
  v49|d DWORD "[v49|d]" v49|d v3|d [210, 270[[280, 292[[346, 422[[822, 852[210 MustHaveRegister 212 MustHaveRegister 224 MustHaveRegister 236 MustHaveRegister 248 MustHaveRegister 266 ShouldHaveRegister 852 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[v50|d]" v50|d -1 [1022, 1038[1038 MustHaveRegister  "NoSpillStore"
  v51|d DWORD "[v51|d]" v51|d -1 [264, 270[[280, 292[[346, 396[264 MustHaveRegister 268 MustHaveRegister 290 ShouldHaveRegister 396 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[v52|q]" v52|q v49|d [266, 340[[346, 410[266 MustHaveRegister 340 ShouldHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[v53|q]" v53|q v0|q [332, 336[332 MustHaveRegister 336 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[v54|q]" v54|q v48|q [334, 338[334 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[v55|q]" v55|q v51|d [396, 398[396 MustHaveRegister 398 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[v56|q]" v56|q -1 [394, 397[394 MustHaveRegister 396 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[v57|q]" v57|q -1 [398, 414[398 MustHaveRegister 400 MustHaveRegister 414 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[v58|q]" v58|q -1 [400, 412[400 MustHaveRegister 412 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[v59|q]" v59|q v0|q [402, 406[402 MustHaveRegister 406 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[v60|q]" v60|q v48|q [404, 408[404 MustHaveRegister 408 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[v61|d]" v61|d rax|q [418, 422[[822, 850[418 MustHaveRegister 420 MustHaveRegister 850 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[v62|d]" v62|d v61|d [850, 860[850 MustHaveRegister 852 ShouldHaveRegister 856 ShouldHaveRegister 860 ShouldHaveRegister  "NoSpillStore"
  v63|d DWORD "[v63|d]" v63|d v49|d [852, 862[852 MustHaveRegister 862 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[v64|q]" v64|q -1 [726, 750[726 MustHaveRegister 750 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[v65|q]" v65|q -1 [764, 784[764 MustHaveRegister 784 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v48|q [0, 1[[342, 343[[416, 418[[460, 462[[788, 790[[818, 819[[864, 865[[892, 894[[944, 945[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v58|q [0, 1[[342, 343[[412, 417[[562, 565[[816, 819[[858, 865[[942, 945[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v52|q [0, 32[[340, 343[[410, 417[[786, 788[[856, 865[[890, 892[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 26[[342, 343[[416, 417[[864, 865[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v65|q [0, 30[[338, 343[[408, 417[[784, 788[[854, 865[[888, 892[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[336, 343[[406, 417[[818, 819[[864, 865[[944, 945[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- v57|q [0, 1[[342, 343[[414, 417[[860, 865[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- v63|d [0, 1[[342, 343[[416, 417[[862, 865[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [30, 332[[346, 407[30 MustHaveRegister 34 MustHaveRegister 36 MustHaveRegister 332 ShouldHaveRegister 402 ShouldHaveRegister  "OneSpillStore"
  v1|d DWORD "[r10|d]" v1|d rdx|d [32, 238[[464, 822[[868, 969[[970, 1001[[1002, 1043[[1044, 1065[32 MustHaveRegister 38 ShouldHaveRegister 120 MustHaveRegister 208 ShouldHaveRegister 210 MustHaveRegister 236 ShouldHaveRegister 520 MustHaveRegister 626 MustHaveRegister 786 ShouldHaveRegister 890 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[r11|d]" v2|d -1 [34, 268[[464, 822[[868, 948[34 MustHaveRegister 40 ShouldHaveRegister 268 ShouldHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d -1 [36, 224[[464, 822[[868, 948[36 MustHaveRegister 208 MustHaveRegister 210 ShouldHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[r9|q]" v5|q -1 [38, 68[[464, 564[38 MustHaveRegister 68 MustHaveRegister 564 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rbx|q]" v6|q -1 [66, 190[[796, 822[66 MustHaveRegister 74 ShouldHaveRegister 110 MustHaveRegister 112 MustHaveRegister 114 MustHaveRegister 116 MustHaveRegister 118 MustHaveRegister 120 MustHaveRegister 164 MustHaveRegister 169 LiveAtLoopEnd 190 ShouldHaveRegister 818 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[r9|q]" v7|q v5|q [68, 70[68 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rdi|q]" v8|q -1 [70, 72[70 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rdi|q]" v9|q v8|q [72, 170[72 MustHaveRegister 74 ShouldHaveRegister 110 MustHaveRegister 112 MustHaveRegister 114 MustHaveRegister 122 MustHaveRegister 146 MustHaveRegister 169 LiveAtLoopEnd  "NoSpillStore"
  v10|q QWORD "[rdx|q]" v10|q v9|q [74, 108[74 MustHaveRegister 76 MustHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q rax|q [790, 795[790 MustHaveRegister 792 MustHaveRegister 794 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[r9|q]" v12|q -1 [122, 126[[796, 816[122 MustHaveRegister 124 ShouldHaveRegister 816 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rdx|q]" v13|q v14|q [136, 166[146 ShouldHaveRegister 164 MustHaveRegister 166 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rdx|q]" v14|q v13|q [166, 169[166 MustHaveRegister 168 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rbx|q]" v16|q v6|q [190, 193[190 MustHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rsi|q]" v17|q v2|d [490, 492[490 MustHaveRegister 492 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rcx|q]" v18|q -1 [488, 491[488 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rcx|q]" v19|q -1 [492, 494[492 MustHaveRegister 494 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rcx|q]" v20|q -1 [494, 496[494 MustHaveRegister 496 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rcx|d]" v21|d -1 [496, 516[496 MustHaveRegister 498 MustHaveRegister 500 ShouldHaveRegister 516 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rbx|q]" v22|q -1 [516, 622[[868, 888[516 MustHaveRegister 518 MustHaveRegister 622 MustHaveRegister 888 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[rsi|d]" v23|d -1 [518, 566[518 MustHaveRegister 560 MustHaveRegister 566 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[rdx|q]" v24|q -1 [558, 720[[900, 948[558 MustHaveRegister 578 ShouldHaveRegister 612 MustHaveRegister 614 MustHaveRegister 616 MustHaveRegister 618 MustHaveRegister 624 MustHaveRegister 626 MustHaveRegister 694 MustHaveRegister 699 LiveAtLoopEnd 720 ShouldHaveRegister 916 MustHaveRegister 944 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[rcx|d]" v25|d v23|d [560, 562[560 MustHaveRegister 562 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[r9|q]" v26|q v5|q [564, 572[564 MustHaveRegister 572 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[rsi|d]" v27|d v23|d [566, 568[566 MustHaveRegister 568 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[rsi|d]" v28|d v27|d [568, 570[568 MustHaveRegister 570 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rsi|q]" v29|q v28|d [570, 639[[900, 918[570 MustHaveRegister 572 ShouldHaveRegister 628 ShouldHaveRegister 638 ShouldHaveRegister 916 MustHaveRegister 918 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[r9|q]" v30|q v26|q [572, 574[572 MustHaveRegister 574 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rax|q]" v31|q -1 [574, 576[574 MustHaveRegister 576 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rax|q]" v32|q v31|q [576, 700[[900, 922[576 MustHaveRegister 578 ShouldHaveRegister 612 MustHaveRegister 614 MustHaveRegister 616 MustHaveRegister 652 MustHaveRegister 676 MustHaveRegister 699 LiveAtLoopEnd  "NoSpillStore"
  v33|q QWORD "[rcx|q]" v33|q v32|q [578, 610[578 MustHaveRegister 580 MustHaveRegister 610 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rax|q]" v34|q rax|q [894, 899[894 MustHaveRegister 896 MustHaveRegister 898 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[rbx|d]" v35|d v22|q [622, 624[622 MustHaveRegister 624 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rcx|q]" v36|q -1 [620, 623[620 MustHaveRegister 622 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rcx|q]" v37|q -1 [918, 921[918 MustHaveRegister 920 ShouldHaveRegister  "NoSpillStore"
  v38|q QWORD "[rsi|q]" v38|q v29|q [640, 665[[922, 944[652 ShouldHaveRegister 664 ShouldHaveRegister 944 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[r9|q]" v39|q v32|q [652, 656[[922, 942[652 MustHaveRegister 654 ShouldHaveRegister 942 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[rsi|q]" v40|q v41|q [666, 696[676 ShouldHaveRegister 694 MustHaveRegister 696 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rsi|q]" v41|q v40|q [696, 699[696 MustHaveRegister 698 ShouldHaveRegister  "NoSpillStore"
  v43|q QWORD "[rdx|q]" v43|q v24|q [720, 723[720 MustHaveRegister 722 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rdx|q]" v44|q v43|q [724, 761[744 MustHaveRegister 760 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[rax|d]" v45|d -1 [744, 748[744 MustHaveRegister 748 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rax|q]" v46|q v45|d [748, 750[748 MustHaveRegister 750 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rcx|q]" v47|q -1 [746, 749[746 MustHaveRegister 748 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rbx|q]" v48|q v16|q [194, 341[264 MustHaveRegister 334 ShouldHaveRegister  "OneSpillStore"
  v49|d DWORD "[r9|d]" v49|d v3|d [210, 270[[280, 292[210 MustHaveRegister 212 MustHaveRegister 224 MustHaveRegister 236 MustHaveRegister 248 MustHaveRegister 266 ShouldHaveRegister  "OneSpillStore"
  v50|d DWORD "[r11|d]" v50|d -1 [1022, 1038[1038 MustHaveRegister  "NoSpillStore"
  v51|d DWORD "[r10|d]" v51|d -1 [264, 270[[280, 292[[346, 396[264 MustHaveRegister 268 MustHaveRegister 290 ShouldHaveRegister 396 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[r8|q]" v52|q v49|d [266, 340[[346, 410[266 MustHaveRegister 340 ShouldHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[rsi|q]" v53|q v0|q [332, 336[332 MustHaveRegister 336 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[rdx|q]" v54|q v48|q [334, 338[334 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[r10|q]" v55|q v51|d [396, 398[396 MustHaveRegister 398 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[rdi|q]" v56|q -1 [394, 397[394 MustHaveRegister 396 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[r10|q]" v57|q -1 [398, 414[398 MustHaveRegister 400 MustHaveRegister 414 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[rcx|q]" v58|q -1 [400, 412[400 MustHaveRegister 412 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[rdi|q]" v59|q v0|q [402, 406[402 MustHaveRegister 406 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rbx|q]" v60|q v48|q [404, 408[404 MustHaveRegister 408 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[rax|d]" v61|d rax|q [418, 422[[822, 850[418 MustHaveRegister 420 MustHaveRegister 850 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[rax|d]" v62|d v61|d [850, 860[850 MustHaveRegister 852 ShouldHaveRegister 856 ShouldHaveRegister 860 ShouldHaveRegister  "NoSpillStore"
  v63|d DWORD "[r9|d]" v63|d v49|d [852, 862[852 MustHaveRegister 862 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[rsi|q]" v64|q -1 [726, 750[726 MustHaveRegister 750 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[rsi|q]" v65|q -1 [764, 784[764 MustHaveRegister 784 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[vstack:2|q]" v0|q v0|q [407, 415[ "OneSpillStore"
  v67|q QWORD "[vstack:0|q]" v48|q v48|q [341, 460[[822, 868[[970, 980[[1002, 1022[404 ShouldHaveRegister 460 ShouldHaveRegister 858 ShouldHaveRegister  "OneSpillStore"
  v68|d DWORD "[vstack:1|d]" v49|d v49|d [346, 415[ "OneSpillStore"
  v69|q QWORD "[rbx|q]" v48|q v48|q [1022, 1043[ "OneSpillStore"
  v70|d DWORD "[vstack:1|d]" v49|d v49|d [415, 422[ "OneSpillStore"
  v71|q QWORD "[vstack:2|q]" v0|q v0|q [415, 422[[464, 854[[868, 969[[970, 1001[[1002, 1043[854 ShouldHaveRegister  "OneSpillStore"
  v72|d DWORD "[r9|d]" v49|d v49|d [822, 852[852 MustHaveRegister  "OneSpillStore"
  v73|q QWORD "[rsi|q]" v0|q v0|q [1044, 1065[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6632e17a slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   68  <|@ instruction v7|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   70  <|@ instruction v8|QWORD = LEA address: [v7|QWORD + 23] size: QWORD <|@ <|@
      nr   72  <|@ instruction v9|QWORD = AND x: v8|QWORD y: -8 size: QWORD <|@ <|@
      nr   74  <|@ instruction v10|QWORD = ADD (x: v9|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  112  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  114  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  116  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  120  <|@ instruction MOV (x: [v6|QWORD + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr  122  <|@ instruction v12|QWORD = LEA address: [v9|QWORD - 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction CMPCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  136  <|@ instruction [v13|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction MOV x: [v6|QWORD + v13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  166  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 8] size: QWORD <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [v14|QWORD] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction v16|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  194  <|@ instruction [v48|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction CMP (x: v3|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction v49|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v1|DWORD) condition: > <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction CMPBRANCH (x: v49|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction CMPBRANCH (x: v49|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction v51|DWORD = MOV input: [v48|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  266  <|@ instruction v52|QWORD = MOVE input: v49|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction CMPCONSTBRANCH x: v51|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction v53|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction v54|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  338  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  340  <|@ instruction rdx|QWORD = MOVE input: v52|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  342  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  344  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction v56|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  396  <|@ instruction v55|QWORD = UNCOMPRESSPOINTER (input: v51|DWORD, ~baseRegister: v56|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  398  <|@ instruction v57|QWORD = MOV input: [v55|QWORD + 208] size: QWORD <|@ <|@
      nr  400  <|@ instruction v58|QWORD = MOVSXD input: [v57|QWORD + 20] size: QWORD <|@ <|@
      nr  402  <|@ instruction v59|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction v60|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rdi|QWORD = LEA address: [v59|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  408  <|@ instruction rsi|QWORD = LEA address: [v60|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  410  <|@ instruction rdx|QWORD = MOVE input: v52|QWORD moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction rcx|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction r8|QWORD = MOVE input: v57|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = STACKMOVE (input: v66|QWORD[.], ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = STACKMOVE (input: v68|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  418  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: v61|DWORD, y: v61|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction rax|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction v18|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  490  <|@ instruction v17|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v18|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  492  <|@ instruction v19|QWORD = MOV input: [v17|QWORD + 112] size: QWORD <|@ <|@
      nr  494  <|@ instruction v20|QWORD[.] = MOV input: [v19|QWORD] size: QWORD <|@ <|@
      nr  496  <|@ instruction v21|DWORD[_] = MOV input: [v20|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  498  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v21|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  500  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction v22|QWORD = MOV input: [v21|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v23|DWORD = MOV input: [v22|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  560  <|@ instruction v25|DWORD = AND x: v23|DWORD y: 63 size: DWORD <|@ <|@
      nr  562  <|@ instruction rcx|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction v26|QWORD = SHL (x: v5|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  566  <|@ instruction v27|DWORD = SAR x: v23|DWORD y: 16 size: DWORD <|@ <|@
      nr  568  <|@ instruction v28|DWORD = AND x: v27|DWORD y: 255 size: DWORD <|@ <|@
      nr  570  <|@ instruction v29|QWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction v30|QWORD = ADD (x: v26|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 7] size: QWORD <|@ <|@
      nr  576  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr  578  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr  612  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  614  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  616  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  618  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr  620  <|@ instruction v36|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  622  <|@ instruction v35|DWORD = COMPRESSPOINTER (input: v22|QWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  624  <|@ instruction MOV (x: [v24|QWORD + 8], y: v35|DWORD) size: DWORD <|@ <|@
      nr  626  <|@ instruction MOV (x: [v24|QWORD + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr  628  <|@ instruction TESTCONSTBRANCH x: v29|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [v29|QWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  640  <|@ instruction [v38|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction v39|QWORD = SUB (x: v32|QWORD, ~y: v38|QWORD) size: QWORD <|@ <|@
      nr  654  <|@ instruction CMPCONSTBRANCH x: v39|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [v38|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  666  <|@ instruction [v40|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction CMPBRANCH (x: v32|QWORD, y: v40|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction MOV x: [v24|QWORD + v40|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  696  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 8] size: QWORD <|@ <|@
      nr  698  <|@ instruction JUMP ~outgoingValues: [v41|QWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction v43|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction JUMP ~outgoingValues: [v43|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  724  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  726  <|@ instruction v64|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction v45|DWORD = MOV input: [v44|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  746  <|@ instruction v47|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  748  <|@ instruction v46|QWORD = UNCOMPRESSPOINTER (input: v45|DWORD, ~baseRegister: v47|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: v64|QWORD, y: [v46|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction v65|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction rsi|QWORD = MOVE input: v65|QWORD moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  790  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v11|QWORD[.]] state [bci:0] <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction rcx|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction ZERO_MEMORY (pointer: [v6|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction v62|DWORD = NOT value: v61|DWORD size: DWORD <|@ <|@
      nr  852  <|@ instruction v63|DWORD = SUB (x: v49|DWORD, ~y: v62|DWORD) size: DWORD <|@ <|@
      nr  854  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction rdx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr  858  <|@ instruction rcx|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction r8|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction r9|DWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr  864  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - v48|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6] <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction rsi|QWORD = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  894  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:0] <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction MOV x: [v24|QWORD + v29|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  918  <|@ instruction v37|QWORD = LEA address: [v29|QWORD + 4] size: QWORD <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [v37|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction rcx|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction ZERO_MEMORY (pointer: [v38|QWORD + v24|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction MOV x: [r15|QWORD + 1156] y: -99441 size: DWORD <|@ <|@
      nr  966  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  968  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction JUMP ~outgoingValues: [int[-41753|0xffffffffffff5ce7]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23331 size: DWORD <|@ <|@
      nr  998  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1000  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [int[-39705|0xffffffffffff64e7]] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [int[-40729|0xffffffffffff60e7]] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1022  <|@ instruction [v50|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v50|DWORD) size: DWORD <|@ <|@
      nr 1040  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1042  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: v48|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction DEOPT info [bci:24, 6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101489 size: DWORD <|@ <|@
      nr 1062  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: aload_0       
     3: invokevirtual #18         // java.lang.Object.getClass:()java.lang.Class
     6: invokestatic  #76         // copyOf:(java.lang.Object[], int, java.lang.Class)java.lang.Object[]
     9: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v48|q [0, 1[[342, 343[[416, 418[[460, 462[[788, 790[[818, 819[[864, 865[[892, 894[[944, 945[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v58|q [0, 1[[342, 343[[412, 417[[562, 565[[816, 819[[858, 865[[942, 945[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v52|q [0, 32[[340, 343[[410, 417[[786, 788[[856, 865[[890, 892[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 26[[342, 343[[416, 417[[864, 865[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v65|q [0, 30[[338, 343[[408, 417[[784, 788[[854, 865[[888, 892[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[336, 343[[406, 417[[818, 819[[864, 865[[944, 945[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- v57|q [0, 1[[342, 343[[414, 417[[860, 865[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- v63|d [0, 1[[342, 343[[416, 417[[862, 865[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [30, 332[[346, 407[30 MustHaveRegister 34 MustHaveRegister 36 MustHaveRegister 332 ShouldHaveRegister 402 ShouldHaveRegister  "OneSpillStore"
  v1|d DWORD "[r10|d]" v1|d rdx|d [32, 238[[464, 822[[868, 969[[970, 1001[[1002, 1043[[1044, 1065[32 MustHaveRegister 38 ShouldHaveRegister 120 MustHaveRegister 208 ShouldHaveRegister 210 MustHaveRegister 236 ShouldHaveRegister 520 MustHaveRegister 626 MustHaveRegister 786 ShouldHaveRegister 890 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[r11|d]" v2|d -1 [34, 268[[464, 822[[868, 948[34 MustHaveRegister 40 ShouldHaveRegister 268 ShouldHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d -1 [36, 224[[464, 822[[868, 948[36 MustHaveRegister 208 MustHaveRegister 210 ShouldHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[r9|q]" v5|q -1 [38, 68[[464, 564[38 MustHaveRegister 68 MustHaveRegister 564 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rbx|q]" v6|q -1 [66, 190[[796, 822[66 MustHaveRegister 74 ShouldHaveRegister 110 MustHaveRegister 112 MustHaveRegister 114 MustHaveRegister 116 MustHaveRegister 118 MustHaveRegister 120 MustHaveRegister 164 MustHaveRegister 169 LiveAtLoopEnd 190 ShouldHaveRegister 818 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[r9|q]" v7|q v5|q [68, 70[68 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rdi|q]" v8|q -1 [70, 72[70 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rdi|q]" v9|q v8|q [72, 170[72 MustHaveRegister 74 ShouldHaveRegister 110 MustHaveRegister 112 MustHaveRegister 114 MustHaveRegister 122 MustHaveRegister 146 MustHaveRegister 169 LiveAtLoopEnd  "NoSpillStore"
  v10|q QWORD "[rdx|q]" v10|q v9|q [74, 108[74 MustHaveRegister 76 MustHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q rax|q [790, 795[790 MustHaveRegister 792 MustHaveRegister 794 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[r9|q]" v12|q -1 [122, 126[[796, 816[122 MustHaveRegister 124 ShouldHaveRegister 816 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rdx|q]" v13|q v14|q [136, 166[146 ShouldHaveRegister 164 MustHaveRegister 166 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rdx|q]" v14|q v13|q [166, 169[166 MustHaveRegister 168 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rbx|q]" v16|q v6|q [190, 193[190 MustHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rsi|q]" v17|q v2|d [490, 492[490 MustHaveRegister 492 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rcx|q]" v18|q -1 [488, 491[488 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rcx|q]" v19|q -1 [492, 494[492 MustHaveRegister 494 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rcx|q]" v20|q -1 [494, 496[494 MustHaveRegister 496 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rcx|d]" v21|d -1 [496, 516[496 MustHaveRegister 498 MustHaveRegister 500 ShouldHaveRegister 516 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rbx|q]" v22|q -1 [516, 622[[868, 888[516 MustHaveRegister 518 MustHaveRegister 622 MustHaveRegister 888 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[rsi|d]" v23|d -1 [518, 566[518 MustHaveRegister 560 MustHaveRegister 566 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[rdx|q]" v24|q -1 [558, 720[[900, 948[558 MustHaveRegister 578 ShouldHaveRegister 612 MustHaveRegister 614 MustHaveRegister 616 MustHaveRegister 618 MustHaveRegister 624 MustHaveRegister 626 MustHaveRegister 694 MustHaveRegister 699 LiveAtLoopEnd 720 ShouldHaveRegister 916 MustHaveRegister 944 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[rcx|d]" v25|d v23|d [560, 562[560 MustHaveRegister 562 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[r9|q]" v26|q v5|q [564, 572[564 MustHaveRegister 572 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[rsi|d]" v27|d v23|d [566, 568[566 MustHaveRegister 568 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[rsi|d]" v28|d v27|d [568, 570[568 MustHaveRegister 570 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rsi|q]" v29|q v28|d [570, 639[[900, 918[570 MustHaveRegister 572 ShouldHaveRegister 628 ShouldHaveRegister 638 ShouldHaveRegister 916 MustHaveRegister 918 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[r9|q]" v30|q v26|q [572, 574[572 MustHaveRegister 574 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rax|q]" v31|q -1 [574, 576[574 MustHaveRegister 576 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rax|q]" v32|q v31|q [576, 700[[900, 922[576 MustHaveRegister 578 ShouldHaveRegister 612 MustHaveRegister 614 MustHaveRegister 616 MustHaveRegister 652 MustHaveRegister 676 MustHaveRegister 699 LiveAtLoopEnd  "NoSpillStore"
  v33|q QWORD "[rcx|q]" v33|q v32|q [578, 610[578 MustHaveRegister 580 MustHaveRegister 610 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rax|q]" v34|q rax|q [894, 899[894 MustHaveRegister 896 MustHaveRegister 898 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[rbx|d]" v35|d v22|q [622, 624[622 MustHaveRegister 624 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rcx|q]" v36|q -1 [620, 623[620 MustHaveRegister 622 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rcx|q]" v37|q -1 [918, 921[918 MustHaveRegister 920 ShouldHaveRegister  "NoSpillStore"
  v38|q QWORD "[rsi|q]" v38|q v29|q [640, 665[[922, 944[652 ShouldHaveRegister 664 ShouldHaveRegister 944 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[r9|q]" v39|q v32|q [652, 656[[922, 942[652 MustHaveRegister 654 ShouldHaveRegister 942 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[rsi|q]" v40|q v41|q [666, 696[676 ShouldHaveRegister 694 MustHaveRegister 696 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rsi|q]" v41|q v40|q [696, 699[696 MustHaveRegister 698 ShouldHaveRegister  "NoSpillStore"
  v43|q QWORD "[rdx|q]" v43|q v24|q [720, 723[720 MustHaveRegister 722 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rdx|q]" v44|q v43|q [724, 761[744 MustHaveRegister 760 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[rax|d]" v45|d -1 [744, 748[744 MustHaveRegister 748 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rax|q]" v46|q v45|d [748, 750[748 MustHaveRegister 750 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rcx|q]" v47|q -1 [746, 749[746 MustHaveRegister 748 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rbx|q]" v48|q v16|q [194, 341[264 MustHaveRegister 334 ShouldHaveRegister  "OneSpillStore"
  v49|d DWORD "[r9|d]" v49|d v3|d [210, 270[[280, 292[210 MustHaveRegister 212 MustHaveRegister 224 MustHaveRegister 236 MustHaveRegister 248 MustHaveRegister 266 ShouldHaveRegister  "OneSpillStore"
  v50|d DWORD "[r11|d]" v50|d -1 [1022, 1038[1038 MustHaveRegister  "NoSpillStore"
  v51|d DWORD "[r10|d]" v51|d -1 [264, 270[[280, 292[[346, 396[264 MustHaveRegister 268 MustHaveRegister 290 ShouldHaveRegister 396 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[r8|q]" v52|q v49|d [266, 340[[346, 410[266 MustHaveRegister 340 ShouldHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[rsi|q]" v53|q v0|q [332, 336[332 MustHaveRegister 336 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[rdx|q]" v54|q v48|q [334, 338[334 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[r10|q]" v55|q v51|d [396, 398[396 MustHaveRegister 398 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[rdi|q]" v56|q -1 [394, 397[394 MustHaveRegister 396 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[r10|q]" v57|q -1 [398, 414[398 MustHaveRegister 400 MustHaveRegister 414 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[rcx|q]" v58|q -1 [400, 412[400 MustHaveRegister 412 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[rdi|q]" v59|q v0|q [402, 406[402 MustHaveRegister 406 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rbx|q]" v60|q v48|q [404, 408[404 MustHaveRegister 408 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[rax|d]" v61|d rax|q [418, 422[[822, 850[418 MustHaveRegister 420 MustHaveRegister 850 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[rax|d]" v62|d v61|d [850, 860[850 MustHaveRegister 852 ShouldHaveRegister 856 ShouldHaveRegister 860 ShouldHaveRegister  "NoSpillStore"
  v63|d DWORD "[r9|d]" v63|d v49|d [852, 862[852 MustHaveRegister 862 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[rsi|q]" v64|q -1 [726, 750[726 MustHaveRegister 750 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[rsi|q]" v65|q -1 [764, 784[764 MustHaveRegister 784 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[vstack:2|q]" v0|q v0|q [407, 415[ "OneSpillStore"
  v67|q QWORD "[vstack:0|q]" v48|q v48|q [341, 460[[822, 868[[970, 980[[1002, 1022[404 ShouldHaveRegister 460 ShouldHaveRegister 858 ShouldHaveRegister  "OneSpillStore"
  v68|d DWORD "[vstack:1|d]" v49|d v49|d [346, 415[ "OneSpillStore"
  v69|q QWORD "[rbx|q]" v48|q v48|q [1022, 1043[ "OneSpillStore"
  v70|d DWORD "[vstack:1|d]" v49|d v49|d [415, 422[ "OneSpillStore"
  v71|q QWORD "[vstack:2|q]" v0|q v0|q [415, 422[[464, 854[[868, 969[[970, 1001[[1002, 1043[854 ShouldHaveRegister  "OneSpillStore"
  v72|d DWORD "[r9|d]" v49|d v49|d [822, 852[852 MustHaveRegister  "OneSpillStore"
  v73|q QWORD "[rsi|q]" v0|q v0|q [1044, 1065[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6632e17a slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   68  <|@ instruction v7|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   70  <|@ instruction v8|QWORD = LEA address: [v7|QWORD + 23] size: QWORD <|@ <|@
      nr   72  <|@ instruction v9|QWORD = AND x: v8|QWORD y: -8 size: QWORD <|@ <|@
      nr   74  <|@ instruction v10|QWORD = ADD (x: v9|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  112  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  114  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  116  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  120  <|@ instruction MOV (x: [v6|QWORD + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr  122  <|@ instruction v12|QWORD = LEA address: [v9|QWORD - 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction CMPCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  136  <|@ instruction [v13|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction MOV x: [v6|QWORD + v13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  166  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 8] size: QWORD <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [v14|QWORD] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction v16|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  194  <|@ instruction [v48|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction CMP (x: v3|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction v49|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v1|DWORD) condition: > <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction CMPBRANCH (x: v49|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction CMPBRANCH (x: v49|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction v51|DWORD = MOV input: [v48|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  266  <|@ instruction v52|QWORD = MOVE input: v49|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction CMPCONSTBRANCH x: v51|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction v53|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction v54|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  338  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  340  <|@ instruction rdx|QWORD = MOVE input: v52|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  342  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  344  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction v56|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  396  <|@ instruction v55|QWORD = UNCOMPRESSPOINTER (input: v51|DWORD, ~baseRegister: v56|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  398  <|@ instruction v57|QWORD = MOV input: [v55|QWORD + 208] size: QWORD <|@ <|@
      nr  400  <|@ instruction v58|QWORD = MOVSXD input: [v57|QWORD + 20] size: QWORD <|@ <|@
      nr  402  <|@ instruction v59|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction v60|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rdi|QWORD = LEA address: [v59|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  408  <|@ instruction rsi|QWORD = LEA address: [v60|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  410  <|@ instruction rdx|QWORD = MOVE input: v52|QWORD moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction rcx|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction r8|QWORD = MOVE input: v57|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = STACKMOVE (input: v66|QWORD[.], ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = STACKMOVE (input: v68|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  418  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: v61|DWORD, y: v61|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction rax|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction v18|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  490  <|@ instruction v17|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v18|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  492  <|@ instruction v19|QWORD = MOV input: [v17|QWORD + 112] size: QWORD <|@ <|@
      nr  494  <|@ instruction v20|QWORD[.] = MOV input: [v19|QWORD] size: QWORD <|@ <|@
      nr  496  <|@ instruction v21|DWORD[_] = MOV input: [v20|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  498  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v21|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  500  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction v22|QWORD = MOV input: [v21|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v23|DWORD = MOV input: [v22|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  560  <|@ instruction v25|DWORD = AND x: v23|DWORD y: 63 size: DWORD <|@ <|@
      nr  562  <|@ instruction rcx|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction v26|QWORD = SHL (x: v5|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  566  <|@ instruction v27|DWORD = SAR x: v23|DWORD y: 16 size: DWORD <|@ <|@
      nr  568  <|@ instruction v28|DWORD = AND x: v27|DWORD y: 255 size: DWORD <|@ <|@
      nr  570  <|@ instruction v29|QWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction v30|QWORD = ADD (x: v26|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 7] size: QWORD <|@ <|@
      nr  576  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr  578  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr  612  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  614  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  616  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  618  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr  620  <|@ instruction v36|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  622  <|@ instruction v35|DWORD = COMPRESSPOINTER (input: v22|QWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  624  <|@ instruction MOV (x: [v24|QWORD + 8], y: v35|DWORD) size: DWORD <|@ <|@
      nr  626  <|@ instruction MOV (x: [v24|QWORD + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr  628  <|@ instruction TESTCONSTBRANCH x: v29|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [v29|QWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  640  <|@ instruction [v38|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction v39|QWORD = SUB (x: v32|QWORD, ~y: v38|QWORD) size: QWORD <|@ <|@
      nr  654  <|@ instruction CMPCONSTBRANCH x: v39|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [v38|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  666  <|@ instruction [v40|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction CMPBRANCH (x: v32|QWORD, y: v40|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction MOV x: [v24|QWORD + v40|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  696  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 8] size: QWORD <|@ <|@
      nr  698  <|@ instruction JUMP ~outgoingValues: [v41|QWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction v43|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction JUMP ~outgoingValues: [v43|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  724  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  726  <|@ instruction v64|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction v45|DWORD = MOV input: [v44|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  746  <|@ instruction v47|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  748  <|@ instruction v46|QWORD = UNCOMPRESSPOINTER (input: v45|DWORD, ~baseRegister: v47|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: v64|QWORD, y: [v46|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction v65|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction rsi|QWORD = MOVE input: v65|QWORD moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  790  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v11|QWORD[.]] state [bci:0] <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction rcx|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction ZERO_MEMORY (pointer: [v6|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction v62|DWORD = NOT value: v61|DWORD size: DWORD <|@ <|@
      nr  852  <|@ instruction v63|DWORD = SUB (x: v49|DWORD, ~y: v62|DWORD) size: DWORD <|@ <|@
      nr  854  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction rdx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr  858  <|@ instruction rcx|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction r8|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction r9|DWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr  864  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - v48|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6] <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction rsi|QWORD = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  894  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:0] <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction MOV x: [v24|QWORD + v29|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  918  <|@ instruction v37|QWORD = LEA address: [v29|QWORD + 4] size: QWORD <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [v37|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction rcx|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction ZERO_MEMORY (pointer: [v38|QWORD + v24|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction MOV x: [r15|QWORD + 1156] y: -99441 size: DWORD <|@ <|@
      nr  966  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  968  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction JUMP ~outgoingValues: [int[-41753|0xffffffffffff5ce7]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23331 size: DWORD <|@ <|@
      nr  998  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1000  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [int[-39705|0xffffffffffff64e7]] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [int[-40729|0xffffffffffff60e7]] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1022  <|@ instruction [v50|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v50|DWORD) size: DWORD <|@ <|@
      nr 1040  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1042  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: v48|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction DEOPT info [bci:24, 6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101489 size: DWORD <|@ <|@
      nr 1062  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: aload_0       
     3: invokevirtual #18         // java.lang.Object.getClass:()java.lang.Class
     6: invokestatic  #76         // copyOf:(java.lang.Object[], int, java.lang.Class)java.lang.Object[]
     9: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v48|q [0, 1[[342, 343[[416, 418[[460, 462[[788, 790[[818, 819[[864, 865[[892, 894[[944, 945[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v58|q [0, 1[[342, 343[[412, 417[[562, 565[[816, 819[[858, 865[[942, 945[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v52|q [0, 32[[340, 343[[410, 417[[786, 788[[856, 865[[890, 892[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 26[[342, 343[[416, 417[[864, 865[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v65|q [0, 30[[338, 343[[408, 417[[784, 788[[854, 865[[888, 892[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[336, 343[[406, 417[[818, 819[[864, 865[[944, 945[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- v57|q [0, 1[[342, 343[[414, 417[[860, 865[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- v63|d [0, 1[[342, 343[[416, 417[[862, 865[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[342, 343[[416, 417[[864, 865[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [30, 332[[346, 407[30 MustHaveRegister 34 MustHaveRegister 36 MustHaveRegister 332 ShouldHaveRegister 402 ShouldHaveRegister  "OneSpillStore"
  v1|d DWORD "[r10|d]" v1|d rdx|d [32, 238[[464, 822[[868, 969[[970, 1001[[1002, 1043[[1044, 1065[32 MustHaveRegister 38 ShouldHaveRegister 120 MustHaveRegister 208 ShouldHaveRegister 210 MustHaveRegister 236 ShouldHaveRegister 520 MustHaveRegister 626 MustHaveRegister 786 ShouldHaveRegister 890 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[r11|d]" v2|d -1 [34, 268[[464, 822[[868, 948[34 MustHaveRegister 40 ShouldHaveRegister 268 ShouldHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d -1 [36, 224[[464, 822[[868, 948[36 MustHaveRegister 208 MustHaveRegister 210 ShouldHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[r9|q]" v5|q -1 [38, 68[[464, 564[38 MustHaveRegister 68 MustHaveRegister 564 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rbx|q]" v6|q -1 [66, 190[[796, 822[66 MustHaveRegister 74 ShouldHaveRegister 110 MustHaveRegister 112 MustHaveRegister 114 MustHaveRegister 116 MustHaveRegister 118 MustHaveRegister 120 MustHaveRegister 164 MustHaveRegister 169 LiveAtLoopEnd 190 ShouldHaveRegister 818 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[r9|q]" v7|q v5|q [68, 70[68 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rdi|q]" v8|q -1 [70, 72[70 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rdi|q]" v9|q v8|q [72, 170[72 MustHaveRegister 74 ShouldHaveRegister 110 MustHaveRegister 112 MustHaveRegister 114 MustHaveRegister 122 MustHaveRegister 146 MustHaveRegister 169 LiveAtLoopEnd  "NoSpillStore"
  v10|q QWORD "[rdx|q]" v10|q v9|q [74, 108[74 MustHaveRegister 76 MustHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q rax|q [790, 795[790 MustHaveRegister 792 MustHaveRegister 794 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[r9|q]" v12|q -1 [122, 126[[796, 816[122 MustHaveRegister 124 ShouldHaveRegister 816 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rdx|q]" v13|q v14|q [136, 166[146 ShouldHaveRegister 164 MustHaveRegister 166 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rdx|q]" v14|q v13|q [166, 169[166 MustHaveRegister 168 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rbx|q]" v16|q v6|q [190, 193[190 MustHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rsi|q]" v17|q v2|d [490, 492[490 MustHaveRegister 492 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rcx|q]" v18|q -1 [488, 491[488 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rcx|q]" v19|q -1 [492, 494[492 MustHaveRegister 494 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rcx|q]" v20|q -1 [494, 496[494 MustHaveRegister 496 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rcx|d]" v21|d -1 [496, 516[496 MustHaveRegister 498 MustHaveRegister 500 ShouldHaveRegister 516 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rbx|q]" v22|q -1 [516, 622[[868, 888[516 MustHaveRegister 518 MustHaveRegister 622 MustHaveRegister 888 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[rsi|d]" v23|d -1 [518, 566[518 MustHaveRegister 560 MustHaveRegister 566 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[rdx|q]" v24|q -1 [558, 720[[900, 948[558 MustHaveRegister 578 ShouldHaveRegister 612 MustHaveRegister 614 MustHaveRegister 616 MustHaveRegister 618 MustHaveRegister 624 MustHaveRegister 626 MustHaveRegister 694 MustHaveRegister 699 LiveAtLoopEnd 720 ShouldHaveRegister 916 MustHaveRegister 944 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[rcx|d]" v25|d v23|d [560, 562[560 MustHaveRegister 562 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[r9|q]" v26|q v5|q [564, 572[564 MustHaveRegister 572 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[rsi|d]" v27|d v23|d [566, 568[566 MustHaveRegister 568 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[rsi|d]" v28|d v27|d [568, 570[568 MustHaveRegister 570 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rsi|q]" v29|q v28|d [570, 639[[900, 918[570 MustHaveRegister 572 ShouldHaveRegister 628 ShouldHaveRegister 638 ShouldHaveRegister 916 MustHaveRegister 918 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[r9|q]" v30|q v26|q [572, 574[572 MustHaveRegister 574 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rax|q]" v31|q -1 [574, 576[574 MustHaveRegister 576 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rax|q]" v32|q v31|q [576, 700[[900, 922[576 MustHaveRegister 578 ShouldHaveRegister 612 MustHaveRegister 614 MustHaveRegister 616 MustHaveRegister 652 MustHaveRegister 676 MustHaveRegister 699 LiveAtLoopEnd  "NoSpillStore"
  v33|q QWORD "[rcx|q]" v33|q v32|q [578, 610[578 MustHaveRegister 580 MustHaveRegister 610 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rax|q]" v34|q rax|q [894, 899[894 MustHaveRegister 896 MustHaveRegister 898 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[rbx|d]" v35|d v22|q [622, 624[622 MustHaveRegister 624 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rcx|q]" v36|q -1 [620, 623[620 MustHaveRegister 622 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rcx|q]" v37|q -1 [918, 921[918 MustHaveRegister 920 ShouldHaveRegister  "NoSpillStore"
  v38|q QWORD "[rsi|q]" v38|q v29|q [640, 665[[922, 944[652 ShouldHaveRegister 664 ShouldHaveRegister 944 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[r9|q]" v39|q v32|q [652, 656[[922, 942[652 MustHaveRegister 654 ShouldHaveRegister 942 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[rsi|q]" v40|q v41|q [666, 696[676 ShouldHaveRegister 694 MustHaveRegister 696 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rsi|q]" v41|q v40|q [696, 699[696 MustHaveRegister 698 ShouldHaveRegister  "NoSpillStore"
  v43|q QWORD "[rdx|q]" v43|q v24|q [720, 723[720 MustHaveRegister 722 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rdx|q]" v44|q v43|q [724, 761[744 MustHaveRegister 760 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[rax|d]" v45|d -1 [744, 748[744 MustHaveRegister 748 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rax|q]" v46|q v45|d [748, 750[748 MustHaveRegister 750 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rcx|q]" v47|q -1 [746, 749[746 MustHaveRegister 748 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rbx|q]" v48|q v16|q [194, 341[264 MustHaveRegister 334 ShouldHaveRegister  "OneSpillStore"
  v49|d DWORD "[r9|d]" v49|d v3|d [210, 270[[280, 292[210 MustHaveRegister 212 MustHaveRegister 224 MustHaveRegister 236 MustHaveRegister 248 MustHaveRegister 266 ShouldHaveRegister  "OneSpillStore"
  v50|d DWORD "[r11|d]" v50|d -1 [1022, 1038[1038 MustHaveRegister  "NoSpillStore"
  v51|d DWORD "[r10|d]" v51|d -1 [264, 270[[280, 292[[346, 396[264 MustHaveRegister 268 MustHaveRegister 290 ShouldHaveRegister 396 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[r8|q]" v52|q v49|d [266, 340[[346, 410[266 MustHaveRegister 340 ShouldHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[rsi|q]" v53|q v0|q [332, 336[332 MustHaveRegister 336 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[rdx|q]" v54|q v48|q [334, 338[334 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[r10|q]" v55|q v51|d [396, 398[396 MustHaveRegister 398 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[rdi|q]" v56|q -1 [394, 397[394 MustHaveRegister 396 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[r10|q]" v57|q -1 [398, 414[398 MustHaveRegister 400 MustHaveRegister 414 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[rcx|q]" v58|q -1 [400, 412[400 MustHaveRegister 412 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[rdi|q]" v59|q v0|q [402, 406[402 MustHaveRegister 406 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rbx|q]" v60|q v48|q [404, 408[404 MustHaveRegister 408 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[rax|d]" v61|d rax|q [418, 422[[822, 850[418 MustHaveRegister 420 MustHaveRegister 850 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[rax|d]" v62|d v61|d [850, 860[850 MustHaveRegister 852 ShouldHaveRegister 856 ShouldHaveRegister 860 ShouldHaveRegister  "NoSpillStore"
  v63|d DWORD "[r9|d]" v63|d v49|d [852, 862[852 MustHaveRegister 862 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[rsi|q]" v64|q -1 [726, 750[726 MustHaveRegister 750 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[rsi|q]" v65|q -1 [764, 784[764 MustHaveRegister 784 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[vstack:2|q]" v0|q v0|q [407, 415[ "OneSpillStore"
  v67|q QWORD "[vstack:0|q]" v48|q v48|q [341, 460[[822, 868[[970, 980[[1002, 1022[404 ShouldHaveRegister 460 ShouldHaveRegister 858 ShouldHaveRegister  "OneSpillStore"
  v68|d DWORD "[vstack:1|d]" v49|d v49|d [346, 415[ "OneSpillStore"
  v69|q QWORD "[rbx|q]" v48|q v48|q [1022, 1043[ "OneSpillStore"
  v70|d DWORD "[vstack:1|d]" v49|d v49|d [415, 422[ "OneSpillStore"
  v71|q QWORD "[vstack:2|q]" v0|q v0|q [415, 422[[464, 854[[868, 969[[970, 1001[[1002, 1043[854 ShouldHaveRegister  "OneSpillStore"
  v72|d DWORD "[r9|d]" v49|d v49|d [822, 852[852 MustHaveRegister  "OneSpillStore"
  v73|q QWORD "[rsi|q]" v0|q v0|q [1044, 1065[ "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6632e17a slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   68  <|@ instruction v7|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   70  <|@ instruction v8|QWORD = LEA address: [v7|QWORD + 23] size: QWORD <|@ <|@
      nr   72  <|@ instruction v9|QWORD = AND x: v8|QWORD y: -8 size: QWORD <|@ <|@
      nr   74  <|@ instruction v10|QWORD = ADD (x: v9|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  112  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  114  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  116  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  120  <|@ instruction MOV (x: [v6|QWORD + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr  122  <|@ instruction v12|QWORD = LEA address: [v9|QWORD - 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction CMPCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  136  <|@ instruction [v13|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction MOV x: [v6|QWORD + v13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  166  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 8] size: QWORD <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction v16|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  194  <|@ instruction [v48|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction CMP (x: v3|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction v49|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v1|DWORD) condition: > <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction CMPBRANCH (x: v49|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction CMPBRANCH (x: v49|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction v51|DWORD = MOV input: [v48|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  266  <|@ instruction v52|QWORD = MOVE input: v49|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction CMPCONSTBRANCH x: v51|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction v53|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction v54|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  338  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  340  <|@ instruction rdx|QWORD = MOVE input: v52|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  342  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  344  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVE input: v49|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction v56|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  396  <|@ instruction v55|QWORD = UNCOMPRESSPOINTER (input: v51|DWORD, ~baseRegister: v56|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  398  <|@ instruction v57|QWORD = MOV input: [v55|QWORD + 208] size: QWORD <|@ <|@
      nr  400  <|@ instruction v58|QWORD = MOVSXD input: [v57|QWORD + 20] size: QWORD <|@ <|@
      nr  402  <|@ instruction v59|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction v60|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rdi|QWORD = LEA address: [v59|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  408  <|@ instruction rsi|QWORD = LEA address: [v60|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  410  <|@ instruction rdx|QWORD = MOVE input: v52|QWORD moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction rcx|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction r8|QWORD = MOVE input: v57|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = STACKMOVE (input: v66|QWORD[.], ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = STACKMOVE (input: v68|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  418  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: v61|DWORD, y: v61|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction rax|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction v18|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  490  <|@ instruction v17|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v18|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  492  <|@ instruction v19|QWORD = MOV input: [v17|QWORD + 112] size: QWORD <|@ <|@
      nr  494  <|@ instruction v20|QWORD[.] = MOV input: [v19|QWORD] size: QWORD <|@ <|@
      nr  496  <|@ instruction v21|DWORD[_] = MOV input: [v20|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  498  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v21|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  500  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction v22|QWORD = MOV input: [v21|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v23|DWORD = MOV input: [v22|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  560  <|@ instruction v25|DWORD = AND x: v23|DWORD y: 63 size: DWORD <|@ <|@
      nr  562  <|@ instruction rcx|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction v26|QWORD = SHL (x: v5|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  566  <|@ instruction v27|DWORD = SAR x: v23|DWORD y: 16 size: DWORD <|@ <|@
      nr  568  <|@ instruction v28|DWORD = AND x: v27|DWORD y: 255 size: DWORD <|@ <|@
      nr  570  <|@ instruction v29|QWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction v30|QWORD = ADD (x: v26|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 7] size: QWORD <|@ <|@
      nr  576  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr  578  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr  612  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  614  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  616  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  618  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr  620  <|@ instruction v36|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  622  <|@ instruction v35|DWORD = COMPRESSPOINTER (input: v22|QWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  624  <|@ instruction MOV (x: [v24|QWORD + 8], y: v35|DWORD) size: DWORD <|@ <|@
      nr  626  <|@ instruction MOV (x: [v24|QWORD + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr  628  <|@ instruction TESTCONSTBRANCH x: v29|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  640  <|@ instruction [v38|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction v39|QWORD = SUB (x: v32|QWORD, ~y: v38|QWORD) size: QWORD <|@ <|@
      nr  654  <|@ instruction CMPCONSTBRANCH x: v39|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  666  <|@ instruction [v40|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction CMPBRANCH (x: v32|QWORD, y: v40|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction MOV x: [v24|QWORD + v40|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  696  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 8] size: QWORD <|@ <|@
      nr  698  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction v43|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  724  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  726  <|@ instruction v64|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction v45|DWORD = MOV input: [v44|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  746  <|@ instruction v47|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  748  <|@ instruction v46|QWORD = UNCOMPRESSPOINTER (input: v45|DWORD, ~baseRegister: v47|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: v64|QWORD, y: [v46|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v71|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  760  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  764  <|@ instruction v65|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction rsi|QWORD = MOVE input: v65|QWORD moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  790  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v11|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v71|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction rcx|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction ZERO_MEMORY (pointer: [v6|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v71|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v70|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction v62|DWORD = NOT value: v61|DWORD size: DWORD <|@ <|@
      nr  852  <|@ instruction v63|DWORD = SUB (x: v49|DWORD, ~y: v62|DWORD) size: DWORD <|@ <|@
      nr  854  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction rdx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr  858  <|@ instruction rcx|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction r8|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction r9|DWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr  864  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - v48|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6] <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction rsi|QWORD = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  894  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction MOV x: [v24|QWORD + v29|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  918  <|@ instruction v37|QWORD = LEA address: [v29|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: v37|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction rcx|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction ZERO_MEMORY (pointer: [v38|QWORD + v24|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction MOV x: [r15|QWORD + 1156] y: -99441 size: DWORD <|@ <|@
      nr  966  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  968  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: int[-41753|0xffffffffffff5ce7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  978  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23331 size: DWORD <|@ <|@
      nr  998  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1000  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: int[-39705|0xffffffffffff64e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: int[-40729|0xffffffffffff60e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1022  <|@ instruction [v50|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v50|DWORD) size: DWORD <|@ <|@
      nr 1040  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1042  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: v48|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction DEOPT info [bci:24, 6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE input: v71|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101489 size: DWORD <|@ <|@
      nr 1062  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: aload_0       
     3: invokevirtual #18         // java.lang.Object.getClass:()java.lang.Class
     6: invokestatic  #76         // copyOf:(java.lang.Object[], int, java.lang.Class)java.lang.Object[]
     9: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6632e17a slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v2|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction v5|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction v6|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   68  <|@ instruction v7|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   70  <|@ instruction v8|QWORD = LEA address: [v7|QWORD + 23] size: QWORD <|@ <|@
      nr   72  <|@ instruction v9|QWORD = AND x: v8|QWORD y: -8 size: QWORD <|@ <|@
      nr   74  <|@ instruction v10|QWORD = ADD (x: v9|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  112  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  114  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  116  <|@ instruction MOV x: [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV x: [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  120  <|@ instruction MOV (x: [v6|QWORD + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr  122  <|@ instruction v12|QWORD = LEA address: [v9|QWORD - 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction CMPCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction MOV x: [v6|QWORD + v13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  166  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 8] size: QWORD <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction v16|QWORD[.] = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction CMP (x: v3|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction v49|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v1|DWORD) condition: > <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction CMPBRANCH (x: v49|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction CMPBRANCH (x: v49|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction v51|DWORD = MOV input: [v48|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  266  <|@ instruction v52|QWORD = MOVE input: v49|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: v51|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction CMPCONSTBRANCH x: v51|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction v53|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction v54|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  338  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  340  <|@ instruction rdx|QWORD = MOVE input: v52|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  342  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  344  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVE input: v49|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction v56|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  396  <|@ instruction v55|QWORD = UNCOMPRESSPOINTER (input: v51|DWORD, ~baseRegister: v56|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  398  <|@ instruction v57|QWORD = MOV input: [v55|QWORD + 208] size: QWORD <|@ <|@
      nr  400  <|@ instruction v58|QWORD = MOVSXD input: [v57|QWORD + 20] size: QWORD <|@ <|@
      nr  402  <|@ instruction v59|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction v60|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rdi|QWORD = LEA address: [v59|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  408  <|@ instruction rsi|QWORD = LEA address: [v60|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  410  <|@ instruction rdx|QWORD = MOVE input: v52|QWORD moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction rcx|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction r8|QWORD = MOVE input: v57|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = STACKMOVE (input: v66|QWORD[.], ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = STACKMOVE (input: v68|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  418  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: v61|DWORD, y: v61|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction rax|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction v18|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  490  <|@ instruction v17|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v18|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  492  <|@ instruction v19|QWORD = MOV input: [v17|QWORD + 112] size: QWORD <|@ <|@
      nr  494  <|@ instruction v20|QWORD[.] = MOV input: [v19|QWORD] size: QWORD <|@ <|@
      nr  496  <|@ instruction v21|DWORD[_] = MOV input: [v20|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  498  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v21|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  500  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction v22|QWORD = MOV input: [v21|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v23|DWORD = MOV input: [v22|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  560  <|@ instruction v25|DWORD = AND x: v23|DWORD y: 63 size: DWORD <|@ <|@
      nr  562  <|@ instruction rcx|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction v26|QWORD = SHL (x: v5|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  566  <|@ instruction v27|DWORD = SAR x: v23|DWORD y: 16 size: DWORD <|@ <|@
      nr  568  <|@ instruction v28|DWORD = AND x: v27|DWORD y: 255 size: DWORD <|@ <|@
      nr  570  <|@ instruction v29|QWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction v30|QWORD = ADD (x: v26|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 7] size: QWORD <|@ <|@
      nr  576  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr  578  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr  612  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  614  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  616  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  618  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr  620  <|@ instruction v36|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  622  <|@ instruction v35|DWORD = COMPRESSPOINTER (input: v22|QWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  624  <|@ instruction MOV (x: [v24|QWORD + 8], y: v35|DWORD) size: DWORD <|@ <|@
      nr  626  <|@ instruction MOV (x: [v24|QWORD + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr  628  <|@ instruction TESTCONSTBRANCH x: v29|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction v39|QWORD = SUB (x: v32|QWORD, ~y: v38|QWORD) size: QWORD <|@ <|@
      nr  654  <|@ instruction CMPCONSTBRANCH x: v39|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction CMPBRANCH (x: v32|QWORD, y: v40|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction MOV x: [v24|QWORD + v40|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  696  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 8] size: QWORD <|@ <|@
      nr  698  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction v43|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  726  <|@ instruction v64|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction v45|DWORD = MOV input: [v44|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  746  <|@ instruction v47|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  748  <|@ instruction v46|QWORD = UNCOMPRESSPOINTER (input: v45|DWORD, ~baseRegister: v47|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: v64|QWORD, y: [v46|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v71|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  760  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  764  <|@ instruction v65|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction rsi|QWORD = MOVE input: v65|QWORD moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  790  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v11|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v71|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction rcx|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction ZERO_MEMORY (pointer: [v6|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v71|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v70|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction v62|DWORD = NOT value: v61|DWORD size: DWORD <|@ <|@
      nr  852  <|@ instruction v63|DWORD = SUB (x: v49|DWORD, ~y: v62|DWORD) size: DWORD <|@ <|@
      nr  854  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction rdx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr  858  <|@ instruction rcx|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction r8|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction r9|DWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr  864  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - v48|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6] <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction rsi|QWORD = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  894  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction MOV x: [v24|QWORD + v29|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  918  <|@ instruction v37|QWORD = LEA address: [v29|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: v37|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction rcx|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction ZERO_MEMORY (pointer: [v38|QWORD + v24|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction MOV x: [r15|QWORD + 1156] y: -99441 size: DWORD <|@ <|@
      nr  966  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  968  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: int[-41753|0xffffffffffff5ce7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  978  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23331 size: DWORD <|@ <|@
      nr  998  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1000  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: int[-39705|0xffffffffffff64e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: int[-40729|0xffffffffffff60e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v50|DWORD) size: DWORD <|@ <|@
      nr 1040  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1042  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: v48|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction DEOPT info [bci:24, 6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE input: v71|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101489 size: DWORD <|@ <|@
      nr 1062  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: aload_0       
     3: invokevirtual #18         // java.lang.Object.getClass:()java.lang.Class
     6: invokestatic  #76         // copyOf:(java.lang.Object[], int, java.lang.Class)java.lang.Object[]
     9: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6632e17a slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD 
>@ <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction r9|QWORD = MOV value: r10|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   68  <|@ instruction r9|QWORD = SHL x: r9|QWORD y: 2 size: QWORD <|@ <|@
      nr   70  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD + 23] size: QWORD <|@ <|@
      nr   72  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr   74  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  112  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  114  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  116  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  120  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  122  <|@ instruction r9|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction MOV x: [rbx|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  166  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction r9|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  266  <|@ instruction r8|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction rdx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  338  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  340  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  342  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  344  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  396  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  398  <|@ instruction r10|QWORD = MOV input: [r10|QWORD + 208] size: QWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD = MOVSXD input: [r10|QWORD + 20] size: QWORD <|@ <|@
      nr  402  <|@ instruction rdi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rbx|QWORD[*] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  408  <|@ instruction rsi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  410  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction r8|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction rax|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  490  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  492  <|@ instruction rcx|QWORD = MOV input: [rsi|QWORD + 112] size: QWORD <|@ <|@
      nr  494  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  496  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  498  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: vstack:2|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rcx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  500  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction rbx|QWORD = MOV input: [rcx|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: vstack:2|QWORD[.] r10|DWORD 
>@ <|@ instruction rsi|DWORD = MOV input: [rbx|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  560  <|@ instruction rcx|DWORD = AND x: rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  564  <|@ instruction r9|QWORD = SHL (x: r9|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  566  <|@ instruction rsi|DWORD = SAR x: rsi|DWORD y: 16 size: DWORD <|@ <|@
      nr  568  <|@ instruction rsi|DWORD = AND x: rsi|DWORD y: 255 size: DWORD <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction r9|QWORD = ADD (x: r9|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction rax|QWORD = LEA address: [r9|QWORD + 7] size: QWORD <|@ <|@
      nr  576  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  578  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  612  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  614  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  616  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  618  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  620  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  622  <|@ instruction rbx|DWORD = COMPRESSPOINTER (input: rbx|QWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  624  <|@ instruction MOV (x: [rdx|QWORD + 8], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  626  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  628  <|@ instruction TESTCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction r9|QWORD = SUB (x: rax|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  654  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  696  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  698  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  726  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  746  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  748  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [rax|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  760  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  764  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: vstack:2|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  792  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: vstack:2|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr  852  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  854  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  858  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  864  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - vstack:0|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6] <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction rsi|QWORD = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: vstack:2|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  896  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: vstack:2|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  918  <|@ instruction rcx|QWORD = LEA address: [rsi|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + rdx|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction MOV x: [r15|QWORD + 1156] y: -99441 size: DWORD <|@ <|@
      nr  966  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  968  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: vstack:2|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-41753|0xffffffffffff5ce7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  978  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23331 size: DWORD <|@ <|@
      nr  998  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1000  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: vstack:2|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-39705|0xffffffffffff64e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-40729|0xffffffffffff60e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1040  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1042  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: rbx|QWORD[.] 
locals: vstack:2|QWORD[.] r10|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction DEOPT info [bci:24, 6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101489 size: DWORD <|@ <|@
      nr 1062  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: aload_0       
     3: invokevirtual #18         // java.lang.Object.getClass:()java.lang.Class
     6: invokestatic  #76         // copyOf:(java.lang.Object[], int, java.lang.Class)java.lang.Object[]
     9: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6632e17a slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD 
>@ <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction r9|QWORD = MOV value: r10|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   68  <|@ instruction r9|QWORD = SHL x: r9|QWORD y: 2 size: QWORD <|@ <|@
      nr   70  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD + 23] size: QWORD <|@ <|@
      nr   72  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr   74  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  112  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  114  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  116  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  120  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  122  <|@ instruction r9|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction MOV x: [rbx|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  166  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction r9|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  266  <|@ instruction r8|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction rdx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  338  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  340  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  342  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  344  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  396  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  398  <|@ instruction r10|QWORD = MOV input: [r10|QWORD + 208] size: QWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD = MOVSXD input: [r10|QWORD + 20] size: QWORD <|@ <|@
      nr  402  <|@ instruction rdi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rbx|QWORD[*] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  408  <|@ instruction rsi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  410  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction r8|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction rax|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  490  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  492  <|@ instruction rcx|QWORD = MOV input: [rsi|QWORD + 112] size: QWORD <|@ <|@
      nr  494  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  496  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  498  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: vstack:2|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rcx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  500  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction rbx|QWORD = MOV input: [rcx|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: vstack:2|QWORD[.] r10|DWORD 
>@ <|@ instruction rsi|DWORD = MOV input: [rbx|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  560  <|@ instruction rcx|DWORD = AND x: rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  564  <|@ instruction r9|QWORD = SHL (x: r9|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  566  <|@ instruction rsi|DWORD = SAR x: rsi|DWORD y: 16 size: DWORD <|@ <|@
      nr  568  <|@ instruction rsi|DWORD = AND x: rsi|DWORD y: 255 size: DWORD <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction r9|QWORD = ADD (x: r9|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction rax|QWORD = LEA address: [r9|QWORD + 7] size: QWORD <|@ <|@
      nr  576  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  578  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  612  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  614  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  616  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  618  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  620  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  622  <|@ instruction rbx|DWORD = COMPRESSPOINTER (input: rbx|QWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  624  <|@ instruction MOV (x: [rdx|QWORD + 8], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  626  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  628  <|@ instruction TESTCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction r9|QWORD = SUB (x: rax|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  654  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  696  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  698  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  726  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  746  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  748  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [rax|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  760  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  764  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: vstack:2|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  792  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: vstack:2|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr  852  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  854  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  858  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  864  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - vstack:0|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6] <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction rsi|QWORD = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: vstack:2|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  896  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: vstack:2|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  918  <|@ instruction rcx|QWORD = LEA address: [rsi|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + rdx|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction MOV x: [r15|QWORD + 1156] y: -99441 size: DWORD <|@ <|@
      nr  966  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  968  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: vstack:2|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-41753|0xffffffffffff5ce7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  978  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23331 size: DWORD <|@ <|@
      nr  998  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1000  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: vstack:2|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-39705|0xffffffffffff64e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-40729|0xffffffffffff60e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1040  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1042  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: rbx|QWORD[.] 
locals: vstack:2|QWORD[.] r10|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction DEOPT info [bci:24, 6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101489 size: DWORD <|@ <|@
      nr 1062  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: aload_0       
     3: invokevirtual #18         // java.lang.Object.getClass:()java.lang.Class
     6: invokestatic  #76         // copyOf:(java.lang.Object[], int, java.lang.Class)java.lang.Object[]
     9: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6632e17a slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD 
>@ <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   36  <|@ instruction r9|QWORD = MOV value: r10|DWORD size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   66  <|@ instruction r9|QWORD = SHL x: r9|QWORD y: 2 size: QWORD <|@ <|@
      nr   68  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD + 23] size: QWORD <|@ <|@
      nr   70  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr   72  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  144  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  146  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  150  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  154  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction r9|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  158  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction MOV x: [rbx|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  202  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  706  <|@ instruction r9|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr  708  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  850  <|@ instruction r8|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  852  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction rdx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  922  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  924  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction vstack:0|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction vstack:1|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction vstack:0|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  986  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  988  <|@ instruction r10|QWORD = MOV input: [r10|QWORD + 208] size: QWORD <|@ <|@
      nr  990  <|@ instruction rcx|QWORD = MOVSXD input: [r10|QWORD + 20] size: QWORD <|@ <|@
      nr  992  <|@ instruction rdi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction rbx|QWORD[*] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  998  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rsi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1002  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1008  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction vstack:0|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction rax|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  288  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  290  <|@ instruction rcx|QWORD = MOV input: [rsi|QWORD + 112] size: QWORD <|@ <|@
      nr  292  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  294  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: vstack:2|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rcx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction rbx|QWORD = MOV input: [rcx|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: vstack:2|QWORD[.] r10|DWORD 
>@ <|@ instruction rsi|DWORD = MOV input: [rbx|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|DWORD = AND x: rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  406  <|@ instruction r9|QWORD = SHL (x: r9|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|DWORD = SAR x: rsi|DWORD y: 16 size: DWORD <|@ <|@
      nr  410  <|@ instruction rsi|DWORD = AND x: rsi|DWORD y: 255 size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction r9|QWORD = ADD (x: r9|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction rax|QWORD = LEA address: [r9|QWORD + 7] size: QWORD <|@ <|@
      nr  418  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  420  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  488  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  490  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  492  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  494  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  496  <|@ instruction rbx|DWORD = COMPRESSPOINTER (input: rbx|QWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  498  <|@ instruction MOV (x: [rdx|QWORD + 8], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  500  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction TESTCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction r9|QWORD = SUB (x: rax|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  594  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  650  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  672  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [rax|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction rbx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: vstack:2|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: vstack:2|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  106  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction r9|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr 1052  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1058  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - vstack:0|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6] <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction rsi|QWORD = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: vstack:2|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  450  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: vstack:2|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  532  <|@ instruction rcx|QWORD = LEA address: [rsi|QWORD + 4] size: QWORD <|@ <|@
      nr  534  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + rdx|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  632  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction MOV x: [r15|QWORD + 1156] y: -99441 size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  320  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: vstack:2|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction vstack:0|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction r11|DWORD = MOVE input: int[-41753|0xffffffffffff5ce7] <|@ <|@
      nr  784  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23331 size: DWORD <|@ <|@
      nr 1106  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1108  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: vstack:2|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction vstack:0|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction r11|DWORD = MOVE input: int[-39705|0xffffffffffff64e7] <|@ <|@
      nr  724  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction vstack:0|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction r11|DWORD = MOVE input: int[-40729|0xffffffffffff60e7] <|@ <|@
      nr  754  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  808  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: rbx|QWORD[.] 
locals: vstack:2|QWORD[.] r10|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction DEOPT info [bci:24, 6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101489 size: DWORD <|@ <|@
      nr  362  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  364  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: aload_0       
     3: invokevirtual #18         // java.lang.Object.getClass:()java.lang.Class
     6: invokestatic  #76         // copyOf:(java.lang.Object[], int, java.lang.Class)java.lang.Object[]
     9: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [712, 1084[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[vstack:1|d]" vstack:1|d -1 [934, 1022[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[vstack:2|q]" vstack:2|q -1 [78, 1108[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:48|q]" vstack:0|q -1 [712, 1084[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[stack:28|d]" vstack:1|d -1 [934, 1022[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[stack:40|q]" vstack:2|q -1 [78, 1108[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6632e17a slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD 
>@ <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   36  <|@ instruction r9|QWORD = MOV value: r10|DWORD size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   66  <|@ instruction r9|QWORD = SHL x: r9|QWORD y: 2 size: QWORD <|@ <|@
      nr   68  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD + 23] size: QWORD <|@ <|@
      nr   70  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr   72  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  144  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  146  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  150  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  154  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction r9|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  158  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction MOV x: [rbx|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  202  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  706  <|@ instruction r9|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr  708  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  850  <|@ instruction r8|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  852  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction rdx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  922  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  924  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  986  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  988  <|@ instruction r10|QWORD = MOV input: [r10|QWORD + 208] size: QWORD <|@ <|@
      nr  990  <|@ instruction rcx|QWORD = MOVSXD input: [r10|QWORD + 20] size: QWORD <|@ <|@
      nr  992  <|@ instruction rdi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction rbx|QWORD[*] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  998  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rsi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1002  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1008  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  288  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  290  <|@ instruction rcx|QWORD = MOV input: [rsi|QWORD + 112] size: QWORD <|@ <|@
      nr  292  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  294  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rcx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction rbx|QWORD = MOV input: [rcx|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction rsi|DWORD = MOV input: [rbx|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|DWORD = AND x: rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  406  <|@ instruction r9|QWORD = SHL (x: r9|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|DWORD = SAR x: rsi|DWORD y: 16 size: DWORD <|@ <|@
      nr  410  <|@ instruction rsi|DWORD = AND x: rsi|DWORD y: 255 size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction r9|QWORD = ADD (x: r9|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction rax|QWORD = LEA address: [r9|QWORD + 7] size: QWORD <|@ <|@
      nr  418  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  420  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  488  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  490  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  492  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  494  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  496  <|@ instruction rbx|DWORD = COMPRESSPOINTER (input: rbx|QWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  498  <|@ instruction MOV (x: [rdx|QWORD + 8], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  500  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction TESTCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction r9|QWORD = SUB (x: rax|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  594  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  650  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  672  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [rax|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction rbx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  106  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr 1052  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1058  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - stack:48|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6] <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction rsi|QWORD = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  450  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  532  <|@ instruction rcx|QWORD = LEA address: [rsi|QWORD + 4] size: QWORD <|@ <|@
      nr  534  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + rdx|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  632  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction MOV x: [r15|QWORD + 1156] y: -99441 size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  320  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction r11|DWORD = MOVE input: int[-41753|0xffffffffffff5ce7] <|@ <|@
      nr  784  <|@ instruction rbx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23331 size: DWORD <|@ <|@
      nr 1106  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1108  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction r11|DWORD = MOVE input: int[-39705|0xffffffffffff64e7] <|@ <|@
      nr  724  <|@ instruction rbx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction r11|DWORD = MOVE input: int[-40729|0xffffffffffff60e7] <|@ <|@
      nr  754  <|@ instruction rbx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  808  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: rbx|QWORD[.] 
locals: stack:40|QWORD[.] r10|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction DEOPT info [bci:24, 6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101489 size: DWORD <|@ <|@
      nr  362  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  364  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: aload_0       
     3: invokevirtual #18         // java.lang.Object.getClass:()java.lang.Class
     6: invokestatic  #76         // copyOf:(java.lang.Object[], int, java.lang.Class)java.lang.Object[]
     9: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6632e17a slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD 
>@ <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   36  <|@ instruction r9|QWORD = MOV value: r10|DWORD size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   66  <|@ instruction r9|QWORD = SHL x: r9|QWORD y: 2 size: QWORD <|@ <|@
      nr   68  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD + 23] size: QWORD <|@ <|@
      nr   70  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr   72  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  144  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  146  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  150  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  154  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction r9|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  158  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction MOV x: [rbx|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  202  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  706  <|@ instruction r9|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr  708  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  850  <|@ instruction r8|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  852  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction rdx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  922  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  924  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  986  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  988  <|@ instruction r10|QWORD = MOV input: [r10|QWORD + 208] size: QWORD <|@ <|@
      nr  990  <|@ instruction rcx|QWORD = MOVSXD input: [r10|QWORD + 20] size: QWORD <|@ <|@
      nr  992  <|@ instruction rdi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction rbx|QWORD[*] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  998  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rsi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1002  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1008  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  288  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  290  <|@ instruction rcx|QWORD = MOV input: [rsi|QWORD + 112] size: QWORD <|@ <|@
      nr  292  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  294  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rcx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction rbx|QWORD = MOV input: [rcx|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction rsi|DWORD = MOV input: [rbx|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|DWORD = AND x: rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  406  <|@ instruction r9|QWORD = SHL (x: r9|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|DWORD = SAR x: rsi|DWORD y: 16 size: DWORD <|@ <|@
      nr  410  <|@ instruction rsi|DWORD = AND x: rsi|DWORD y: 255 size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction r9|QWORD = ADD (x: r9|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction rax|QWORD = LEA address: [r9|QWORD + 7] size: QWORD <|@ <|@
      nr  418  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  420  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  488  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  490  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  492  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  494  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  496  <|@ instruction rbx|DWORD = COMPRESSPOINTER (input: rbx|QWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  498  <|@ instruction MOV (x: [rdx|QWORD + 8], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  500  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction TESTCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction r9|QWORD = SUB (x: rax|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  594  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  650  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  672  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [rax|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction rbx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  106  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr 1052  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1058  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - stack:48|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6] <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction rsi|QWORD = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  450  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  532  <|@ instruction rcx|QWORD = LEA address: [rsi|QWORD + 4] size: QWORD <|@ <|@
      nr  534  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + rdx|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  632  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction MOV x: [r15|QWORD + 1156] y: -99441 size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  320  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction r11|DWORD = MOVE input: int[-41753|0xffffffffffff5ce7] <|@ <|@
      nr  784  <|@ instruction rbx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23331 size: DWORD <|@ <|@
      nr 1106  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1108  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction r11|DWORD = MOVE input: int[-39705|0xffffffffffff64e7] <|@ <|@
      nr  724  <|@ instruction rbx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction r11|DWORD = MOVE input: int[-40729|0xffffffffffff60e7] <|@ <|@
      nr  754  <|@ instruction rbx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  808  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: rbx|QWORD[.] 
locals: stack:40|QWORD[.] r10|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction DEOPT info [bci:24, 6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101489 size: DWORD <|@ <|@
      nr  362  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  364  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: aload_0       
     3: invokevirtual #18         // java.lang.Object.getClass:()java.lang.Class
     6: invokestatic  #76         // copyOf:(java.lang.Object[], int, java.lang.Class)java.lang.Object[]
     9: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6632e17a slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD 
>@ <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   36  <|@ instruction r9|QWORD = MOV value: r10|DWORD size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   66  <|@ instruction r9|QWORD = SHL x: r9|QWORD y: 2 size: QWORD <|@ <|@
      nr   68  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD + 23] size: QWORD <|@ <|@
      nr   70  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr   72  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  144  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  146  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  150  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  154  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction r9|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  158  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction MOV x: [rbx|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  202  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  706  <|@ instruction r9|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr  708  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  850  <|@ instruction r8|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  852  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction rdx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  922  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  924  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  986  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  988  <|@ instruction r10|QWORD = MOV input: [r10|QWORD + 208] size: QWORD <|@ <|@
      nr  990  <|@ instruction rcx|QWORD = MOVSXD input: [r10|QWORD + 20] size: QWORD <|@ <|@
      nr  992  <|@ instruction rdi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction rbx|QWORD[*] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  998  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rsi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1002  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1008  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  288  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  290  <|@ instruction rcx|QWORD = MOV input: [rsi|QWORD + 112] size: QWORD <|@ <|@
      nr  292  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  294  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rcx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction rbx|QWORD = MOV input: [rcx|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction rsi|DWORD = MOV input: [rbx|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|DWORD = AND x: rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  406  <|@ instruction r9|QWORD = SHL (x: r9|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|DWORD = SAR x: rsi|DWORD y: 16 size: DWORD <|@ <|@
      nr  410  <|@ instruction rsi|DWORD = AND x: rsi|DWORD y: 255 size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction r9|QWORD = ADD (x: r9|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction rax|QWORD = LEA address: [r9|QWORD + 7] size: QWORD <|@ <|@
      nr  418  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  420  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  488  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  490  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  492  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  494  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  496  <|@ instruction rbx|DWORD = COMPRESSPOINTER (input: rbx|QWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  498  <|@ instruction MOV (x: [rdx|QWORD + 8], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  500  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction TESTCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction r9|QWORD = SUB (x: rax|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  594  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  650  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  672  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [rax|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction rbx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  106  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr 1052  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1058  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - stack:48|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6] <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction rsi|QWORD = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  450  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  532  <|@ instruction rcx|QWORD = LEA address: [rsi|QWORD + 4] size: QWORD <|@ <|@
      nr  534  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + rdx|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  632  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction MOV x: [r15|QWORD + 1156] y: -99441 size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  320  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction r11|DWORD = MOVE input: int[-41753|0xffffffffffff5ce7] <|@ <|@
      nr  786  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23331 size: DWORD <|@ <|@
      nr 1106  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1108  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction r11|DWORD = MOVE input: int[-39705|0xffffffffffff64e7] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction r11|DWORD = MOVE input: int[-40729|0xffffffffffff60e7] <|@ <|@
      nr  756  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  724  <|@ instruction rbx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  808  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: rbx|QWORD[.] 
locals: stack:40|QWORD[.] r10|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction DEOPT info [bci:24, 6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101489 size: DWORD <|@ <|@
      nr  362  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  364  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: aload_0       
     3: invokevirtual #18         // java.lang.Object.getClass:()java.lang.Class
     6: invokestatic  #76         // copyOf:(java.lang.Object[], int, java.lang.Class)java.lang.Object[]
     9: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6632e17a slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD 
>@ <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   36  <|@ instruction r9|QWORD = MOV value: r10|DWORD size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   66  <|@ instruction r9|QWORD = SHL x: r9|QWORD y: 2 size: QWORD <|@ <|@
      nr   68  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD + 23] size: QWORD <|@ <|@
      nr   70  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr   72  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  144  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  146  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  150  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  154  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction r9|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  158  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction MOV x: [rbx|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  202  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  706  <|@ instruction r9|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr  708  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  850  <|@ instruction r8|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  852  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction rdx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  922  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  924  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  986  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  988  <|@ instruction r10|QWORD = MOV input: [r10|QWORD + 208] size: QWORD <|@ <|@
      nr  990  <|@ instruction rcx|QWORD = MOVSXD input: [r10|QWORD + 20] size: QWORD <|@ <|@
      nr  992  <|@ instruction rdi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction rbx|QWORD[*] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  998  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rsi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1002  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1008  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  288  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  290  <|@ instruction rcx|QWORD = MOV input: [rsi|QWORD + 112] size: QWORD <|@ <|@
      nr  292  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  294  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rcx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction rbx|QWORD = MOV input: [rcx|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction rsi|DWORD = MOV input: [rbx|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|DWORD = AND x: rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  406  <|@ instruction r9|QWORD = SHL (x: r9|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|DWORD = SAR x: rsi|DWORD y: 16 size: DWORD <|@ <|@
      nr  410  <|@ instruction rsi|DWORD = AND x: rsi|DWORD y: 255 size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction r9|QWORD = ADD (x: r9|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction rax|QWORD = LEA address: [r9|QWORD + 7] size: QWORD <|@ <|@
      nr  418  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  420  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  488  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  490  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  492  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  494  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  496  <|@ instruction rbx|DWORD = COMPRESSPOINTER (input: rbx|QWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  498  <|@ instruction MOV (x: [rdx|QWORD + 8], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  500  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction TESTCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction r9|QWORD = SUB (x: rax|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  594  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  650  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  672  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [rax|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction rbx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  106  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr 1052  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1058  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - stack:48|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6] <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction rsi|QWORD = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  450  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  532  <|@ instruction rcx|QWORD = LEA address: [rsi|QWORD + 4] size: QWORD <|@ <|@
      nr  534  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + rdx|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  632  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction MOV x: [r15|QWORD + 1156] y: -99441 size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  320  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction r11|DWORD = MOVE input: int[-41753|0xffffffffffff5ce7] <|@ <|@
      nr  786  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23331 size: DWORD <|@ <|@
      nr 1106  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1108  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction r11|DWORD = MOVE input: int[-39705|0xffffffffffff64e7] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction r11|DWORD = MOVE input: int[-40729|0xffffffffffff60e7] <|@ <|@
      nr  756  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  724  <|@ instruction rbx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  808  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: rbx|QWORD[.] 
locals: stack:40|QWORD[.] r10|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction DEOPT info [bci:24, 6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101489 size: DWORD <|@ <|@
      nr  362  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  364  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: aload_0       
     3: invokevirtual #18         // java.lang.Object.getClass:()java.lang.Class
     6: invokestatic  #76         // copyOf:(java.lang.Object[], int, java.lang.Class)java.lang.Object[]
     9: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6632e17a slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD 
>@ <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   36  <|@ instruction r9|QWORD = MOV value: r10|DWORD size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   66  <|@ instruction r9|QWORD = SHL x: r9|QWORD y: 2 size: QWORD <|@ <|@
      nr   68  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD + 23] size: QWORD <|@ <|@
      nr   70  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr   72  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  144  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  146  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  150  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  154  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction r9|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  158  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction MOV x: [rbx|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  202  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  706  <|@ instruction r9|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr  708  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  850  <|@ instruction r8|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  852  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction rdx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  922  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  924  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  986  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  988  <|@ instruction r10|QWORD = MOV input: [r10|QWORD + 208] size: QWORD <|@ <|@
      nr  990  <|@ instruction rcx|QWORD = MOVSXD input: [r10|QWORD + 20] size: QWORD <|@ <|@
      nr  992  <|@ instruction rdi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction rbx|QWORD[*] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  998  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rsi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1002  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1008  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  288  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  290  <|@ instruction rcx|QWORD = MOV input: [rsi|QWORD + 112] size: QWORD <|@ <|@
      nr  292  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  294  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rcx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction rbx|QWORD = MOV input: [rcx|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction rsi|DWORD = MOV input: [rbx|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|DWORD = AND x: rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  406  <|@ instruction r9|QWORD = SHL (x: r9|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|DWORD = SAR x: rsi|DWORD y: 16 size: DWORD <|@ <|@
      nr  410  <|@ instruction rsi|DWORD = AND x: rsi|DWORD y: 255 size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction r9|QWORD = ADD (x: r9|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction rax|QWORD = LEA address: [r9|QWORD + 7] size: QWORD <|@ <|@
      nr  418  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  420  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  488  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  490  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  492  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  494  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  496  <|@ instruction rbx|DWORD = COMPRESSPOINTER (input: rbx|QWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  498  <|@ instruction MOV (x: [rdx|QWORD + 8], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  500  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction TESTCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction r9|QWORD = SUB (x: rax|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  594  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  650  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  672  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [rax|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction rbx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  106  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr 1052  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1058  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - stack:48|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6] <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction rsi|QWORD = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  450  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  532  <|@ instruction rcx|QWORD = LEA address: [rsi|QWORD + 4] size: QWORD <|@ <|@
      nr  534  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + rdx|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  632  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction MOV x: [r15|QWORD + 1156] y: -99441 size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  320  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction r11|DWORD = MOVE input: int[-41753|0xffffffffffff5ce7] <|@ <|@
      nr  786  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23331 size: DWORD <|@ <|@
      nr 1106  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1108  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction r11|DWORD = MOVE input: int[-39705|0xffffffffffff64e7] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction r11|DWORD = MOVE input: int[-40729|0xffffffffffff60e7] <|@ <|@
      nr  756  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  724  <|@ instruction rbx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  808  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: rbx|QWORD[.] 
locals: stack:40|QWORD[.] r10|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction DEOPT info [bci:24, 6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101489 size: DWORD <|@ <|@
      nr  362  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  364  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: aload_0       
     3: invokevirtual #18         // java.lang.Object.getClass:()java.lang.Class
     6: invokestatic  #76         // copyOf:(java.lang.Object[], int, java.lang.Class)java.lang.Object[]
     9: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6632e17a slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD 
>@ <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   36  <|@ instruction r9|QWORD = MOV value: r10|DWORD size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   66  <|@ instruction r9|QWORD = SHL x: r9|QWORD y: 2 size: QWORD <|@ <|@
      nr   68  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD + 23] size: QWORD <|@ <|@
      nr   70  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr   72  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  144  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  146  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  150  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  154  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction r9|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  158  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction MOV x: [rbx|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  202  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  706  <|@ instruction r9|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr  708  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  850  <|@ instruction r8|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  852  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction rdx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  922  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  924  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  986  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  988  <|@ instruction r10|QWORD = MOV input: [r10|QWORD + 208] size: QWORD <|@ <|@
      nr  990  <|@ instruction rcx|QWORD = MOVSXD input: [r10|QWORD + 20] size: QWORD <|@ <|@
      nr  992  <|@ instruction rdi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction rbx|QWORD[*] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  998  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rsi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1002  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1008  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  288  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  290  <|@ instruction rcx|QWORD = MOV input: [rsi|QWORD + 112] size: QWORD <|@ <|@
      nr  292  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  294  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rcx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction rbx|QWORD = MOV input: [rcx|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction rsi|DWORD = MOV input: [rbx|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|DWORD = AND x: rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  406  <|@ instruction r9|QWORD = SHL (x: r9|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|DWORD = SAR x: rsi|DWORD y: 16 size: DWORD <|@ <|@
      nr  410  <|@ instruction rsi|DWORD = AND x: rsi|DWORD y: 255 size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction r9|QWORD = ADD (x: r9|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction rax|QWORD = LEA address: [r9|QWORD + 7] size: QWORD <|@ <|@
      nr  418  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  420  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  488  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  490  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  492  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  494  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  496  <|@ instruction rbx|DWORD = COMPRESSPOINTER (input: rbx|QWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  498  <|@ instruction MOV (x: [rdx|QWORD + 8], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  500  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction TESTCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction r9|QWORD = SUB (x: rax|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  594  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  650  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  672  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [rax|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction rbx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  106  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr 1052  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1058  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - stack:48|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6] <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction rsi|QWORD = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  450  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  532  <|@ instruction rcx|QWORD = LEA address: [rsi|QWORD + 4] size: QWORD <|@ <|@
      nr  534  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + rdx|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  632  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction MOV x: [r15|QWORD + 1156] y: -99441 size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  320  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction r11|DWORD = MOVE input: int[-41753|0xffffffffffff5ce7] <|@ <|@
      nr  786  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23331 size: DWORD <|@ <|@
      nr 1106  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1108  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction r11|DWORD = MOVE input: int[-39705|0xffffffffffff64e7] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction r11|DWORD = MOVE input: int[-40729|0xffffffffffff60e7] <|@ <|@
      nr  756  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  724  <|@ instruction rbx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  808  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: rbx|QWORD[.] 
locals: stack:40|QWORD[.] r10|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction DEOPT info [bci:24, 6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101489 size: DWORD <|@ <|@
      nr  362  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  364  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: aload_0       
     3: invokevirtual #18         // java.lang.Object.getClass:()java.lang.Class
     6: invokestatic  #76         // copyOf:(java.lang.Object[], int, java.lang.Class)java.lang.Object[]
     9: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6632e17a slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD 
>@ <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   36  <|@ instruction r9|QWORD = MOV value: r10|DWORD size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   66  <|@ instruction r9|QWORD = SHL x: r9|QWORD y: 2 size: QWORD <|@ <|@
      nr   68  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD + 23] size: QWORD <|@ <|@
      nr   70  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr   72  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  144  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  146  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  150  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  154  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction r9|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  158  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction MOV x: [rbx|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  202  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  706  <|@ instruction r9|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr  708  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  850  <|@ instruction r8|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  852  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction rdx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  922  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  924  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  986  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  988  <|@ instruction r10|QWORD = MOV input: [r10|QWORD + 208] size: QWORD <|@ <|@
      nr  990  <|@ instruction rcx|QWORD = MOVSXD input: [r10|QWORD + 20] size: QWORD <|@ <|@
      nr  992  <|@ instruction rdi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction rbx|QWORD[*] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  998  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rsi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1002  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1008  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  288  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  290  <|@ instruction rcx|QWORD = MOV input: [rsi|QWORD + 112] size: QWORD <|@ <|@
      nr  292  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  294  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rcx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction rbx|QWORD = MOV input: [rcx|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction rsi|DWORD = MOV input: [rbx|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|DWORD = AND x: rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  406  <|@ instruction r9|QWORD = SHL (x: r9|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|DWORD = SAR x: rsi|DWORD y: 16 size: DWORD <|@ <|@
      nr  410  <|@ instruction rsi|DWORD = AND x: rsi|DWORD y: 255 size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction r9|QWORD = ADD (x: r9|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction rax|QWORD = LEA address: [r9|QWORD + 7] size: QWORD <|@ <|@
      nr  418  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  420  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  488  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  490  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  492  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  494  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  496  <|@ instruction rbx|DWORD = COMPRESSPOINTER (input: rbx|QWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  498  <|@ instruction MOV (x: [rdx|QWORD + 8], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  500  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction TESTCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction r9|QWORD = SUB (x: rax|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  594  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  650  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  672  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [rax|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction rbx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  106  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr 1052  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1058  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - stack:48|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6] <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction rsi|QWORD = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  450  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  532  <|@ instruction rcx|QWORD = LEA address: [rsi|QWORD + 4] size: QWORD <|@ <|@
      nr  534  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + rdx|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  632  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction MOV x: [r15|QWORD + 1156] y: -99441 size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  320  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction r11|DWORD = MOVE input: int[-41753|0xffffffffffff5ce7] <|@ <|@
      nr  786  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  724  <|@ instruction rbx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  808  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: rbx|QWORD[.] 
locals: stack:40|QWORD[.] r10|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction DEOPT info [bci:24, 6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23331 size: DWORD <|@ <|@
      nr 1106  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1108  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction r11|DWORD = MOVE input: int[-39705|0xffffffffffff64e7] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction r11|DWORD = MOVE input: int[-40729|0xffffffffffff60e7] <|@ <|@
      nr  756  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101489 size: DWORD <|@ <|@
      nr  362  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  364  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: aload_0       
     3: invokevirtual #18         // java.lang.Object.getClass:()java.lang.Class
     6: invokestatic  #76         // copyOf:(java.lang.Object[], int, java.lang.Class)java.lang.Object[]
     9: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6632e17a slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD 
>@ <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   36  <|@ instruction r9|QWORD = MOV value: r10|DWORD size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   66  <|@ instruction r9|QWORD = SHL x: r9|QWORD y: 2 size: QWORD <|@ <|@
      nr   68  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD + 23] size: QWORD <|@ <|@
      nr   70  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr   72  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  144  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  146  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  150  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  154  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction r9|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  158  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction MOV x: [rbx|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  202  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  706  <|@ instruction r9|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr  708  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  850  <|@ instruction r8|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  852  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction rdx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  922  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  924  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  986  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  988  <|@ instruction r10|QWORD = MOV input: [r10|QWORD + 208] size: QWORD <|@ <|@
      nr  990  <|@ instruction rcx|QWORD = MOVSXD input: [r10|QWORD + 20] size: QWORD <|@ <|@
      nr  992  <|@ instruction rdi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction rbx|QWORD[*] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  998  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rsi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1002  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1008  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  288  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  290  <|@ instruction rcx|QWORD = MOV input: [rsi|QWORD + 112] size: QWORD <|@ <|@
      nr  292  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  294  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rcx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction rbx|QWORD = MOV input: [rcx|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction rsi|DWORD = MOV input: [rbx|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|DWORD = AND x: rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  406  <|@ instruction r9|QWORD = SHL (x: r9|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|DWORD = SAR x: rsi|DWORD y: 16 size: DWORD <|@ <|@
      nr  410  <|@ instruction rsi|DWORD = AND x: rsi|DWORD y: 255 size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction r9|QWORD = ADD (x: r9|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction rax|QWORD = LEA address: [r9|QWORD + 7] size: QWORD <|@ <|@
      nr  418  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  420  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  488  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  490  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  492  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  494  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  496  <|@ instruction rbx|DWORD = COMPRESSPOINTER (input: rbx|QWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  498  <|@ instruction MOV (x: [rdx|QWORD + 8], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  500  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction TESTCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction r9|QWORD = SUB (x: rax|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  594  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  650  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  672  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [rax|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction rbx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  106  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr 1052  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1058  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - stack:48|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6] <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction rsi|QWORD = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  450  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  532  <|@ instruction rcx|QWORD = LEA address: [rsi|QWORD + 4] size: QWORD <|@ <|@
      nr  534  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + rdx|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  632  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction MOV x: [r15|QWORD + 1156] y: -99441 size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  320  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction r11|DWORD = MOVE input: int[-41753|0xffffffffffff5ce7] <|@ <|@
      nr  786  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  724  <|@ instruction rbx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  808  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: rbx|QWORD[.] 
locals: stack:40|QWORD[.] r10|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction DEOPT info [bci:24, 6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23331 size: DWORD <|@ <|@
      nr 1106  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1108  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction r11|DWORD = MOVE input: int[-39705|0xffffffffffff64e7] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction r11|DWORD = MOVE input: int[-40729|0xffffffffffff60e7] <|@ <|@
      nr  756  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101489 size: DWORD <|@ <|@
      nr  362  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  364  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: aload_0       
     3: invokevirtual #18         // java.lang.Object.getClass:()java.lang.Class
     6: invokestatic  #76         // copyOf:(java.lang.Object[], int, java.lang.Class)java.lang.Object[]
     9: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6632e17a slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD 
>@ <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   36  <|@ instruction r9|QWORD = MOV value: r10|DWORD size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   66  <|@ instruction r9|QWORD = SHL x: r9|QWORD y: 2 size: QWORD <|@ <|@
      nr   68  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD + 23] size: QWORD <|@ <|@
      nr   70  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr   72  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  144  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  146  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  150  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  154  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction r9|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  158  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction MOV x: [rbx|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  202  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  706  <|@ instruction r9|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr  708  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  850  <|@ instruction r8|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  852  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction rdx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  922  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  924  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  986  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  988  <|@ instruction r10|QWORD = MOV input: [r10|QWORD + 208] size: QWORD <|@ <|@
      nr  990  <|@ instruction rcx|QWORD = MOVSXD input: [r10|QWORD + 20] size: QWORD <|@ <|@
      nr  992  <|@ instruction rdi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction rbx|QWORD[*] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  998  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rsi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1002  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1008  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  288  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  290  <|@ instruction rcx|QWORD = MOV input: [rsi|QWORD + 112] size: QWORD <|@ <|@
      nr  292  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  294  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rcx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction rbx|QWORD = MOV input: [rcx|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction rsi|DWORD = MOV input: [rbx|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|DWORD = AND x: rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  406  <|@ instruction r9|QWORD = SHL (x: r9|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|DWORD = SAR x: rsi|DWORD y: 16 size: DWORD <|@ <|@
      nr  410  <|@ instruction rsi|DWORD = AND x: rsi|DWORD y: 255 size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction r9|QWORD = ADD (x: r9|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction rax|QWORD = LEA address: [r9|QWORD + 7] size: QWORD <|@ <|@
      nr  418  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  420  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  488  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  490  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  492  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  494  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  496  <|@ instruction rbx|DWORD = COMPRESSPOINTER (input: rbx|QWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  498  <|@ instruction MOV (x: [rdx|QWORD + 8], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  500  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction TESTCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction r9|QWORD = SUB (x: rax|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  594  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  650  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  672  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [rax|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction rbx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  106  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr 1052  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1058  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - stack:48|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6] <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction rsi|QWORD = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  450  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  532  <|@ instruction rcx|QWORD = LEA address: [rsi|QWORD + 4] size: QWORD <|@ <|@
      nr  534  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + rdx|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  632  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction MOV x: [r15|QWORD + 1156] y: -99441 size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  320  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction r11|DWORD = MOVE input: int[-41753|0xffffffffffff5ce7] <|@ <|@
      nr  786  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  724  <|@ instruction rbx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  808  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: rbx|QWORD[.] 
locals: stack:40|QWORD[.] r10|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction DEOPT info [bci:24, 6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23331 size: DWORD <|@ <|@
      nr 1106  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1108  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction r11|DWORD = MOVE input: int[-39705|0xffffffffffff64e7] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction r11|DWORD = MOVE input: int[-40729|0xffffffffffff60e7] <|@ <|@
      nr  756  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101489 size: DWORD <|@ <|@
      nr  362  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  364  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: aload_0       
     3: invokevirtual #18         // java.lang.Object.getClass:()java.lang.Class
     6: invokestatic  #76         // copyOf:(java.lang.Object[], int, java.lang.Class)java.lang.Object[]
     9: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6632e17a slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD 
>@ <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   36  <|@ instruction r9|QWORD = MOV value: r10|DWORD size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   66  <|@ instruction r9|QWORD = SHL x: r9|QWORD y: 2 size: QWORD <|@ <|@
      nr   68  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD + 23] size: QWORD <|@ <|@
      nr   70  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr   72  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  144  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  146  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  150  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  154  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction r9|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  158  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction MOV x: [rbx|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  202  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  706  <|@ instruction r9|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr  708  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  850  <|@ instruction r8|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  852  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction rdx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  922  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  924  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  986  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  988  <|@ instruction r10|QWORD = MOV input: [r10|QWORD + 208] size: QWORD <|@ <|@
      nr  990  <|@ instruction rcx|QWORD = MOVSXD input: [r10|QWORD + 20] size: QWORD <|@ <|@
      nr  992  <|@ instruction rdi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction rbx|QWORD[*] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  998  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rsi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1002  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1008  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  288  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  290  <|@ instruction rcx|QWORD = MOV input: [rsi|QWORD + 112] size: QWORD <|@ <|@
      nr  292  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  294  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  296  <|@ st <@st|@reference-map: [rcx:0, stack:8]
live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rcx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction rbx|QWORD = MOV input: [rcx|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  338  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction rsi|DWORD = MOV input: [rbx|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|DWORD = AND x: rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  406  <|@ instruction r9|QWORD = SHL (x: r9|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|DWORD = SAR x: rsi|DWORD y: 16 size: DWORD <|@ <|@
      nr  410  <|@ instruction rsi|DWORD = AND x: rsi|DWORD y: 255 size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction r9|QWORD = ADD (x: r9|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction rax|QWORD = LEA address: [r9|QWORD + 7] size: QWORD <|@ <|@
      nr  418  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  420  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  488  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  490  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  492  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  494  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  496  <|@ instruction rbx|DWORD = COMPRESSPOINTER (input: rbx|QWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  498  <|@ instruction MOV (x: [rdx|QWORD + 8], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  500  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction TESTCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction r9|QWORD = SUB (x: rax|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  594  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  650  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  672  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [rax|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction rbx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  104  <|@ st <@st|@reference-map: [rax:0, stack:8]
live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  106  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr 1052  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1058  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - stack:48|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6] <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction rsi|QWORD = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  450  <|@ st <@st|@reference-map: [rax:0, stack:8]
live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  532  <|@ instruction rcx|QWORD = LEA address: [rsi|QWORD + 4] size: QWORD <|@ <|@
      nr  534  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + rdx|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  632  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction MOV x: [r15|QWORD + 1156] y: -99441 size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  320  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction r11|DWORD = MOVE input: int[-41753|0xffffffffffff5ce7] <|@ <|@
      nr  786  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  724  <|@ instruction rbx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  808  <|@ st <@st|@reference-map: [rbx:0, stack:8]
live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: rbx|QWORD[.] 
locals: stack:40|QWORD[.] r10|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction DEOPT info [bci:24, 6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23331 size: DWORD <|@ <|@
      nr 1106  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1108  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction r11|DWORD = MOVE input: int[-39705|0xffffffffffff64e7] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction r11|DWORD = MOVE input: int[-40729|0xffffffffffff60e7] <|@ <|@
      nr  756  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101489 size: DWORD <|@ <|@
      nr  362  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  364  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: aload_0       
     3: invokevirtual #18         // java.lang.Object.getClass:()java.lang.Class
     6: invokestatic  #76         // copyOf:(java.lang.Object[], int, java.lang.Class)java.lang.Object[]
     9: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6632e17a slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD 
>@ <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   36  <|@ instruction r9|QWORD = MOV value: r10|DWORD size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   66  <|@ instruction r9|QWORD = SHL x: r9|QWORD y: 2 size: QWORD <|@ <|@
      nr   68  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD + 23] size: QWORD <|@ <|@
      nr   70  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr   72  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  144  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  146  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  150  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  154  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction r9|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  158  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction MOV x: [rbx|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  202  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  706  <|@ instruction r9|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr  708  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  850  <|@ instruction r8|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  852  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction rdx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  922  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  924  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  986  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  988  <|@ instruction r10|QWORD = MOV input: [r10|QWORD + 208] size: QWORD <|@ <|@
      nr  990  <|@ instruction rcx|QWORD = MOVSXD input: [r10|QWORD + 20] size: QWORD <|@ <|@
      nr  992  <|@ instruction rdi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction rbx|QWORD[*] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  998  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rsi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1002  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1008  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  288  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  290  <|@ instruction rcx|QWORD = MOV input: [rsi|QWORD + 112] size: QWORD <|@ <|@
      nr  292  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  294  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  296  <|@ st <@st|@reference-map: [rcx:0, stack:8]
live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rcx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction rbx|QWORD = MOV input: [rcx|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  338  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction rsi|DWORD = MOV input: [rbx|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|DWORD = AND x: rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  406  <|@ instruction r9|QWORD = SHL (x: r9|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|DWORD = SAR x: rsi|DWORD y: 16 size: DWORD <|@ <|@
      nr  410  <|@ instruction rsi|DWORD = AND x: rsi|DWORD y: 255 size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction r9|QWORD = ADD (x: r9|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction rax|QWORD = LEA address: [r9|QWORD + 7] size: QWORD <|@ <|@
      nr  418  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  420  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  488  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  490  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  492  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  494  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  496  <|@ instruction rbx|DWORD = COMPRESSPOINTER (input: rbx|QWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  498  <|@ instruction MOV (x: [rdx|QWORD + 8], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  500  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction TESTCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction r9|QWORD = SUB (x: rax|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  594  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  650  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  672  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [rax|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction rbx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  104  <|@ st <@st|@reference-map: [rax:0, stack:8]
live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  106  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr 1052  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1058  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - stack:48|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6] <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction rsi|QWORD = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  450  <|@ st <@st|@reference-map: [rax:0, stack:8]
live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  532  <|@ instruction rcx|QWORD = LEA address: [rsi|QWORD + 4] size: QWORD <|@ <|@
      nr  534  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + rdx|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  632  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction MOV x: [r15|QWORD + 1156] y: -99441 size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  320  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction r11|DWORD = MOVE input: int[-41753|0xffffffffffff5ce7] <|@ <|@
      nr  786  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  724  <|@ instruction rbx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  808  <|@ st <@st|@reference-map: [rbx:0, stack:8]
live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: rbx|QWORD[.] 
locals: stack:40|QWORD[.] r10|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
>@ <|@ instruction DEOPT info [bci:24, 6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23331 size: DWORD <|@ <|@
      nr 1106  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1108  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: stack:40|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction r11|DWORD = MOVE input: int[-39705|0xffffffffffff64e7] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction r11|DWORD = MOVE input: int[-40729|0xffffffffffff60e7] <|@ <|@
      nr  756  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction MOV x: [r15|QWORD + 1156] y: -101489 size: DWORD <|@ <|@
      nr  362  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  364  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: aload_0       
     3: invokevirtual #18         // java.lang.Object.getClass:()java.lang.Class
     6: invokestatic  #76         // copyOf:(java.lang.Object[], int, java.lang.Class)java.lang.Object[]
     9: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec289041817f20000000000f857905000090909090909090909090909048896c2420448bd2448b5e08448b460c458bca4181fbaddeadde0f85eb0100009090909090909090909090498b9fb801000049c1e102498d79174883e7f8488bd74803d3493b97c80100000f87490300009090909090909090909090909090498997b80100000f18841f000100000f18841f400100000f18841f8001000048c70301000000c74308addeadde4489530c4c8d4ff04981f9000800000f833003000090909048c7c210000000e91d00000066660f1f8400000000009090909090909048c7041300000000488d520890909090483bfa77e490909090909090909090909090453bc2458bc8450f4fca4585c90f8c2004000090909090453bc80f872704000090909090453bca0f87a0030000909090904585c90f84e2000000909090909090448b5308458bc1453bd30f854e0000009090909090909090909090909090909090488bd3488d7e10488d7210498bd048891c24e8000000009090909090909090488b0424488b6c24204883c428493ba7500400000f8700040000c5f877c3909090904181faaddeadde0f8505000000909090eb9f44894c241448891c24909090909090909090909090909090909090909090909048bf0000002b787f00004e8d14174d8b92d000000049634a14488bfe488b1c24488d7f104889742408488d7310498bd04d8bc2e80000000085c00f85fa010000909090e95cffffff48891c24909090e950ffffff4889742408909090909090909090909048b90000002b787f00004a8d3419488b4e70488b098b49408504cd0000000081f9addeadde0f8440020000909090909090488b1ccd180000008b73084585d20f8cde0200009090909090909090909090909090909090498b97b80100008bce83e13f49d3e1c1fe1081e6ff0000004c03ce498d41074883e0f8488bc84803ca493b8fc80100000f87840100009090909090909090909090909049898fb80100000f188410000100000f188410400100000f1884108001000048c7020100000048b90000002b787f0000482bd9895a084489520c48f7c6070000000f855601000090909090909090904c8bc84c2bce4981f9000800000f8355010000909090e92f0000006666660f1f84000000000066666690660f1f840000000000666666909090909090909048c7043200000000488d760890909090483bc677e49090909090909048beaddeaddeaddeadde90909090909090908b420848b90000002b787f0000488d0401483b70380f8562010000909090488bda488b742408e943fdffff488974240848beaddeaddeaddeadde909090909090909090418bd2e8000000000f1f8400000000008500488bd8488b742408e90cfdffff4889742408909090909090909090498bc9488d7b104833c0f348aae9e8fcffff448b4c241490909090909090909090909090f7d0442bc8488b7424088bd0488b0c24448bc0666690e8000000000f1f840000000000e930fdffff909090909090909090488bf3418bd2e8000000000f1f8400000000008500488bd0e90cffffff90909090909090c7043200000000488d4e04488bf1e993feffff909090909090909090498bc9488d3c164833c0f348aae9d3feffff9090909090909041c787840400008f7bfeff49c7879004000000000000e8000000000f1f84000000000048891c24488974240890909041bbe75cffff488b1c249090909090909045899f8404000049c7879004000000000000e8000000000f1f8400000000009090909090909041c78784040000dda4ffff49c7879004000000000000e8000000000f1f84000000000048891c24488974240890909041bbe764ffffeb9848891c24488974240890909041bbe760ffffeb84488b7424089090909090909041c787840400008f73feff49c7879004000000000000e8000000000f1f84000000000048896c2420e800000000e978fafffff4488d0decfbffff49898f68040000e94afafffff441c78784040000f5ccffff49c7879004000000000000e8000000000f1f84000000000041c787840400008f77feff49c7879004000000000000e8000000000f1f84000000000041c787840400008fe6feff49c7879004000000000000e8000000000f1f84000000000041c787840400008f6ffeff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 NOP  <||@
  Comment 27 4 NOP  <||@
  Comment 28 6 NOP  <||@
  Comment 29 8 NOP  <||@
  Comment 30 10 NOP  <||@
  Comment 31 12 NOP  <||@
  Comment 32 14 NOP  <||@
  Comment 33 16 NOP  <||@
  Comment 34 18 NOP  <||@
  Comment 35 20 NOP  <||@
  Comment 36 22 NOP  <||@
  Comment 37 24 NOP  <||@
  Comment 38 26 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 43 28 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6632e17a slotKind: QWORD  <||@
  Comment 43 30 r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 46 32 r11|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 46 [rsi:0]at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |r10|DWORD   <||@
  Comment 46 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 50 34 r8|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 54 36 r9|QWORD = MOV value: r10|DWORD size: DWORD  <||@
  Comment 57 38 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 57 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 70 block B1 null  <||@
  Comment 70 40 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 70 42 NOP  <||@
  Comment 71 44 NOP  <||@
  Comment 72 46 NOP  <||@
  Comment 73 48 NOP  <||@
  Comment 74 50 NOP  <||@
  Comment 75 52 NOP  <||@
  Comment 76 54 NOP  <||@
  Comment 77 56 NOP  <||@
  Comment 78 58 NOP  <||@
  Comment 79 60 NOP  <||@
  Comment 80 62 NOP  <||@
  Comment 81 64 rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 88 66 r9|QWORD = SHL x: r9|QWORD y: 2 size: QWORD  <||@
  Comment 92 68 rdi|QWORD = LEA address: [r9|QWORD + 23] size: QWORD  <||@
  Comment 96 70 rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD  <||@
  Comment 100 72 rdx|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 106 74 CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD  <||@
  Comment 119 block B3 null  <||@
  Comment 119 112 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 119 114 NOP  <||@
  Comment 120 116 NOP  <||@
  Comment 121 118 NOP  <||@
  Comment 122 120 NOP  <||@
  Comment 123 122 NOP  <||@
  Comment 124 124 NOP  <||@
  Comment 125 126 NOP  <||@
  Comment 126 128 NOP  <||@
  Comment 127 130 NOP  <||@
  Comment 128 132 NOP  <||@
  Comment 129 134 NOP  <||@
  Comment 130 136 NOP  <||@
  Comment 131 138 NOP  <||@
  Comment 132 140 NOP  <||@
  Comment 133 142 MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD  <||@
  Comment 140 144 AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 256] instr: 0  <||@
  Comment 148 146 AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 320] instr: 0  <||@
  Comment 156 148 AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 384] instr: 0  <||@
  Comment 164 150 MOV x: [rbx|QWORD] y: 1 size: QWORD  <||@
  Comment 171 152 MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 171 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 178 154 MOV (x: [rbx|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 182 156 r9|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD  <||@
  Comment 186 158 CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 199 block B4 null  <||@
  Comment 199 160 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 199 162 NOP  <||@
  Comment 200 164 NOP  <||@
  Comment 201 166 NOP  <||@
  Comment 202 168 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 209 170 JUMP ~outgoingValues: [] destination: B4 -> B5  <||@
  Comment 214 block B6 loop 0 depth 1 header:226|LoopBegin  <||@
  Comment 214 184 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 224 186 NOP  <||@
  Comment 225 188 NOP  <||@
  Comment 226 190 NOP  <||@
  Comment 227 192 NOP  <||@
  Comment 228 194 NOP  <||@
  Comment 229 196 NOP  <||@
  Comment 230 198 NOP  <||@
  Comment 231 200 MOV x: [rbx|QWORD + rdx|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 239 202 rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD  <||@
  Comment 243 204 JUMP ~outgoingValues: [] destination: B6 -> B5  <||@
  Comment 243 block B5 loop 0 depth 1 header:226|LoopBegin  <||@
  Comment 243 172 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 243 174 NOP  <||@
  Comment 244 176 NOP  <||@
  Comment 245 178 NOP  <||@
  Comment 246 180 NOP  <||@
  Comment 247 182 CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD  <||@
  Comment 252 block B7 null  <||@
  Comment 252 206 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 252 208 NOP  <||@
  Comment 253 210 NOP  <||@
  Comment 254 212 NOP  <||@
  Comment 255 214 JUMP ~outgoingValues: [] destination: B7 -> B9  <||@
  Comment 255 block B9 null  <||@
  Comment 255 246 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 255 248 NOP  <||@
  Comment 256 250 NOP  <||@
  Comment 257 252 NOP  <||@
  Comment 258 254 NOP  <||@
  Comment 259 256 rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD  <||@
  Comment 259 258 JUMP ~outgoingValues: [] destination: B9 -> B28  <||@
  Comment 259 block B28 null  <||@
  Comment 259 690 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 259 692 NOP  <||@
  Comment 260 694 NOP  <||@
  Comment 261 696 NOP  <||@
  Comment 262 698 NOP  <||@
  Comment 263 700 NOP  <||@
  Comment 264 702 NOP  <||@
  Comment 265 704 CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 268 706 r9|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: >  <||@
  Comment 275 708 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD  <||@
  Comment 284 block B30 null  <||@
  Comment 284 728 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 284 730 NOP  <||@
  Comment 285 732 NOP  <||@
  Comment 286 734 NOP  <||@
  Comment 287 736 NOP  <||@
  Comment 288 738 CMPBRANCH (x: r9|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD  <||@
  Comment 297 block B32 null  <||@
  Comment 297 758 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 297 760 NOP  <||@
  Comment 298 762 NOP  <||@
  Comment 299 764 NOP  <||@
  Comment 300 766 NOP  <||@
  Comment 301 768 CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD  <||@
  Comment 310 block B35 null  <||@
  Comment 310 810 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 310 812 NOP  <||@
  Comment 311 814 NOP  <||@
  Comment 312 816 NOP  <||@
  Comment 313 818 NOP  <||@
  Comment 314 820 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD  <||@
  Comment 323 block B37 null  <||@
  Comment 323 834 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 323 836 NOP  <||@
  Comment 324 838 NOP  <||@
  Comment 325 840 NOP  <||@
  Comment 326 842 NOP  <||@
  Comment 327 844 NOP  <||@
  Comment 328 846 NOP  <||@
  Comment 329 848 r10|DWORD = MOV input: [rbx|QWORD[.] + 8] size: DWORD  <||@
  Comment 333 850 r8|QWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 336 852 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD  <||@
  Comment 345 block B38 null  <||@
  Comment 345 854 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 345 856 NOP  <||@
  Comment 346 858 NOP  <||@
  Comment 347 860 NOP  <||@
  Comment 348 862 JUMP ~outgoingValues: [] destination: B38 -> B41  <||@
  Comment 348 block B41 null  <||@
  Comment 348 886 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 348 888 NOP  <||@
  Comment 349 890 NOP  <||@
  Comment 350 892 NOP  <||@
  Comment 351 894 NOP  <||@
  Comment 352 896 NOP  <||@
  Comment 353 898 NOP  <||@
  Comment 354 900 NOP  <||@
  Comment 355 902 NOP  <||@
  Comment 356 904 NOP  <||@
  Comment 357 906 NOP  <||@
  Comment 358 908 NOP  <||@
  Comment 359 910 NOP  <||@
  Comment 360 912 NOP  <||@
  Comment 361 914 NOP  <||@
  Comment 362 916 rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 362 918 rdx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 365 920 rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 369 922 rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD  <||@
  Comment 373 924 rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD  <||@
  Comment 376 926 stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 380 928 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 380 {Field[name=StubRoutines::_arrayof_oop_arraycopy, type=address, offset=0, address=0x7f78b1ffa468, value=140155947492448]:0x7f789976a460}  <||@
  Comment 385 930 JUMP ~outgoingValues: [] destination: B41 -> B45  <||@
  Comment 385 block B45 null  <||@
  Comment 385 1066 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 385 1068 NOP  <||@
  Comment 386 1070 NOP  <||@
  Comment 387 1072 NOP  <||@
  Comment 388 1074 NOP  <||@
  Comment 389 1076 NOP  <||@
  Comment 390 1078 NOP  <||@
  Comment 391 1080 NOP  <||@
  Comment 392 1082 NOP  <||@
  Comment 393 1084 rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 397 1086 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 406 POLL_RETURN_FAR  <||@
  Comment 423 block B39 null  <||@
  Comment 423 864 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 423 866 NOP  <||@
  Comment 424 868 NOP  <||@
  Comment 425 870 NOP  <||@
  Comment 426 872 NOP  <||@
  Comment 427 874 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 427 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 440 block B40 null  <||@
  Comment 440 876 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 440 878 NOP  <||@
  Comment 441 880 NOP  <||@
  Comment 442 882 NOP  <||@
  Comment 443 884 JUMP ~outgoingValues: [] destination: B40 -> B41  <||@
  Comment 445 block B42 null  <||@
  Comment 445 932 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 445 934 stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 450 936 stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 454 938 NOP  <||@
  Comment 455 940 NOP  <||@
  Comment 456 942 NOP  <||@
  Comment 457 944 NOP  <||@
  Comment 458 946 NOP  <||@
  Comment 459 948 NOP  <||@
  Comment 460 950 NOP  <||@
  Comment 461 952 NOP  <||@
  Comment 462 954 NOP  <||@
  Comment 463 956 NOP  <||@
  Comment 464 958 NOP  <||@
  Comment 465 960 NOP  <||@
  Comment 466 962 NOP  <||@
  Comment 467 964 NOP  <||@
  Comment 468 966 NOP  <||@
  Comment 469 968 NOP  <||@
  Comment 470 970 NOP  <||@
  Comment 471 972 NOP  <||@
  Comment 472 974 NOP  <||@
  Comment 473 976 NOP  <||@
  Comment 474 978 NOP  <||@
  Comment 475 980 NOP  <||@
  Comment 476 982 NOP  <||@
  Comment 477 984 rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 487 986 r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0  <||@
  Comment 491 988 r10|QWORD = MOV input: [r10|QWORD + 208] size: QWORD  <||@
  Comment 498 990 rcx|QWORD = MOVSXD input: [r10|QWORD + 20] size: QWORD  <||@
  Comment 502 992 rdi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 505 994 rbx|QWORD[*] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 509 996 rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD  <||@
  Comment 513 998 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 518 1000 rsi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD  <||@
  Comment 522 1002 rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD  <||@
  Comment 525 1004 r8|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 528 1006 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 528 {Field[name=StubRoutines::_checkcast_arraycopy, type=address, offset=0, address=0x7f78b2050448, value=140155947493504]:0x7f789976a880}  <||@
  Comment 533 1008 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD  <||@
  Comment 541 block B43 null  <||@
  Comment 541 1010 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 541 1012 NOP  <||@
  Comment 542 1014 NOP  <||@
  Comment 543 1016 NOP  <||@
  Comment 544 1018 JUMP ~outgoingValues: [] destination: B43 -> B45  <||@
  Comment 549 block B36 null  <||@
  Comment 549 822 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 549 824 stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 553 826 NOP  <||@
  Comment 554 828 NOP  <||@
  Comment 555 830 NOP  <||@
  Comment 556 832 JUMP ~outgoingValues: [] destination: B36 -> B45  <||@
  Comment 561 block B10 null  <||@
  Comment 561 260 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 561 262 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 566 264 NOP  <||@
  Comment 567 266 NOP  <||@
  Comment 568 268 NOP  <||@
  Comment 569 270 NOP  <||@
  Comment 570 272 NOP  <||@
  Comment 571 274 NOP  <||@
  Comment 572 276 NOP  <||@
  Comment 573 278 NOP  <||@
  Comment 574 280 NOP  <||@
  Comment 575 282 NOP  <||@
  Comment 576 284 NOP  <||@
  Comment 577 286 rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 587 288 rsi|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0  <||@
  Comment 591 290 rcx|QWORD = MOV input: [rsi|QWORD + 112] size: QWORD  <||@
  Comment 595 292 rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD  <||@
  Comment 598 294 rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 64] size: DWORD  <||@
  Comment 601 296 NULLCHECK address: [rcx|DWORD[_] * 8] state [bci:0]  <||@
  Comment 601 [rcx:0, stack:8]at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:40|QWORD[.]  |r10|DWORD   <||@
  Comment 601 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 608 298 CMPCONSTBRANCH x: rcx|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void]  <||@
  Comment 608 {NarrowOop[Class:void]}  <||@
  Comment 620 block B12 null  <||@
  Comment 620 322 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 620 324 NOP  <||@
  Comment 621 326 NOP  <||@
  Comment 622 328 NOP  <||@
  Comment 623 330 NOP  <||@
  Comment 624 332 NOP  <||@
  Comment 625 334 NOP  <||@
  Comment 626 336 rbx|QWORD = MOV input: [rcx|DWORD[_] * 8 + 24] size: QWORD  <||@
  Comment 634 338 rsi|DWORD = MOV input: [rbx|QWORD + 8] size: DWORD state [bci:0]  <||@
  Comment 634 [stack:8]at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:40|QWORD[.]  |r10|DWORD   <||@
  Comment 634 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 637 340 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD  <||@
  Comment 646 block B14 null  <||@
  Comment 646 366 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 646 368 NOP  <||@
  Comment 647 370 NOP  <||@
  Comment 648 372 NOP  <||@
  Comment 649 374 NOP  <||@
  Comment 650 376 NOP  <||@
  Comment 651 378 NOP  <||@
  Comment 652 380 NOP  <||@
  Comment 653 382 NOP  <||@
  Comment 654 384 NOP  <||@
  Comment 655 386 NOP  <||@
  Comment 656 388 NOP  <||@
  Comment 657 390 NOP  <||@
  Comment 658 392 NOP  <||@
  Comment 659 394 NOP  <||@
  Comment 660 396 NOP  <||@
  Comment 661 398 NOP  <||@
  Comment 662 400 NOP  <||@
  Comment 663 402 rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 670 404 rcx|DWORD = AND x: rsi|DWORD y: 63 size: DWORD  <||@
  Comment 675 406 r9|QWORD = SHL (x: r9|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 678 408 rsi|DWORD = SAR x: rsi|DWORD y: 16 size: DWORD  <||@
  Comment 681 410 rsi|DWORD = AND x: rsi|DWORD y: 255 size: DWORD  <||@
  Comment 687 412 rsi|QWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 687 414 r9|QWORD = ADD (x: r9|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 690 416 rax|QWORD = LEA address: [r9|QWORD + 7] size: QWORD  <||@
  Comment 694 418 rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD  <||@
  Comment 698 420 rcx|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 704 422 CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD  <||@
  Comment 717 block B16 null  <||@
  Comment 717 456 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 717 458 NOP  <||@
  Comment 718 460 NOP  <||@
  Comment 719 462 NOP  <||@
  Comment 720 464 NOP  <||@
  Comment 721 466 NOP  <||@
  Comment 722 468 NOP  <||@
  Comment 723 470 NOP  <||@
  Comment 724 472 NOP  <||@
  Comment 725 474 NOP  <||@
  Comment 726 476 NOP  <||@
  Comment 727 478 NOP  <||@
  Comment 728 480 NOP  <||@
  Comment 729 482 NOP  <||@
  Comment 730 484 MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD  <||@
  Comment 737 486 AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 745 488 AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 753 490 AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 761 492 MOV x: [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 768 494 rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 778 496 rbx|DWORD = COMPRESSPOINTER (input: rbx|QWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0  <||@
  Comment 781 498 MOV (x: [rdx|QWORD + 8], y: rbx|DWORD) size: DWORD  <||@
  Comment 784 500 MOV (x: [rdx|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 788 502 TESTCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD  <||@
  Comment 801 block B17 null  <||@
  Comment 801 504 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 801 506 NOP  <||@
  Comment 802 508 NOP  <||@
  Comment 803 510 NOP  <||@
  Comment 804 512 JUMP ~outgoingValues: [] destination: B17 -> B19  <||@
  Comment 804 block B19 null  <||@
  Comment 804 538 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 804 540 NOP  <||@
  Comment 805 542 NOP  <||@
  Comment 806 544 NOP  <||@
  Comment 807 546 NOP  <||@
  Comment 808 548 NOP  <||@
  Comment 809 550 r9|QWORD = SUB (x: rax|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 815 552 CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 828 block B20 null  <||@
  Comment 828 554 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 828 556 NOP  <||@
  Comment 829 558 NOP  <||@
  Comment 830 560 NOP  <||@
  Comment 831 562 JUMP ~outgoingValues: [] destination: B20 -> B21  <||@
  Comment 836 block B22 loop 1 depth 1 header:336|LoopBegin  <||@
  Comment 836 576 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 864 578 NOP  <||@
  Comment 865 580 NOP  <||@
  Comment 866 582 NOP  <||@
  Comment 867 584 NOP  <||@
  Comment 868 586 NOP  <||@
  Comment 869 588 NOP  <||@
  Comment 870 590 NOP  <||@
  Comment 871 592 MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 879 594 rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD  <||@
  Comment 883 596 JUMP ~outgoingValues: [] destination: B22 -> B21  <||@
  Comment 883 block B21 loop 1 depth 1 header:336|LoopBegin  <||@
  Comment 883 564 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 883 566 NOP  <||@
  Comment 884 568 NOP  <||@
  Comment 885 570 NOP  <||@
  Comment 886 572 NOP  <||@
  Comment 887 574 CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD  <||@
  Comment 892 block B23 null  <||@
  Comment 892 598 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 892 600 NOP  <||@
  Comment 893 602 NOP  <||@
  Comment 894 604 NOP  <||@
  Comment 895 606 JUMP ~outgoingValues: [] destination: B23 -> B25  <||@
  Comment 895 block B25 null  <||@
  Comment 895 634 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 895 636 NOP  <||@
  Comment 896 638 NOP  <||@
  Comment 897 640 NOP  <||@
  Comment 898 642 NOP  <||@
  Comment 899 644 rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD  <||@
  Comment 899 646 JUMP ~outgoingValues: [] destination: B25 -> B26  <||@
  Comment 899 block B26 null  <||@
  Comment 899 648 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 899 650 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>}  <||@
  Comment 899 {meta{HotSpotType<[Ljava/lang/Object;, resolved>}}  <||@
  Comment 909 652 NOP  <||@
  Comment 910 654 NOP  <||@
  Comment 911 656 NOP  <||@
  Comment 912 658 NOP  <||@
  Comment 913 660 NOP  <||@
  Comment 914 662 NOP  <||@
  Comment 915 664 NOP  <||@
  Comment 916 666 NOP  <||@
  Comment 917 668 rax|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD  <||@
  Comment 920 670 rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 930 672 rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0  <||@
  Comment 934 674 CMPBRANCH (x: rsi|QWORD, y: [rax|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD  <||@
  Comment 944 block B27 null  <||@
  Comment 944 676 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 944 678 NOP  <||@
  Comment 945 680 NOP  <||@
  Comment 946 682 NOP  <||@
  Comment 947 684 rbx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 950 686 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 955 688 JUMP ~outgoingValues: [] destination: B27 -> B28  <||@
  Comment 960 block B2 null  <||@
  Comment 960 76 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 960 78 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 965 80 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>}  <||@
  Comment 965 {meta{HotSpotType<[Ljava/lang/Object;, resolved>}}  <||@
  Comment 975 82 NOP  <||@
  Comment 976 84 NOP  <||@
  Comment 977 86 NOP  <||@
  Comment 978 88 NOP  <||@
  Comment 979 90 NOP  <||@
  Comment 980 92 NOP  <||@
  Comment 981 94 NOP  <||@
  Comment 982 96 NOP  <||@
  Comment 983 98 NOP  <||@
  Comment 984 100 rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 987 102 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 987 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 992 [stack:8]at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:40|QWORD[.]  |r10|DWORD   <||@
  Comment 1000 104 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 1000 [rax:0, stack:8]at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:40|QWORD[.]  |r10|DWORD   <||@
  Comment 1000 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1002 106 rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1005 108 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1010 110 JUMP ~outgoingValues: [] destination: B2 -> B28  <||@
  Comment 1015 block B8 null  <||@
  Comment 1015 216 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1015 218 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1020 220 NOP  <||@
  Comment 1021 222 NOP  <||@
  Comment 1022 224 NOP  <||@
  Comment 1023 226 NOP  <||@
  Comment 1024 228 NOP  <||@
  Comment 1025 230 NOP  <||@
  Comment 1026 232 NOP  <||@
  Comment 1027 234 NOP  <||@
  Comment 1028 236 NOP  <||@
  Comment 1029 238 rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD  <||@
  Comment 1032 240 ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 1042 244 JUMP ~outgoingValues: [] destination: B8 -> B9  <||@
  Comment 1047 block B44 null  <||@
  Comment 1047 1020 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1047 1022 r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1052 1024 NOP  <||@
  Comment 1053 1026 NOP  <||@
  Comment 1054 1028 NOP  <||@
  Comment 1055 1030 NOP  <||@
  Comment 1056 1032 NOP  <||@
  Comment 1057 1034 NOP  <||@
  Comment 1058 1036 NOP  <||@
  Comment 1059 1038 NOP  <||@
  Comment 1060 1040 NOP  <||@
  Comment 1061 1042 NOP  <||@
  Comment 1062 1044 NOP  <||@
  Comment 1063 1046 NOP  <||@
  Comment 1064 1048 NOP  <||@
  Comment 1065 1050 rax|DWORD = NOT value: rax|DWORD size: DWORD  <||@
  Comment 1067 1052 r9|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 1070 1054 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1075 1056 rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1077 1058 rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1081 1060 r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1084 1062 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6]  <||@
  Comment 1087 {HotSpotMethod<System.arraycopy(Object, int, Object, int, int)>}  <||@
  Comment 1087 INVOKESTATIC  <||@
  Comment 1092 [stack:0]at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2  |3                 
     locals:  |-  |-  |-  |stack:48|QWORD[.] 
  at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1100 1064 JUMP ~outgoingValues: [] destination: B44 -> B45  <||@
  Comment 1105 block B15 null  <||@
  Comment 1105 424 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1105 426 NOP  <||@
  Comment 1106 428 NOP  <||@
  Comment 1107 430 NOP  <||@
  Comment 1108 432 NOP  <||@
  Comment 1109 434 NOP  <||@
  Comment 1110 436 NOP  <||@
  Comment 1111 438 NOP  <||@
  Comment 1112 440 NOP  <||@
  Comment 1113 442 NOP  <||@
  Comment 1114 444 rsi|QWORD = MOVE input: rbx|QWORD moveKind: QWORD  <||@
  Comment 1117 446 rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1120 448 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 1120 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1125 [stack:8]at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:40|QWORD[.]  |r10|DWORD   <||@
  Comment 1133 450 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 1133 [rax:0, stack:8]at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:40|QWORD[.]  |r10|DWORD   <||@
  Comment 1133 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1135 452 rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1138 454 JUMP ~outgoingValues: [] destination: B15 -> B26  <||@
  Comment 1143 block B18 null  <||@
  Comment 1143 514 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1143 516 NOP  <||@
  Comment 1144 518 NOP  <||@
  Comment 1145 520 NOP  <||@
  Comment 1146 522 NOP  <||@
  Comment 1147 524 NOP  <||@
  Comment 1148 526 NOP  <||@
  Comment 1149 528 NOP  <||@
  Comment 1150 530 MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: DWORD  <||@
  Comment 1157 532 rcx|QWORD = LEA address: [rsi|QWORD + 4] size: QWORD  <||@
  Comment 1161 534 rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD  <||@
  Comment 1164 536 JUMP ~outgoingValues: [] destination: B18 -> B19  <||@
  Comment 1169 block B24 null  <||@
  Comment 1169 608 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1169 610 NOP  <||@
  Comment 1170 612 NOP  <||@
  Comment 1171 614 NOP  <||@
  Comment 1172 616 NOP  <||@
  Comment 1173 618 NOP  <||@
  Comment 1174 620 NOP  <||@
  Comment 1175 622 NOP  <||@
  Comment 1176 624 NOP  <||@
  Comment 1177 626 NOP  <||@
  Comment 1178 628 rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD  <||@
  Comment 1181 630 ZERO_MEMORY (pointer: [rsi|QWORD + rdx|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 1191 632 JUMP ~outgoingValues: [] destination: B24 -> B25  <||@
  Comment 1196 block B11 null  <||@
  Comment 1196 300 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1196 302 NOP  <||@
  Comment 1197 304 NOP  <||@
  Comment 1198 306 NOP  <||@
  Comment 1199 308 NOP  <||@
  Comment 1200 310 NOP  <||@
  Comment 1201 312 NOP  <||@
  Comment 1202 314 NOP  <||@
  Comment 1203 316 MOV x: [r15|QWORD + 1156] y: -99441 size: DWORD  <||@
  Comment 1214 318 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1225 320 DEOPT info [bci:0]  <||@
  Comment 1225 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1230 [stack:8]at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:40|QWORD[.]  |r10|DWORD   <||@
  Comment 1238 block B33 null  <||@
  Comment 1238 770 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1238 772 stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1242 774 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1247 776 NOP  <||@
  Comment 1248 778 NOP  <||@
  Comment 1249 780 NOP  <||@
  Comment 1250 782 r11|DWORD = MOVE input: int[-41753|0xffffffffffff5ce7]  <||@
  Comment 1256 786 JUMP ~outgoingValues: [] destination: B33 -> B34  <||@
  Comment 1256 block B34 null  <||@
  Comment 1256 788 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1256 724 rbx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1260 790 NOP  <||@
  Comment 1261 792 NOP  <||@
  Comment 1262 794 NOP  <||@
  Comment 1263 796 NOP  <||@
  Comment 1264 798 NOP  <||@
  Comment 1265 800 NOP  <||@
  Comment 1266 802 NOP  <||@
  Comment 1267 804 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 1274 806 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1285 808 DEOPT info [bci:24, 6]  <||@
  Comment 1285 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1290 [rbx:0, stack:8]at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24, duringCall: false, rethrow: false]
              |0                  |1          |2  |3 
     locals:  |stack:40|QWORD[.]  |r10|DWORD  |-  |- 
     stack:   |rbx|QWORD[.]       |           |   |  
  at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1298 block B46 null  <||@
  Comment 1298 1088 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1298 1090 NOP  <||@
  Comment 1299 1092 NOP  <||@
  Comment 1300 1094 NOP  <||@
  Comment 1301 1096 NOP  <||@
  Comment 1302 1098 NOP  <||@
  Comment 1303 1100 NOP  <||@
  Comment 1304 1102 NOP  <||@
  Comment 1305 1104 MOV x: [r15|QWORD + 1156] y: -23331 size: DWORD  <||@
  Comment 1316 1106 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1327 1108 DEOPT info [bci:0]  <||@
  Comment 1327 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1332 [stack:8]at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:40|QWORD[.]  |r10|DWORD   <||@
  Comment 1340 block B29 null  <||@
  Comment 1340 710 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1340 712 stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1344 714 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1349 716 NOP  <||@
  Comment 1350 718 NOP  <||@
  Comment 1351 720 NOP  <||@
  Comment 1352 722 r11|DWORD = MOVE input: int[-39705|0xffffffffffff64e7]  <||@
  Comment 1358 726 JUMP ~outgoingValues: [] destination: B29 -> B34  <||@
  Comment 1360 block B31 null  <||@
  Comment 1360 740 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1360 742 stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1364 744 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1369 746 NOP  <||@
  Comment 1370 748 NOP  <||@
  Comment 1371 750 NOP  <||@
  Comment 1372 752 r11|DWORD = MOVE input: int[-40729|0xffffffffffff60e7]  <||@
  Comment 1378 756 JUMP ~outgoingValues: [] destination: B31 -> B34  <||@
  Comment 1380 block B13 null  <||@
  Comment 1380 342 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1380 344 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1385 346 NOP  <||@
  Comment 1386 348 NOP  <||@
  Comment 1387 350 NOP  <||@
  Comment 1388 352 NOP  <||@
  Comment 1389 354 NOP  <||@
  Comment 1390 356 NOP  <||@
  Comment 1391 358 NOP  <||@
  Comment 1392 360 MOV x: [r15|QWORD + 1156] y: -101489 size: DWORD  <||@
  Comment 1403 362 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1414 364 DEOPT info [bci:0]  <||@
  Comment 1414 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1419 [rsi:0]at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |r10|DWORD   <||@
  Comment 1432 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1457 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1485 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1490 [rsi:0]at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |r10|DWORD   <||@
  Comment 1520 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1525 [stack:8]at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:40|QWORD[.]  |r10|DWORD   <||@
  Comment 1555 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1560 [rax:0, stack:8]at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:40|QWORD[.]  |r10|DWORD   <||@
  Comment 1590 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1595 [rax:0, stack:8]at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:40|QWORD[.]  |r10|DWORD   <||@
  Comment 1603 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1603 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1609 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1609 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-10718[java.util.Arrays.copyOf(Object[], int)]"
  method "HotSpotCompilation-10718[java.util.Arrays.copyOf(Object[], int)]"
  date 1724269765812
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789af7e3c0 89842400c0feff4883ec289041817f20000000000f857905000090909090909090909090909048896c2420448bd2448b5e08448b460c458bca4181fb581200000f85eb0100009090909090909090909090498b9fb801000049c1e102498d79174883e7f8488bd74803d3493b97c80100000f87490300009090909090909090909090909090498997b80100000f18841f000100000f18841f400100000f18841f8001000048c70301000000c74308581200004489530c4c8d4ff04981f9000800000f833003000090909048c7c210000000e91d00000066660f1f8400000000009090909090909048c7041300000000488d520890909090483bfa77e490909090909090909090909090453bc2458bc8450f4fca4585c90f8c2004000090909090453bc80f872704000090909090453bca0f87a0030000909090904585c90f84e2000000909090909090448b5308458bc1453bd30f854e0000009090909090909090909090909090909090488bd3488d7e10488d7210498bd048891c24e81fbf7efe9090909090909090488b0424488b6c24204883c428493ba7500400000f8700040000c5f877c3909090904181fa581200000f8505000000909090eb9f44894c241448891c24909090909090909090909090909090909090909090909048bf0000002b787f00004e8d14174d8b92d000000049634a14488bfe488b1c24488d7f104889742408488d7310498bd04d8bc2e8abc27efe85c00f85fa010000909090e95cffffff48891c24909090e950ffffff4889742408909090909090909090909048b90000002b787f00004a8d3419488b4e70488b098b49408504cd0000000081f9f915f9ff0f8440020000909090909090488b1ccd180000008b73084585d20f8cde0200009090909090909090909090909090909090498b97b80100008bce83e13f49d3e1c1fe1081e6ff0000004c03ce498d41074883e0f8488bc84803ca493b8fc80100000f87840100009090909090909090909090909049898fb80100000f188410000100000f188410400100000f1884108001000048c7020100000048b90000002b787f0000482bd9895a084489520c48f7c6070000000f855601000090909090909090904c8bc84c2bce4981f9000800000f8355010000909090e92f0000006666660f1f84000000000066666690660f1f840000000000666666909090909090909048c7043200000000488d760890909090483bc677e49090909090909048be5812002b787f000090909090909090908b420848b90000002b787f0000488d0401483b70380f8562010000909090488bda488b742408e943fdffff488974240848be5812002b787f0000909090909090909090418bd2e8600495fe0f1f8400000000008500488bd8488b742408e90cfdffff4889742408909090909090909090498bc9488d7b104833c0f348aae9e8fcffff448b4c241490909090909090909090909090f7d0442bc8488b7424088bd0488b0c24448bc0666690e87c7180fe0f1f8400f4050005e930fdffff909090909090909090488bf3418bd2e8db0395fe0f1f8400000000008500488bd0e90cffffff90909090909090c7043200000000488d4e04488bf1e993feffff909090909090909090498bc9488d3c164833c0f348aae9d3feffff9090909090909041c787840400008f7bfeff49c7879004000000000000e8ecc880fe0f1f84000000000048891c24488974240890909041bbe75cffff488b1c249090909090909045899f8404000049c7879004000000000000e8b0c880fe0f1f8400000000009090909090909041c78784040000dda4ffff49c7879004000000000000e886c880fe0f1f84000000000048891c24488974240890909041bbe764ffffeb9848891c24488974240890909041bbe760ffffeb84488b7424089090909090909041c787840400008f73feff49c7879004000000000000e82fc880fe0f1f84000000000048896c2420e8c3c87efee978fafffff4488d0decfbffff49898f68040000e98ad680fef441c78784040000f5ccffff49c7879004000000000000e8e8c780fe0f1f84000000000041c787840400008f77feff49c7879004000000000000e8c5c780fe0f1f84000000000041c787840400008fe6feff49c7879004000000000000e8a2c780fe0f1f84000000000041c787840400008f6ffeff49c7879004000000000000e87fc780fe0f1f840000000000e8f86894fef4e812c580fef4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 NOP  <||@
  Comment 27 4 NOP  <||@
  Comment 28 6 NOP  <||@
  Comment 29 8 NOP  <||@
  Comment 30 10 NOP  <||@
  Comment 31 12 NOP  <||@
  Comment 32 14 NOP  <||@
  Comment 33 16 NOP  <||@
  Comment 34 18 NOP  <||@
  Comment 35 20 NOP  <||@
  Comment 36 22 NOP  <||@
  Comment 37 24 NOP  <||@
  Comment 38 26 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 43 28 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6632e17a slotKind: QWORD  <||@
  Comment 43 30 r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 46 32 r11|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 46 [rsi:0]at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |r10|DWORD   <||@
  Comment 46 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 50 34 r8|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 54 36 r9|QWORD = MOV value: r10|DWORD size: DWORD  <||@
  Comment 57 38 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 57 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 70 block B1 null  <||@
  Comment 70 40 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 70 42 NOP  <||@
  Comment 71 44 NOP  <||@
  Comment 72 46 NOP  <||@
  Comment 73 48 NOP  <||@
  Comment 74 50 NOP  <||@
  Comment 75 52 NOP  <||@
  Comment 76 54 NOP  <||@
  Comment 77 56 NOP  <||@
  Comment 78 58 NOP  <||@
  Comment 79 60 NOP  <||@
  Comment 80 62 NOP  <||@
  Comment 81 64 rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 88 66 r9|QWORD = SHL x: r9|QWORD y: 2 size: QWORD  <||@
  Comment 92 68 rdi|QWORD = LEA address: [r9|QWORD + 23] size: QWORD  <||@
  Comment 96 70 rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD  <||@
  Comment 100 72 rdx|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 106 74 CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD  <||@
  Comment 119 block B3 null  <||@
  Comment 119 112 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 119 114 NOP  <||@
  Comment 120 116 NOP  <||@
  Comment 121 118 NOP  <||@
  Comment 122 120 NOP  <||@
  Comment 123 122 NOP  <||@
  Comment 124 124 NOP  <||@
  Comment 125 126 NOP  <||@
  Comment 126 128 NOP  <||@
  Comment 127 130 NOP  <||@
  Comment 128 132 NOP  <||@
  Comment 129 134 NOP  <||@
  Comment 130 136 NOP  <||@
  Comment 131 138 NOP  <||@
  Comment 132 140 NOP  <||@
  Comment 133 142 MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD  <||@
  Comment 140 144 AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 256] instr: 0  <||@
  Comment 148 146 AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 320] instr: 0  <||@
  Comment 156 148 AMD64PREFETCH ~address: [rdi|QWORD + rbx|QWORD * 1 + 384] instr: 0  <||@
  Comment 164 150 MOV x: [rbx|QWORD] y: 1 size: QWORD  <||@
  Comment 171 152 MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 171 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 178 154 MOV (x: [rbx|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 182 156 r9|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD  <||@
  Comment 186 158 CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 199 block B4 null  <||@
  Comment 199 160 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 199 162 NOP  <||@
  Comment 200 164 NOP  <||@
  Comment 201 166 NOP  <||@
  Comment 202 168 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 209 170 JUMP ~outgoingValues: [] destination: B4 -> B5  <||@
  Comment 214 block B6 loop 0 depth 1 header:226|LoopBegin  <||@
  Comment 214 184 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 224 186 NOP  <||@
  Comment 225 188 NOP  <||@
  Comment 226 190 NOP  <||@
  Comment 227 192 NOP  <||@
  Comment 228 194 NOP  <||@
  Comment 229 196 NOP  <||@
  Comment 230 198 NOP  <||@
  Comment 231 200 MOV x: [rbx|QWORD + rdx|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 239 202 rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD  <||@
  Comment 243 204 JUMP ~outgoingValues: [] destination: B6 -> B5  <||@
  Comment 243 block B5 loop 0 depth 1 header:226|LoopBegin  <||@
  Comment 243 172 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 243 174 NOP  <||@
  Comment 244 176 NOP  <||@
  Comment 245 178 NOP  <||@
  Comment 246 180 NOP  <||@
  Comment 247 182 CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD  <||@
  Comment 252 block B7 null  <||@
  Comment 252 206 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 252 208 NOP  <||@
  Comment 253 210 NOP  <||@
  Comment 254 212 NOP  <||@
  Comment 255 214 JUMP ~outgoingValues: [] destination: B7 -> B9  <||@
  Comment 255 block B9 null  <||@
  Comment 255 246 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 255 248 NOP  <||@
  Comment 256 250 NOP  <||@
  Comment 257 252 NOP  <||@
  Comment 258 254 NOP  <||@
  Comment 259 256 rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD  <||@
  Comment 259 258 JUMP ~outgoingValues: [] destination: B9 -> B28  <||@
  Comment 259 block B28 null  <||@
  Comment 259 690 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 259 692 NOP  <||@
  Comment 260 694 NOP  <||@
  Comment 261 696 NOP  <||@
  Comment 262 698 NOP  <||@
  Comment 263 700 NOP  <||@
  Comment 264 702 NOP  <||@
  Comment 265 704 CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 268 706 r9|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: >  <||@
  Comment 275 708 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD  <||@
  Comment 284 block B30 null  <||@
  Comment 284 728 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 284 730 NOP  <||@
  Comment 285 732 NOP  <||@
  Comment 286 734 NOP  <||@
  Comment 287 736 NOP  <||@
  Comment 288 738 CMPBRANCH (x: r9|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD  <||@
  Comment 297 block B32 null  <||@
  Comment 297 758 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 297 760 NOP  <||@
  Comment 298 762 NOP  <||@
  Comment 299 764 NOP  <||@
  Comment 300 766 NOP  <||@
  Comment 301 768 CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD  <||@
  Comment 310 block B35 null  <||@
  Comment 310 810 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 310 812 NOP  <||@
  Comment 311 814 NOP  <||@
  Comment 312 816 NOP  <||@
  Comment 313 818 NOP  <||@
  Comment 314 820 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD  <||@
  Comment 323 block B37 null  <||@
  Comment 323 834 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 323 836 NOP  <||@
  Comment 324 838 NOP  <||@
  Comment 325 840 NOP  <||@
  Comment 326 842 NOP  <||@
  Comment 327 844 NOP  <||@
  Comment 328 846 NOP  <||@
  Comment 329 848 r10|DWORD = MOV input: [rbx|QWORD[.] + 8] size: DWORD  <||@
  Comment 333 850 r8|QWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 336 852 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD  <||@
  Comment 345 block B38 null  <||@
  Comment 345 854 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 345 856 NOP  <||@
  Comment 346 858 NOP  <||@
  Comment 347 860 NOP  <||@
  Comment 348 862 JUMP ~outgoingValues: [] destination: B38 -> B41  <||@
  Comment 348 block B41 null  <||@
  Comment 348 886 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 348 888 NOP  <||@
  Comment 349 890 NOP  <||@
  Comment 350 892 NOP  <||@
  Comment 351 894 NOP  <||@
  Comment 352 896 NOP  <||@
  Comment 353 898 NOP  <||@
  Comment 354 900 NOP  <||@
  Comment 355 902 NOP  <||@
  Comment 356 904 NOP  <||@
  Comment 357 906 NOP  <||@
  Comment 358 908 NOP  <||@
  Comment 359 910 NOP  <||@
  Comment 360 912 NOP  <||@
  Comment 361 914 NOP  <||@
  Comment 362 916 rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 362 918 rdx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 365 920 rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 369 922 rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD  <||@
  Comment 373 924 rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD  <||@
  Comment 376 926 stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 380 928 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 380 {Field[name=StubRoutines::_arrayof_oop_arraycopy, type=address, offset=0, address=0x7f78b1ffa468, value=140155947492448]:0x7f789976a460}  <||@
  Comment 385 930 JUMP ~outgoingValues: [] destination: B41 -> B45  <||@
  Comment 385 block B45 null  <||@
  Comment 385 1066 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 385 1068 NOP  <||@
  Comment 386 1070 NOP  <||@
  Comment 387 1072 NOP  <||@
  Comment 388 1074 NOP  <||@
  Comment 389 1076 NOP  <||@
  Comment 390 1078 NOP  <||@
  Comment 391 1080 NOP  <||@
  Comment 392 1082 NOP  <||@
  Comment 393 1084 rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 397 1086 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 406 POLL_RETURN_FAR  <||@
  Comment 423 block B39 null  <||@
  Comment 423 864 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 423 866 NOP  <||@
  Comment 424 868 NOP  <||@
  Comment 425 870 NOP  <||@
  Comment 426 872 NOP  <||@
  Comment 427 874 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 427 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 440 block B40 null  <||@
  Comment 440 876 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 440 878 NOP  <||@
  Comment 441 880 NOP  <||@
  Comment 442 882 NOP  <||@
  Comment 443 884 JUMP ~outgoingValues: [] destination: B40 -> B41  <||@
  Comment 445 block B42 null  <||@
  Comment 445 932 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 445 934 stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 450 936 stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 454 938 NOP  <||@
  Comment 455 940 NOP  <||@
  Comment 456 942 NOP  <||@
  Comment 457 944 NOP  <||@
  Comment 458 946 NOP  <||@
  Comment 459 948 NOP  <||@
  Comment 460 950 NOP  <||@
  Comment 461 952 NOP  <||@
  Comment 462 954 NOP  <||@
  Comment 463 956 NOP  <||@
  Comment 464 958 NOP  <||@
  Comment 465 960 NOP  <||@
  Comment 466 962 NOP  <||@
  Comment 467 964 NOP  <||@
  Comment 468 966 NOP  <||@
  Comment 469 968 NOP  <||@
  Comment 470 970 NOP  <||@
  Comment 471 972 NOP  <||@
  Comment 472 974 NOP  <||@
  Comment 473 976 NOP  <||@
  Comment 474 978 NOP  <||@
  Comment 475 980 NOP  <||@
  Comment 476 982 NOP  <||@
  Comment 477 984 rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 487 986 r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0  <||@
  Comment 491 988 r10|QWORD = MOV input: [r10|QWORD + 208] size: QWORD  <||@
  Comment 498 990 rcx|QWORD = MOVSXD input: [r10|QWORD + 20] size: QWORD  <||@
  Comment 502 992 rdi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 505 994 rbx|QWORD[*] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 509 996 rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD  <||@
  Comment 513 998 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 518 1000 rsi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD  <||@
  Comment 522 1002 rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD  <||@
  Comment 525 1004 r8|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 528 1006 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 528 {Field[name=StubRoutines::_checkcast_arraycopy, type=address, offset=0, address=0x7f78b2050448, value=140155947493504]:0x7f789976a880}  <||@
  Comment 533 1008 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD  <||@
  Comment 541 block B43 null  <||@
  Comment 541 1010 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 541 1012 NOP  <||@
  Comment 542 1014 NOP  <||@
  Comment 543 1016 NOP  <||@
  Comment 544 1018 JUMP ~outgoingValues: [] destination: B43 -> B45  <||@
  Comment 549 block B36 null  <||@
  Comment 549 822 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 549 824 stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 553 826 NOP  <||@
  Comment 554 828 NOP  <||@
  Comment 555 830 NOP  <||@
  Comment 556 832 JUMP ~outgoingValues: [] destination: B36 -> B45  <||@
  Comment 561 block B10 null  <||@
  Comment 561 260 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 561 262 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 566 264 NOP  <||@
  Comment 567 266 NOP  <||@
  Comment 568 268 NOP  <||@
  Comment 569 270 NOP  <||@
  Comment 570 272 NOP  <||@
  Comment 571 274 NOP  <||@
  Comment 572 276 NOP  <||@
  Comment 573 278 NOP  <||@
  Comment 574 280 NOP  <||@
  Comment 575 282 NOP  <||@
  Comment 576 284 NOP  <||@
  Comment 577 286 rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 587 288 rsi|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0  <||@
  Comment 591 290 rcx|QWORD = MOV input: [rsi|QWORD + 112] size: QWORD  <||@
  Comment 595 292 rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD  <||@
  Comment 598 294 rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 64] size: DWORD  <||@
  Comment 601 296 NULLCHECK address: [rcx|DWORD[_] * 8] state [bci:0]  <||@
  Comment 601 [rcx:0, stack:8]at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:40|QWORD[.]  |r10|DWORD   <||@
  Comment 601 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 608 298 CMPCONSTBRANCH x: rcx|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void]  <||@
  Comment 608 {NarrowOop[Class:void]}  <||@
  Comment 620 block B12 null  <||@
  Comment 620 322 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 620 324 NOP  <||@
  Comment 621 326 NOP  <||@
  Comment 622 328 NOP  <||@
  Comment 623 330 NOP  <||@
  Comment 624 332 NOP  <||@
  Comment 625 334 NOP  <||@
  Comment 626 336 rbx|QWORD = MOV input: [rcx|DWORD[_] * 8 + 24] size: QWORD  <||@
  Comment 634 338 rsi|DWORD = MOV input: [rbx|QWORD + 8] size: DWORD state [bci:0]  <||@
  Comment 634 [stack:8]at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:40|QWORD[.]  |r10|DWORD   <||@
  Comment 634 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 637 340 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD  <||@
  Comment 646 block B14 null  <||@
  Comment 646 366 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 646 368 NOP  <||@
  Comment 647 370 NOP  <||@
  Comment 648 372 NOP  <||@
  Comment 649 374 NOP  <||@
  Comment 650 376 NOP  <||@
  Comment 651 378 NOP  <||@
  Comment 652 380 NOP  <||@
  Comment 653 382 NOP  <||@
  Comment 654 384 NOP  <||@
  Comment 655 386 NOP  <||@
  Comment 656 388 NOP  <||@
  Comment 657 390 NOP  <||@
  Comment 658 392 NOP  <||@
  Comment 659 394 NOP  <||@
  Comment 660 396 NOP  <||@
  Comment 661 398 NOP  <||@
  Comment 662 400 NOP  <||@
  Comment 663 402 rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 670 404 rcx|DWORD = AND x: rsi|DWORD y: 63 size: DWORD  <||@
  Comment 675 406 r9|QWORD = SHL (x: r9|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 678 408 rsi|DWORD = SAR x: rsi|DWORD y: 16 size: DWORD  <||@
  Comment 681 410 rsi|DWORD = AND x: rsi|DWORD y: 255 size: DWORD  <||@
  Comment 687 412 rsi|QWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 687 414 r9|QWORD = ADD (x: r9|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 690 416 rax|QWORD = LEA address: [r9|QWORD + 7] size: QWORD  <||@
  Comment 694 418 rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD  <||@
  Comment 698 420 rcx|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 704 422 CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD  <||@
  Comment 717 block B16 null  <||@
  Comment 717 456 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 717 458 NOP  <||@
  Comment 718 460 NOP  <||@
  Comment 719 462 NOP  <||@
  Comment 720 464 NOP  <||@
  Comment 721 466 NOP  <||@
  Comment 722 468 NOP  <||@
  Comment 723 470 NOP  <||@
  Comment 724 472 NOP  <||@
  Comment 725 474 NOP  <||@
  Comment 726 476 NOP  <||@
  Comment 727 478 NOP  <||@
  Comment 728 480 NOP  <||@
  Comment 729 482 NOP  <||@
  Comment 730 484 MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD  <||@
  Comment 737 486 AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 745 488 AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 753 490 AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 761 492 MOV x: [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 768 494 rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 778 496 rbx|DWORD = COMPRESSPOINTER (input: rbx|QWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0  <||@
  Comment 781 498 MOV (x: [rdx|QWORD + 8], y: rbx|DWORD) size: DWORD  <||@
  Comment 784 500 MOV (x: [rdx|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 788 502 TESTCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD  <||@
  Comment 801 block B17 null  <||@
  Comment 801 504 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 801 506 NOP  <||@
  Comment 802 508 NOP  <||@
  Comment 803 510 NOP  <||@
  Comment 804 512 JUMP ~outgoingValues: [] destination: B17 -> B19  <||@
  Comment 804 block B19 null  <||@
  Comment 804 538 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 804 540 NOP  <||@
  Comment 805 542 NOP  <||@
  Comment 806 544 NOP  <||@
  Comment 807 546 NOP  <||@
  Comment 808 548 NOP  <||@
  Comment 809 550 r9|QWORD = SUB (x: rax|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 815 552 CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 828 block B20 null  <||@
  Comment 828 554 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 828 556 NOP  <||@
  Comment 829 558 NOP  <||@
  Comment 830 560 NOP  <||@
  Comment 831 562 JUMP ~outgoingValues: [] destination: B20 -> B21  <||@
  Comment 836 block B22 loop 1 depth 1 header:336|LoopBegin  <||@
  Comment 836 576 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 864 578 NOP  <||@
  Comment 865 580 NOP  <||@
  Comment 866 582 NOP  <||@
  Comment 867 584 NOP  <||@
  Comment 868 586 NOP  <||@
  Comment 869 588 NOP  <||@
  Comment 870 590 NOP  <||@
  Comment 871 592 MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 879 594 rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD  <||@
  Comment 883 596 JUMP ~outgoingValues: [] destination: B22 -> B21  <||@
  Comment 883 block B21 loop 1 depth 1 header:336|LoopBegin  <||@
  Comment 883 564 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 883 566 NOP  <||@
  Comment 884 568 NOP  <||@
  Comment 885 570 NOP  <||@
  Comment 886 572 NOP  <||@
  Comment 887 574 CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD  <||@
  Comment 892 block B23 null  <||@
  Comment 892 598 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 892 600 NOP  <||@
  Comment 893 602 NOP  <||@
  Comment 894 604 NOP  <||@
  Comment 895 606 JUMP ~outgoingValues: [] destination: B23 -> B25  <||@
  Comment 895 block B25 null  <||@
  Comment 895 634 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 895 636 NOP  <||@
  Comment 896 638 NOP  <||@
  Comment 897 640 NOP  <||@
  Comment 898 642 NOP  <||@
  Comment 899 644 rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD  <||@
  Comment 899 646 JUMP ~outgoingValues: [] destination: B25 -> B26  <||@
  Comment 899 block B26 null  <||@
  Comment 899 648 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 899 650 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>}  <||@
  Comment 899 {meta{HotSpotType<[Ljava/lang/Object;, resolved>}}  <||@
  Comment 909 652 NOP  <||@
  Comment 910 654 NOP  <||@
  Comment 911 656 NOP  <||@
  Comment 912 658 NOP  <||@
  Comment 913 660 NOP  <||@
  Comment 914 662 NOP  <||@
  Comment 915 664 NOP  <||@
  Comment 916 666 NOP  <||@
  Comment 917 668 rax|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD  <||@
  Comment 920 670 rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 930 672 rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4761a34a encoding: base: 140154094223360 shift: 0  <||@
  Comment 934 674 CMPBRANCH (x: rsi|QWORD, y: [rax|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD  <||@
  Comment 944 block B27 null  <||@
  Comment 944 676 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 944 678 NOP  <||@
  Comment 945 680 NOP  <||@
  Comment 946 682 NOP  <||@
  Comment 947 684 rbx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 950 686 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 955 688 JUMP ~outgoingValues: [] destination: B27 -> B28  <||@
  Comment 960 block B2 null  <||@
  Comment 960 76 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 960 78 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 965 80 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>}  <||@
  Comment 965 {meta{HotSpotType<[Ljava/lang/Object;, resolved>}}  <||@
  Comment 975 82 NOP  <||@
  Comment 976 84 NOP  <||@
  Comment 977 86 NOP  <||@
  Comment 978 88 NOP  <||@
  Comment 979 90 NOP  <||@
  Comment 980 92 NOP  <||@
  Comment 981 94 NOP  <||@
  Comment 982 96 NOP  <||@
  Comment 983 98 NOP  <||@
  Comment 984 100 rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 987 102 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 987 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 992 [stack:8]at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:40|QWORD[.]  |r10|DWORD   <||@
  Comment 1000 104 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 1000 [rax:0, stack:8]at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:40|QWORD[.]  |r10|DWORD   <||@
  Comment 1000 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1002 106 rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1005 108 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1010 110 JUMP ~outgoingValues: [] destination: B2 -> B28  <||@
  Comment 1015 block B8 null  <||@
  Comment 1015 216 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1015 218 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1020 220 NOP  <||@
  Comment 1021 222 NOP  <||@
  Comment 1022 224 NOP  <||@
  Comment 1023 226 NOP  <||@
  Comment 1024 228 NOP  <||@
  Comment 1025 230 NOP  <||@
  Comment 1026 232 NOP  <||@
  Comment 1027 234 NOP  <||@
  Comment 1028 236 NOP  <||@
  Comment 1029 238 rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD  <||@
  Comment 1032 240 ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 1042 244 JUMP ~outgoingValues: [] destination: B8 -> B9  <||@
  Comment 1047 block B44 null  <||@
  Comment 1047 1020 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1047 1022 r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1052 1024 NOP  <||@
  Comment 1053 1026 NOP  <||@
  Comment 1054 1028 NOP  <||@
  Comment 1055 1030 NOP  <||@
  Comment 1056 1032 NOP  <||@
  Comment 1057 1034 NOP  <||@
  Comment 1058 1036 NOP  <||@
  Comment 1059 1038 NOP  <||@
  Comment 1060 1040 NOP  <||@
  Comment 1061 1042 NOP  <||@
  Comment 1062 1044 NOP  <||@
  Comment 1063 1046 NOP  <||@
  Comment 1064 1048 NOP  <||@
  Comment 1065 1050 rax|DWORD = NOT value: rax|DWORD size: DWORD  <||@
  Comment 1067 1052 r9|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 1070 1054 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1075 1056 rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1077 1058 rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1081 1060 r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1084 1062 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6]  <||@
  Comment 1087 {HotSpotMethod<System.arraycopy(Object, int, Object, int, int)>}  <||@
  Comment 1087 INVOKESTATIC  <||@
  Comment 1092 [stack:0]at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2  |3                 
     locals:  |-  |-  |-  |stack:48|QWORD[.] 
  at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1100 1064 JUMP ~outgoingValues: [] destination: B44 -> B45  <||@
  Comment 1105 block B15 null  <||@
  Comment 1105 424 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1105 426 NOP  <||@
  Comment 1106 428 NOP  <||@
  Comment 1107 430 NOP  <||@
  Comment 1108 432 NOP  <||@
  Comment 1109 434 NOP  <||@
  Comment 1110 436 NOP  <||@
  Comment 1111 438 NOP  <||@
  Comment 1112 440 NOP  <||@
  Comment 1113 442 NOP  <||@
  Comment 1114 444 rsi|QWORD = MOVE input: rbx|QWORD moveKind: QWORD  <||@
  Comment 1117 446 rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1120 448 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 1120 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1125 [stack:8]at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:40|QWORD[.]  |r10|DWORD   <||@
  Comment 1133 450 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 1133 [rax:0, stack:8]at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:40|QWORD[.]  |r10|DWORD   <||@
  Comment 1133 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1135 452 rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1138 454 JUMP ~outgoingValues: [] destination: B15 -> B26  <||@
  Comment 1143 block B18 null  <||@
  Comment 1143 514 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1143 516 NOP  <||@
  Comment 1144 518 NOP  <||@
  Comment 1145 520 NOP  <||@
  Comment 1146 522 NOP  <||@
  Comment 1147 524 NOP  <||@
  Comment 1148 526 NOP  <||@
  Comment 1149 528 NOP  <||@
  Comment 1150 530 MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: DWORD  <||@
  Comment 1157 532 rcx|QWORD = LEA address: [rsi|QWORD + 4] size: QWORD  <||@
  Comment 1161 534 rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD  <||@
  Comment 1164 536 JUMP ~outgoingValues: [] destination: B18 -> B19  <||@
  Comment 1169 block B24 null  <||@
  Comment 1169 608 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1169 610 NOP  <||@
  Comment 1170 612 NOP  <||@
  Comment 1171 614 NOP  <||@
  Comment 1172 616 NOP  <||@
  Comment 1173 618 NOP  <||@
  Comment 1174 620 NOP  <||@
  Comment 1175 622 NOP  <||@
  Comment 1176 624 NOP  <||@
  Comment 1177 626 NOP  <||@
  Comment 1178 628 rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD  <||@
  Comment 1181 630 ZERO_MEMORY (pointer: [rsi|QWORD + rdx|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 1191 632 JUMP ~outgoingValues: [] destination: B24 -> B25  <||@
  Comment 1196 block B11 null  <||@
  Comment 1196 300 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1196 302 NOP  <||@
  Comment 1197 304 NOP  <||@
  Comment 1198 306 NOP  <||@
  Comment 1199 308 NOP  <||@
  Comment 1200 310 NOP  <||@
  Comment 1201 312 NOP  <||@
  Comment 1202 314 NOP  <||@
  Comment 1203 316 MOV x: [r15|QWORD + 1156] y: -99441 size: DWORD  <||@
  Comment 1214 318 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1225 320 DEOPT info [bci:0]  <||@
  Comment 1225 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1230 [stack:8]at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:40|QWORD[.]  |r10|DWORD   <||@
  Comment 1238 block B33 null  <||@
  Comment 1238 770 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1238 772 stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1242 774 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1247 776 NOP  <||@
  Comment 1248 778 NOP  <||@
  Comment 1249 780 NOP  <||@
  Comment 1250 782 r11|DWORD = MOVE input: int[-41753|0xffffffffffff5ce7]  <||@
  Comment 1256 786 JUMP ~outgoingValues: [] destination: B33 -> B34  <||@
  Comment 1256 block B34 null  <||@
  Comment 1256 788 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1256 724 rbx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1260 790 NOP  <||@
  Comment 1261 792 NOP  <||@
  Comment 1262 794 NOP  <||@
  Comment 1263 796 NOP  <||@
  Comment 1264 798 NOP  <||@
  Comment 1265 800 NOP  <||@
  Comment 1266 802 NOP  <||@
  Comment 1267 804 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 1274 806 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1285 808 DEOPT info [bci:24, 6]  <||@
  Comment 1285 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1290 [rbx:0, stack:8]at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24, duringCall: false, rethrow: false]
              |0                  |1          |2  |3 
     locals:  |stack:40|QWORD[.]  |r10|DWORD  |-  |- 
     stack:   |rbx|QWORD[.]       |           |   |  
  at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1298 block B46 null  <||@
  Comment 1298 1088 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1298 1090 NOP  <||@
  Comment 1299 1092 NOP  <||@
  Comment 1300 1094 NOP  <||@
  Comment 1301 1096 NOP  <||@
  Comment 1302 1098 NOP  <||@
  Comment 1303 1100 NOP  <||@
  Comment 1304 1102 NOP  <||@
  Comment 1305 1104 MOV x: [r15|QWORD + 1156] y: -23331 size: DWORD  <||@
  Comment 1316 1106 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1327 1108 DEOPT info [bci:0]  <||@
  Comment 1327 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1332 [stack:8]at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:40|QWORD[.]  |r10|DWORD   <||@
  Comment 1340 block B29 null  <||@
  Comment 1340 710 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1340 712 stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1344 714 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1349 716 NOP  <||@
  Comment 1350 718 NOP  <||@
  Comment 1351 720 NOP  <||@
  Comment 1352 722 r11|DWORD = MOVE input: int[-39705|0xffffffffffff64e7]  <||@
  Comment 1358 726 JUMP ~outgoingValues: [] destination: B29 -> B34  <||@
  Comment 1360 block B31 null  <||@
  Comment 1360 740 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1360 742 stack:48|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1364 744 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1369 746 NOP  <||@
  Comment 1370 748 NOP  <||@
  Comment 1371 750 NOP  <||@
  Comment 1372 752 r11|DWORD = MOVE input: int[-40729|0xffffffffffff60e7]  <||@
  Comment 1378 756 JUMP ~outgoingValues: [] destination: B31 -> B34  <||@
  Comment 1380 block B13 null  <||@
  Comment 1380 342 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1380 344 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1385 346 NOP  <||@
  Comment 1386 348 NOP  <||@
  Comment 1387 350 NOP  <||@
  Comment 1388 352 NOP  <||@
  Comment 1389 354 NOP  <||@
  Comment 1390 356 NOP  <||@
  Comment 1391 358 NOP  <||@
  Comment 1392 360 MOV x: [r15|QWORD + 1156] y: -101489 size: DWORD  <||@
  Comment 1403 362 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1414 364 DEOPT info [bci:0]  <||@
  Comment 1414 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1419 [rsi:0]at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |r10|DWORD   <||@
  Comment 1432 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1457 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1485 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1490 [rsi:0]at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |r10|DWORD   <||@
  Comment 1520 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1525 [stack:8]at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:40|QWORD[.]  |r10|DWORD   <||@
  Comment 1555 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1560 [rax:0, stack:8]at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:40|QWORD[.]  |r10|DWORD   <||@
  Comment 1590 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1595 [rax:0, stack:8]at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:40|QWORD[.]  |r10|DWORD   <||@
  Comment 1603 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1603 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1609 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1609 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
