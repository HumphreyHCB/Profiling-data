begin_compilation
  name " HotSpotCompilation-4127[java.util.regex.Pattern$BmpCharProperty.match(Matcher, int, CharSequence)]"
  method "HotSpotCompilation-4127[java.util.regex.Pattern$BmpCharProperty.match(Matcher, int, CharSequence)]"
  date 1724269729204
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B58" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v615 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v615  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.regex.Pattern$BmpCharProperty
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v668 v687 ?15 ?211 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# java.util.regex.Matcher
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v667 v349 ?15 ?211 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v7 v243 j353 ?15 i23 ?211 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a java.lang.Object
uncheckedStamp: a java.lang.CharSequence
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v690 v669 ?15 v349 ?211 v670 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_2
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
localsSize: 4
locksSize: 0
sourceFile: Pattern.java
sourceLine: 4132
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 
=== Succesors ===
=== Usages ===
v520 v615 i616 i618 v620 i625 v628 v632 v636 v640 v644 v666 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4  <|@  <|@
f <@~|@floating>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-57867|0xffffffffffff1df5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v690 
lastLocationAccess: - 
=== Succesors ===
next: v403 
=== Usages ===
v614 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v690 lastLocationAccess: - #next: v403  <|@  <|@
f <@~|@floating>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v614 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v615 
y: v613 
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v615 y: v613  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v614 
=== Succesors ===
trueSuccessor: v400 
falseSuccessor: v402 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v614 #trueSuccessor: v400 #falseSuccessor: v402  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: i616 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i616  <|@  <|@
f <@~|@floating>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i616 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i616 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-55819|0xffffffffffff25f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.to
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 2]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v667 
lastLocationAccess: - 
=== Succesors ===
next: a617 
=== Usages ===
v7 
=== Predecessor ===
v400 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v667 lastLocationAccess: - #next: a617  <|@  <|@
f <@~|@floating>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a617 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a617 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.charAt(String.java:1555) [bci: 8]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v670 
lastLocationAccess: - 
=== Succesors ===
next: i618 
=== Usages ===
v672 v671 
=== Predecessor ===
i616 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v670 lastLocationAccess: - #next: i618  <|@  <|@
f <@~|@floating>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a617 
=== Succesors ===
=== Usages ===
i618 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a617  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i618 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-60427|0xffffffffffff13f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 2]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v671 
lastLocationAccess: - 
=== Succesors ===
next: v415 
=== Usages ===
v243 
=== Predecessor ===
a617 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v671 lastLocationAccess: - #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i618 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i3 y: i618  <|@  <|@
f <@~|@floating>@ <|@
tid j517 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j519 j519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v243 
=== Succesors ===
trueSuccessor: v412 
falseSuccessor: v414 
=== Usages ===
=== Predecessor ===
i618 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v243 #trueSuccessor: v412 #falseSuccessor: v414  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a619 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a619  <|@  <|@
f <@~|@floating>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a619 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a619 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$CharProperty.predicate
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 9]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v668 
lastLocationAccess: - 
=== Succesors ===
next: v620 
=== Usages ===
v691 v673 v676 
=== Predecessor ===
v412 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v668 lastLocationAccess: - #next: v620  <|@  <|@
f <@~|@floating>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a619 
=== Succesors ===
=== Usages ===
v620 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a619  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-64523|0xffffffffffff03f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v691 
lastLocationAccess: - 
=== Succesors ===
next: v459 
=== Usages ===
v594 
=== Predecessor ===
a619 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v691 lastLocationAccess: - #next: v459  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 5]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i616 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i616  <|@  <|@
f <@*|@fixed>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 5]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v457 
falseSuccessor: v458 
=== Usages ===
=== Predecessor ===
v620 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v457 #falseSuccessor: v458  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i621 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i621  <|@  <|@
f <@~|@floating>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
i621 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i621 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 7]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v669 
lastLocationAccess: - 
=== Succesors ===
next: v463 
=== Usages ===
v352 
=== Predecessor ===
v457 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v669 lastLocationAccess: - #next: v463  <|@  <|@
f <@~|@floating>@ <|@
tid i351 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i621 
y: i351 
=== Succesors ===
=== Usages ===
v463 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i621 y: i351  <|@  <|@
f <@*|@fixed>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:1554) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v352 
=== Succesors ===
trueSuccessor: v461 
falseSuccessor: v462 
=== Usages ===
=== Predecessor ===
i621 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v352 #trueSuccessor: v461 #falseSuccessor: v462  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" "B12" "B54" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.charAt(String.java:1555) [bci: 7]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: i622 
=== Usages ===
=== Predecessor ===
v463 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i622  <|@  <|@
f <@~|@floating>@ <|@
tid j353 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i3 
=== Succesors ===
=== Usages ===
v672 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i3  <|@  <|@
f <@~|@floating>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j353 
index: a617 
=== Succesors ===
=== Usages ===
i622 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j353 index: a617  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i622 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v672 
lastLocationAccess: - 
=== Succesors ===
next: v78 
=== Usages ===
i354 j355 
=== Predecessor ===
v461 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v672 lastLocationAccess: - #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid i354 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 12]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i622 
=== Succesors ===
=== Usages ===
?201 v84 v263 ?205 ?203 v109 v111 v128 v130 v147 v149 v166 v168 v185 v187 v335 ?193 ?197 ?199 ?512 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i622  <|@  <|@
f <@~|@floating>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v620 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v620  <|@  <|@
f <@~|@floating>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a619 
=== Succesors ===
=== Usages ===
i623 a624 a627 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a619  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 33]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i23 i33 i85 i659 i659 i659 i659 i659 i659 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v17 v27 i33 v194 i85 ?193 ?26 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}]
keySuccessors: [I@5e14cb9d
keys: [HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>, HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>]
profileData: PROFILED keyProbabilities: [0.5593249922108073, 0.22035704200328657, 0.2203179657859061, 0.0]
stamp: void
=== Inputs ===
value: v594 
=== Succesors ===
successors: v60 v65 v70 v73 
=== Usages ===
=== Predecessor ===
i622 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v594 #successors: v60 v65 v70 v73  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4603213171198275611
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i623 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i623 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003b.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003b.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v673 
lastLocationAccess: - 
=== Succesors ===
next: v61 
=== Usages ===
v84 
=== Predecessor ===
v60 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v673 lastLocationAccess: - #next: v61  <|@  <|@
f <@~|@floating>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.lambda$Single$14(Pattern.java:5910) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x80000003b.is(int) [bci: 5]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i354 
y: i623 
=== Succesors ===
=== Usages ===
i85 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i354 y: i623  <|@  <|@
f <@~|@floating>@ <|@
tid i85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$Single$14(Pattern.java:5910) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x80000003b.is(int) [bci: 5]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
condition: v84 
trueValue: i22 
falseValue: i16 
=== Succesors ===
=== Usages ===
i56 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v84 trueValue: i22 falseValue: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
i623 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a624 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a624  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a624 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# boolean[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$BitClass.bits
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 8]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: n# boolean[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v673 
lastLocationAccess: - 
=== Succesors ===
next: i625 
=== Usages ===
v675 v674 
=== Predecessor ===
v65 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v673 lastLocationAccess: - #next: i625  <|@  <|@
f <@~|@floating>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a624 
=== Succesors ===
=== Usages ===
i625 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a624  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i625 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-66315|0xfffffffffffefcf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v674 
lastLocationAccess: - 
=== Succesors ===
next: v427 
=== Usages ===
v263 
=== Predecessor ===
a624 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v674 lastLocationAccess: - #next: v427  <|@  <|@
f <@~|@floating>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i354 
y: i625 
=== Succesors ===
=== Usages ===
v427 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i354 y: i625  <|@  <|@
f <@*|@fixed>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v263 
=== Succesors ===
trueSuccessor: v424 
falseSuccessor: v426 
=== Usages ===
=== Predecessor ===
i625 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v263 #trueSuccessor: v424 #falseSuccessor: v426  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: i626 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i626  <|@  <|@
f <@~|@floating>@ <|@
tid j355 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
resultBits: 64
stamp: i64 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i622 
=== Succesors ===
=== Usages ===
v675 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i622  <|@  <|@
f <@~|@floating>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j355 
index: a624 
=== Succesors ===
=== Usages ===
i626 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j355 index: a624  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i626 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: boolean
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v675 
lastLocationAccess: - 
=== Succesors ===
next: v66 
=== Usages ===
i270 
=== Predecessor ===
v424 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v675 lastLocationAccess: - #next: v66  <|@  <|@
f <@~|@floating>@ <|@
tid i270 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
resultBits: 32
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
value: i626 
=== Succesors ===
=== Usages ===
i56 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i626  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
i626 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605197970982784543
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i56 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v55 
values: i85 i270 
=== Succesors ===
=== Usages ===
i659 v17 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v55 values: i85 i270  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v61 v66 
=== Succesors ===
next: v20 
=== Usages ===
i56 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v61 v66 #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i56 
y: i16 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i56 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.6409319995231739
stamp: void
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v19 
falseSuccessor: v657 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v19 #falseSuccessor: v657  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602673832159898576
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v32  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
v19 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4598714910550929518
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v658 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v658  <|@  <|@
f <@*|@fixed>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v656 
=== Predecessor ===
v657 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v547 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v547  <|@  <|@
f <@~|@floating>@ <|@
tid i548 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -67611
stableDimension: 0
stamp: i32 [-67611]
stampKind: i32
value: int[-67611|0xfffffffffffef7e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v426 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" "B18" "B53" 
    xhandlers
    flags 
    probability 4597105811559466883
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a627 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a627  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a627 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v673 
lastLocationAccess: - 
=== Succesors ===
next: v628 
=== Usages ===
v692 v677 v678 
=== Predecessor ===
v70 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v673 lastLocationAccess: - #next: v628  <|@  <|@
f <@~|@floating>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a627 
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a627  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-70923|0xfffffffffffeeaf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v692 
lastLocationAccess: - 
=== Succesors ===
next: v104 
=== Usages ===
v597 
=== Predecessor ===
a627 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v692 lastLocationAccess: - #next: v104  <|@  <|@
f <@~|@floating>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v628 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v628  <|@  <|@
f <@~|@floating>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a627 
=== Succesors ===
=== Usages ===
i630 a652 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a627  <|@  <|@
f <@~|@floating>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a627 
=== Succesors ===
=== Usages ===
i629 a631 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a627  <|@  <|@
f <@~|@floating>@ <|@
tid j553 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: 4500
stableDimension: 0
stamp: i64 [4500]
stampKind: i64
value: long[4500|0x1194]
=== Inputs ===
=== Succesors ===
=== Usages ===
j519 j519 j519 j519 j519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j546 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: 5140
stableDimension: 0
stamp: i64 [5140]
stampKind: i64
value: long[5140|0x1414]
=== Inputs ===
=== Succesors ===
=== Usages ===
j519 j519 j519 j519 j519 j519 j519 j519 j519 j519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}]
keySuccessors: [I@179e22b7
keys: [HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>]
profileData: PROFILED keyProbabilities: [0.5000008869174357, 0.49999911308256434, 0.0]
stamp: void
=== Inputs ===
value: v597 
=== Succesors ===
successors: v94 v96 v99 
=== Usages ===
=== Predecessor ===
v628 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v597 #successors: v94 v96 v99  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i629 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i629  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i629 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v677 
lastLocationAccess: - 
=== Succesors ===
next: v467 
=== Usages ===
v109 
=== Predecessor ===
v94 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v677 lastLocationAccess: - #next: v467  <|@  <|@
f <@~|@floating>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i354 
y: i629 
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i354 y: i629  <|@  <|@
f <@*|@fixed>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v109 
=== Succesors ===
trueSuccessor: v465 
falseSuccessor: v466 
=== Usages ===
=== Predecessor ===
i629 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v109 #trueSuccessor: v465 #falseSuccessor: v466  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v544 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v544  <|@  <|@
f <@~|@floating>@ <|@
tid i545 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -118803
stableDimension: 0
stamp: i32 [-118803]
stampKind: i32
value: int[-118803|0xfffffffffffe2fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v465 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 5]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: i630 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i630  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i630 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v678 
lastLocationAccess: - 
=== Succesors ===
next: v471 
=== Usages ===
v111 
=== Predecessor ===
v466 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v678 lastLocationAccess: - #next: v471  <|@  <|@
f <@~|@floating>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i630 
y: i354 
=== Succesors ===
=== Usages ===
v471 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i630 y: i354  <|@  <|@
f <@*|@fixed>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v111 
=== Succesors ===
trueSuccessor: v469 
falseSuccessor: v470 
=== Usages ===
=== Predecessor ===
i630 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v111 #trueSuccessor: v469 #falseSuccessor: v470  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v554 
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v554  <|@  <|@
f <@~|@floating>@ <|@
tid i555 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -119827
stableDimension: 0
stamp: i32 [-119827]
stampKind: i32
value: int[-119827|0xfffffffffffe2bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v469 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 10]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v71  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v656 
=== Predecessor ===
v470 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B52" 
    xhandlers
    flags 
    probability 4592602197851765433
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a631 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a631 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v677 
lastLocationAccess: - 
=== Succesors ===
next: v632 
=== Usages ===
v693 v679 v680 
=== Predecessor ===
v96 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v677 lastLocationAccess: - #next: v632  <|@  <|@
f <@~|@floating>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a631 
=== Succesors ===
=== Usages ===
v632 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-73739|0xfffffffffffedff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v693 
lastLocationAccess: - 
=== Succesors ===
next: v123 
=== Usages ===
v600 
=== Predecessor ===
a631 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v693 lastLocationAccess: - #next: v123  <|@  <|@
f <@~|@floating>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v632 
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v632  <|@  <|@
f <@~|@floating>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a631 
=== Succesors ===
=== Usages ===
i634 a651 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a631  <|@  <|@
f <@~|@floating>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a631 
=== Succesors ===
=== Usages ===
i633 a635 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a631  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}]
keySuccessors: [I@14cbb6cb
keys: [HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>]
profileData: PROFILED keyProbabilities: [0.5000008869174357, 0.49999911308256434, 0.0]
stamp: void
=== Inputs ===
value: v600 
=== Succesors ===
successors: v115 v116 v118 
=== Usages ===
=== Predecessor ===
v632 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v600 #successors: v115 v116 v118  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i633 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i633  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i633 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v679 
lastLocationAccess: - 
=== Succesors ===
next: v475 
=== Usages ===
v128 
=== Predecessor ===
v115 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v679 lastLocationAccess: - #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i354 
y: i633 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i354 y: i633  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v128 
=== Succesors ===
trueSuccessor: v473 
falseSuccessor: v474 
=== Usages ===
=== Predecessor ===
i633 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v128 #trueSuccessor: v473 #falseSuccessor: v474  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v556 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v556  <|@  <|@
f <@~|@floating>@ <|@
tid i557 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -120851
stableDimension: 0
stamp: i32 [-120851]
stampKind: i32
value: int[-120851|0xfffffffffffe27ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v473 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 5]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: i634 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i634  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i634 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v680 
lastLocationAccess: - 
=== Succesors ===
next: v479 
=== Usages ===
v130 
=== Predecessor ===
v474 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v680 lastLocationAccess: - #next: v479  <|@  <|@
f <@~|@floating>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i634 
y: i354 
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i634 y: i354  <|@  <|@
f <@*|@fixed>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v130 
=== Succesors ===
trueSuccessor: v477 
falseSuccessor: v478 
=== Usages ===
=== Predecessor ===
i634 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v130 #trueSuccessor: v477 #falseSuccessor: v478  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v562 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v562  <|@  <|@
f <@~|@floating>@ <|@
tid i563 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -121875
stableDimension: 0
stamp: i32 [-121875]
stampKind: i32
value: int[-121875|0xfffffffffffe23ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v477 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B45" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 10]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v216 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v216  <|@  <|@
f <@*|@fixed>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v656 
=== Predecessor ===
v478 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B51" 
    xhandlers
    flags 
    probability 4588098584144088959
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a635 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a635  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a635 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v679 
lastLocationAccess: - 
=== Succesors ===
next: v636 
=== Usages ===
v694 v681 v682 
=== Predecessor ===
v116 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v679 lastLocationAccess: - #next: v636  <|@  <|@
f <@~|@floating>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a635 
=== Succesors ===
=== Usages ===
v636 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a635  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-76555|0xfffffffffffed4f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v694 
lastLocationAccess: - 
=== Succesors ===
next: v142 
=== Usages ===
v603 
=== Predecessor ===
a635 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v694 lastLocationAccess: - #next: v142  <|@  <|@
f <@~|@floating>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v636 
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v636  <|@  <|@
f <@~|@floating>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a635 
=== Succesors ===
=== Usages ===
i638 a650 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a635  <|@  <|@
f <@~|@floating>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a635 
=== Succesors ===
=== Usages ===
i637 a639 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a635  <|@  <|@
f <@*|@fixed>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}]
keySuccessors: [I@7ea126ff
keys: [HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>]
profileData: PROFILED keyProbabilities: [0.5000008869174357, 0.49999911308256434, 0.0]
stamp: void
=== Inputs ===
value: v603 
=== Succesors ===
successors: v134 v135 v137 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v603 #successors: v134 v135 v137  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i637 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i637  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i637 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v681 
lastLocationAccess: - 
=== Succesors ===
next: v483 
=== Usages ===
v147 
=== Predecessor ===
v134 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v681 lastLocationAccess: - #next: v483  <|@  <|@
f <@~|@floating>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i354 
y: i637 
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i354 y: i637  <|@  <|@
f <@*|@fixed>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v147 
=== Succesors ===
trueSuccessor: v481 
falseSuccessor: v482 
=== Usages ===
=== Predecessor ===
i637 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v147 #trueSuccessor: v481 #falseSuccessor: v482  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v564 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v564  <|@  <|@
f <@~|@floating>@ <|@
tid i565 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -122899
stableDimension: 0
stamp: i32 [-122899]
stampKind: i32
value: int[-122899|0xfffffffffffe1fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v481 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 5]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: i638 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i638  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i638 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v682 
lastLocationAccess: - 
=== Succesors ===
next: v487 
=== Usages ===
v149 
=== Predecessor ===
v482 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v682 lastLocationAccess: - #next: v487  <|@  <|@
f <@~|@floating>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i638 
y: i354 
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i638 y: i354  <|@  <|@
f <@*|@fixed>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v149 
=== Succesors ===
trueSuccessor: v485 
falseSuccessor: v486 
=== Usages ===
=== Predecessor ===
i638 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v149 #trueSuccessor: v485 #falseSuccessor: v486  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v570 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v570  <|@  <|@
f <@~|@floating>@ <|@
tid i571 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -123923
stableDimension: 0
stamp: i32 [-123923]
stampKind: i32
value: int[-123923|0xfffffffffffe1bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v485 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 10]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v212 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v212  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v656 
=== Predecessor ===
v486 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B36" "B50" 
    xhandlers
    flags 
    probability 4583594970436437461
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a639 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a639  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a639 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v681 
lastLocationAccess: - 
=== Succesors ===
next: v640 
=== Usages ===
v695 v683 v684 
=== Predecessor ===
v135 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v681 lastLocationAccess: - #next: v640  <|@  <|@
f <@~|@floating>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a639 
=== Succesors ===
=== Usages ===
v640 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a639  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-79371|0xfffffffffffec9f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v695 
lastLocationAccess: - 
=== Succesors ===
next: v161 
=== Usages ===
v606 
=== Predecessor ===
a639 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v695 lastLocationAccess: - #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v640 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v640  <|@  <|@
f <@~|@floating>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a639 
=== Succesors ===
=== Usages ===
i642 a649 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a639  <|@  <|@
f <@~|@floating>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a639 
=== Succesors ===
=== Usages ===
i641 a643 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a639  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}]
keySuccessors: [I@6115295
keys: [HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>]
profileData: PROFILED keyProbabilities: [0.5000008869174357, 0.49999911308256434, 0.0]
stamp: void
=== Inputs ===
value: v606 
=== Succesors ===
successors: v153 v154 v156 
=== Usages ===
=== Predecessor ===
v640 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v606 #successors: v153 v154 v156  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i641 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i641  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i641 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v683 
lastLocationAccess: - 
=== Succesors ===
next: v491 
=== Usages ===
v166 
=== Predecessor ===
v153 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v683 lastLocationAccess: - #next: v491  <|@  <|@
f <@~|@floating>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i354 
y: i641 
=== Succesors ===
=== Usages ===
v491 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i354 y: i641  <|@  <|@
f <@*|@fixed>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v166 
=== Succesors ===
trueSuccessor: v489 
falseSuccessor: v490 
=== Usages ===
=== Predecessor ===
i641 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v166 #trueSuccessor: v489 #falseSuccessor: v490  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v572 
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v572  <|@  <|@
f <@~|@floating>@ <|@
tid i573 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -124947
stableDimension: 0
stamp: i32 [-124947]
stampKind: i32
value: int[-124947|0xfffffffffffe17ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v489 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 5]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: i642 
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i642  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i642 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v684 
lastLocationAccess: - 
=== Succesors ===
next: v495 
=== Usages ===
v168 
=== Predecessor ===
v490 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v684 lastLocationAccess: - #next: v495  <|@  <|@
f <@~|@floating>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i642 
y: i354 
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i642 y: i354  <|@  <|@
f <@*|@fixed>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v168 
=== Succesors ===
trueSuccessor: v493 
falseSuccessor: v494 
=== Usages ===
=== Predecessor ===
i642 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v168 #trueSuccessor: v493 #falseSuccessor: v494  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v578 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v578  <|@  <|@
f <@~|@floating>@ <|@
tid i579 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -125971
stableDimension: 0
stamp: i32 [-125971]
stampKind: i32
value: int[-125971|0xfffffffffffe13ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v493 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 10]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v215 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v215  <|@  <|@
f <@*|@fixed>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v656 
=== Predecessor ===
v494 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B42" "B49" 
    xhandlers
    flags 
    probability 4579091356728810939
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a643 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a643  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a643 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v683 
lastLocationAccess: - 
=== Succesors ===
next: v644 
=== Usages ===
v696 v685 v686 
=== Predecessor ===
v154 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v683 lastLocationAccess: - #next: v644  <|@  <|@
f <@~|@floating>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a643 
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a643  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-82187|0xfffffffffffebef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v696 
lastLocationAccess: - 
=== Succesors ===
next: v180 
=== Usages ===
v609 
=== Predecessor ===
a643 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v696 lastLocationAccess: - #next: v180  <|@  <|@
f <@~|@floating>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v644 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v644  <|@  <|@
f <@~|@floating>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a643 
=== Succesors ===
=== Usages ===
i646 a648 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a643  <|@  <|@
f <@~|@floating>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a643 
=== Succesors ===
=== Usages ===
i645 a647 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a643  <|@  <|@
f <@*|@fixed>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}]
keySuccessors: [I@607c437a
keys: [HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>]
profileData: PROFILED keyProbabilities: [0.5000008869174357, 0.49999911308256434, 0.0]
stamp: void
=== Inputs ===
value: v609 
=== Succesors ===
successors: v172 v173 v175 
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v609 #successors: v172 v173 v175  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i645 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i645  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i645 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v685 
lastLocationAccess: - 
=== Succesors ===
next: v499 
=== Usages ===
v185 
=== Predecessor ===
v172 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v685 lastLocationAccess: - #next: v499  <|@  <|@
f <@~|@floating>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i354 
y: i645 
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i354 y: i645  <|@  <|@
f <@*|@fixed>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v185 
=== Succesors ===
trueSuccessor: v497 
falseSuccessor: v498 
=== Usages ===
=== Predecessor ===
i645 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v185 #trueSuccessor: v497 #falseSuccessor: v498  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v580 
=== Usages ===
=== Predecessor ===
v499 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v580  <|@  <|@
f <@~|@floating>@ <|@
tid i581 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -126995
stableDimension: 0
stamp: i32 [-126995]
stampKind: i32
value: int[-126995|0xfffffffffffe0fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v497 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 5]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: i646 
=== Usages ===
=== Predecessor ===
v499 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i646  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i646 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v686 
lastLocationAccess: - 
=== Succesors ===
next: v503 
=== Usages ===
v187 
=== Predecessor ===
v498 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v686 lastLocationAccess: - #next: v503  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i646 
y: i354 
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i646 y: i354  <|@  <|@
f <@*|@fixed>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v187 
=== Succesors ===
trueSuccessor: v501 
falseSuccessor: v502 
=== Usages ===
=== Predecessor ===
i646 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v187 #trueSuccessor: v501 #falseSuccessor: v502  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v586 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v586  <|@  <|@
f <@~|@floating>@ <|@
tid i587 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -128019
stableDimension: 0
stamp: i32 [-128019]
stampKind: i32
value: int[-128019|0xfffffffffffe0bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v501 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 10]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v213  <|@  <|@
f <@*|@fixed>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v656 
=== Predecessor ===
v502 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a647 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a647  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a647 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v685 
lastLocationAccess: - 
=== Succesors ===
next: v666 
=== Usages ===
a328 v698 
=== Predecessor ===
v173 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v685 lastLocationAccess: - #next: v666  <|@  <|@
f <@~|@floating>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a647 
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a647  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?5 
object: v698 
=== Succesors ===
next: a648 
=== Usages ===
=== Predecessor ===
a647 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: v698 #next: a648  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a648 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v686 
lastLocationAccess: - 
=== Succesors ===
next: a649 
=== Usages ===
a331 
=== Predecessor ===
v666 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v686 lastLocationAccess: - #next: a649  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a649 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v684 
lastLocationAccess: - 
=== Succesors ===
next: a650 
=== Usages ===
a320 
=== Predecessor ===
a648 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v684 lastLocationAccess: - #next: a650  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a650 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v682 
lastLocationAccess: - 
=== Succesors ===
next: a651 
=== Usages ===
a309 
=== Predecessor ===
a649 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v682 lastLocationAccess: - #next: a651  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a651 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v680 
lastLocationAccess: - 
=== Succesors ===
next: a652 
=== Usages ===
a298 
=== Predecessor ===
a650 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v680 lastLocationAccess: - #next: a652  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a652 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v678 
lastLocationAccess: - 
=== Succesors ===
next: a653 
=== Usages ===
a287 
=== Predecessor ===
a651 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v678 lastLocationAccess: - #next: a653  <|@  <|@
f <@~|@floating>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a619 
=== Succesors ===
=== Usages ===
a653 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a619  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a653 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v676 
lastLocationAccess: - 
=== Succesors ===
next: i192 
=== Usages ===
a276 
=== Predecessor ===
a652 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v676 lastLocationAccess: - #next: i192  <|@  <|@
f <@~|@floating>@ <|@
tid a328 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a647 
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a647  <|@  <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/regex/Pattern$CharPredicate;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Pattern$CharPredicate.is(int)>
=== Inputs ===
arguments: a328 i354 
=== Succesors ===
=== Usages ===
i192 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a328 i354  <|@  <|@
tid ?211 <|@
d <@d|@=== Debug Properties ===
bci: 19
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
localsSize: 4
locksSize: 0
sourceFile: Pattern.java
sourceLine: 4133
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 
=== Succesors ===
=== Usages ===
?210 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4  <|@  <|@
tid ?210 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?211 
=== Succesors ===
=== Usages ===
?205 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?211  <|@  <|@
f <@~|@floating>@ <|@
tid a276 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a653 
=== Succesors ===
=== Usages ===
?205 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a653  <|@  <|@
tid ?205 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?210 
values: - a276 i354 
=== Succesors ===
=== Usages ===
?204 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?210 values: - a276 i354  <|@  <|@
tid ?204 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?205 
=== Succesors ===
=== Usages ===
?203 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?205  <|@  <|@
f <@~|@floating>@ <|@
tid a287 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a652 
=== Succesors ===
=== Usages ===
?203 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a652  <|@  <|@
tid ?203 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?204 
values: - a287 i354 
=== Succesors ===
=== Usages ===
?202 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?204 values: - a287 i354  <|@  <|@
tid ?202 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?203 
=== Succesors ===
=== Usages ===
?201 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?203  <|@  <|@
f <@~|@floating>@ <|@
tid a298 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a651 
=== Succesors ===
=== Usages ===
?201 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a651  <|@  <|@
tid ?201 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?202 
values: - a298 i354 
=== Succesors ===
=== Usages ===
?200 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?202 values: - a298 i354  <|@  <|@
tid ?200 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?201 
=== Succesors ===
=== Usages ===
?199 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?201  <|@  <|@
f <@~|@floating>@ <|@
tid a309 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a650 
=== Succesors ===
=== Usages ===
?199 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a650  <|@  <|@
tid ?199 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?200 
values: - a309 i354 
=== Succesors ===
=== Usages ===
?198 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?200 values: - a309 i354  <|@  <|@
tid ?198 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?199 
=== Succesors ===
=== Usages ===
?197 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?199  <|@  <|@
f <@~|@floating>@ <|@
tid a320 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a649 
=== Succesors ===
=== Usages ===
?197 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a649  <|@  <|@
tid ?197 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?198 
values: - a320 i354 
=== Succesors ===
=== Usages ===
?196 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?198 values: - a320 i354  <|@  <|@
tid ?196 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?197 
=== Succesors ===
=== Usages ===
?193 ?512 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?197  <|@  <|@
f <@~|@floating>@ <|@
tid a331 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a648 
=== Succesors ===
=== Usages ===
?193 ?512 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a648  <|@  <|@
tid ?512 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?196 
values: - a331 i354 
=== Succesors ===
=== Usages ===
i192 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?196 values: - a331 i354  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i192 <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#Pattern$CharPredicate.is
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v335 
stateDuring: ?512 
=== Succesors ===
next: v507 
=== Usages ===
v194 
=== Predecessor ===
a653 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v335 stateDuring: ?512 #next: v507  <|@  <|@
f <@~|@floating>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i192 
y: i16 
=== Succesors ===
=== Usages ===
v507 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i192 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v194 
=== Succesors ===
trueSuccessor: v505 
falseSuccessor: v506 
=== Usages ===
=== Predecessor ===
i192 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v194 #trueSuccessor: v505 #falseSuccessor: v506  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v504 
=== Usages ===
=== Predecessor ===
v507 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v504  <|@  <|@
tid ?193 <|@
d <@d|@=== Debug Properties ===
bci: 7
bytecode: ifne
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?196 
values: i16 - a331 i354 
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?196 values: i16 - a331 i354  <|@  <|@
f <@*|@fixed>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
reason: UnreachedCode
speculation: {0x0000000000000f14[index: 120, len: 20, hash: 0xd98badbc]: UnreachedCode@6[HotSpotMethod<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>, 10]}
stamp: void
=== Inputs ===
stateBefore: ?193 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v505 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?193  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 20]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v214 
=== Usages ===
=== Predecessor ===
v507 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v214  <|@  <|@
f <@*|@fixed>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v656 
=== Predecessor ===
v506 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B10" "B17" "B29" "B41" "B44" "B35" "B23" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v656 
values: i56 i22 i22 i22 i22 i22 i22 
=== Succesors ===
=== Usages ===
?15 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v656 values: i56 i22 i22 i22 i22 i22 i22  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v658 v71 v212 v213 v214 v215 v216 
=== Succesors ===
next: a654 
=== Usages ===
i659 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v658 v71 v212 v213 v214 v215 v216 #next: a654  <|@  <|@
f <@~|@floating>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a654 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a654 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.regex.Pattern$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$Node.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 28]
stamp: n java.util.regex.Pattern$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v687 
lastLocationAccess: - 
=== Succesors ===
next: v655 
=== Usages ===
a338 v697 
=== Predecessor ===
v656 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v687 lastLocationAccess: - #next: v655  <|@  <|@
tid ?15 <|@
d <@d|@=== Debug Properties ===
bci: 24
bytecode: ifeq
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
sourceFile: Pattern.java
sourceLine: 4133
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i659 a1 a2 i3 a4 
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i659 a1 a2 i3 a4  <|@  <|@
f <@~|@floating>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a654 
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a654  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-87051|0xfffffffffffeabf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?15 
guard: - 
address: v697 
lastLocationAccess: - 
=== Succesors ===
next: v345 
=== Usages ===
v612 
=== Predecessor ===
a654 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?15 guard: - address: v697 lastLocationAccess: - #next: v345  <|@  <|@
f <@~|@floating>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v655 
=== Succesors ===
=== Usages ===
v688 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v655  <|@  <|@
f <@~|@floating>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
displacement: 496
stamp: void*
stride: S1
=== Inputs ===
base: v612 
index: - 
=== Succesors ===
=== Usages ===
v345 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v612 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v688 
lastLocationAccess: - 
=== Succesors ===
next: j348 
=== Usages ===
v689 v349 
=== Predecessor ===
v655 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v688 lastLocationAccess: - #next: j348  <|@  <|@
f <@~|@floating>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v345 
index: - 
=== Succesors ===
=== Usages ===
j348 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v345 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j348 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v689 
lastLocationAccess: - 
=== Succesors ===
next: i25 
=== Usages ===
v349 
=== Predecessor ===
v345 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v689 lastLocationAccess: - #next: i25  <|@  <|@
f <@~|@floating>@ <|@
tid a338 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 28]
op: Uncompress
stamp: a java.util.regex.Pattern$Node
=== Inputs ===
value: a654 
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a654  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 34]
stamp: i32
=== Inputs ===
x: i3 
y: i22 
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i3 y: i22  <|@  <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/regex/Pattern$Node;, resolved>, UnresolvedJavaType<Ljava/util/regex/Matcher;>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/CharSequence;>]
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
computedAddress: j348 
metaspaceMethod: v345 
arguments: a338 a2 i23 a4 
=== Succesors ===
=== Usages ===
i25 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j348 metaspaceMethod: v345 arguments: a338 a2 i23 a4  <|@  <|@
tid ?513 <|@
d <@d|@=== Debug Properties ===
bci: 36
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
localsSize: 4
locksSize: 0
sourceFile: Pattern.java
sourceLine: 4134
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
i25 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i25 <|@
d <@d|@=== Debug Properties ===
bci: 36
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Pattern$Node.match
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v349 
stateDuring: ?513 
=== Succesors ===
next: v511 
=== Usages ===
v27 
=== Predecessor ===
j348 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v349 stateDuring: ?513 #next: v511  <|@  <|@
f <@~|@floating>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i25 
y: i16 
=== Succesors ===
=== Usages ===
v511 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i25 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v27 
=== Succesors ===
trueSuccessor: v509 
falseSuccessor: v510 
=== Usages ===
=== Predecessor ===
i25 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v27 #trueSuccessor: v509 #falseSuccessor: v510  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v508 
=== Usages ===
=== Predecessor ===
v511 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v508  <|@  <|@
tid ?26 <|@
d <@d|@=== Debug Properties ===
bci: 39
bytecode: ifeq
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
sourceFile: Pattern.java
sourceLine: 4134
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i16 
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0xfea36e57]: UnreachedCode@6[HotSpotMethod<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>, 46]}
stamp: void
=== Inputs ===
stateBefore: ?26 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v509 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?26  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v30 
=== Usages ===
=== Predecessor ===
v511 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v30  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
v510 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 47]
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v31 
values: i22 i16 
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v31 values: i22 i16  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 47]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v30 v32 
=== Succesors ===
next: v35 
=== Usages ===
i33 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v30 v32 #next: v35  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 47]
stamp: void
=== Inputs ===
memoryMap: - 
result: i33 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i33  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v584 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v584  <|@  <|@
f <@~|@floating>@ <|@
tid i585 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -44595
stableDimension: 0
stamp: i32 [-44595]
stampKind: i32
value: int[-44595|0xffffffffffff51cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v175 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v576 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v576  <|@  <|@
f <@~|@floating>@ <|@
tid i577 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -39731
stableDimension: 0
stamp: i32 [-39731]
stampKind: i32
value: int[-39731|0xffffffffffff64cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v156 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v568 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v568  <|@  <|@
f <@~|@floating>@ <|@
tid i569 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -34867
stableDimension: 0
stamp: i32 [-34867]
stampKind: i32
value: int[-34867|0xffffffffffff77cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v137 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v560 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v560  <|@  <|@
f <@~|@floating>@ <|@
tid i561 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -30003
stableDimension: 0
stamp: i32 [-30003]
stampKind: i32
value: int[-30003|0xffffffffffff8acd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v118 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v551 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v551  <|@  <|@
f <@~|@floating>@ <|@
tid i552 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -25139
stableDimension: 0
stamp: i32 [-25139]
stampKind: i32
value: int[-25139|0xffffffffffff9dcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v99 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid j543 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: 2580
stableDimension: 0
stamp: i64 [2580]
stampKind: i64
value: long[2580|0xa14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i542 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -18483
stableDimension: 0
stamp: i32 [-18483]
stampKind: i32
value: int[-18483|0xffffffffffffb7cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v73 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.charAt(String.java:1554) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v534 
=== Usages ===
=== Predecessor ===
v463 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v534  <|@  <|@
f <@~|@floating>@ <|@
tid j536 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: 1940
stableDimension: 0
stamp: i64 [1940]
stampKind: i64
value: long[1940|0x794]
=== Inputs ===
=== Succesors ===
=== Usages ===
j519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i535 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -117779
stableDimension: 0
stamp: i32 [-117779]
stampKind: i32
value: int[-117779|0xfffffffffffe33ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v462 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v532 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v532  <|@  <|@
f <@~|@floating>@ <|@
tid j231 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.charAt(String.java:1555) [bci: 8]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i533 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -116755
stableDimension: 0
stamp: i32 [-116755]
stampKind: i32
value: int[-116755|0xfffffffffffe37ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v458 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v530 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v530  <|@  <|@
f <@~|@floating>@ <|@
tid i531 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -61724
stableDimension: 0
stamp: i32 [-61724]
stampKind: i32
value: int[-61724|0xffffffffffff0ee4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v414 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v523 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v523  <|@  <|@
f <@~|@floating>@ <|@
tid j525 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i524 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -58163
stableDimension: 0
stamp: i32 [-58163]
stampKind: i32
value: int[-58163|0xffffffffffff1ccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v402 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B56" "B55" "B54" "B14" "B11" "B53" "B16" "B20" "B52" "B22" "B26" "B51" "B28" "B32" "B50" "B34" "B38" "B49" "B40" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: i32 [-128019 - -18483] bits:1...1xxxxxxxxx11x0x10x
valueDescription: i32
=== Inputs ===
merge: v514 
values: i524 i531 i533 i535 i542 i545 i548 i552 i555 i557 i561 i563 i565 i569 i571 i573 i577 i579 i581 i585 i587 
=== Succesors ===
=== Usages ===
v520 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v514 values: i524 i531 i533 i535 i542 i545 i548 i552 i555 i557 i561 i563 i565 i569 i571 i573 i577 i579 i581 i585 i587  <|@  <|@
f <@~|@floating>@ <|@
tid j519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: i64 [0 - 5140] bits:0...0xxxxxx00x0x00
valueDescription: i64
=== Inputs ===
merge: v514 
values: j525 j517 j231 j536 j543 j546 j517 j553 j546 j546 j553 j546 j546 j553 j546 j546 j553 j546 j546 j553 j546 
=== Succesors ===
=== Usages ===
v520 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v514 values: j525 j517 j231 j536 j543 j546 j517 j553 j546 j546 j553 j546 j546 j553 j546 j546 j553 j546 j546 j553 j546  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v523 v530 v532 v534 v541 v544 v547 v551 v554 v556 v560 v562 v564 v568 v570 v572 v576 v578 v580 v584 v586 
=== Succesors ===
next: v520 
=== Usages ===
i518 j519 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v523 v530 v532 v534 v541 v544 v547 v551 v554 v556 v560 v562 v564 v568 v570 v572 v576 v578 v580 v584 v586 #next: v520  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i518 
speculation: j519 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i518 speculation: j519  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B58" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29c8cc50 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v5|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B57 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" "B12" "B54" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVSXB input: [v8|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVZXB value: v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v12|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v11|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B4 -> B5, B4 -> B6, B4 -> B12] defaultTarget: B4 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4603213171198275611
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v15|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVZXB value: v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVZXB input: [v16|QWORD + v15|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605197970982784543
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.6409319995231739 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602673832159898576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B9 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4598714910550929518
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B10 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" "B18" "B53" 
    xhandlers
    flags 
    probability 4597105811559466883
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = UNCOMPRESSPOINTER (input: v20|DWORD, ~baseRegister: v22|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v21|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v19|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v19|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B17 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B52" 
    xhandlers
    flags 
    probability 4592602197851765433
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v25|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v23|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v23|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B45" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B23 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B51" 
    xhandlers
    flags 
    probability 4588098584144088959
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v28|DWORD = MOV input: [v27|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = UNCOMPRESSPOINTER (input: v28|DWORD, ~baseRegister: v30|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v29|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B51 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v27|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v27|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B29 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B36" "B50" 
    xhandlers
    flags 
    probability 4583594970436437461
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v32|DWORD = MOV input: [v31|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = UNCOMPRESSPOINTER (input: v32|DWORD, ~baseRegister: v34|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v33|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B30 -> B31, B30 -> B36] defaultTarget: B30 -> B50 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v31|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v31|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B42" "B49" 
    xhandlers
    flags 
    probability 4579091356728810939
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v36|DWORD = MOV input: [v35|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = UNCOMPRESSPOINTER (input: v36|DWORD, ~baseRegister: v38|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v37|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B36 -> B37, B36 -> B42] defaultTarget: B36 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v35|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v35|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[_] = MOV input: [v19|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v52|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v51|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v50|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v49|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v48|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v47|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v53|DWORD, y: v53|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B10" "B17" "B29" "B41" "B44" "B35" "B23" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v54|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v56|DWORD = MOV input: [v55|DWORD[_] * 8 + 8] size: DWORD state [bci:24] <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v56|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV input: [v59|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v55|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v61|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36] <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v63|DWORD, y: v63|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-122899|0xfffffffffffe1fed], long[5140|0x1414]] destination: B26 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-123923|0xfffffffffffe1bed], long[5140|0x1414]] destination: B28 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-125971|0xfffffffffffe13ed], long[5140|0x1414]] destination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-128019|0xfffffffffffe0bed], long[5140|0x1414]] destination: B40 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -129043 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v52|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v51|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v50|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v49|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v48|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v47|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-126995|0xfffffffffffe0fed], long[5140|0x1414]] destination: B38 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44595|0xffffffffffff51cd], long[4500|0x1194]] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-118803|0xfffffffffffe2fed], long[5140|0x1414]] destination: B14 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-124947|0xfffffffffffe17ed], long[5140|0x1414]] destination: B32 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-39731|0xffffffffffff64cd], long[4500|0x1194]] destination: B50 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-34867|0xffffffffffff77cd], long[4500|0x1194]] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25139|0xffffffffffff9dcd], long[4500|0x1194]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-67611|0xfffffffffffef7e5], long[0|0x0]] destination: B11 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-120851|0xfffffffffffe27ed], long[5140|0x1414]] destination: B20 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-30003|0xffffffffffff8acd], long[4500|0x1194]] destination: B52 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-117779|0xfffffffffffe33ed], long[1940|0x794]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-116755|0xfffffffffffe37ed], long[20|0x14]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-119827|0xfffffffffffe2bed], long[5140|0x1414]] destination: B16 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-58163|0xffffffffffff1ccd], long[1300|0x514]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-61724|0xffffffffffff0ee4], long[0|0x0]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-121875|0xfffffffffffe23ed], long[5140|0x1414]] destination: B22 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-18483|0xffffffffffffb7cd], long[2580|0xa14]] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B56" "B55" "B54" "B14" "B11" "B53" "B16" "B20" "B52" "B22" "B26" "B51" "B28" "B32" "B50" "B34" "B38" "B49" "B40" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|DWORD, v66|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #1          // java.util.regex.Matcher.to:int
     5: if_icmpge     48
     8: aload_0       
     9: getfield      #2          // java.util.regex.Pattern$CharProperty.predicate:java.util.regex.Pattern$CharPredicate
    12: aload_3       
    13: iload_2       
    14: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    19: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    24: ifeq          46
    27: aload_0       
    28: getfield      #5          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    31: aload_1       
    32: iload_2       
    33: iconst_1      
    34: iadd          
    35: aload_3       
    36: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    39: ifeq          46
    42: iconst_1      
    43: goto          47
    46: iconst_0      
    47: ireturn       
    48: aload_1       
    49: iconst_1      
    50: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    53: iconst_0      
    54: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B58" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v615 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v615  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.regex.Pattern$BmpCharProperty
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v668 v687 ?15 ?211 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# java.util.regex.Matcher
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v667 v349 ?15 ?211 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v7 v243 j353 ?15 i23 ?211 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a java.lang.Object
uncheckedStamp: a java.lang.CharSequence
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v690 v669 ?15 v349 ?211 v670 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_2
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
localsSize: 4
locksSize: 0
sourceFile: Pattern.java
sourceLine: 4132
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 
=== Succesors ===
=== Usages ===
v520 v615 i616 i618 v620 i625 v628 v632 v636 v640 v644 v666 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4  <|@  <|@
f <@~|@floating>@ <|@
tid v690 <|@
result [v3|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-57867|0xffffffffffff1df5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v690 
lastLocationAccess: - 
=== Succesors ===
next: v403 
=== Usages ===
v614 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v690 lastLocationAccess: - #next: v403  <|@  <|@
f <@~|@floating>@ <|@
tid v613 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v614 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v615 
y: v613 
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v615 y: v613  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v614 
=== Succesors ===
trueSuccessor: v400 
falseSuccessor: v402 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v614 #trueSuccessor: v400 #falseSuccessor: v402  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29c8cc50 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: i616 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i616  <|@  <|@
f <@~|@floating>@ <|@
tid v667 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i616 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i616 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-55819|0xffffffffffff25f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.to
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 2]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v667 
lastLocationAccess: - 
=== Succesors ===
next: a617 
=== Usages ===
v7 
=== Predecessor ===
v400 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v667 lastLocationAccess: - #next: a617  <|@  <|@
f <@~|@floating>@ <|@
tid v670 <|@
result [v3|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a617 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a617 <|@
result v5|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.charAt(String.java:1555) [bci: 8]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v670 
lastLocationAccess: - 
=== Succesors ===
next: i618 
=== Usages ===
v672 v671 
=== Predecessor ===
i616 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v670 lastLocationAccess: - #next: i618  <|@  <|@
f <@~|@floating>@ <|@
tid v671 <|@
result [v5|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a617 
=== Succesors ===
=== Usages ===
i618 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a617  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i618 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-60427|0xffffffffffff13f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 2]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v671 
lastLocationAccess: - 
=== Succesors ===
next: v415 
=== Usages ===
v243 
=== Predecessor ===
a617 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v671 lastLocationAccess: - #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i618 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i3 y: i618  <|@  <|@
f <@~|@floating>@ <|@
tid j517 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j519 j519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v243 
=== Succesors ===
trueSuccessor: v412 
falseSuccessor: v414 
=== Usages ===
=== Predecessor ===
i618 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v243 #trueSuccessor: v412 #falseSuccessor: v414  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v5|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B57 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a619 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a619  <|@  <|@
f <@~|@floating>@ <|@
tid v668 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a619 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a619 <|@
result v6|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$CharProperty.predicate
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 9]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v668 
lastLocationAccess: - 
=== Succesors ===
next: v620 
=== Usages ===
v691 v673 v676 
=== Predecessor ===
v412 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v668 lastLocationAccess: - #next: v620  <|@  <|@
f <@~|@floating>@ <|@
tid v691 <|@
result [v6|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a619 
=== Succesors ===
=== Usages ===
v620 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a619  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v620 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-64523|0xffffffffffff03f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v691 
lastLocationAccess: - 
=== Succesors ===
next: v459 
=== Usages ===
v594 
=== Predecessor ===
a619 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v691 lastLocationAccess: - #next: v459  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 5]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i616 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i616  <|@  <|@
f <@*|@fixed>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 5]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v457 
falseSuccessor: v458 
=== Usages ===
=== Predecessor ===
v620 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v457 #falseSuccessor: v458  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i621 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i621  <|@  <|@
f <@~|@floating>@ <|@
tid v669 <|@
result [v3|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
i621 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i621 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 7]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v669 
lastLocationAccess: - 
=== Succesors ===
next: v463 
=== Usages ===
v352 
=== Predecessor ===
v457 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v669 lastLocationAccess: - #next: v463  <|@  <|@
f <@~|@floating>@ <|@
tid i351 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i621 
y: i351 
=== Succesors ===
=== Usages ===
v463 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i621 y: i351  <|@  <|@
f <@*|@fixed>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:1554) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v352 
=== Succesors ===
trueSuccessor: v461 
falseSuccessor: v462 
=== Usages ===
=== Predecessor ===
i621 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v352 #trueSuccessor: v461 #falseSuccessor: v462  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" "B12" "B54" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.charAt(String.java:1555) [bci: 7]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: i622 
=== Usages ===
=== Predecessor ===
v463 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i622  <|@  <|@
f <@~|@floating>@ <|@
tid j353 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i3 
=== Succesors ===
=== Usages ===
v672 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i3  <|@  <|@
f <@~|@floating>@ <|@
tid v672 <|@
result [v8|QWORD + v5|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j353 
index: a617 
=== Succesors ===
=== Usages ===
i622 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j353 index: a617  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i622 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v672 
lastLocationAccess: - 
=== Succesors ===
next: v78 
=== Usages ===
i354 j355 
=== Predecessor ===
v461 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v672 lastLocationAccess: - #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid i354 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 12]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i622 
=== Succesors ===
=== Usages ===
?201 v84 v263 ?205 ?203 v109 v111 v128 v130 v147 v149 v166 v168 v185 v187 v335 ?193 ?197 ?199 ?512 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i622  <|@  <|@
f <@~|@floating>@ <|@
tid v594 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v620 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v620  <|@  <|@
f <@~|@floating>@ <|@
tid v673 <|@
result [v6|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a619 
=== Succesors ===
=== Usages ===
i623 a624 a627 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a619  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 33]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i23 i33 i85 i659 i659 i659 i659 i659 i659 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v17 v27 i33 v194 i85 ?193 ?26 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}]
keySuccessors: [I@5e14cb9d
keys: [HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>, HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>]
profileData: PROFILED keyProbabilities: [0.5593249922108073, 0.22035704200328657, 0.2203179657859061, 0.0]
stamp: void
=== Inputs ===
value: v594 
=== Succesors ===
successors: v60 v65 v70 v73 
=== Usages ===
=== Predecessor ===
i622 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v594 #successors: v60 v65 v70 v73  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVSXB input: [v8|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVZXB value: v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v12|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v11|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B4 -> B5, B4 -> B6, B4 -> B12] defaultTarget: B4 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4603213171198275611
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i623 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i623 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003b.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003b.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v673 
lastLocationAccess: - 
=== Succesors ===
next: v61 
=== Usages ===
v84 
=== Predecessor ===
v60 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v673 lastLocationAccess: - #next: v61  <|@  <|@
f <@~|@floating>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.lambda$Single$14(Pattern.java:5910) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x80000003b.is(int) [bci: 5]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i354 
y: i623 
=== Succesors ===
=== Usages ===
i85 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i354 y: i623  <|@  <|@
f <@~|@floating>@ <|@
tid i85 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$Single$14(Pattern.java:5910) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x80000003b.is(int) [bci: 5]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
condition: v84 
trueValue: i22 
falseValue: i16 
=== Succesors ===
=== Usages ===
i56 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v84 trueValue: i22 falseValue: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
i623 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a624 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a624  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a624 <|@
result v15|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# boolean[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$BitClass.bits
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 8]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: n# boolean[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v673 
lastLocationAccess: - 
=== Succesors ===
next: i625 
=== Usages ===
v675 v674 
=== Predecessor ===
v65 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v673 lastLocationAccess: - #next: i625  <|@  <|@
f <@~|@floating>@ <|@
tid v674 <|@
result [v15|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a624 
=== Succesors ===
=== Usages ===
i625 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a624  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i625 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-66315|0xfffffffffffefcf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v674 
lastLocationAccess: - 
=== Succesors ===
next: v427 
=== Usages ===
v263 
=== Predecessor ===
a624 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v674 lastLocationAccess: - #next: v427  <|@  <|@
f <@~|@floating>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i354 
y: i625 
=== Succesors ===
=== Usages ===
v427 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i354 y: i625  <|@  <|@
f <@*|@fixed>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v263 
=== Succesors ===
trueSuccessor: v424 
falseSuccessor: v426 
=== Usages ===
=== Predecessor ===
i625 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v263 #trueSuccessor: v424 #falseSuccessor: v426  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v15|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: i626 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i626  <|@  <|@
f <@~|@floating>@ <|@
tid j355 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
resultBits: 64
stamp: i64 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i622 
=== Succesors ===
=== Usages ===
v675 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i622  <|@  <|@
f <@~|@floating>@ <|@
tid v675 <|@
result [v16|QWORD + v15|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j355 
index: a624 
=== Succesors ===
=== Usages ===
i626 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j355 index: a624  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i626 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: boolean
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v675 
lastLocationAccess: - 
=== Succesors ===
next: v66 
=== Usages ===
i270 
=== Predecessor ===
v424 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v675 lastLocationAccess: - #next: v66  <|@  <|@
f <@~|@floating>@ <|@
tid i270 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
resultBits: 32
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
value: i626 
=== Succesors ===
=== Usages ===
i56 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i626  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
i626 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVZXB value: v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVZXB input: [v16|QWORD + v15|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605197970982784543
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i56 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v55 
values: i85 i270 
=== Succesors ===
=== Usages ===
i659 v17 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v55 values: i85 i270  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v61 v66 
=== Succesors ===
next: v20 
=== Usages ===
i56 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v61 v66 #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i56 
y: i16 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i56 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.6409319995231739
stamp: void
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v19 
falseSuccessor: v657 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v19 #falseSuccessor: v657  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.6409319995231739 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602673832159898576
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v32  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
v19 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B9 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4598714910550929518
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v658 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v658  <|@  <|@
f <@*|@fixed>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v656 
=== Predecessor ===
v657 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B10 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v547 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v547  <|@  <|@
f <@~|@floating>@ <|@
tid i548 <|@
result int[-67611|0xfffffffffffef7e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -67611
stableDimension: 0
stamp: i32 [-67611]
stampKind: i32
value: int[-67611|0xfffffffffffef7e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v426 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-67611|0xfffffffffffef7e5], long[0|0x0]] destination: B11 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" "B18" "B53" 
    xhandlers
    flags 
    probability 4597105811559466883
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a627 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a627  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a627 <|@
result v19|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v673 
lastLocationAccess: - 
=== Succesors ===
next: v628 
=== Usages ===
v692 v677 v678 
=== Predecessor ===
v70 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v673 lastLocationAccess: - #next: v628  <|@  <|@
f <@~|@floating>@ <|@
tid v692 <|@
result [v19|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a627 
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a627  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v628 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-70923|0xfffffffffffeeaf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v692 
lastLocationAccess: - 
=== Succesors ===
next: v104 
=== Usages ===
v597 
=== Predecessor ===
a627 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v692 lastLocationAccess: - #next: v104  <|@  <|@
f <@~|@floating>@ <|@
tid v597 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v628 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v628  <|@  <|@
f <@~|@floating>@ <|@
tid v678 <|@
result [v19|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a627 
=== Succesors ===
=== Usages ===
i630 a652 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a627  <|@  <|@
f <@~|@floating>@ <|@
tid v677 <|@
result [v19|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a627 
=== Succesors ===
=== Usages ===
i629 a631 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a627  <|@  <|@
f <@~|@floating>@ <|@
tid j553 <|@
result long[4500|0x1194] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: 4500
stableDimension: 0
stamp: i64 [4500]
stampKind: i64
value: long[4500|0x1194]
=== Inputs ===
=== Succesors ===
=== Usages ===
j519 j519 j519 j519 j519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j546 <|@
result long[5140|0x1414] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: 5140
stableDimension: 0
stamp: i64 [5140]
stampKind: i64
value: long[5140|0x1414]
=== Inputs ===
=== Succesors ===
=== Usages ===
j519 j519 j519 j519 j519 j519 j519 j519 j519 j519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}]
keySuccessors: [I@179e22b7
keys: [HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>]
profileData: PROFILED keyProbabilities: [0.5000008869174357, 0.49999911308256434, 0.0]
stamp: void
=== Inputs ===
value: v597 
=== Succesors ===
successors: v94 v96 v99 
=== Usages ===
=== Predecessor ===
v628 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v597 #successors: v94 v96 v99  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = UNCOMPRESSPOINTER (input: v20|DWORD, ~baseRegister: v22|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v21|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i629 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i629  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i629 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v677 
lastLocationAccess: - 
=== Succesors ===
next: v467 
=== Usages ===
v109 
=== Predecessor ===
v94 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v677 lastLocationAccess: - #next: v467  <|@  <|@
f <@~|@floating>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i354 
y: i629 
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i354 y: i629  <|@  <|@
f <@*|@fixed>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v109 
=== Succesors ===
trueSuccessor: v465 
falseSuccessor: v466 
=== Usages ===
=== Predecessor ===
i629 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v109 #trueSuccessor: v465 #falseSuccessor: v466  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v19|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v544 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v544  <|@  <|@
f <@~|@floating>@ <|@
tid i545 <|@
result int[-118803|0xfffffffffffe2fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -118803
stableDimension: 0
stamp: i32 [-118803]
stampKind: i32
value: int[-118803|0xfffffffffffe2fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v465 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-118803|0xfffffffffffe2fed], long[5140|0x1414]] destination: B14 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 5]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: i630 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i630  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i630 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v678 
lastLocationAccess: - 
=== Succesors ===
next: v471 
=== Usages ===
v111 
=== Predecessor ===
v466 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v678 lastLocationAccess: - #next: v471  <|@  <|@
f <@~|@floating>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i630 
y: i354 
=== Succesors ===
=== Usages ===
v471 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i630 y: i354  <|@  <|@
f <@*|@fixed>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v111 
=== Succesors ===
trueSuccessor: v469 
falseSuccessor: v470 
=== Usages ===
=== Predecessor ===
i630 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v111 #trueSuccessor: v469 #falseSuccessor: v470  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v19|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v554 
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v554  <|@  <|@
f <@~|@floating>@ <|@
tid i555 <|@
result int[-119827|0xfffffffffffe2bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -119827
stableDimension: 0
stamp: i32 [-119827]
stampKind: i32
value: int[-119827|0xfffffffffffe2bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v469 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-119827|0xfffffffffffe2bed], long[5140|0x1414]] destination: B16 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 10]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v71  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v656 
=== Predecessor ===
v470 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B17 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B52" 
    xhandlers
    flags 
    probability 4592602197851765433
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a631 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a631 <|@
result v23|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v677 
lastLocationAccess: - 
=== Succesors ===
next: v632 
=== Usages ===
v693 v679 v680 
=== Predecessor ===
v96 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v677 lastLocationAccess: - #next: v632  <|@  <|@
f <@~|@floating>@ <|@
tid v693 <|@
result [v23|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a631 
=== Succesors ===
=== Usages ===
v632 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v632 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-73739|0xfffffffffffedff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v693 
lastLocationAccess: - 
=== Succesors ===
next: v123 
=== Usages ===
v600 
=== Predecessor ===
a631 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v693 lastLocationAccess: - #next: v123  <|@  <|@
f <@~|@floating>@ <|@
tid v600 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v632 
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v632  <|@  <|@
f <@~|@floating>@ <|@
tid v680 <|@
result [v23|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a631 
=== Succesors ===
=== Usages ===
i634 a651 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a631  <|@  <|@
f <@~|@floating>@ <|@
tid v679 <|@
result [v23|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a631 
=== Succesors ===
=== Usages ===
i633 a635 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a631  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}]
keySuccessors: [I@14cbb6cb
keys: [HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>]
profileData: PROFILED keyProbabilities: [0.5000008869174357, 0.49999911308256434, 0.0]
stamp: void
=== Inputs ===
value: v600 
=== Succesors ===
successors: v115 v116 v118 
=== Usages ===
=== Predecessor ===
v632 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v600 #successors: v115 v116 v118  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v25|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i633 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i633  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i633 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v679 
lastLocationAccess: - 
=== Succesors ===
next: v475 
=== Usages ===
v128 
=== Predecessor ===
v115 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v679 lastLocationAccess: - #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i354 
y: i633 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i354 y: i633  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v128 
=== Succesors ===
trueSuccessor: v473 
falseSuccessor: v474 
=== Usages ===
=== Predecessor ===
i633 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v128 #trueSuccessor: v473 #falseSuccessor: v474  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v23|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v556 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v556  <|@  <|@
f <@~|@floating>@ <|@
tid i557 <|@
result int[-120851|0xfffffffffffe27ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -120851
stableDimension: 0
stamp: i32 [-120851]
stampKind: i32
value: int[-120851|0xfffffffffffe27ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v473 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-120851|0xfffffffffffe27ed], long[5140|0x1414]] destination: B20 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 5]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: i634 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i634  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i634 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v680 
lastLocationAccess: - 
=== Succesors ===
next: v479 
=== Usages ===
v130 
=== Predecessor ===
v474 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v680 lastLocationAccess: - #next: v479  <|@  <|@
f <@~|@floating>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i634 
y: i354 
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i634 y: i354  <|@  <|@
f <@*|@fixed>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v130 
=== Succesors ===
trueSuccessor: v477 
falseSuccessor: v478 
=== Usages ===
=== Predecessor ===
i634 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v130 #trueSuccessor: v477 #falseSuccessor: v478  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v23|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v562 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v562  <|@  <|@
f <@~|@floating>@ <|@
tid i563 <|@
result int[-121875|0xfffffffffffe23ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -121875
stableDimension: 0
stamp: i32 [-121875]
stampKind: i32
value: int[-121875|0xfffffffffffe23ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v477 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-121875|0xfffffffffffe23ed], long[5140|0x1414]] destination: B22 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B45" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 10]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v216 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v216  <|@  <|@
f <@*|@fixed>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v656 
=== Predecessor ===
v478 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B23 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B51" 
    xhandlers
    flags 
    probability 4588098584144088959
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a635 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a635  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a635 <|@
result v27|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v679 
lastLocationAccess: - 
=== Succesors ===
next: v636 
=== Usages ===
v694 v681 v682 
=== Predecessor ===
v116 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v679 lastLocationAccess: - #next: v636  <|@  <|@
f <@~|@floating>@ <|@
tid v694 <|@
result [v27|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a635 
=== Succesors ===
=== Usages ===
v636 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a635  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v636 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-76555|0xfffffffffffed4f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v694 
lastLocationAccess: - 
=== Succesors ===
next: v142 
=== Usages ===
v603 
=== Predecessor ===
a635 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v694 lastLocationAccess: - #next: v142  <|@  <|@
f <@~|@floating>@ <|@
tid v603 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v636 
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v636  <|@  <|@
f <@~|@floating>@ <|@
tid v682 <|@
result [v27|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a635 
=== Succesors ===
=== Usages ===
i638 a650 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a635  <|@  <|@
f <@~|@floating>@ <|@
tid v681 <|@
result [v27|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a635 
=== Succesors ===
=== Usages ===
i637 a639 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a635  <|@  <|@
f <@*|@fixed>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}]
keySuccessors: [I@7ea126ff
keys: [HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>]
profileData: PROFILED keyProbabilities: [0.5000008869174357, 0.49999911308256434, 0.0]
stamp: void
=== Inputs ===
value: v603 
=== Succesors ===
successors: v134 v135 v137 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v603 #successors: v134 v135 v137  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v28|DWORD = MOV input: [v27|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = UNCOMPRESSPOINTER (input: v28|DWORD, ~baseRegister: v30|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v29|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B51 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i637 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i637  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i637 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v681 
lastLocationAccess: - 
=== Succesors ===
next: v483 
=== Usages ===
v147 
=== Predecessor ===
v134 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v681 lastLocationAccess: - #next: v483  <|@  <|@
f <@~|@floating>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i354 
y: i637 
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i354 y: i637  <|@  <|@
f <@*|@fixed>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v147 
=== Succesors ===
trueSuccessor: v481 
falseSuccessor: v482 
=== Usages ===
=== Predecessor ===
i637 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v147 #trueSuccessor: v481 #falseSuccessor: v482  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v27|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v564 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v564  <|@  <|@
f <@~|@floating>@ <|@
tid i565 <|@
result int[-122899|0xfffffffffffe1fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -122899
stableDimension: 0
stamp: i32 [-122899]
stampKind: i32
value: int[-122899|0xfffffffffffe1fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v481 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-122899|0xfffffffffffe1fed], long[5140|0x1414]] destination: B26 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 5]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: i638 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i638  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i638 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v682 
lastLocationAccess: - 
=== Succesors ===
next: v487 
=== Usages ===
v149 
=== Predecessor ===
v482 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v682 lastLocationAccess: - #next: v487  <|@  <|@
f <@~|@floating>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i638 
y: i354 
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i638 y: i354  <|@  <|@
f <@*|@fixed>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v149 
=== Succesors ===
trueSuccessor: v485 
falseSuccessor: v486 
=== Usages ===
=== Predecessor ===
i638 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v149 #trueSuccessor: v485 #falseSuccessor: v486  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v27|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v570 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v570  <|@  <|@
f <@~|@floating>@ <|@
tid i571 <|@
result int[-123923|0xfffffffffffe1bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -123923
stableDimension: 0
stamp: i32 [-123923]
stampKind: i32
value: int[-123923|0xfffffffffffe1bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v485 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-123923|0xfffffffffffe1bed], long[5140|0x1414]] destination: B28 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 10]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v212 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v212  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v656 
=== Predecessor ===
v486 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B29 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B36" "B50" 
    xhandlers
    flags 
    probability 4583594970436437461
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a639 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a639  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a639 <|@
result v31|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v681 
lastLocationAccess: - 
=== Succesors ===
next: v640 
=== Usages ===
v695 v683 v684 
=== Predecessor ===
v135 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v681 lastLocationAccess: - #next: v640  <|@  <|@
f <@~|@floating>@ <|@
tid v695 <|@
result [v31|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a639 
=== Succesors ===
=== Usages ===
v640 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a639  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v640 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-79371|0xfffffffffffec9f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v695 
lastLocationAccess: - 
=== Succesors ===
next: v161 
=== Usages ===
v606 
=== Predecessor ===
a639 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v695 lastLocationAccess: - #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid v606 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v640 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v640  <|@  <|@
f <@~|@floating>@ <|@
tid v684 <|@
result [v31|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a639 
=== Succesors ===
=== Usages ===
i642 a649 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a639  <|@  <|@
f <@~|@floating>@ <|@
tid v683 <|@
result [v31|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a639 
=== Succesors ===
=== Usages ===
i641 a643 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a639  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}]
keySuccessors: [I@6115295
keys: [HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>]
profileData: PROFILED keyProbabilities: [0.5000008869174357, 0.49999911308256434, 0.0]
stamp: void
=== Inputs ===
value: v606 
=== Succesors ===
successors: v153 v154 v156 
=== Usages ===
=== Predecessor ===
v640 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v606 #successors: v153 v154 v156  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v32|DWORD = MOV input: [v31|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = UNCOMPRESSPOINTER (input: v32|DWORD, ~baseRegister: v34|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v33|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B30 -> B31, B30 -> B36] defaultTarget: B30 -> B50 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i641 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i641  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i641 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v683 
lastLocationAccess: - 
=== Succesors ===
next: v491 
=== Usages ===
v166 
=== Predecessor ===
v153 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v683 lastLocationAccess: - #next: v491  <|@  <|@
f <@~|@floating>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i354 
y: i641 
=== Succesors ===
=== Usages ===
v491 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i354 y: i641  <|@  <|@
f <@*|@fixed>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v166 
=== Succesors ===
trueSuccessor: v489 
falseSuccessor: v490 
=== Usages ===
=== Predecessor ===
i641 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v166 #trueSuccessor: v489 #falseSuccessor: v490  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v31|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v572 
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v572  <|@  <|@
f <@~|@floating>@ <|@
tid i573 <|@
result int[-124947|0xfffffffffffe17ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -124947
stableDimension: 0
stamp: i32 [-124947]
stampKind: i32
value: int[-124947|0xfffffffffffe17ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v489 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-124947|0xfffffffffffe17ed], long[5140|0x1414]] destination: B32 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 5]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: i642 
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i642  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i642 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v684 
lastLocationAccess: - 
=== Succesors ===
next: v495 
=== Usages ===
v168 
=== Predecessor ===
v490 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v684 lastLocationAccess: - #next: v495  <|@  <|@
f <@~|@floating>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i642 
y: i354 
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i642 y: i354  <|@  <|@
f <@*|@fixed>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v168 
=== Succesors ===
trueSuccessor: v493 
falseSuccessor: v494 
=== Usages ===
=== Predecessor ===
i642 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v168 #trueSuccessor: v493 #falseSuccessor: v494  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v31|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v578 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v578  <|@  <|@
f <@~|@floating>@ <|@
tid i579 <|@
result int[-125971|0xfffffffffffe13ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -125971
stableDimension: 0
stamp: i32 [-125971]
stampKind: i32
value: int[-125971|0xfffffffffffe13ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v493 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-125971|0xfffffffffffe13ed], long[5140|0x1414]] destination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 10]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v215 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v215  <|@  <|@
f <@*|@fixed>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v656 
=== Predecessor ===
v494 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B42" "B49" 
    xhandlers
    flags 
    probability 4579091356728810939
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a643 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a643  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a643 <|@
result v35|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v683 
lastLocationAccess: - 
=== Succesors ===
next: v644 
=== Usages ===
v696 v685 v686 
=== Predecessor ===
v154 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v683 lastLocationAccess: - #next: v644  <|@  <|@
f <@~|@floating>@ <|@
tid v696 <|@
result [v35|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a643 
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a643  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v644 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-82187|0xfffffffffffebef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v696 
lastLocationAccess: - 
=== Succesors ===
next: v180 
=== Usages ===
v609 
=== Predecessor ===
a643 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v696 lastLocationAccess: - #next: v180  <|@  <|@
f <@~|@floating>@ <|@
tid v609 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v644 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v644  <|@  <|@
f <@~|@floating>@ <|@
tid v686 <|@
result [v35|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a643 
=== Succesors ===
=== Usages ===
i646 a648 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a643  <|@  <|@
f <@~|@floating>@ <|@
tid v685 <|@
result [v35|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a643 
=== Succesors ===
=== Usages ===
i645 a647 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a643  <|@  <|@
f <@*|@fixed>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}]
keySuccessors: [I@607c437a
keys: [HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>]
profileData: PROFILED keyProbabilities: [0.5000008869174357, 0.49999911308256434, 0.0]
stamp: void
=== Inputs ===
value: v609 
=== Succesors ===
successors: v172 v173 v175 
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v609 #successors: v172 v173 v175  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v36|DWORD = MOV input: [v35|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = UNCOMPRESSPOINTER (input: v36|DWORD, ~baseRegister: v38|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v37|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B36 -> B37, B36 -> B42] defaultTarget: B36 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i645 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i645  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i645 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v685 
lastLocationAccess: - 
=== Succesors ===
next: v499 
=== Usages ===
v185 
=== Predecessor ===
v172 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v685 lastLocationAccess: - #next: v499  <|@  <|@
f <@~|@floating>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i354 
y: i645 
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i354 y: i645  <|@  <|@
f <@*|@fixed>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v185 
=== Succesors ===
trueSuccessor: v497 
falseSuccessor: v498 
=== Usages ===
=== Predecessor ===
i645 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v185 #trueSuccessor: v497 #falseSuccessor: v498  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v35|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v580 
=== Usages ===
=== Predecessor ===
v499 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v580  <|@  <|@
f <@~|@floating>@ <|@
tid i581 <|@
result int[-126995|0xfffffffffffe0fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -126995
stableDimension: 0
stamp: i32 [-126995]
stampKind: i32
value: int[-126995|0xfffffffffffe0fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v497 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-126995|0xfffffffffffe0fed], long[5140|0x1414]] destination: B38 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 5]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: i646 
=== Usages ===
=== Predecessor ===
v499 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i646  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i646 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v686 
lastLocationAccess: - 
=== Succesors ===
next: v503 
=== Usages ===
v187 
=== Predecessor ===
v498 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v686 lastLocationAccess: - #next: v503  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i646 
y: i354 
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i646 y: i354  <|@  <|@
f <@*|@fixed>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v187 
=== Succesors ===
trueSuccessor: v501 
falseSuccessor: v502 
=== Usages ===
=== Predecessor ===
i646 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v187 #trueSuccessor: v501 #falseSuccessor: v502  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v35|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v586 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v586  <|@  <|@
f <@~|@floating>@ <|@
tid i587 <|@
result int[-128019|0xfffffffffffe0bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -128019
stableDimension: 0
stamp: i32 [-128019]
stampKind: i32
value: int[-128019|0xfffffffffffe0bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v501 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-128019|0xfffffffffffe0bed], long[5140|0x1414]] destination: B40 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 10]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v213  <|@  <|@
f <@*|@fixed>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v656 
=== Predecessor ===
v502 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a647 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a647  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a647 <|@
result v39|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v685 
lastLocationAccess: - 
=== Succesors ===
next: v666 
=== Usages ===
a328 v698 
=== Predecessor ===
v173 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v685 lastLocationAccess: - #next: v666  <|@  <|@
f <@~|@floating>@ <|@
tid v698 <|@
result [v39|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a647 
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a647  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?5 
object: v698 
=== Succesors ===
next: a648 
=== Usages ===
=== Predecessor ===
a647 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: v698 #next: a648  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a648 <|@
result v40|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v686 
lastLocationAccess: - 
=== Succesors ===
next: a649 
=== Usages ===
a331 
=== Predecessor ===
v666 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v686 lastLocationAccess: - #next: a649  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a649 <|@
result v41|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v684 
lastLocationAccess: - 
=== Succesors ===
next: a650 
=== Usages ===
a320 
=== Predecessor ===
a648 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v684 lastLocationAccess: - #next: a650  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a650 <|@
result v42|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v682 
lastLocationAccess: - 
=== Succesors ===
next: a651 
=== Usages ===
a309 
=== Predecessor ===
a649 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v682 lastLocationAccess: - #next: a651  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a651 <|@
result v43|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v680 
lastLocationAccess: - 
=== Succesors ===
next: a652 
=== Usages ===
a298 
=== Predecessor ===
a650 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v680 lastLocationAccess: - #next: a652  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a652 <|@
result v44|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v678 
lastLocationAccess: - 
=== Succesors ===
next: a653 
=== Usages ===
a287 
=== Predecessor ===
a651 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v678 lastLocationAccess: - #next: a653  <|@  <|@
f <@~|@floating>@ <|@
tid v676 <|@
result [v6|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a619 
=== Succesors ===
=== Usages ===
a653 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a619  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a653 <|@
result v45|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v676 
lastLocationAccess: - 
=== Succesors ===
next: i192 
=== Usages ===
a276 
=== Predecessor ===
a652 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v676 lastLocationAccess: - #next: i192  <|@  <|@
f <@~|@floating>@ <|@
tid a328 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a647 
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a647  <|@  <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/regex/Pattern$CharPredicate;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Pattern$CharPredicate.is(int)>
=== Inputs ===
arguments: a328 i354 
=== Succesors ===
=== Usages ===
i192 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a328 i354  <|@  <|@
tid ?211 <|@
d <@d|@=== Debug Properties ===
bci: 19
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
localsSize: 4
locksSize: 0
sourceFile: Pattern.java
sourceLine: 4133
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 
=== Succesors ===
=== Usages ===
?210 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4  <|@  <|@
tid ?210 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?211 
=== Succesors ===
=== Usages ===
?205 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?211  <|@  <|@
f <@~|@floating>@ <|@
tid a276 <|@
result v47|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a653 
=== Succesors ===
=== Usages ===
?205 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a653  <|@  <|@
tid ?205 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?210 
values: - a276 i354 
=== Succesors ===
=== Usages ===
?204 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?210 values: - a276 i354  <|@  <|@
tid ?204 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?205 
=== Succesors ===
=== Usages ===
?203 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?205  <|@  <|@
f <@~|@floating>@ <|@
tid a287 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a652 
=== Succesors ===
=== Usages ===
?203 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a652  <|@  <|@
tid ?203 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?204 
values: - a287 i354 
=== Succesors ===
=== Usages ===
?202 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?204 values: - a287 i354  <|@  <|@
tid ?202 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?203 
=== Succesors ===
=== Usages ===
?201 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?203  <|@  <|@
f <@~|@floating>@ <|@
tid a298 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a651 
=== Succesors ===
=== Usages ===
?201 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a651  <|@  <|@
tid ?201 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?202 
values: - a298 i354 
=== Succesors ===
=== Usages ===
?200 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?202 values: - a298 i354  <|@  <|@
tid ?200 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?201 
=== Succesors ===
=== Usages ===
?199 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?201  <|@  <|@
f <@~|@floating>@ <|@
tid a309 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a650 
=== Succesors ===
=== Usages ===
?199 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a650  <|@  <|@
tid ?199 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?200 
values: - a309 i354 
=== Succesors ===
=== Usages ===
?198 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?200 values: - a309 i354  <|@  <|@
tid ?198 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?199 
=== Succesors ===
=== Usages ===
?197 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?199  <|@  <|@
f <@~|@floating>@ <|@
tid a320 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a649 
=== Succesors ===
=== Usages ===
?197 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a649  <|@  <|@
tid ?197 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?198 
values: - a320 i354 
=== Succesors ===
=== Usages ===
?196 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?198 values: - a320 i354  <|@  <|@
tid ?196 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?197 
=== Succesors ===
=== Usages ===
?193 ?512 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?197  <|@  <|@
f <@~|@floating>@ <|@
tid a331 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a648 
=== Succesors ===
=== Usages ===
?193 ?512 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a648  <|@  <|@
tid ?512 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?196 
values: - a331 i354 
=== Succesors ===
=== Usages ===
i192 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?196 values: - a331 i354  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i192 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#Pattern$CharPredicate.is
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v335 
stateDuring: ?512 
=== Succesors ===
next: v507 
=== Usages ===
v194 
=== Predecessor ===
a653 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v335 stateDuring: ?512 #next: v507  <|@  <|@
f <@~|@floating>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i192 
y: i16 
=== Succesors ===
=== Usages ===
v507 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i192 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v194 
=== Succesors ===
trueSuccessor: v505 
falseSuccessor: v506 
=== Usages ===
=== Predecessor ===
i192 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v194 #trueSuccessor: v505 #falseSuccessor: v506  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[_] = MOV input: [v19|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v52|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v51|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v50|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v49|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v48|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v47|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v53|DWORD, y: v53|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v504 
=== Usages ===
=== Predecessor ===
v507 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v504  <|@  <|@
tid ?193 <|@
d <@d|@=== Debug Properties ===
bci: 7
bytecode: ifne
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?196 
values: i16 - a331 i354 
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?196 values: i16 - a331 i354  <|@  <|@
f <@*|@fixed>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
reason: UnreachedCode
speculation: {0x0000000000000f14[index: 120, len: 20, hash: 0xd98badbc]: UnreachedCode@6[HotSpotMethod<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>, 10]}
stamp: void
=== Inputs ===
stateBefore: ?193 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v505 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?193  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -129043 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v52|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v51|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v50|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v49|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v48|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v47|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 20]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v214 
=== Usages ===
=== Predecessor ===
v507 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v214  <|@  <|@
f <@*|@fixed>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v656 
=== Predecessor ===
v506 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B10" "B17" "B29" "B41" "B44" "B35" "B23" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i659 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v656 
values: i56 i22 i22 i22 i22 i22 i22 
=== Succesors ===
=== Usages ===
?15 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v656 values: i56 i22 i22 i22 i22 i22 i22  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v658 v71 v212 v213 v214 v215 v216 
=== Succesors ===
next: a654 
=== Usages ===
i659 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v658 v71 v212 v213 v214 v215 v216 #next: a654  <|@  <|@
f <@~|@floating>@ <|@
tid v687 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a654 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a654 <|@
result v55|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.regex.Pattern$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$Node.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 28]
stamp: n java.util.regex.Pattern$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v687 
lastLocationAccess: - 
=== Succesors ===
next: v655 
=== Usages ===
a338 v697 
=== Predecessor ===
v656 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v687 lastLocationAccess: - #next: v655  <|@  <|@
tid ?15 <|@
d <@d|@=== Debug Properties ===
bci: 24
bytecode: ifeq
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
sourceFile: Pattern.java
sourceLine: 4133
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i659 a1 a2 i3 a4 
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i659 a1 a2 i3 a4  <|@  <|@
f <@~|@floating>@ <|@
tid v697 <|@
result [v55|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a654 
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a654  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v655 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-87051|0xfffffffffffeabf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?15 
guard: - 
address: v697 
lastLocationAccess: - 
=== Succesors ===
next: v345 
=== Usages ===
v612 
=== Predecessor ===
a654 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?15 guard: - address: v697 lastLocationAccess: - #next: v345  <|@  <|@
f <@~|@floating>@ <|@
tid v612 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v655 
=== Succesors ===
=== Usages ===
v688 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v655  <|@  <|@
f <@~|@floating>@ <|@
tid v688 <|@
result [v57|QWORD + 496] <|@
d <@d|@=== Debug Properties ===
displacement: 496
stamp: void*
stride: S1
=== Inputs ===
base: v612 
index: - 
=== Succesors ===
=== Usages ===
v345 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v612 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v345 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v688 
lastLocationAccess: - 
=== Succesors ===
next: j348 
=== Usages ===
v689 v349 
=== Predecessor ===
v655 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v688 lastLocationAccess: - #next: j348  <|@  <|@
f <@~|@floating>@ <|@
tid v689 <|@
result [v59|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v345 
index: - 
=== Succesors ===
=== Usages ===
j348 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v345 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j348 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v689 
lastLocationAccess: - 
=== Succesors ===
next: i25 
=== Usages ===
v349 
=== Predecessor ===
v345 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v689 lastLocationAccess: - #next: i25  <|@  <|@
f <@~|@floating>@ <|@
tid a338 <|@
result v61|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 28]
op: Uncompress
stamp: a java.util.regex.Pattern$Node
=== Inputs ===
value: a654 
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a654  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 34]
stamp: i32
=== Inputs ===
x: i3 
y: i22 
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i3 y: i22  <|@  <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/regex/Pattern$Node;, resolved>, UnresolvedJavaType<Ljava/util/regex/Matcher;>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/CharSequence;>]
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
computedAddress: j348 
metaspaceMethod: v345 
arguments: a338 a2 i23 a4 
=== Succesors ===
=== Usages ===
i25 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j348 metaspaceMethod: v345 arguments: a338 a2 i23 a4  <|@  <|@
tid ?513 <|@
d <@d|@=== Debug Properties ===
bci: 36
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
localsSize: 4
locksSize: 0
sourceFile: Pattern.java
sourceLine: 4134
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
i25 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i25 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 36
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Pattern$Node.match
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v349 
stateDuring: ?513 
=== Succesors ===
next: v511 
=== Usages ===
v27 
=== Predecessor ===
j348 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v349 stateDuring: ?513 #next: v511  <|@  <|@
f <@~|@floating>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i25 
y: i16 
=== Succesors ===
=== Usages ===
v511 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i25 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v27 
=== Succesors ===
trueSuccessor: v509 
falseSuccessor: v510 
=== Usages ===
=== Predecessor ===
i25 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v27 #trueSuccessor: v509 #falseSuccessor: v510  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v54|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v56|DWORD = MOV input: [v55|DWORD[_] * 8 + 8] size: DWORD state [bci:24] <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v56|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV input: [v59|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v55|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v61|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36] <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v63|DWORD, y: v63|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v508 
=== Usages ===
=== Predecessor ===
v511 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v508  <|@  <|@
tid ?26 <|@
d <@d|@=== Debug Properties ===
bci: 39
bytecode: ifeq
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
sourceFile: Pattern.java
sourceLine: 4134
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i16 
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0xfea36e57]: UnreachedCode@6[HotSpotMethod<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>, 46]}
stamp: void
=== Inputs ===
stateBefore: ?26 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v509 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?26  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v30 
=== Usages ===
=== Predecessor ===
v511 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v30  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
v510 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i33 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 47]
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v31 
values: i22 i16 
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v31 values: i22 i16  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 47]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v30 v32 
=== Succesors ===
next: v35 
=== Usages ===
i33 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v30 v32 #next: v35  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 47]
stamp: void
=== Inputs ===
memoryMap: - 
result: i33 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i33  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v584 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v584  <|@  <|@
f <@~|@floating>@ <|@
tid i585 <|@
result int[-44595|0xffffffffffff51cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -44595
stableDimension: 0
stamp: i32 [-44595]
stampKind: i32
value: int[-44595|0xffffffffffff51cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v175 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44595|0xffffffffffff51cd], long[4500|0x1194]] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v576 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v576  <|@  <|@
f <@~|@floating>@ <|@
tid i577 <|@
result int[-39731|0xffffffffffff64cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -39731
stableDimension: 0
stamp: i32 [-39731]
stampKind: i32
value: int[-39731|0xffffffffffff64cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v156 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-39731|0xffffffffffff64cd], long[4500|0x1194]] destination: B50 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v568 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v568  <|@  <|@
f <@~|@floating>@ <|@
tid i569 <|@
result int[-34867|0xffffffffffff77cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -34867
stableDimension: 0
stamp: i32 [-34867]
stampKind: i32
value: int[-34867|0xffffffffffff77cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v137 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-34867|0xffffffffffff77cd], long[4500|0x1194]] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v560 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v560  <|@  <|@
f <@~|@floating>@ <|@
tid i561 <|@
result int[-30003|0xffffffffffff8acd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -30003
stableDimension: 0
stamp: i32 [-30003]
stampKind: i32
value: int[-30003|0xffffffffffff8acd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v118 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-30003|0xffffffffffff8acd], long[4500|0x1194]] destination: B52 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v551 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v551  <|@  <|@
f <@~|@floating>@ <|@
tid i552 <|@
result int[-25139|0xffffffffffff9dcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -25139
stableDimension: 0
stamp: i32 [-25139]
stampKind: i32
value: int[-25139|0xffffffffffff9dcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v99 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25139|0xffffffffffff9dcd], long[4500|0x1194]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid j543 <|@
result long[2580|0xa14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: 2580
stableDimension: 0
stamp: i64 [2580]
stampKind: i64
value: long[2580|0xa14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i542 <|@
result int[-18483|0xffffffffffffb7cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -18483
stableDimension: 0
stamp: i32 [-18483]
stampKind: i32
value: int[-18483|0xffffffffffffb7cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v73 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-18483|0xffffffffffffb7cd], long[2580|0xa14]] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.charAt(String.java:1554) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v534 
=== Usages ===
=== Predecessor ===
v463 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v534  <|@  <|@
f <@~|@floating>@ <|@
tid j536 <|@
result long[1940|0x794] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: 1940
stableDimension: 0
stamp: i64 [1940]
stampKind: i64
value: long[1940|0x794]
=== Inputs ===
=== Succesors ===
=== Usages ===
j519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i535 <|@
result int[-117779|0xfffffffffffe33ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -117779
stableDimension: 0
stamp: i32 [-117779]
stampKind: i32
value: int[-117779|0xfffffffffffe33ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v462 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-117779|0xfffffffffffe33ed], long[1940|0x794]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v532 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v532  <|@  <|@
f <@~|@floating>@ <|@
tid j231 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.charAt(String.java:1555) [bci: 8]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i533 <|@
result int[-116755|0xfffffffffffe37ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -116755
stableDimension: 0
stamp: i32 [-116755]
stampKind: i32
value: int[-116755|0xfffffffffffe37ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v458 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-116755|0xfffffffffffe37ed], long[20|0x14]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v530 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v530  <|@  <|@
f <@~|@floating>@ <|@
tid i531 <|@
result int[-61724|0xffffffffffff0ee4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -61724
stableDimension: 0
stamp: i32 [-61724]
stampKind: i32
value: int[-61724|0xffffffffffff0ee4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v414 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-61724|0xffffffffffff0ee4], long[0|0x0]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v523 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v523  <|@  <|@
f <@~|@floating>@ <|@
tid j525 <|@
result long[1300|0x514] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i524 <|@
result int[-58163|0xffffffffffff1ccd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
rawvalue: -58163
stableDimension: 0
stamp: i32 [-58163]
stampKind: i32
value: int[-58163|0xffffffffffff1ccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v402 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-58163|0xffffffffffff1ccd], long[1300|0x514]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B56" "B55" "B54" "B14" "B11" "B53" "B16" "B20" "B52" "B22" "B26" "B51" "B28" "B32" "B50" "B34" "B38" "B49" "B40" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i518 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: i32 [-128019 - -18483] bits:1...1xxxxxxxxx11x0x10x
valueDescription: i32
=== Inputs ===
merge: v514 
values: i524 i531 i533 i535 i542 i545 i548 i552 i555 i557 i561 i563 i565 i569 i571 i573 i577 i579 i581 i585 i587 
=== Succesors ===
=== Usages ===
v520 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v514 values: i524 i531 i533 i535 i542 i545 i548 i552 i555 i557 i561 i563 i565 i569 i571 i573 i577 i579 i581 i585 i587  <|@  <|@
f <@~|@floating>@ <|@
tid j519 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: i64 [0 - 5140] bits:0...0xxxxxx00x0x00
valueDescription: i64
=== Inputs ===
merge: v514 
values: j525 j517 j231 j536 j543 j546 j517 j553 j546 j546 j553 j546 j546 j553 j546 j546 j553 j546 j546 j553 j546 
=== Succesors ===
=== Usages ===
v520 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v514 values: j525 j517 j231 j536 j543 j546 j517 j553 j546 j546 j553 j546 j546 j553 j546 j546 j553 j546 j546 j553 j546  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v523 v530 v532 v534 v541 v544 v547 v551 v554 v556 v560 v562 v564 v568 v570 v572 v576 v578 v580 v584 v586 
=== Succesors ===
next: v520 
=== Usages ===
i518 j519 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v523 v530 v532 v534 v541 v544 v547 v551 v554 v556 v560 v562 v564 v568 v570 v572 v576 v578 v580 v584 v586 #next: v520  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i518 
speculation: j519 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i518 speculation: j519  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|DWORD, v66|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B58" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29c8cc50 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v5|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B57 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" "B12" "B54" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVSXB input: [v8|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVZXB value: v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v12|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v11|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B4 -> B5, B4 -> B6, B4 -> B12] defaultTarget: B4 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4603213171198275611
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v15|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVZXB value: v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVZXB input: [v16|QWORD + v15|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605197970982784543
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.6409319995231739 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602673832159898576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B9 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4598714910550929518
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B10 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" "B18" "B53" 
    xhandlers
    flags 
    probability 4597105811559466883
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = UNCOMPRESSPOINTER (input: v20|DWORD, ~baseRegister: v22|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v21|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v19|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v19|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B17 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B52" 
    xhandlers
    flags 
    probability 4592602197851765433
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v25|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v23|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v23|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B45" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B23 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B51" 
    xhandlers
    flags 
    probability 4588098584144088959
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v28|DWORD = MOV input: [v27|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = UNCOMPRESSPOINTER (input: v28|DWORD, ~baseRegister: v30|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v29|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B51 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v27|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v27|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B29 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B36" "B50" 
    xhandlers
    flags 
    probability 4583594970436437461
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v32|DWORD = MOV input: [v31|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = UNCOMPRESSPOINTER (input: v32|DWORD, ~baseRegister: v34|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v33|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B30 -> B31, B30 -> B36] defaultTarget: B30 -> B50 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v31|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v31|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B42" "B49" 
    xhandlers
    flags 
    probability 4579091356728810939
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v36|DWORD = MOV input: [v35|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = UNCOMPRESSPOINTER (input: v36|DWORD, ~baseRegister: v38|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v37|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B36 -> B37, B36 -> B42] defaultTarget: B36 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v35|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v35|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[_] = MOV input: [v19|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v52|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v51|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v50|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v49|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v48|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v47|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v53|DWORD, y: v53|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B10" "B17" "B29" "B41" "B44" "B35" "B23" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v54|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v56|DWORD = MOV input: [v55|DWORD[_] * 8 + 8] size: DWORD state [bci:24] <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v56|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV input: [v59|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v55|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v61|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36] <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v63|DWORD, y: v63|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-122899|0xfffffffffffe1fed], long[5140|0x1414]] destination: B26 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-123923|0xfffffffffffe1bed], long[5140|0x1414]] destination: B28 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-125971|0xfffffffffffe13ed], long[5140|0x1414]] destination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-128019|0xfffffffffffe0bed], long[5140|0x1414]] destination: B40 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -129043 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v52|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v51|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v50|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v49|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v48|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v47|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-126995|0xfffffffffffe0fed], long[5140|0x1414]] destination: B38 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44595|0xffffffffffff51cd], long[4500|0x1194]] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-118803|0xfffffffffffe2fed], long[5140|0x1414]] destination: B14 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-124947|0xfffffffffffe17ed], long[5140|0x1414]] destination: B32 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-39731|0xffffffffffff64cd], long[4500|0x1194]] destination: B50 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-34867|0xffffffffffff77cd], long[4500|0x1194]] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25139|0xffffffffffff9dcd], long[4500|0x1194]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-67611|0xfffffffffffef7e5], long[0|0x0]] destination: B11 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-120851|0xfffffffffffe27ed], long[5140|0x1414]] destination: B20 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-30003|0xffffffffffff8acd], long[4500|0x1194]] destination: B52 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-117779|0xfffffffffffe33ed], long[1940|0x794]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-116755|0xfffffffffffe37ed], long[20|0x14]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-119827|0xfffffffffffe2bed], long[5140|0x1414]] destination: B16 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-58163|0xffffffffffff1ccd], long[1300|0x514]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-61724|0xffffffffffff0ee4], long[0|0x0]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-121875|0xfffffffffffe23ed], long[5140|0x1414]] destination: B22 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-18483|0xffffffffffffb7cd], long[2580|0xa14]] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B56" "B55" "B54" "B14" "B11" "B53" "B16" "B20" "B52" "B22" "B26" "B51" "B28" "B32" "B50" "B34" "B38" "B49" "B40" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|DWORD, v66|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #1          // java.util.regex.Matcher.to:int
     5: if_icmpge     48
     8: aload_0       
     9: getfield      #2          // java.util.regex.Pattern$CharProperty.predicate:java.util.regex.Pattern$CharPredicate
    12: aload_3       
    13: iload_2       
    14: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    19: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    24: ifeq          46
    27: aload_0       
    28: getfield      #5          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    31: aload_1       
    32: iload_2       
    33: iconst_1      
    34: iadd          
    35: aload_3       
    36: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    39: ifeq          46
    42: iconst_1      
    43: goto          47
    46: iconst_0      
    47: ireturn       
    48: aload_1       
    49: iconst_1      
    50: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    53: iconst_0      
    54: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B58" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29c8cc50 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v5|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B57 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" "B12" "B54" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVSXB input: [v8|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVZXB value: v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v12|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v11|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B4 -> B5, B4 -> B6, B4 -> B12] defaultTarget: B4 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4603213171198275611
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v15|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVZXB value: v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVZXB input: [v16|QWORD + v15|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605197970982784543
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.6409319995231739 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602673832159898576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B9 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4598714910550929518
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B10 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" "B18" "B53" 
    xhandlers
    flags 
    probability 4597105811559466883
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = UNCOMPRESSPOINTER (input: v20|DWORD, ~baseRegister: v22|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v21|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v19|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v19|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B17 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B52" 
    xhandlers
    flags 
    probability 4592602197851765433
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v25|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v23|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v23|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B45" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B23 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B51" 
    xhandlers
    flags 
    probability 4588098584144088959
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v28|DWORD = MOV input: [v27|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = UNCOMPRESSPOINTER (input: v28|DWORD, ~baseRegister: v30|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v29|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B51 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v27|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v27|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B29 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B36" "B50" 
    xhandlers
    flags 
    probability 4583594970436437461
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v32|DWORD = MOV input: [v31|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = UNCOMPRESSPOINTER (input: v32|DWORD, ~baseRegister: v34|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v33|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B30 -> B31, B30 -> B36] defaultTarget: B30 -> B50 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v31|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v31|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B42" "B49" 
    xhandlers
    flags 
    probability 4579091356728810939
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v36|DWORD = MOV input: [v35|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = UNCOMPRESSPOINTER (input: v36|DWORD, ~baseRegister: v38|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v37|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B36 -> B37, B36 -> B42] defaultTarget: B36 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v35|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v35|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[_] = MOV input: [v19|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v52|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v51|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v50|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v49|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v48|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v47|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v53|DWORD, y: v53|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B10" "B17" "B29" "B41" "B44" "B35" "B23" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v54|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v56|DWORD = MOV input: [v55|DWORD[_] * 8 + 8] size: DWORD state [bci:24] <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v56|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV input: [v59|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v55|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v61|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36] <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v63|DWORD, y: v63|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-122899|0xfffffffffffe1fed], long[5140|0x1414]] destination: B26 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-123923|0xfffffffffffe1bed], long[5140|0x1414]] destination: B28 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-125971|0xfffffffffffe13ed], long[5140|0x1414]] destination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-128019|0xfffffffffffe0bed], long[5140|0x1414]] destination: B40 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -129043 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v52|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v51|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v50|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v49|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v48|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v47|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-126995|0xfffffffffffe0fed], long[5140|0x1414]] destination: B38 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44595|0xffffffffffff51cd], long[4500|0x1194]] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-118803|0xfffffffffffe2fed], long[5140|0x1414]] destination: B14 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-124947|0xfffffffffffe17ed], long[5140|0x1414]] destination: B32 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-39731|0xffffffffffff64cd], long[4500|0x1194]] destination: B50 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-34867|0xffffffffffff77cd], long[4500|0x1194]] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25139|0xffffffffffff9dcd], long[4500|0x1194]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-67611|0xfffffffffffef7e5], long[0|0x0]] destination: B11 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-120851|0xfffffffffffe27ed], long[5140|0x1414]] destination: B20 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-30003|0xffffffffffff8acd], long[4500|0x1194]] destination: B52 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-117779|0xfffffffffffe33ed], long[1940|0x794]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-116755|0xfffffffffffe37ed], long[20|0x14]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-119827|0xfffffffffffe2bed], long[5140|0x1414]] destination: B16 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-58163|0xffffffffffff1ccd], long[1300|0x514]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-61724|0xffffffffffff0ee4], long[0|0x0]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-121875|0xfffffffffffe23ed], long[5140|0x1414]] destination: B22 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-18483|0xffffffffffffb7cd], long[2580|0xa14]] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B56" "B55" "B54" "B14" "B11" "B53" "B16" "B20" "B52" "B22" "B26" "B51" "B28" "B32" "B50" "B34" "B38" "B49" "B40" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|DWORD, v66|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #1          // java.util.regex.Matcher.to:int
     5: if_icmpge     48
     8: aload_0       
     9: getfield      #2          // java.util.regex.Pattern$CharProperty.predicate:java.util.regex.Pattern$CharPredicate
    12: aload_3       
    13: iload_2       
    14: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    19: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    24: ifeq          46
    27: aload_0       
    28: getfield      #5          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    31: aload_1       
    32: iload_2       
    33: iconst_1      
    34: iadd          
    35: aload_3       
    36: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    39: ifeq          46
    42: iconst_1      
    43: goto          47
    46: iconst_0      
    47: ireturn       
    48: aload_1       
    49: iconst_1      
    50: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    53: iconst_0      
    54: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B58" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29c8cc50 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v5|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B57 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" "B12" "B54" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVSXB input: [v8|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVZXB value: v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v12|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v11|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B4 -> B5, B4 -> B6, B4 -> B12] defaultTarget: B4 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4603213171198275611
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v15|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVZXB value: v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVZXB input: [v16|QWORD + v15|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605197970982784543
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.6409319995231739 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602673832159898576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B9 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4598714910550929518
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B10 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" "B18" "B53" 
    xhandlers
    flags 
    probability 4597105811559466883
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = UNCOMPRESSPOINTER (input: v20|DWORD, ~baseRegister: v22|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v21|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v19|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v19|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B17 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B52" 
    xhandlers
    flags 
    probability 4592602197851765433
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v25|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v23|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v23|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B45" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B23 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B51" 
    xhandlers
    flags 
    probability 4588098584144088959
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v28|DWORD = MOV input: [v27|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = UNCOMPRESSPOINTER (input: v28|DWORD, ~baseRegister: v30|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v29|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B51 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v27|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v27|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B29 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B36" "B50" 
    xhandlers
    flags 
    probability 4583594970436437461
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v32|DWORD = MOV input: [v31|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = UNCOMPRESSPOINTER (input: v32|DWORD, ~baseRegister: v34|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v33|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B30 -> B31, B30 -> B36] defaultTarget: B30 -> B50 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v31|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v31|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B42" "B49" 
    xhandlers
    flags 
    probability 4579091356728810939
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v36|DWORD = MOV input: [v35|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = UNCOMPRESSPOINTER (input: v36|DWORD, ~baseRegister: v38|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v37|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B36 -> B37, B36 -> B42] defaultTarget: B36 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v35|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v35|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[_] = MOV input: [v19|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v52|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v51|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v50|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v49|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v48|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v47|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v53|DWORD, y: v53|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B10" "B17" "B29" "B41" "B44" "B35" "B23" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v54|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v56|DWORD = MOV input: [v55|DWORD[_] * 8 + 8] size: DWORD state [bci:24] <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v56|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV input: [v59|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v55|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v61|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36] <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v63|DWORD, y: v63|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-122899|0xfffffffffffe1fed], long[5140|0x1414]] destination: B26 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-123923|0xfffffffffffe1bed], long[5140|0x1414]] destination: B28 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-125971|0xfffffffffffe13ed], long[5140|0x1414]] destination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-128019|0xfffffffffffe0bed], long[5140|0x1414]] destination: B40 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -129043 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v52|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v51|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v50|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v49|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v48|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v47|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-126995|0xfffffffffffe0fed], long[5140|0x1414]] destination: B38 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44595|0xffffffffffff51cd], long[4500|0x1194]] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-118803|0xfffffffffffe2fed], long[5140|0x1414]] destination: B14 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-124947|0xfffffffffffe17ed], long[5140|0x1414]] destination: B32 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-39731|0xffffffffffff64cd], long[4500|0x1194]] destination: B50 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-34867|0xffffffffffff77cd], long[4500|0x1194]] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25139|0xffffffffffff9dcd], long[4500|0x1194]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-67611|0xfffffffffffef7e5], long[0|0x0]] destination: B11 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-120851|0xfffffffffffe27ed], long[5140|0x1414]] destination: B20 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-30003|0xffffffffffff8acd], long[4500|0x1194]] destination: B52 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-117779|0xfffffffffffe33ed], long[1940|0x794]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-116755|0xfffffffffffe37ed], long[20|0x14]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-119827|0xfffffffffffe2bed], long[5140|0x1414]] destination: B16 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-58163|0xffffffffffff1ccd], long[1300|0x514]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-61724|0xffffffffffff0ee4], long[0|0x0]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-121875|0xfffffffffffe23ed], long[5140|0x1414]] destination: B22 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-18483|0xffffffffffffb7cd], long[2580|0xa14]] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B56" "B55" "B54" "B14" "B11" "B53" "B16" "B20" "B52" "B22" "B26" "B51" "B28" "B32" "B50" "B34" "B38" "B49" "B40" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|DWORD, v66|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #1          // java.util.regex.Matcher.to:int
     5: if_icmpge     48
     8: aload_0       
     9: getfield      #2          // java.util.regex.Pattern$CharProperty.predicate:java.util.regex.Pattern$CharPredicate
    12: aload_3       
    13: iload_2       
    14: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    19: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    24: ifeq          46
    27: aload_0       
    28: getfield      #5          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    31: aload_1       
    32: iload_2       
    33: iconst_1      
    34: iadd          
    35: aload_3       
    36: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    39: ifeq          46
    42: iconst_1      
    43: goto          47
    46: iconst_0      
    47: ireturn       
    48: aload_1       
    49: iconst_1      
    50: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    53: iconst_0      
    54: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B58" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29c8cc50 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v5|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B57 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" "B12" "B54" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVSXB input: [v8|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVZXB value: v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v12|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v11|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B4 -> B5, B4 -> B6, B4 -> B12] defaultTarget: B4 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4603213171198275611
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v15|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVZXB value: v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVZXB input: [v16|QWORD + v15|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605197970982784543
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.6409319995231739 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602673832159898576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B9 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4598714910550929518
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B10 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" "B18" "B53" 
    xhandlers
    flags 
    probability 4597105811559466883
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = UNCOMPRESSPOINTER (input: v20|DWORD, ~baseRegister: v22|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v21|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v19|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v19|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B17 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B52" 
    xhandlers
    flags 
    probability 4592602197851765433
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v25|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v23|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v23|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B45" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B23 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B51" 
    xhandlers
    flags 
    probability 4588098584144088959
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v28|DWORD = MOV input: [v27|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = UNCOMPRESSPOINTER (input: v28|DWORD, ~baseRegister: v30|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v29|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B51 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v27|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v27|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B29 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B36" "B50" 
    xhandlers
    flags 
    probability 4583594970436437461
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v32|DWORD = MOV input: [v31|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = UNCOMPRESSPOINTER (input: v32|DWORD, ~baseRegister: v34|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v33|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B30 -> B31, B30 -> B36] defaultTarget: B30 -> B50 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v31|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v31|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B42" "B49" 
    xhandlers
    flags 
    probability 4579091356728810939
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v36|DWORD = MOV input: [v35|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = UNCOMPRESSPOINTER (input: v36|DWORD, ~baseRegister: v38|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v37|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B36 -> B37, B36 -> B42] defaultTarget: B36 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v35|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v35|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[_] = MOV input: [v19|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v52|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v51|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v50|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v49|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v48|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v47|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v53|DWORD, y: v53|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B10" "B17" "B29" "B41" "B44" "B35" "B23" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v54|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v56|DWORD = MOV input: [v55|DWORD[_] * 8 + 8] size: DWORD state [bci:24] <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v56|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV input: [v59|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v55|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v61|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36] <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v63|DWORD, y: v63|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-122899|0xfffffffffffe1fed], long[5140|0x1414]] destination: B26 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-123923|0xfffffffffffe1bed], long[5140|0x1414]] destination: B28 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-125971|0xfffffffffffe13ed], long[5140|0x1414]] destination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-128019|0xfffffffffffe0bed], long[5140|0x1414]] destination: B40 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -129043 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v52|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v51|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v50|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v49|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v48|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v47|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-126995|0xfffffffffffe0fed], long[5140|0x1414]] destination: B38 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44595|0xffffffffffff51cd], long[4500|0x1194]] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-118803|0xfffffffffffe2fed], long[5140|0x1414]] destination: B14 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-124947|0xfffffffffffe17ed], long[5140|0x1414]] destination: B32 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-39731|0xffffffffffff64cd], long[4500|0x1194]] destination: B50 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-34867|0xffffffffffff77cd], long[4500|0x1194]] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25139|0xffffffffffff9dcd], long[4500|0x1194]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-67611|0xfffffffffffef7e5], long[0|0x0]] destination: B11 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-120851|0xfffffffffffe27ed], long[5140|0x1414]] destination: B20 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-30003|0xffffffffffff8acd], long[4500|0x1194]] destination: B52 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-117779|0xfffffffffffe33ed], long[1940|0x794]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-116755|0xfffffffffffe37ed], long[20|0x14]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-119827|0xfffffffffffe2bed], long[5140|0x1414]] destination: B16 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-58163|0xffffffffffff1ccd], long[1300|0x514]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-61724|0xffffffffffff0ee4], long[0|0x0]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-121875|0xfffffffffffe23ed], long[5140|0x1414]] destination: B22 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-18483|0xffffffffffffb7cd], long[2580|0xa14]] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B56" "B55" "B54" "B14" "B11" "B53" "B16" "B20" "B52" "B22" "B26" "B51" "B28" "B32" "B50" "B34" "B38" "B49" "B40" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|DWORD, v66|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #1          // java.util.regex.Matcher.to:int
     5: if_icmpge     48
     8: aload_0       
     9: getfield      #2          // java.util.regex.Pattern$CharProperty.predicate:java.util.regex.Pattern$CharPredicate
    12: aload_3       
    13: iload_2       
    14: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    19: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    24: ifeq          46
    27: aload_0       
    28: getfield      #5          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    31: aload_1       
    32: iload_2       
    33: iconst_1      
    34: iadd          
    35: aload_3       
    36: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    39: ifeq          46
    42: iconst_1      
    43: goto          47
    46: iconst_0      
    47: ireturn       
    48: aload_1       
    49: iconst_1      
    50: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    53: iconst_0      
    54: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B58" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29c8cc50 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v5|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B57 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" "B12" "B54" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVSXB input: [v8|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVZXB value: v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v12|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v11|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B4 -> B5, B4 -> B6, B4 -> B12] defaultTarget: B4 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4603213171198275611
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v15|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVZXB value: v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVZXB input: [v16|QWORD + v15|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605197970982784543
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.6409319995231739 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602673832159898576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B9 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4598714910550929518
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B10 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" "B18" "B53" 
    xhandlers
    flags 
    probability 4597105811559466883
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = UNCOMPRESSPOINTER (input: v20|DWORD, ~baseRegister: v22|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v21|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v19|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v19|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B17 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B52" 
    xhandlers
    flags 
    probability 4592602197851765433
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v25|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v23|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v23|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B45" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B23 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B51" 
    xhandlers
    flags 
    probability 4588098584144088959
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v28|DWORD = MOV input: [v27|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = UNCOMPRESSPOINTER (input: v28|DWORD, ~baseRegister: v30|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v29|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B51 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v27|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v27|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B29 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B36" "B50" 
    xhandlers
    flags 
    probability 4583594970436437461
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v32|DWORD = MOV input: [v31|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = UNCOMPRESSPOINTER (input: v32|DWORD, ~baseRegister: v34|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v33|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B30 -> B31, B30 -> B36] defaultTarget: B30 -> B50 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v31|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v31|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B42" "B49" 
    xhandlers
    flags 
    probability 4579091356728810939
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v36|DWORD = MOV input: [v35|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = UNCOMPRESSPOINTER (input: v36|DWORD, ~baseRegister: v38|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v37|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B36 -> B37, B36 -> B42] defaultTarget: B36 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v35|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v35|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[_] = MOV input: [v19|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v52|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v51|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v50|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v49|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v48|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v47|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v53|DWORD, y: v53|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B10" "B17" "B29" "B41" "B44" "B35" "B23" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v54|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v56|DWORD = MOV input: [v55|DWORD[_] * 8 + 8] size: DWORD state [bci:24] <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v56|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV input: [v59|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v55|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v61|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36] <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v63|DWORD, y: v63|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-122899|0xfffffffffffe1fed], long[5140|0x1414]] destination: B26 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-123923|0xfffffffffffe1bed], long[5140|0x1414]] destination: B28 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-125971|0xfffffffffffe13ed], long[5140|0x1414]] destination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-128019|0xfffffffffffe0bed], long[5140|0x1414]] destination: B40 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -129043 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v52|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v51|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v50|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v49|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v48|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v47|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-126995|0xfffffffffffe0fed], long[5140|0x1414]] destination: B38 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44595|0xffffffffffff51cd], long[4500|0x1194]] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-118803|0xfffffffffffe2fed], long[5140|0x1414]] destination: B14 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-124947|0xfffffffffffe17ed], long[5140|0x1414]] destination: B32 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-39731|0xffffffffffff64cd], long[4500|0x1194]] destination: B50 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-34867|0xffffffffffff77cd], long[4500|0x1194]] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25139|0xffffffffffff9dcd], long[4500|0x1194]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-67611|0xfffffffffffef7e5], long[0|0x0]] destination: B11 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-120851|0xfffffffffffe27ed], long[5140|0x1414]] destination: B20 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-30003|0xffffffffffff8acd], long[4500|0x1194]] destination: B52 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-117779|0xfffffffffffe33ed], long[1940|0x794]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-116755|0xfffffffffffe37ed], long[20|0x14]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-119827|0xfffffffffffe2bed], long[5140|0x1414]] destination: B16 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-58163|0xffffffffffff1ccd], long[1300|0x514]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-61724|0xffffffffffff0ee4], long[0|0x0]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-121875|0xfffffffffffe23ed], long[5140|0x1414]] destination: B22 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-18483|0xffffffffffffb7cd], long[2580|0xa14]] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B56" "B55" "B54" "B14" "B11" "B53" "B16" "B20" "B52" "B22" "B26" "B51" "B28" "B32" "B50" "B34" "B38" "B49" "B40" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|DWORD, v66|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #1          // java.util.regex.Matcher.to:int
     5: if_icmpge     48
     8: aload_0       
     9: getfield      #2          // java.util.regex.Pattern$CharProperty.predicate:java.util.regex.Pattern$CharPredicate
    12: aload_3       
    13: iload_2       
    14: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    19: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    24: ifeq          46
    27: aload_0       
    28: getfield      #5          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    31: aload_1       
    32: iload_2       
    33: iconst_1      
    34: iadd          
    35: aload_3       
    36: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    39: ifeq          46
    42: iconst_1      
    43: goto          47
    46: iconst_0      
    47: ireturn       
    48: aload_1       
    49: iconst_1      
    50: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    53: iconst_0      
    54: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B58" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29c8cc50 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v5|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B57 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" "B12" "B54" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction v8|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction v9|DWORD = MOVSXB input: [v8|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  126  <|@ instruction v10|DWORD = MOVZXB value: v9|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction v12|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  130  <|@ instruction v11|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v12|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  132  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v11|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B4 -> B5, B4 -> B6, B4 -> B12] defaultTarget: B4 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4603213171198275611
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction v13|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  152  <|@ instruction CMP (x: v13|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr  154  <|@ instruction v14|DWORD = SETCC condition: = <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction v15|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v15|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction v16|QWORD = MOVZXB value: v9|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction v17|DWORD = MOVZXB input: [v16|QWORD + v15|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605197970982784543
    begin_IR
      LIR
      nr  192  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.6409319995231739 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602673832159898576
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B9 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4598714910550929518
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B10 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" "B18" "B53" 
    xhandlers
    flags 
    probability 4597105811559466883
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction v19|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  258  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  260  <|@ instruction v22|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  262  <|@ instruction v21|QWORD = UNCOMPRESSPOINTER (input: v20|DWORD, ~baseRegister: v22|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  264  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v21|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v19|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v19|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B17 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B52" 
    xhandlers
    flags 
    probability 4592602197851765433
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction v23|DWORD[_] = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  336  <|@ instruction v26|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  338  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  340  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v25|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v23|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v23|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B45" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B23 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B51" 
    xhandlers
    flags 
    probability 4588098584144088959
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction v27|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v28|DWORD = MOV input: [v27|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  412  <|@ instruction v30|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  414  <|@ instruction v29|QWORD = UNCOMPRESSPOINTER (input: v28|DWORD, ~baseRegister: v30|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  416  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v29|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B51 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v27|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v27|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B29 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B36" "B50" 
    xhandlers
    flags 
    probability 4583594970436437461
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction v31|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v32|DWORD = MOV input: [v31|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  488  <|@ instruction v34|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  490  <|@ instruction v33|QWORD = UNCOMPRESSPOINTER (input: v32|DWORD, ~baseRegister: v34|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  492  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v33|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B30 -> B31, B30 -> B36] defaultTarget: B30 -> B50 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v31|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v31|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B42" "B49" 
    xhandlers
    flags 
    probability 4579091356728810939
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction v35|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v36|DWORD = MOV input: [v35|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  564  <|@ instruction v38|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  566  <|@ instruction v37|QWORD = UNCOMPRESSPOINTER (input: v36|DWORD, ~baseRegister: v38|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  568  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v37|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B36 -> B37, B36 -> B42] defaultTarget: B36 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v35|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v35|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction v39|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  676  <|@ instruction v40|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  678  <|@ instruction v41|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  680  <|@ instruction v42|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  682  <|@ instruction v43|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  684  <|@ instruction v44|DWORD[_] = MOV input: [v19|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  686  <|@ instruction v45|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  688  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  690  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  692  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  694  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  696  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  698  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  700  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v52|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v51|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v50|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v49|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v48|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v47|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
      nr  708  <|@ instruction v53|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction TESTBRANCH (x: v53|DWORD, y: v53|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B10" "B17" "B29" "B41" "B44" "B35" "B23" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr  722  <|@ instruction [v54|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction v55|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  774  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v54|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v56|DWORD = MOV input: [v55|DWORD[_] * 8 + 8] size: DWORD state [bci:24] <|@ <|@
      nr  776  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  778  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v56|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  780  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 496] size: QWORD <|@ <|@
      nr  782  <|@ instruction v60|QWORD = MOV input: [v59|QWORD + 64] size: QWORD <|@ <|@
      nr  784  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v55|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  786  <|@ instruction v62|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr  788  <|@ instruction rsi|QWORD[.] = MOVE input: v61|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction rcx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr  794  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction rbx|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rax|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr  800  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36] <|@ <|@
      nr  802  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  804  <|@ instruction TESTBRANCH (x: v63|DWORD, y: v63|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  816  <|@ instruction [v64|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction rax|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction JUMP ~outgoingValues: [int[-122899|0xfffffffffffe1fed], long[5140|0x1414]] destination: B26 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [int[-123923|0xfffffffffffe1bed], long[5140|0x1414]] destination: B28 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [int[-125971|0xfffffffffffe13ed], long[5140|0x1414]] destination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [int[-128019|0xfffffffffffe0bed], long[5140|0x1414]] destination: B40 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr  896  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  898  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction MOV x: [r15|QWORD + 1156] y: -129043 size: DWORD <|@ <|@
      nr  918  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr  920  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v52|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v51|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v50|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v49|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v48|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v47|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [int[-126995|0xfffffffffffe0fed], long[5140|0x1414]] destination: B38 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [int[-44595|0xffffffffffff51cd], long[4500|0x1194]] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction JUMP ~outgoingValues: [int[-118803|0xfffffffffffe2fed], long[5140|0x1414]] destination: B14 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [int[-124947|0xfffffffffffe17ed], long[5140|0x1414]] destination: B32 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [int[-39731|0xffffffffffff64cd], long[4500|0x1194]] destination: B50 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction JUMP ~outgoingValues: [int[-34867|0xffffffffffff77cd], long[4500|0x1194]] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction JUMP ~outgoingValues: [int[-25139|0xffffffffffff9dcd], long[4500|0x1194]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [int[-67611|0xfffffffffffef7e5], long[0|0x0]] destination: B11 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [int[-120851|0xfffffffffffe27ed], long[5140|0x1414]] destination: B20 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [int[-30003|0xffffffffffff8acd], long[4500|0x1194]] destination: B52 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [int[-117779|0xfffffffffffe33ed], long[1940|0x794]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [int[-116755|0xfffffffffffe37ed], long[20|0x14]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [int[-119827|0xfffffffffffe2bed], long[5140|0x1414]] destination: B16 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [int[-58163|0xffffffffffff1ccd], long[1300|0x514]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction JUMP ~outgoingValues: [int[-61724|0xffffffffffff0ee4], long[0|0x0]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1072  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction JUMP ~outgoingValues: [int[-121875|0xfffffffffffe23ed], long[5140|0x1414]] destination: B22 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction JUMP ~outgoingValues: [int[-18483|0xffffffffffffb7cd], long[2580|0xa14]] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B56" "B55" "B54" "B14" "B11" "B53" "B16" "B20" "B52" "B22" "B26" "B51" "B28" "B32" "B50" "B34" "B38" "B49" "B40" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1092  <|@ instruction [v65|DWORD, v66|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v65|DWORD) size: DWORD <|@ <|@
      nr 1110  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v66|QWORD) size: QWORD <|@ <|@
      nr 1112  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #1          // java.util.regex.Matcher.to:int
     5: if_icmpge     48
     8: aload_0       
     9: getfield      #2          // java.util.regex.Pattern$CharProperty.predicate:java.util.regex.Pattern$CharPredicate
    12: aload_3       
    13: iload_2       
    14: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    19: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    24: ifeq          46
    27: aload_0       
    28: getfield      #5          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    31: aload_1       
    32: iload_2       
    33: iconst_1      
    34: iadd          
    35: aload_3       
    36: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    39: ifeq          46
    42: iconst_1      
    43: goto          47
    46: iconst_0      
    47: ireturn       
    48: aload_1       
    49: iconst_1      
    50: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    53: iconst_0      
    54: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B58" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29c8cc50 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v5|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B57 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" "B12" "B54" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction v8|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction v9|DWORD = MOVSXB input: [v8|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  126  <|@ instruction v10|DWORD = MOVZXB value: v9|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction v12|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  130  <|@ instruction v11|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v12|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  132  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v11|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B4 -> B5, B4 -> B6, B4 -> B12] defaultTarget: B4 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4603213171198275611
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction v13|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  152  <|@ instruction CMP (x: v13|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr  154  <|@ instruction v14|DWORD = SETCC condition: = <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction v15|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v15|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction v16|QWORD = MOVZXB value: v9|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction v17|DWORD = MOVZXB input: [v16|QWORD + v15|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605197970982784543
    begin_IR
      LIR
      nr  192  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.6409319995231739 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602673832159898576
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B9 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4598714910550929518
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B10 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" "B18" "B53" 
    xhandlers
    flags 
    probability 4597105811559466883
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction v19|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  258  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  260  <|@ instruction v22|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  262  <|@ instruction v21|QWORD = UNCOMPRESSPOINTER (input: v20|DWORD, ~baseRegister: v22|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  264  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v21|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v19|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v19|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B17 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B52" 
    xhandlers
    flags 
    probability 4592602197851765433
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction v23|DWORD[_] = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  336  <|@ instruction v26|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  338  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  340  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v25|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v23|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v23|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B45" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B23 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B51" 
    xhandlers
    flags 
    probability 4588098584144088959
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction v27|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v28|DWORD = MOV input: [v27|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  412  <|@ instruction v30|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  414  <|@ instruction v29|QWORD = UNCOMPRESSPOINTER (input: v28|DWORD, ~baseRegister: v30|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  416  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v29|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B51 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v27|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v27|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B29 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B36" "B50" 
    xhandlers
    flags 
    probability 4583594970436437461
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction v31|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v32|DWORD = MOV input: [v31|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  488  <|@ instruction v34|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  490  <|@ instruction v33|QWORD = UNCOMPRESSPOINTER (input: v32|DWORD, ~baseRegister: v34|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  492  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v33|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B30 -> B31, B30 -> B36] defaultTarget: B30 -> B50 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v31|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v31|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B42" "B49" 
    xhandlers
    flags 
    probability 4579091356728810939
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction v35|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v36|DWORD = MOV input: [v35|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  564  <|@ instruction v38|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  566  <|@ instruction v37|QWORD = UNCOMPRESSPOINTER (input: v36|DWORD, ~baseRegister: v38|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  568  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v37|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B36 -> B37, B36 -> B42] defaultTarget: B36 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v35|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v35|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction v39|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  676  <|@ instruction v40|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  678  <|@ instruction v41|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  680  <|@ instruction v42|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  682  <|@ instruction v43|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  684  <|@ instruction v44|DWORD[_] = MOV input: [v19|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  686  <|@ instruction v45|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  688  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  690  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  692  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  694  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  696  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  698  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  700  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v52|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v51|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v50|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v49|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v48|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v47|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
      nr  708  <|@ instruction v53|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction TESTBRANCH (x: v53|DWORD, y: v53|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B10" "B17" "B29" "B41" "B44" "B35" "B23" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr  722  <|@ instruction [v54|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction v55|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  774  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v54|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v56|DWORD = MOV input: [v55|DWORD[_] * 8 + 8] size: DWORD state [bci:24] <|@ <|@
      nr  776  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  778  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v56|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  780  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 496] size: QWORD <|@ <|@
      nr  782  <|@ instruction v60|QWORD = MOV input: [v59|QWORD + 64] size: QWORD <|@ <|@
      nr  784  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v55|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  786  <|@ instruction v62|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr  788  <|@ instruction rsi|QWORD[.] = MOVE input: v61|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction rcx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr  794  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction rbx|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rax|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr  800  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36] <|@ <|@
      nr  802  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  804  <|@ instruction TESTBRANCH (x: v63|DWORD, y: v63|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  816  <|@ instruction [v64|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction rax|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction JUMP ~outgoingValues: [int[-122899|0xfffffffffffe1fed], long[5140|0x1414]] destination: B26 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [int[-123923|0xfffffffffffe1bed], long[5140|0x1414]] destination: B28 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [int[-125971|0xfffffffffffe13ed], long[5140|0x1414]] destination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [int[-128019|0xfffffffffffe0bed], long[5140|0x1414]] destination: B40 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr  896  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  898  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction MOV x: [r15|QWORD + 1156] y: -129043 size: DWORD <|@ <|@
      nr  918  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr  920  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v52|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v51|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v50|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v49|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v48|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v47|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [int[-126995|0xfffffffffffe0fed], long[5140|0x1414]] destination: B38 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [int[-44595|0xffffffffffff51cd], long[4500|0x1194]] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction JUMP ~outgoingValues: [int[-118803|0xfffffffffffe2fed], long[5140|0x1414]] destination: B14 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [int[-124947|0xfffffffffffe17ed], long[5140|0x1414]] destination: B32 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [int[-39731|0xffffffffffff64cd], long[4500|0x1194]] destination: B50 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction JUMP ~outgoingValues: [int[-34867|0xffffffffffff77cd], long[4500|0x1194]] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction JUMP ~outgoingValues: [int[-25139|0xffffffffffff9dcd], long[4500|0x1194]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [int[-67611|0xfffffffffffef7e5], long[0|0x0]] destination: B11 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [int[-120851|0xfffffffffffe27ed], long[5140|0x1414]] destination: B20 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [int[-30003|0xffffffffffff8acd], long[4500|0x1194]] destination: B52 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [int[-117779|0xfffffffffffe33ed], long[1940|0x794]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [int[-116755|0xfffffffffffe37ed], long[20|0x14]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [int[-119827|0xfffffffffffe2bed], long[5140|0x1414]] destination: B16 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [int[-58163|0xffffffffffff1ccd], long[1300|0x514]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction JUMP ~outgoingValues: [int[-61724|0xffffffffffff0ee4], long[0|0x0]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1072  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction JUMP ~outgoingValues: [int[-121875|0xfffffffffffe23ed], long[5140|0x1414]] destination: B22 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction JUMP ~outgoingValues: [int[-18483|0xffffffffffffb7cd], long[2580|0xa14]] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B56" "B55" "B54" "B14" "B11" "B53" "B16" "B20" "B52" "B22" "B26" "B51" "B28" "B32" "B50" "B34" "B38" "B49" "B40" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1092  <|@ instruction [v65|DWORD, v66|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v65|DWORD) size: DWORD <|@ <|@
      nr 1110  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v66|QWORD) size: QWORD <|@ <|@
      nr 1112  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #1          // java.util.regex.Matcher.to:int
     5: if_icmpge     48
     8: aload_0       
     9: getfield      #2          // java.util.regex.Pattern$CharProperty.predicate:java.util.regex.Pattern$CharPredicate
    12: aload_3       
    13: iload_2       
    14: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    19: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    24: ifeq          46
    27: aload_0       
    28: getfield      #5          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    31: aload_1       
    32: iload_2       
    33: iconst_1      
    34: iadd          
    35: aload_3       
    36: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    39: ifeq          46
    42: iconst_1      
    43: goto          47
    46: iconst_0      
    47: ireturn       
    48: aload_1       
    49: iconst_1      
    50: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    53: iconst_0      
    54: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v60|q [0, 1[[706, 708[[798, 802[[834, 836[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v62|d [0, 30[[706, 707[[792, 801[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v10|d [0, 28[[704, 707[[790, 801[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v59|q [0, 1[[706, 707[[796, 801[ "NoSpillStore"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 22[[706, 707[[800, 801[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v46|q [0, 26[[702, 707[[788, 801[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- v3|q [0, 32[[706, 707[[794, 801[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [26, 204[[214, 775[[838, 878[[900, 921[[922, 1113[26 MustHaveRegister 70 MustHaveRegister 772 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|- [28, 204[[214, 790[[838, 878[[900, 921[[922, 1113[28 MustHaveRegister 50 MustHaveRegister 790 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d rcx|- [30, 204[[214, 786[[838, 878[[900, 921[[922, 1113[30 MustHaveRegister 54 MustHaveRegister 74 ShouldHaveRegister 122 ShouldHaveRegister 786 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q r8|- [32, 204[[214, 794[[838, 878[[900, 921[[922, 1113[32 MustHaveRegister 34 MustHaveRegister 52 MustHaveRegister 86 MustHaveRegister 794 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [50, 74[50 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [52, 124[52 MustHaveRegister 54 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [70, 150[[158, 170[[224, 266[[300, 342[[376, 418[[452, 494[[528, 570[[604, 686[70 MustHaveRegister 72 MustHaveRegister 150 MustHaveRegister 170 MustHaveRegister 256 MustHaveRegister 686 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [72, 130[72 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q -1 [122, 124[122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d -1 [124, 134[[158, 186[124 MustHaveRegister 126 ShouldHaveRegister 186 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [126, 152[[158, 172[[224, 288[[300, 364[[376, 440[[452, 516[[528, 592[[604, 712[[900, 921[126 MustHaveRegister 152 ShouldHaveRegister 172 MustHaveRegister 276 MustHaveRegister 288 MustHaveRegister 352 MustHaveRegister 364 MustHaveRegister 428 MustHaveRegister 440 MustHaveRegister 504 MustHaveRegister 516 MustHaveRegister 580 MustHaveRegister 592 MustHaveRegister 704 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q v7|d [130, 133[130 MustHaveRegister 132 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q -1 [128, 131[128 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d -1 [150, 152[150 MustHaveRegister 152 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d v18|d [154, 157[154 MustHaveRegister 156 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d -1 [170, 188[170 MustHaveRegister 172 MustHaveRegister 188 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q -1 [186, 188[186 MustHaveRegister 188 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d -1 [188, 191[188 MustHaveRegister 190 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d v14|d [192, 204[[214, 223[202 MustHaveRegister 222 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d -1 [256, 288[[300, 342[[376, 418[[452, 494[[528, 570[[604, 684[256 MustHaveRegister 258 MustHaveRegister 276 MustHaveRegister 288 MustHaveRegister 332 MustHaveRegister 684 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[v20|d]" v20|d -1 [258, 262[258 MustHaveRegister 262 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q v20|d [262, 265[262 MustHaveRegister 264 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q -1 [260, 263[260 MustHaveRegister 262 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d -1 [332, 364[[376, 418[[452, 494[[528, 570[[604, 682[332 MustHaveRegister 334 MustHaveRegister 352 MustHaveRegister 364 MustHaveRegister 408 MustHaveRegister 682 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d -1 [334, 338[334 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q v24|d [338, 341[338 MustHaveRegister 340 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q -1 [336, 339[336 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[v27|d]" v27|d -1 [408, 440[[452, 494[[528, 570[[604, 680[408 MustHaveRegister 410 MustHaveRegister 428 MustHaveRegister 440 MustHaveRegister 484 MustHaveRegister 680 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d -1 [410, 414[410 MustHaveRegister 414 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q v28|d [414, 417[414 MustHaveRegister 416 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q -1 [412, 415[412 MustHaveRegister 414 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d -1 [484, 516[[528, 570[[604, 678[484 MustHaveRegister 486 MustHaveRegister 504 MustHaveRegister 516 MustHaveRegister 560 MustHaveRegister 678 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[v32|d]" v32|d -1 [486, 490[486 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q v32|d [490, 493[490 MustHaveRegister 492 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q -1 [488, 491[488 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[v35|d]" v35|d -1 [560, 592[[604, 676[560 MustHaveRegister 562 MustHaveRegister 580 MustHaveRegister 592 MustHaveRegister 672 MustHaveRegister 676 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[v36|d]" v36|d -1 [562, 566[562 MustHaveRegister 566 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q v36|d [566, 569[566 MustHaveRegister 568 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q -1 [564, 567[564 MustHaveRegister 566 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[v39|d]" v39|d -1 [672, 688[672 MustHaveRegister 674 MustHaveRegister 688 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[v40|d]" v40|d -1 [676, 700[676 MustHaveRegister 700 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[v41|d]" v41|d -1 [678, 698[678 MustHaveRegister 698 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[v42|d]" v42|d -1 [680, 696[680 MustHaveRegister 696 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[v43|d]" v43|d -1 [682, 694[682 MustHaveRegister 694 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[v44|d]" v44|d -1 [684, 692[684 MustHaveRegister 692 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[v45|d]" v45|d -1 [686, 690[686 MustHaveRegister 690 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q v39|d [688, 702[688 MustHaveRegister 702 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[v47|q]" v47|q v45|d [690, 712[[900, 921[690 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[v48|q]" v48|q v44|d [692, 712[[900, 921[692 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[v49|q]" v49|q v43|d [694, 712[[900, 921[694 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[v50|q]" v50|q v42|d [696, 712[[900, 921[696 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[v51|q]" v51|q v41|d [698, 712[[900, 921[698 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[v52|q]" v52|q v40|d [700, 712[[900, 921[700 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[v53|d]" v53|d rax|d [708, 710[708 MustHaveRegister 710 MustHaveRegister  "NoSpillStore"
  v54|d DWORD "[v54|d]" v54|d v18|d [722, 775[ "NoSpillStore"
  v55|d DWORD "[v55|d]" v55|d -1 [772, 784[772 MustHaveRegister 774 MustHaveRegister 784 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[v56|d]" v56|d -1 [774, 778[774 MustHaveRegister 778 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[v57|q]" v57|q v56|d [778, 780[778 MustHaveRegister 780 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[v58|q]" v58|q -1 [776, 779[776 MustHaveRegister 778 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[v59|q]" v59|q -1 [780, 796[780 MustHaveRegister 782 MustHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[v60|q]" v60|q -1 [782, 798[782 MustHaveRegister 798 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[v61|q]" v61|q v55|d [784, 788[784 MustHaveRegister 788 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[v62|d]" v62|d v2|d [786, 792[786 MustHaveRegister 792 ShouldHaveRegister  "NoSpillStore"
  v63|d DWORD "[v63|d]" v63|d rax|d [802, 804[802 MustHaveRegister 804 MustHaveRegister  "NoSpillStore"
  v64|d DWORD "[v64|d]" v64|d -1 [816, 834[834 ShouldHaveRegister  "NoSpillStore"
  v65|d DWORD "[v65|d]" v65|d -1 [1092, 1108[1108 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[v66|q]" v66|q -1 [1092, 1110[1110 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v60|q [0, 1[[706, 708[[798, 802[[834, 836[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v62|d [0, 30[[706, 707[[792, 801[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v10|d [0, 28[[704, 707[[790, 801[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v59|q [0, 1[[706, 707[[796, 801[ "NoSpillStore"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 22[[706, 707[[800, 801[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v46|q [0, 26[[702, 707[[788, 801[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- v3|q [0, 32[[706, 707[[794, 801[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [26, 204[[214, 604[26 MustHaveRegister 70 MustHaveRegister  "OneSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [28, 204[[214, 604[28 MustHaveRegister 50 MustHaveRegister  "OneSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [30, 204[[214, 604[30 MustHaveRegister 54 MustHaveRegister 74 ShouldHaveRegister 122 ShouldHaveRegister  "OneSpillStore"
  v3|q QWORD "[r8|q]" v3|q r8|- [32, 204[[214, 604[32 MustHaveRegister 34 MustHaveRegister 52 MustHaveRegister 86 MustHaveRegister  "OneSpillStore"
  v4|d DWORD "[r10|d]" v4|d -1 [50, 74[50 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r11|d]" v5|d -1 [52, 124[52 MustHaveRegister 54 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r9|d]" v6|d -1 [70, 150[[158, 170[[224, 266[[300, 342[[376, 418[[452, 494[[528, 570[[604, 686[70 MustHaveRegister 72 MustHaveRegister 150 MustHaveRegister 170 MustHaveRegister 256 MustHaveRegister 686 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rbx|d]" v7|d -1 [72, 130[72 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[r10|q]" v8|q -1 [122, 124[122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r10|d]" v9|d -1 [124, 134[[158, 186[124 MustHaveRegister 126 ShouldHaveRegister 186 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[r11|d]" v10|d -1 [126, 152[[158, 172[[224, 288[[300, 364[[376, 440[[452, 516[[528, 592[[604, 705[126 MustHaveRegister 152 ShouldHaveRegister 172 MustHaveRegister 276 MustHaveRegister 288 MustHaveRegister 352 MustHaveRegister 364 MustHaveRegister 428 MustHaveRegister 440 MustHaveRegister 504 MustHaveRegister 516 MustHaveRegister 580 MustHaveRegister 592 MustHaveRegister 704 ShouldHaveRegister  "OneSpillStore"
  v11|q QWORD "[rbx|q]" v11|q v7|d [130, 133[130 MustHaveRegister 132 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rdi|q]" v12|q -1 [128, 131[128 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[r10|d]" v13|d -1 [150, 152[150 MustHaveRegister 152 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[r10|d]" v14|d v18|d [154, 157[154 MustHaveRegister 156 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[r9|d]" v15|d -1 [170, 188[170 MustHaveRegister 172 MustHaveRegister 188 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[r10|q]" v16|q -1 [186, 188[186 MustHaveRegister 188 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[r10|d]" v17|d -1 [188, 191[188 MustHaveRegister 190 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[r10|d]" v18|d v14|d [192, 204[[214, 223[202 MustHaveRegister 222 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[r10|d]" v19|d -1 [256, 288[[300, 342[[376, 418[[452, 494[[528, 570[[604, 684[256 MustHaveRegister 258 MustHaveRegister 276 MustHaveRegister 288 MustHaveRegister 332 MustHaveRegister 684 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[rbx|d]" v20|d -1 [258, 262[258 MustHaveRegister 262 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rbx|q]" v21|q v20|d [262, 265[262 MustHaveRegister 264 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rdi|q]" v22|q -1 [260, 263[260 MustHaveRegister 262 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[rbx|d]" v23|d -1 [332, 364[[376, 418[[452, 494[[528, 570[[604, 682[332 MustHaveRegister 334 MustHaveRegister 352 MustHaveRegister 364 MustHaveRegister 408 MustHaveRegister 682 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[rdi|d]" v24|d -1 [334, 338[334 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rdi|q]" v25|q v24|d [338, 341[338 MustHaveRegister 340 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q -1 [336, 339[336 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[rdi|d]" v27|d -1 [408, 440[[452, 494[[528, 570[[604, 680[408 MustHaveRegister 410 MustHaveRegister 428 MustHaveRegister 440 MustHaveRegister 484 MustHaveRegister 680 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[rax|d]" v28|d -1 [410, 414[410 MustHaveRegister 414 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rax|q]" v29|q v28|d [414, 417[414 MustHaveRegister 416 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[rbp|q]" v30|q -1 [412, 415[412 MustHaveRegister 414 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[rax|d]" v31|d -1 [484, 516[[528, 570[[604, 678[484 MustHaveRegister 486 MustHaveRegister 504 MustHaveRegister 516 MustHaveRegister 560 MustHaveRegister 678 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[rbp|d]" v32|d -1 [486, 490[486 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rbp|q]" v33|q v32|d [490, 493[490 MustHaveRegister 492 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[r13|q]" v34|q -1 [488, 491[488 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[rbp|d]" v35|d -1 [560, 592[[604, 676[560 MustHaveRegister 562 MustHaveRegister 580 MustHaveRegister 592 MustHaveRegister 672 MustHaveRegister 676 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[r13|d]" v36|d -1 [562, 566[562 MustHaveRegister 566 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[r13|q]" v37|q v36|d [566, 569[566 MustHaveRegister 568 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[r14|q]" v38|q -1 [564, 567[564 MustHaveRegister 566 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[r13|d]" v39|d -1 [672, 688[672 MustHaveRegister 674 MustHaveRegister 688 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rbp|d]" v40|d -1 [676, 700[676 MustHaveRegister 700 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[rax|d]" v41|d -1 [678, 698[678 MustHaveRegister 698 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[rdi|d]" v42|d -1 [680, 696[680 MustHaveRegister 696 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[rbx|d]" v43|d -1 [682, 694[682 MustHaveRegister 694 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[r10|d]" v44|d -1 [684, 692[684 MustHaveRegister 692 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[r9|d]" v45|d -1 [686, 690[686 MustHaveRegister 690 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[r13|q]" v46|q v39|d [688, 702[688 MustHaveRegister 702 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[r9|q]" v47|q v45|d [690, 705[690 MustHaveRegister  "OneSpillStore"
  v48|q QWORD "[r10|q]" v48|q v44|d [692, 705[692 MustHaveRegister  "OneSpillStore"
  v49|q QWORD "[rbx|q]" v49|q v43|d [694, 705[694 MustHaveRegister  "OneSpillStore"
  v50|q QWORD "[rdi|q]" v50|q v42|d [696, 705[696 MustHaveRegister  "OneSpillStore"
  v51|q QWORD "[rax|q]" v51|q v41|d [698, 705[698 MustHaveRegister  "OneSpillStore"
  v52|q QWORD "[rbp|q]" v52|q v40|d [700, 705[700 MustHaveRegister  "OneSpillStore"
  v53|d DWORD "[rax|d]" v53|d rax|d [708, 710[708 MustHaveRegister 710 MustHaveRegister  "NoSpillStore"
  v54|d DWORD "[r10|d]" v54|d v18|d [722, 775[ "NoSpillStore"
  v55|d DWORD "[rdx|d]" v55|d -1 [772, 784[772 MustHaveRegister 774 MustHaveRegister 784 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[rcx|d]" v56|d -1 [774, 778[774 MustHaveRegister 778 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[rcx|q]" v57|q v56|d [778, 780[778 MustHaveRegister 780 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[rsi|q]" v58|q -1 [776, 779[776 MustHaveRegister 778 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[rbx|q]" v59|q -1 [780, 796[780 MustHaveRegister 782 MustHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[rax|q]" v60|q -1 [782, 798[782 MustHaveRegister 798 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[rdx|q]" v61|q v55|d [784, 788[784 MustHaveRegister 788 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[rcx|d]" v62|d v2|d [786, 792[786 MustHaveRegister 792 ShouldHaveRegister  "NoSpillStore"
  v63|d DWORD "[rax|d]" v63|d rax|d [802, 804[802 MustHaveRegister 804 MustHaveRegister  "NoSpillStore"
  v64|d DWORD "[rax|d]" v64|d -1 [816, 834[834 ShouldHaveRegister  "NoSpillStore"
  v65|d DWORD "[r10|d]" v65|d -1 [1092, 1108[1108 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[r11|q]" v66|q -1 [1092, 1110[1110 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[vstack:1|q]" v0|q v0|q [604, 701[ "OneSpillStore"
  v68|q QWORD "[vstack:0|q]" v1|q v1|q [604, 703[ "OneSpillStore"
  v69|d DWORD "[vstack:3|d]" v2|d v2|d [604, 705[ "OneSpillStore"
  v70|q QWORD "[vstack:4|q]" v3|q v3|q [604, 705[ "OneSpillStore"
  v71|d DWORD "[vstack:11|d]" v10|d v10|d [705, 712[ "OneSpillStore"
  v72|q QWORD "[vstack:1|q]" v0|q v0|q [701, 705[ "OneSpillStore"
  v73|d DWORD "[vstack:3|d]" v2|d v2|d [705, 786[[838, 878[[900, 921[[922, 1092[786 ShouldHaveRegister  "OneSpillStore"
  v74|q QWORD "[vstack:0|q]" v1|q v1|q [703, 790[[838, 878[[900, 921[[922, 1092[790 ShouldHaveRegister  "OneSpillStore"
  v75|q QWORD "[vstack:4|q]" v3|q v3|q [705, 794[[838, 878[[900, 921[[922, 1092[794 ShouldHaveRegister  "OneSpillStore"
  v76|q QWORD "[vstack:10|q]" v47|q v47|q [705, 712[ "OneSpillStore"
  v77|q QWORD "[vstack:9|q]" v48|q v48|q [705, 712[ "OneSpillStore"
  v78|q QWORD "[vstack:8|q]" v49|q v49|q [705, 712[ "OneSpillStore"
  v79|q QWORD "[vstack:7|q]" v50|q v50|q [705, 712[ "OneSpillStore"
  v80|q QWORD "[vstack:6|q]" v51|q v51|q [705, 712[ "OneSpillStore"
  v81|q QWORD "[vstack:5|q]" v52|q v52|q [705, 712[ "OneSpillStore"
  v82|q QWORD "[vstack:1|q]" v0|q v0|q [705, 722[ "OneSpillStore"
  v83|q QWORD "[rdx|q]" v1|q v1|q [1092, 1113[ "OneSpillStore"
  v84|q QWORD "[rsi|q]" v0|q v0|q [722, 775[[838, 878[[900, 921[[922, 1113[772 MustHaveRegister  "OneSpillStore"
  v85|d DWORD "[rcx|d]" v2|d v2|d [1092, 1113[ "OneSpillStore"
  v86|q QWORD "[r8|q]" v3|q v3|q [1092, 1113[ "OneSpillStore"
  v87|q QWORD "[rbp|q]" v52|q v52|q [900, 921[ "OneSpillStore"
  v88|q QWORD "[rax|q]" v51|q v51|q [900, 921[ "OneSpillStore"
  v89|q QWORD "[rdi|q]" v50|q v50|q [900, 921[ "OneSpillStore"
  v90|q QWORD "[rbx|q]" v49|q v49|q [900, 921[ "OneSpillStore"
  v91|q QWORD "[r10|q]" v48|q v48|q [900, 921[ "OneSpillStore"
  v92|q QWORD "[r9|q]" v47|q v47|q [900, 921[ "OneSpillStore"
  v93|d DWORD "[r11|d]" v10|d v10|d [900, 921[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B58" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29c8cc50 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v5|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B57 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" "B12" "B54" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction v8|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction v9|DWORD = MOVSXB input: [v8|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  126  <|@ instruction v10|DWORD = MOVZXB value: v9|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction v12|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  130  <|@ instruction v11|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v12|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  132  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v11|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B4 -> B5, B4 -> B6, B4 -> B12] defaultTarget: B4 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4603213171198275611
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction v13|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  152  <|@ instruction CMP (x: v13|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr  154  <|@ instruction v14|DWORD = SETCC condition: = <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction v15|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v15|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction v16|QWORD = MOVZXB value: v9|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction v17|DWORD = MOVZXB input: [v16|QWORD + v15|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605197970982784543
    begin_IR
      LIR
      nr  192  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.6409319995231739 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602673832159898576
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B9 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4598714910550929518
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B10 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" "B18" "B53" 
    xhandlers
    flags 
    probability 4597105811559466883
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction v19|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  258  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  260  <|@ instruction v22|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  262  <|@ instruction v21|QWORD = UNCOMPRESSPOINTER (input: v20|DWORD, ~baseRegister: v22|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  264  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v21|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v19|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v19|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B17 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B52" 
    xhandlers
    flags 
    probability 4592602197851765433
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction v23|DWORD[_] = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  336  <|@ instruction v26|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  338  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  340  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v25|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v23|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v23|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B45" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B23 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B51" 
    xhandlers
    flags 
    probability 4588098584144088959
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction v27|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v28|DWORD = MOV input: [v27|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  412  <|@ instruction v30|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  414  <|@ instruction v29|QWORD = UNCOMPRESSPOINTER (input: v28|DWORD, ~baseRegister: v30|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  416  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v29|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B51 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v27|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v27|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B29 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B36" "B50" 
    xhandlers
    flags 
    probability 4583594970436437461
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction v31|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v32|DWORD = MOV input: [v31|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  488  <|@ instruction v34|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  490  <|@ instruction v33|QWORD = UNCOMPRESSPOINTER (input: v32|DWORD, ~baseRegister: v34|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  492  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v33|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B30 -> B31, B30 -> B36] defaultTarget: B30 -> B50 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v31|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v31|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B42" "B49" 
    xhandlers
    flags 
    probability 4579091356728810939
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction v35|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v36|DWORD = MOV input: [v35|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  564  <|@ instruction v38|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  566  <|@ instruction v37|QWORD = UNCOMPRESSPOINTER (input: v36|DWORD, ~baseRegister: v38|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  568  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v37|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B36 -> B37, B36 -> B42] defaultTarget: B36 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v35|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v35|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction v39|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  676  <|@ instruction v40|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  678  <|@ instruction v41|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  680  <|@ instruction v42|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  682  <|@ instruction v43|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  684  <|@ instruction v44|DWORD[_] = MOV input: [v19|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  686  <|@ instruction v45|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  688  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  690  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  692  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  694  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  696  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  698  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  700  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = STACKMOVE (input: v68|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  704  <|@ instruction rdx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = STACKMOVE (input: v70|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = STACKMOVE (input: v69|DWORD, ~backupSlot: vstack:12|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = STACKMOVE (input: v72|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v52|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v51|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v50|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v49|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v48|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v47|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
      nr  708  <|@ instruction v53|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction TESTBRANCH (x: v53|DWORD, y: v53|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B10" "B17" "B29" "B41" "B44" "B35" "B23" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr  722  <|@ instruction [v54|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction v55|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  774  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v54|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v56|DWORD = MOV input: [v55|DWORD[_] * 8 + 8] size: DWORD state [bci:24] <|@ <|@
      nr  776  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  778  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v56|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  780  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 496] size: QWORD <|@ <|@
      nr  782  <|@ instruction v60|QWORD = MOV input: [v59|QWORD + 64] size: QWORD <|@ <|@
      nr  784  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v55|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  786  <|@ instruction v62|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr  788  <|@ instruction rsi|QWORD[.] = MOVE input: v61|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction rcx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr  794  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction rbx|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rax|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr  800  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36] <|@ <|@
      nr  802  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  804  <|@ instruction TESTBRANCH (x: v63|DWORD, y: v63|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  816  <|@ instruction [v64|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction rax|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction JUMP ~outgoingValues: [int[-122899|0xfffffffffffe1fed], long[5140|0x1414]] destination: B26 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [int[-123923|0xfffffffffffe1bed], long[5140|0x1414]] destination: B28 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [int[-125971|0xfffffffffffe13ed], long[5140|0x1414]] destination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [int[-128019|0xfffffffffffe0bed], long[5140|0x1414]] destination: B40 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr  896  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  898  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction MOV x: [r15|QWORD + 1156] y: -129043 size: DWORD <|@ <|@
      nr  918  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr  920  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v52|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v51|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v50|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v49|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v48|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v47|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [int[-126995|0xfffffffffffe0fed], long[5140|0x1414]] destination: B38 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [int[-44595|0xffffffffffff51cd], long[4500|0x1194]] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction JUMP ~outgoingValues: [int[-118803|0xfffffffffffe2fed], long[5140|0x1414]] destination: B14 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [int[-124947|0xfffffffffffe17ed], long[5140|0x1414]] destination: B32 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [int[-39731|0xffffffffffff64cd], long[4500|0x1194]] destination: B50 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction JUMP ~outgoingValues: [int[-34867|0xffffffffffff77cd], long[4500|0x1194]] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction JUMP ~outgoingValues: [int[-25139|0xffffffffffff9dcd], long[4500|0x1194]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [int[-67611|0xfffffffffffef7e5], long[0|0x0]] destination: B11 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [int[-120851|0xfffffffffffe27ed], long[5140|0x1414]] destination: B20 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [int[-30003|0xffffffffffff8acd], long[4500|0x1194]] destination: B52 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [int[-117779|0xfffffffffffe33ed], long[1940|0x794]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [int[-116755|0xfffffffffffe37ed], long[20|0x14]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [int[-119827|0xfffffffffffe2bed], long[5140|0x1414]] destination: B16 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [int[-58163|0xffffffffffff1ccd], long[1300|0x514]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction JUMP ~outgoingValues: [int[-61724|0xffffffffffff0ee4], long[0|0x0]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1072  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction JUMP ~outgoingValues: [int[-121875|0xfffffffffffe23ed], long[5140|0x1414]] destination: B22 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction JUMP ~outgoingValues: [int[-18483|0xffffffffffffb7cd], long[2580|0xa14]] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B56" "B55" "B54" "B14" "B11" "B53" "B16" "B20" "B52" "B22" "B26" "B51" "B28" "B32" "B50" "B34" "B38" "B49" "B40" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1092  <|@ instruction [v65|DWORD, v66|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v65|DWORD) size: DWORD <|@ <|@
      nr 1110  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v66|QWORD) size: QWORD <|@ <|@
      nr 1112  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #1          // java.util.regex.Matcher.to:int
     5: if_icmpge     48
     8: aload_0       
     9: getfield      #2          // java.util.regex.Pattern$CharProperty.predicate:java.util.regex.Pattern$CharPredicate
    12: aload_3       
    13: iload_2       
    14: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    19: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    24: ifeq          46
    27: aload_0       
    28: getfield      #5          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    31: aload_1       
    32: iload_2       
    33: iconst_1      
    34: iadd          
    35: aload_3       
    36: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    39: ifeq          46
    42: iconst_1      
    43: goto          47
    46: iconst_0      
    47: ireturn       
    48: aload_1       
    49: iconst_1      
    50: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    53: iconst_0      
    54: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v60|q [0, 1[[706, 708[[798, 802[[834, 836[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v62|d [0, 30[[706, 707[[792, 801[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v10|d [0, 28[[704, 707[[790, 801[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v59|q [0, 1[[706, 707[[796, 801[ "NoSpillStore"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 22[[706, 707[[800, 801[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v46|q [0, 26[[702, 707[[788, 801[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- v3|q [0, 32[[706, 707[[794, 801[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [26, 204[[214, 604[26 MustHaveRegister 70 MustHaveRegister  "OneSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [28, 204[[214, 604[28 MustHaveRegister 50 MustHaveRegister  "OneSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [30, 204[[214, 604[30 MustHaveRegister 54 MustHaveRegister 74 ShouldHaveRegister 122 ShouldHaveRegister  "OneSpillStore"
  v3|q QWORD "[r8|q]" v3|q r8|- [32, 204[[214, 604[32 MustHaveRegister 34 MustHaveRegister 52 MustHaveRegister 86 MustHaveRegister  "OneSpillStore"
  v4|d DWORD "[r10|d]" v4|d -1 [50, 74[50 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r11|d]" v5|d -1 [52, 124[52 MustHaveRegister 54 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r9|d]" v6|d -1 [70, 150[[158, 170[[224, 266[[300, 342[[376, 418[[452, 494[[528, 570[[604, 686[70 MustHaveRegister 72 MustHaveRegister 150 MustHaveRegister 170 MustHaveRegister 256 MustHaveRegister 686 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rbx|d]" v7|d -1 [72, 130[72 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[r10|q]" v8|q -1 [122, 124[122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r10|d]" v9|d -1 [124, 134[[158, 186[124 MustHaveRegister 126 ShouldHaveRegister 186 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[r11|d]" v10|d -1 [126, 152[[158, 172[[224, 288[[300, 364[[376, 440[[452, 516[[528, 592[[604, 705[126 MustHaveRegister 152 ShouldHaveRegister 172 MustHaveRegister 276 MustHaveRegister 288 MustHaveRegister 352 MustHaveRegister 364 MustHaveRegister 428 MustHaveRegister 440 MustHaveRegister 504 MustHaveRegister 516 MustHaveRegister 580 MustHaveRegister 592 MustHaveRegister 704 ShouldHaveRegister  "OneSpillStore"
  v11|q QWORD "[rbx|q]" v11|q v7|d [130, 133[130 MustHaveRegister 132 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rdi|q]" v12|q -1 [128, 131[128 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[r10|d]" v13|d -1 [150, 152[150 MustHaveRegister 152 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[r10|d]" v14|d v18|d [154, 157[154 MustHaveRegister 156 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[r9|d]" v15|d -1 [170, 188[170 MustHaveRegister 172 MustHaveRegister 188 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[r10|q]" v16|q -1 [186, 188[186 MustHaveRegister 188 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[r10|d]" v17|d -1 [188, 191[188 MustHaveRegister 190 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[r10|d]" v18|d v14|d [192, 204[[214, 223[202 MustHaveRegister 222 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[r10|d]" v19|d -1 [256, 288[[300, 342[[376, 418[[452, 494[[528, 570[[604, 684[256 MustHaveRegister 258 MustHaveRegister 276 MustHaveRegister 288 MustHaveRegister 332 MustHaveRegister 684 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[rbx|d]" v20|d -1 [258, 262[258 MustHaveRegister 262 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rbx|q]" v21|q v20|d [262, 265[262 MustHaveRegister 264 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rdi|q]" v22|q -1 [260, 263[260 MustHaveRegister 262 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[rbx|d]" v23|d -1 [332, 364[[376, 418[[452, 494[[528, 570[[604, 682[332 MustHaveRegister 334 MustHaveRegister 352 MustHaveRegister 364 MustHaveRegister 408 MustHaveRegister 682 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[rdi|d]" v24|d -1 [334, 338[334 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rdi|q]" v25|q v24|d [338, 341[338 MustHaveRegister 340 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q -1 [336, 339[336 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[rdi|d]" v27|d -1 [408, 440[[452, 494[[528, 570[[604, 680[408 MustHaveRegister 410 MustHaveRegister 428 MustHaveRegister 440 MustHaveRegister 484 MustHaveRegister 680 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[rax|d]" v28|d -1 [410, 414[410 MustHaveRegister 414 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rax|q]" v29|q v28|d [414, 417[414 MustHaveRegister 416 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[rbp|q]" v30|q -1 [412, 415[412 MustHaveRegister 414 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[rax|d]" v31|d -1 [484, 516[[528, 570[[604, 678[484 MustHaveRegister 486 MustHaveRegister 504 MustHaveRegister 516 MustHaveRegister 560 MustHaveRegister 678 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[rbp|d]" v32|d -1 [486, 490[486 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rbp|q]" v33|q v32|d [490, 493[490 MustHaveRegister 492 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[r13|q]" v34|q -1 [488, 491[488 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[rbp|d]" v35|d -1 [560, 592[[604, 676[560 MustHaveRegister 562 MustHaveRegister 580 MustHaveRegister 592 MustHaveRegister 672 MustHaveRegister 676 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[r13|d]" v36|d -1 [562, 566[562 MustHaveRegister 566 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[r13|q]" v37|q v36|d [566, 569[566 MustHaveRegister 568 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[r14|q]" v38|q -1 [564, 567[564 MustHaveRegister 566 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[r13|d]" v39|d -1 [672, 688[672 MustHaveRegister 674 MustHaveRegister 688 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rbp|d]" v40|d -1 [676, 700[676 MustHaveRegister 700 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[rax|d]" v41|d -1 [678, 698[678 MustHaveRegister 698 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[rdi|d]" v42|d -1 [680, 696[680 MustHaveRegister 696 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[rbx|d]" v43|d -1 [682, 694[682 MustHaveRegister 694 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[r10|d]" v44|d -1 [684, 692[684 MustHaveRegister 692 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[r9|d]" v45|d -1 [686, 690[686 MustHaveRegister 690 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[r13|q]" v46|q v39|d [688, 702[688 MustHaveRegister 702 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[r9|q]" v47|q v45|d [690, 705[690 MustHaveRegister  "OneSpillStore"
  v48|q QWORD "[r10|q]" v48|q v44|d [692, 705[692 MustHaveRegister  "OneSpillStore"
  v49|q QWORD "[rbx|q]" v49|q v43|d [694, 705[694 MustHaveRegister  "OneSpillStore"
  v50|q QWORD "[rdi|q]" v50|q v42|d [696, 705[696 MustHaveRegister  "OneSpillStore"
  v51|q QWORD "[rax|q]" v51|q v41|d [698, 705[698 MustHaveRegister  "OneSpillStore"
  v52|q QWORD "[rbp|q]" v52|q v40|d [700, 705[700 MustHaveRegister  "OneSpillStore"
  v53|d DWORD "[rax|d]" v53|d rax|d [708, 710[708 MustHaveRegister 710 MustHaveRegister  "NoSpillStore"
  v54|d DWORD "[r10|d]" v54|d v18|d [722, 775[ "NoSpillStore"
  v55|d DWORD "[rdx|d]" v55|d -1 [772, 784[772 MustHaveRegister 774 MustHaveRegister 784 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[rcx|d]" v56|d -1 [774, 778[774 MustHaveRegister 778 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[rcx|q]" v57|q v56|d [778, 780[778 MustHaveRegister 780 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[rsi|q]" v58|q -1 [776, 779[776 MustHaveRegister 778 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[rbx|q]" v59|q -1 [780, 796[780 MustHaveRegister 782 MustHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[rax|q]" v60|q -1 [782, 798[782 MustHaveRegister 798 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[rdx|q]" v61|q v55|d [784, 788[784 MustHaveRegister 788 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[rcx|d]" v62|d v2|d [786, 792[786 MustHaveRegister 792 ShouldHaveRegister  "NoSpillStore"
  v63|d DWORD "[rax|d]" v63|d rax|d [802, 804[802 MustHaveRegister 804 MustHaveRegister  "NoSpillStore"
  v64|d DWORD "[rax|d]" v64|d -1 [816, 834[834 ShouldHaveRegister  "NoSpillStore"
  v65|d DWORD "[r10|d]" v65|d -1 [1092, 1108[1108 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[r11|q]" v66|q -1 [1092, 1110[1110 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[vstack:1|q]" v0|q v0|q [604, 701[ "OneSpillStore"
  v68|q QWORD "[vstack:0|q]" v1|q v1|q [604, 703[ "OneSpillStore"
  v69|d DWORD "[vstack:3|d]" v2|d v2|d [604, 705[ "OneSpillStore"
  v70|q QWORD "[vstack:4|q]" v3|q v3|q [604, 705[ "OneSpillStore"
  v71|d DWORD "[vstack:11|d]" v10|d v10|d [705, 712[ "OneSpillStore"
  v72|q QWORD "[vstack:1|q]" v0|q v0|q [701, 705[ "OneSpillStore"
  v73|d DWORD "[vstack:3|d]" v2|d v2|d [705, 786[[838, 878[[900, 921[[922, 1092[786 ShouldHaveRegister  "OneSpillStore"
  v74|q QWORD "[vstack:0|q]" v1|q v1|q [703, 790[[838, 878[[900, 921[[922, 1092[790 ShouldHaveRegister  "OneSpillStore"
  v75|q QWORD "[vstack:4|q]" v3|q v3|q [705, 794[[838, 878[[900, 921[[922, 1092[794 ShouldHaveRegister  "OneSpillStore"
  v76|q QWORD "[vstack:10|q]" v47|q v47|q [705, 712[ "OneSpillStore"
  v77|q QWORD "[vstack:9|q]" v48|q v48|q [705, 712[ "OneSpillStore"
  v78|q QWORD "[vstack:8|q]" v49|q v49|q [705, 712[ "OneSpillStore"
  v79|q QWORD "[vstack:7|q]" v50|q v50|q [705, 712[ "OneSpillStore"
  v80|q QWORD "[vstack:6|q]" v51|q v51|q [705, 712[ "OneSpillStore"
  v81|q QWORD "[vstack:5|q]" v52|q v52|q [705, 712[ "OneSpillStore"
  v82|q QWORD "[vstack:1|q]" v0|q v0|q [705, 722[ "OneSpillStore"
  v83|q QWORD "[rdx|q]" v1|q v1|q [1092, 1113[ "OneSpillStore"
  v84|q QWORD "[rsi|q]" v0|q v0|q [722, 775[[838, 878[[900, 921[[922, 1113[772 MustHaveRegister  "OneSpillStore"
  v85|d DWORD "[rcx|d]" v2|d v2|d [1092, 1113[ "OneSpillStore"
  v86|q QWORD "[r8|q]" v3|q v3|q [1092, 1113[ "OneSpillStore"
  v87|q QWORD "[rbp|q]" v52|q v52|q [900, 921[ "OneSpillStore"
  v88|q QWORD "[rax|q]" v51|q v51|q [900, 921[ "OneSpillStore"
  v89|q QWORD "[rdi|q]" v50|q v50|q [900, 921[ "OneSpillStore"
  v90|q QWORD "[rbx|q]" v49|q v49|q [900, 921[ "OneSpillStore"
  v91|q QWORD "[r10|q]" v48|q v48|q [900, 921[ "OneSpillStore"
  v92|q QWORD "[r9|q]" v47|q v47|q [900, 921[ "OneSpillStore"
  v93|d DWORD "[r11|d]" v10|d v10|d [900, 921[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B58" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29c8cc50 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v5|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B57 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" "B12" "B54" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction v8|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction v9|DWORD = MOVSXB input: [v8|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  126  <|@ instruction v10|DWORD = MOVZXB value: v9|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction v12|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  130  <|@ instruction v11|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v12|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  132  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v11|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B4 -> B5, B4 -> B6, B4 -> B12] defaultTarget: B4 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4603213171198275611
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction v13|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  152  <|@ instruction CMP (x: v13|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr  154  <|@ instruction v14|DWORD = SETCC condition: = <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction v15|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v15|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction v16|QWORD = MOVZXB value: v9|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction v17|DWORD = MOVZXB input: [v16|QWORD + v15|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605197970982784543
    begin_IR
      LIR
      nr  192  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.6409319995231739 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602673832159898576
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B9 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4598714910550929518
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B10 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" "B18" "B53" 
    xhandlers
    flags 
    probability 4597105811559466883
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction v19|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  258  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  260  <|@ instruction v22|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  262  <|@ instruction v21|QWORD = UNCOMPRESSPOINTER (input: v20|DWORD, ~baseRegister: v22|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  264  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v21|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v19|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v19|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B17 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B52" 
    xhandlers
    flags 
    probability 4592602197851765433
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction v23|DWORD[_] = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  336  <|@ instruction v26|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  338  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  340  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v25|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v23|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v23|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B45" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B23 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B51" 
    xhandlers
    flags 
    probability 4588098584144088959
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction v27|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v28|DWORD = MOV input: [v27|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  412  <|@ instruction v30|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  414  <|@ instruction v29|QWORD = UNCOMPRESSPOINTER (input: v28|DWORD, ~baseRegister: v30|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  416  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v29|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B51 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v27|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v27|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B29 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B36" "B50" 
    xhandlers
    flags 
    probability 4583594970436437461
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction v31|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v32|DWORD = MOV input: [v31|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  488  <|@ instruction v34|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  490  <|@ instruction v33|QWORD = UNCOMPRESSPOINTER (input: v32|DWORD, ~baseRegister: v34|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  492  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v33|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B30 -> B31, B30 -> B36] defaultTarget: B30 -> B50 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v31|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v31|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B42" "B49" 
    xhandlers
    flags 
    probability 4579091356728810939
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction v35|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v36|DWORD = MOV input: [v35|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  564  <|@ instruction v38|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  566  <|@ instruction v37|QWORD = UNCOMPRESSPOINTER (input: v36|DWORD, ~baseRegister: v38|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  568  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v37|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B36 -> B37, B36 -> B42] defaultTarget: B36 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v35|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v35|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction v39|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  676  <|@ instruction v40|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  678  <|@ instruction v41|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  680  <|@ instruction v42|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  682  <|@ instruction v43|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  684  <|@ instruction v44|DWORD[_] = MOV input: [v19|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  686  <|@ instruction v45|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  688  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  690  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  692  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  694  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  696  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  698  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  700  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = STACKMOVE (input: v68|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  704  <|@ instruction rdx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = STACKMOVE (input: v70|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = STACKMOVE (input: v69|DWORD, ~backupSlot: vstack:12|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = STACKMOVE (input: v72|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v52|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v51|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v50|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v49|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v48|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v47|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
      nr  708  <|@ instruction v53|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction TESTBRANCH (x: v53|DWORD, y: v53|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B10" "B17" "B29" "B41" "B44" "B35" "B23" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr  722  <|@ instruction [v54|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction v55|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  774  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v54|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v56|DWORD = MOV input: [v55|DWORD[_] * 8 + 8] size: DWORD state [bci:24] <|@ <|@
      nr  776  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  778  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v56|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  780  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 496] size: QWORD <|@ <|@
      nr  782  <|@ instruction v60|QWORD = MOV input: [v59|QWORD + 64] size: QWORD <|@ <|@
      nr  784  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v55|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  786  <|@ instruction v62|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr  788  <|@ instruction rsi|QWORD[.] = MOVE input: v61|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction rcx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr  794  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction rbx|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rax|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr  800  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36] <|@ <|@
      nr  802  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  804  <|@ instruction TESTBRANCH (x: v63|DWORD, y: v63|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  816  <|@ instruction [v64|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction rax|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction JUMP ~outgoingValues: [int[-122899|0xfffffffffffe1fed], long[5140|0x1414]] destination: B26 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [int[-123923|0xfffffffffffe1bed], long[5140|0x1414]] destination: B28 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [int[-125971|0xfffffffffffe13ed], long[5140|0x1414]] destination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [int[-128019|0xfffffffffffe0bed], long[5140|0x1414]] destination: B40 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr  896  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  898  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction MOV x: [r15|QWORD + 1156] y: -129043 size: DWORD <|@ <|@
      nr  918  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr  920  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v52|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v51|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v50|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v49|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v48|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v47|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [int[-126995|0xfffffffffffe0fed], long[5140|0x1414]] destination: B38 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [int[-44595|0xffffffffffff51cd], long[4500|0x1194]] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction JUMP ~outgoingValues: [int[-118803|0xfffffffffffe2fed], long[5140|0x1414]] destination: B14 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [int[-124947|0xfffffffffffe17ed], long[5140|0x1414]] destination: B32 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [int[-39731|0xffffffffffff64cd], long[4500|0x1194]] destination: B50 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction JUMP ~outgoingValues: [int[-34867|0xffffffffffff77cd], long[4500|0x1194]] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction JUMP ~outgoingValues: [int[-25139|0xffffffffffff9dcd], long[4500|0x1194]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [int[-67611|0xfffffffffffef7e5], long[0|0x0]] destination: B11 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [int[-120851|0xfffffffffffe27ed], long[5140|0x1414]] destination: B20 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [int[-30003|0xffffffffffff8acd], long[4500|0x1194]] destination: B52 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [int[-117779|0xfffffffffffe33ed], long[1940|0x794]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [int[-116755|0xfffffffffffe37ed], long[20|0x14]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [int[-119827|0xfffffffffffe2bed], long[5140|0x1414]] destination: B16 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [int[-58163|0xffffffffffff1ccd], long[1300|0x514]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction JUMP ~outgoingValues: [int[-61724|0xffffffffffff0ee4], long[0|0x0]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1072  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction JUMP ~outgoingValues: [int[-121875|0xfffffffffffe23ed], long[5140|0x1414]] destination: B22 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction JUMP ~outgoingValues: [int[-18483|0xffffffffffffb7cd], long[2580|0xa14]] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B56" "B55" "B54" "B14" "B11" "B53" "B16" "B20" "B52" "B22" "B26" "B51" "B28" "B32" "B50" "B34" "B38" "B49" "B40" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1092  <|@ instruction [v65|DWORD, v66|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v65|DWORD) size: DWORD <|@ <|@
      nr 1110  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v66|QWORD) size: QWORD <|@ <|@
      nr 1112  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #1          // java.util.regex.Matcher.to:int
     5: if_icmpge     48
     8: aload_0       
     9: getfield      #2          // java.util.regex.Pattern$CharProperty.predicate:java.util.regex.Pattern$CharPredicate
    12: aload_3       
    13: iload_2       
    14: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    19: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    24: ifeq          46
    27: aload_0       
    28: getfield      #5          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    31: aload_1       
    32: iload_2       
    33: iconst_1      
    34: iadd          
    35: aload_3       
    36: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    39: ifeq          46
    42: iconst_1      
    43: goto          47
    46: iconst_0      
    47: ireturn       
    48: aload_1       
    49: iconst_1      
    50: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    53: iconst_0      
    54: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v60|q [0, 1[[706, 708[[798, 802[[834, 836[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v62|d [0, 30[[706, 707[[792, 801[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v10|d [0, 28[[704, 707[[790, 801[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v59|q [0, 1[[706, 707[[796, 801[ "NoSpillStore"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 22[[706, 707[[800, 801[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v46|q [0, 26[[702, 707[[788, 801[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- v3|q [0, 32[[706, 707[[794, 801[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[706, 707[[800, 801[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [26, 204[[214, 604[26 MustHaveRegister 70 MustHaveRegister  "OneSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [28, 204[[214, 604[28 MustHaveRegister 50 MustHaveRegister  "OneSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [30, 204[[214, 604[30 MustHaveRegister 54 MustHaveRegister 74 ShouldHaveRegister 122 ShouldHaveRegister  "OneSpillStore"
  v3|q QWORD "[r8|q]" v3|q r8|- [32, 204[[214, 604[32 MustHaveRegister 34 MustHaveRegister 52 MustHaveRegister 86 MustHaveRegister  "OneSpillStore"
  v4|d DWORD "[r10|d]" v4|d -1 [50, 74[50 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r11|d]" v5|d -1 [52, 124[52 MustHaveRegister 54 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r9|d]" v6|d -1 [70, 150[[158, 170[[224, 266[[300, 342[[376, 418[[452, 494[[528, 570[[604, 686[70 MustHaveRegister 72 MustHaveRegister 150 MustHaveRegister 170 MustHaveRegister 256 MustHaveRegister 686 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rbx|d]" v7|d -1 [72, 130[72 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[r10|q]" v8|q -1 [122, 124[122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r10|d]" v9|d -1 [124, 134[[158, 186[124 MustHaveRegister 126 ShouldHaveRegister 186 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[r11|d]" v10|d -1 [126, 152[[158, 172[[224, 288[[300, 364[[376, 440[[452, 516[[528, 592[[604, 705[126 MustHaveRegister 152 ShouldHaveRegister 172 MustHaveRegister 276 MustHaveRegister 288 MustHaveRegister 352 MustHaveRegister 364 MustHaveRegister 428 MustHaveRegister 440 MustHaveRegister 504 MustHaveRegister 516 MustHaveRegister 580 MustHaveRegister 592 MustHaveRegister 704 ShouldHaveRegister  "OneSpillStore"
  v11|q QWORD "[rbx|q]" v11|q v7|d [130, 133[130 MustHaveRegister 132 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rdi|q]" v12|q -1 [128, 131[128 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[r10|d]" v13|d -1 [150, 152[150 MustHaveRegister 152 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[r10|d]" v14|d v18|d [154, 157[154 MustHaveRegister 156 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[r9|d]" v15|d -1 [170, 188[170 MustHaveRegister 172 MustHaveRegister 188 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[r10|q]" v16|q -1 [186, 188[186 MustHaveRegister 188 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[r10|d]" v17|d -1 [188, 191[188 MustHaveRegister 190 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[r10|d]" v18|d v14|d [192, 204[[214, 223[202 MustHaveRegister 222 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[r10|d]" v19|d -1 [256, 288[[300, 342[[376, 418[[452, 494[[528, 570[[604, 684[256 MustHaveRegister 258 MustHaveRegister 276 MustHaveRegister 288 MustHaveRegister 332 MustHaveRegister 684 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[rbx|d]" v20|d -1 [258, 262[258 MustHaveRegister 262 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rbx|q]" v21|q v20|d [262, 265[262 MustHaveRegister 264 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rdi|q]" v22|q -1 [260, 263[260 MustHaveRegister 262 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[rbx|d]" v23|d -1 [332, 364[[376, 418[[452, 494[[528, 570[[604, 682[332 MustHaveRegister 334 MustHaveRegister 352 MustHaveRegister 364 MustHaveRegister 408 MustHaveRegister 682 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[rdi|d]" v24|d -1 [334, 338[334 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rdi|q]" v25|q v24|d [338, 341[338 MustHaveRegister 340 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q -1 [336, 339[336 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[rdi|d]" v27|d -1 [408, 440[[452, 494[[528, 570[[604, 680[408 MustHaveRegister 410 MustHaveRegister 428 MustHaveRegister 440 MustHaveRegister 484 MustHaveRegister 680 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[rax|d]" v28|d -1 [410, 414[410 MustHaveRegister 414 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rax|q]" v29|q v28|d [414, 417[414 MustHaveRegister 416 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[rbp|q]" v30|q -1 [412, 415[412 MustHaveRegister 414 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[rax|d]" v31|d -1 [484, 516[[528, 570[[604, 678[484 MustHaveRegister 486 MustHaveRegister 504 MustHaveRegister 516 MustHaveRegister 560 MustHaveRegister 678 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[rbp|d]" v32|d -1 [486, 490[486 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rbp|q]" v33|q v32|d [490, 493[490 MustHaveRegister 492 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[r13|q]" v34|q -1 [488, 491[488 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[rbp|d]" v35|d -1 [560, 592[[604, 676[560 MustHaveRegister 562 MustHaveRegister 580 MustHaveRegister 592 MustHaveRegister 672 MustHaveRegister 676 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[r13|d]" v36|d -1 [562, 566[562 MustHaveRegister 566 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[r13|q]" v37|q v36|d [566, 569[566 MustHaveRegister 568 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[r14|q]" v38|q -1 [564, 567[564 MustHaveRegister 566 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[r13|d]" v39|d -1 [672, 688[672 MustHaveRegister 674 MustHaveRegister 688 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rbp|d]" v40|d -1 [676, 700[676 MustHaveRegister 700 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[rax|d]" v41|d -1 [678, 698[678 MustHaveRegister 698 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[rdi|d]" v42|d -1 [680, 696[680 MustHaveRegister 696 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[rbx|d]" v43|d -1 [682, 694[682 MustHaveRegister 694 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[r10|d]" v44|d -1 [684, 692[684 MustHaveRegister 692 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[r9|d]" v45|d -1 [686, 690[686 MustHaveRegister 690 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[r13|q]" v46|q v39|d [688, 702[688 MustHaveRegister 702 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[r9|q]" v47|q v45|d [690, 705[690 MustHaveRegister  "OneSpillStore"
  v48|q QWORD "[r10|q]" v48|q v44|d [692, 705[692 MustHaveRegister  "OneSpillStore"
  v49|q QWORD "[rbx|q]" v49|q v43|d [694, 705[694 MustHaveRegister  "OneSpillStore"
  v50|q QWORD "[rdi|q]" v50|q v42|d [696, 705[696 MustHaveRegister  "OneSpillStore"
  v51|q QWORD "[rax|q]" v51|q v41|d [698, 705[698 MustHaveRegister  "OneSpillStore"
  v52|q QWORD "[rbp|q]" v52|q v40|d [700, 705[700 MustHaveRegister  "OneSpillStore"
  v53|d DWORD "[rax|d]" v53|d rax|d [708, 710[708 MustHaveRegister 710 MustHaveRegister  "NoSpillStore"
  v54|d DWORD "[r10|d]" v54|d v18|d [722, 775[ "NoSpillStore"
  v55|d DWORD "[rdx|d]" v55|d -1 [772, 784[772 MustHaveRegister 774 MustHaveRegister 784 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[rcx|d]" v56|d -1 [774, 778[774 MustHaveRegister 778 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[rcx|q]" v57|q v56|d [778, 780[778 MustHaveRegister 780 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[rsi|q]" v58|q -1 [776, 779[776 MustHaveRegister 778 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[rbx|q]" v59|q -1 [780, 796[780 MustHaveRegister 782 MustHaveRegister 796 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[rax|q]" v60|q -1 [782, 798[782 MustHaveRegister 798 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[rdx|q]" v61|q v55|d [784, 788[784 MustHaveRegister 788 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[rcx|d]" v62|d v2|d [786, 792[786 MustHaveRegister 792 ShouldHaveRegister  "NoSpillStore"
  v63|d DWORD "[rax|d]" v63|d rax|d [802, 804[802 MustHaveRegister 804 MustHaveRegister  "NoSpillStore"
  v64|d DWORD "[rax|d]" v64|d -1 [816, 834[834 ShouldHaveRegister  "NoSpillStore"
  v65|d DWORD "[r10|d]" v65|d -1 [1092, 1108[1108 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[r11|q]" v66|q -1 [1092, 1110[1110 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[vstack:1|q]" v0|q v0|q [604, 701[ "OneSpillStore"
  v68|q QWORD "[vstack:0|q]" v1|q v1|q [604, 703[ "OneSpillStore"
  v69|d DWORD "[vstack:3|d]" v2|d v2|d [604, 705[ "OneSpillStore"
  v70|q QWORD "[vstack:4|q]" v3|q v3|q [604, 705[ "OneSpillStore"
  v71|d DWORD "[vstack:11|d]" v10|d v10|d [705, 712[ "OneSpillStore"
  v72|q QWORD "[vstack:1|q]" v0|q v0|q [701, 705[ "OneSpillStore"
  v73|d DWORD "[vstack:3|d]" v2|d v2|d [705, 786[[838, 878[[900, 921[[922, 1092[786 ShouldHaveRegister  "OneSpillStore"
  v74|q QWORD "[vstack:0|q]" v1|q v1|q [703, 790[[838, 878[[900, 921[[922, 1092[790 ShouldHaveRegister  "OneSpillStore"
  v75|q QWORD "[vstack:4|q]" v3|q v3|q [705, 794[[838, 878[[900, 921[[922, 1092[794 ShouldHaveRegister  "OneSpillStore"
  v76|q QWORD "[vstack:10|q]" v47|q v47|q [705, 712[ "OneSpillStore"
  v77|q QWORD "[vstack:9|q]" v48|q v48|q [705, 712[ "OneSpillStore"
  v78|q QWORD "[vstack:8|q]" v49|q v49|q [705, 712[ "OneSpillStore"
  v79|q QWORD "[vstack:7|q]" v50|q v50|q [705, 712[ "OneSpillStore"
  v80|q QWORD "[vstack:6|q]" v51|q v51|q [705, 712[ "OneSpillStore"
  v81|q QWORD "[vstack:5|q]" v52|q v52|q [705, 712[ "OneSpillStore"
  v82|q QWORD "[vstack:1|q]" v0|q v0|q [705, 722[ "OneSpillStore"
  v83|q QWORD "[rdx|q]" v1|q v1|q [1092, 1113[ "OneSpillStore"
  v84|q QWORD "[rsi|q]" v0|q v0|q [722, 775[[838, 878[[900, 921[[922, 1113[772 MustHaveRegister  "OneSpillStore"
  v85|d DWORD "[rcx|d]" v2|d v2|d [1092, 1113[ "OneSpillStore"
  v86|q QWORD "[r8|q]" v3|q v3|q [1092, 1113[ "OneSpillStore"
  v87|q QWORD "[rbp|q]" v52|q v52|q [900, 921[ "OneSpillStore"
  v88|q QWORD "[rax|q]" v51|q v51|q [900, 921[ "OneSpillStore"
  v89|q QWORD "[rdi|q]" v50|q v50|q [900, 921[ "OneSpillStore"
  v90|q QWORD "[rbx|q]" v49|q v49|q [900, 921[ "OneSpillStore"
  v91|q QWORD "[r10|q]" v48|q v48|q [900, 921[ "OneSpillStore"
  v92|q QWORD "[r9|q]" v47|q v47|q [900, 921[ "OneSpillStore"
  v93|d DWORD "[r11|d]" v10|d v10|d [900, 921[ "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B58" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29c8cc50 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v5|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B57 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" "B12" "B54" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction v8|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction v9|DWORD = MOVSXB input: [v8|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  126  <|@ instruction v10|DWORD = MOVZXB value: v9|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction v12|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  130  <|@ instruction v11|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v12|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  132  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v11|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B4 -> B5, B4 -> B6, B4 -> B12] defaultTarget: B4 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4603213171198275611
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction v13|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  152  <|@ instruction CMP (x: v13|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr  154  <|@ instruction v14|DWORD = SETCC condition: = <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction v15|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v15|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction v16|QWORD = MOVZXB value: v9|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction v17|DWORD = MOVZXB input: [v16|QWORD + v15|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605197970982784543
    begin_IR
      LIR
      nr  192  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.6409319995231739 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602673832159898576
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4598714910550929518
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" "B18" "B53" 
    xhandlers
    flags 
    probability 4597105811559466883
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction v19|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  258  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  260  <|@ instruction v22|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  262  <|@ instruction v21|QWORD = UNCOMPRESSPOINTER (input: v20|DWORD, ~baseRegister: v22|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  264  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v21|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v19|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v19|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B52" 
    xhandlers
    flags 
    probability 4592602197851765433
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction v23|DWORD[_] = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  336  <|@ instruction v26|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  338  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  340  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v25|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v23|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v23|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B45" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B51" 
    xhandlers
    flags 
    probability 4588098584144088959
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction v27|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v28|DWORD = MOV input: [v27|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  412  <|@ instruction v30|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  414  <|@ instruction v29|QWORD = UNCOMPRESSPOINTER (input: v28|DWORD, ~baseRegister: v30|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  416  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v29|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B51 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v27|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v27|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B36" "B50" 
    xhandlers
    flags 
    probability 4583594970436437461
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction v31|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v32|DWORD = MOV input: [v31|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  488  <|@ instruction v34|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  490  <|@ instruction v33|QWORD = UNCOMPRESSPOINTER (input: v32|DWORD, ~baseRegister: v34|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  492  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v33|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B30 -> B31, B30 -> B36] defaultTarget: B30 -> B50 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v31|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v31|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B42" "B49" 
    xhandlers
    flags 
    probability 4579091356728810939
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction v35|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v36|DWORD = MOV input: [v35|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  564  <|@ instruction v38|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  566  <|@ instruction v37|QWORD = UNCOMPRESSPOINTER (input: v36|DWORD, ~baseRegister: v38|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  568  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v37|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B36 -> B37, B36 -> B42] defaultTarget: B36 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v35|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v35|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  602  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction v39|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  676  <|@ instruction v40|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  678  <|@ instruction v41|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  680  <|@ instruction v42|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  682  <|@ instruction v43|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  684  <|@ instruction v44|DWORD[_] = MOV input: [v19|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  686  <|@ instruction v45|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  688  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  690  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  692  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  694  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  696  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  698  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  700  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = STACKMOVE (input: v68|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  704  <|@ instruction rdx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = STACKMOVE (input: v70|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = STACKMOVE (input: v69|DWORD, ~backupSlot: vstack:12|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = STACKMOVE (input: v72|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v52|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v51|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v50|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v49|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v48|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v47|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
      nr  708  <|@ instruction v53|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction TESTBRANCH (x: v53|DWORD, y: v53|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B10" "B17" "B29" "B41" "B44" "B35" "B23" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr  722  <|@ instruction [v54|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction v55|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  774  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v54|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v56|DWORD = MOV input: [v55|DWORD[_] * 8 + 8] size: DWORD state [bci:24] <|@ <|@
      nr  776  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  778  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v56|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  780  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 496] size: QWORD <|@ <|@
      nr  782  <|@ instruction v60|QWORD = MOV input: [v59|QWORD + 64] size: QWORD <|@ <|@
      nr  784  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v55|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  786  <|@ instruction v62|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr  788  <|@ instruction rsi|QWORD[.] = MOVE input: v61|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction rcx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr  794  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction rbx|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rax|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr  800  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36] <|@ <|@
      nr  802  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  804  <|@ instruction TESTBRANCH (x: v63|DWORD, y: v63|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  816  <|@ instruction [v64|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction rax|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-122899|0xfffffffffffe1fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  846  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-123923|0xfffffffffffe1bed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-125971|0xfffffffffffe13ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-128019|0xfffffffffffe0bed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr  896  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  898  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v78|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE input: v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = MOVE input: v76|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOVE input: v71|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction MOV x: [r15|QWORD + 1156] y: -129043 size: DWORD <|@ <|@
      nr  918  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr  920  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v52|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v51|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v50|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v49|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v48|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v47|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-126995|0xfffffffffffe0fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[4500|0x1194] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-44595|0xffffffffffff51cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-118803|0xfffffffffffe2fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  950  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-124947|0xfffffffffffe17ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[4500|0x1194] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-39731|0xffffffffffff64cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[4500|0x1194] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-34867|0xffffffffffff77cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  980  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[4500|0x1194] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-25139|0xffffffffffff9dcd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  990  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-67611|0xfffffffffffef7e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-120851|0xfffffffffffe27ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[4500|0x1194] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-30003|0xffffffffffff8acd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-117779|0xfffffffffffe33ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-119827|0xfffffffffffe2bed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-58163|0xffffffffffff1ccd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-61724|0xffffffffffff0ee4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1070  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1072  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-121875|0xfffffffffffe23ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1080  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-18483|0xffffffffffffb7cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1090  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B56" "B55" "B54" "B14" "B11" "B53" "B16" "B20" "B52" "B22" "B26" "B51" "B28" "B32" "B50" "B34" "B38" "B49" "B40" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1092  <|@ instruction [v65|DWORD, v66|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v65|DWORD) size: DWORD <|@ <|@
      nr 1110  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v66|QWORD) size: QWORD <|@ <|@
      nr 1112  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #1          // java.util.regex.Matcher.to:int
     5: if_icmpge     48
     8: aload_0       
     9: getfield      #2          // java.util.regex.Pattern$CharProperty.predicate:java.util.regex.Pattern$CharPredicate
    12: aload_3       
    13: iload_2       
    14: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    19: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    24: ifeq          46
    27: aload_0       
    28: getfield      #5          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    31: aload_1       
    32: iload_2       
    33: iconst_1      
    34: iadd          
    35: aload_3       
    36: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    39: ifeq          46
    42: iconst_1      
    43: goto          47
    46: iconst_0      
    47: ireturn       
    48: aload_1       
    49: iconst_1      
    50: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    53: iconst_0      
    54: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B58" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29c8cc50 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v5|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B57 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" "B12" "B54" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction v8|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction v9|DWORD = MOVSXB input: [v8|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  126  <|@ instruction v10|DWORD = MOVZXB value: v9|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction v12|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  130  <|@ instruction v11|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v12|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  132  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v11|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B4 -> B5, B4 -> B6, B4 -> B12] defaultTarget: B4 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4603213171198275611
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction v13|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  152  <|@ instruction CMP (x: v13|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr  154  <|@ instruction v14|DWORD = SETCC condition: = <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction v15|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v15|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction v16|QWORD = MOVZXB value: v9|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction v17|DWORD = MOVZXB input: [v16|QWORD + v15|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605197970982784543
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.6409319995231739 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602673832159898576
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4598714910550929518
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" "B18" "B53" 
    xhandlers
    flags 
    probability 4597105811559466883
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction v19|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  258  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  260  <|@ instruction v22|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  262  <|@ instruction v21|QWORD = UNCOMPRESSPOINTER (input: v20|DWORD, ~baseRegister: v22|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  264  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v21|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v19|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v19|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B52" 
    xhandlers
    flags 
    probability 4592602197851765433
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction v23|DWORD[_] = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  336  <|@ instruction v26|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  338  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  340  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v25|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v23|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v23|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B45" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B51" 
    xhandlers
    flags 
    probability 4588098584144088959
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction v27|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v28|DWORD = MOV input: [v27|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  412  <|@ instruction v30|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  414  <|@ instruction v29|QWORD = UNCOMPRESSPOINTER (input: v28|DWORD, ~baseRegister: v30|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  416  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v29|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B51 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v27|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v27|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B36" "B50" 
    xhandlers
    flags 
    probability 4583594970436437461
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction v31|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v32|DWORD = MOV input: [v31|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  488  <|@ instruction v34|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  490  <|@ instruction v33|QWORD = UNCOMPRESSPOINTER (input: v32|DWORD, ~baseRegister: v34|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  492  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v33|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B30 -> B31, B30 -> B36] defaultTarget: B30 -> B50 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v31|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v31|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B42" "B49" 
    xhandlers
    flags 
    probability 4579091356728810939
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction v35|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v36|DWORD = MOV input: [v35|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  564  <|@ instruction v38|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  566  <|@ instruction v37|QWORD = UNCOMPRESSPOINTER (input: v36|DWORD, ~baseRegister: v38|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  568  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v37|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B36 -> B37, B36 -> B42] defaultTarget: B36 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v35|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction CMPBRANCH (x: v10|DWORD, y: [v35|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  602  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction v39|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  676  <|@ instruction v40|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  678  <|@ instruction v41|DWORD[_] = MOV input: [v31|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  680  <|@ instruction v42|DWORD[_] = MOV input: [v27|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  682  <|@ instruction v43|DWORD[_] = MOV input: [v23|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  684  <|@ instruction v44|DWORD[_] = MOV input: [v19|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  686  <|@ instruction v45|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  688  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  690  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  692  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  694  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  696  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  698  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  700  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = STACKMOVE (input: v68|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  704  <|@ instruction rdx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = STACKMOVE (input: v70|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = STACKMOVE (input: v69|DWORD, ~backupSlot: vstack:12|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = STACKMOVE (input: v72|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v52|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v51|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v50|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v49|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v48|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v47|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
      nr  708  <|@ instruction v53|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction TESTBRANCH (x: v53|DWORD, y: v53|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B10" "B17" "B29" "B41" "B44" "B35" "B23" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction v55|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  774  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v54|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v56|DWORD = MOV input: [v55|DWORD[_] * 8 + 8] size: DWORD state [bci:24] <|@ <|@
      nr  776  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  778  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v56|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  780  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 496] size: QWORD <|@ <|@
      nr  782  <|@ instruction v60|QWORD = MOV input: [v59|QWORD + 64] size: QWORD <|@ <|@
      nr  784  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v55|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  786  <|@ instruction v62|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr  788  <|@ instruction rsi|QWORD[.] = MOVE input: v61|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction rcx|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr  794  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction rbx|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rax|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr  800  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36] <|@ <|@
      nr  802  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  804  <|@ instruction TESTBRANCH (x: v63|DWORD, y: v63|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction rax|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-122899|0xfffffffffffe1fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  846  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-123923|0xfffffffffffe1bed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-125971|0xfffffffffffe13ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-128019|0xfffffffffffe0bed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr  896  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  898  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v78|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE input: v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = MOVE input: v76|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOVE input: v71|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction MOV x: [r15|QWORD + 1156] y: -129043 size: DWORD <|@ <|@
      nr  918  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr  920  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v52|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v51|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v50|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v49|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v48|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v47|QWORD[.] v10|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-126995|0xfffffffffffe0fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[4500|0x1194] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-44595|0xffffffffffff51cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-118803|0xfffffffffffe2fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  950  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-124947|0xfffffffffffe17ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[4500|0x1194] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-39731|0xffffffffffff64cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[4500|0x1194] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-34867|0xffffffffffff77cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  980  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[4500|0x1194] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-25139|0xffffffffffff9dcd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  990  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-67611|0xfffffffffffef7e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-120851|0xfffffffffffe27ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[4500|0x1194] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-30003|0xffffffffffff8acd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-117779|0xfffffffffffe33ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-119827|0xfffffffffffe2bed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-58163|0xffffffffffff1ccd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-61724|0xffffffffffff0ee4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1070  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1072  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-121875|0xfffffffffffe23ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1080  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-18483|0xffffffffffffb7cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1090  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B56" "B55" "B54" "B14" "B11" "B53" "B16" "B20" "B52" "B22" "B26" "B51" "B28" "B32" "B50" "B34" "B38" "B49" "B40" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v65|DWORD) size: DWORD <|@ <|@
      nr 1110  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v66|QWORD) size: QWORD <|@ <|@
      nr 1112  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #1          // java.util.regex.Matcher.to:int
     5: if_icmpge     48
     8: aload_0       
     9: getfield      #2          // java.util.regex.Pattern$CharProperty.predicate:java.util.regex.Pattern$CharPredicate
    12: aload_3       
    13: iload_2       
    14: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    19: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    24: ifeq          46
    27: aload_0       
    28: getfield      #5          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    31: aload_1       
    32: iload_2       
    33: iconst_1      
    34: iadd          
    35: aload_3       
    36: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    39: ifeq          46
    42: iconst_1      
    43: goto          47
    46: iconst_0      
    47: ireturn       
    48: aload_1       
    49: iconst_1      
    50: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    53: iconst_0      
    54: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B58" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29c8cc50 slotKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction r11|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r11|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B57 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" "B12" "B54" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction r10|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction r10|DWORD = MOVSXB input: [r10|QWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  126  <|@ instruction r11|DWORD = MOVZXB value: r10|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  130  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  132  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B4 -> B5, B4 -> B6, B4 -> B12] defaultTarget: B4 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4603213171198275611
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction r10|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  152  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  154  <|@ instruction r10|DWORD = SETCC condition: = <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r9|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction r10|QWORD = MOVZXB value: r10|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction r10|DWORD = MOVZXB input: [r10|QWORD + r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605197970982784543
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6409319995231739 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602673832159898576
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4598714910550929518
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" "B18" "B53" 
    xhandlers
    flags 
    probability 4597105811559466883
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction r10|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  258  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  260  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  262  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  264  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B52" 
    xhandlers
    flags 
    probability 4592602197851765433
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction rbx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  336  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  338  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  340  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdi|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B45" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B51" 
    xhandlers
    flags 
    probability 4588098584144088959
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction rdi|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  412  <|@ instruction rbp|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  414  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rbp|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  416  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B51 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdi|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B36" "B50" 
    xhandlers
    flags 
    probability 4583594970436437461
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction rax|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rax|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  488  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  490  <|@ instruction rbp|QWORD = UNCOMPRESSPOINTER (input: rbp|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  492  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbp|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B30 -> B31, B30 -> B36] defaultTarget: B30 -> B50 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B42" "B49" 
    xhandlers
    flags 
    probability 4579091356728810939
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction rbp|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction r13|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  564  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  566  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  568  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B36 -> B37, B36 -> B42] defaultTarget: B36 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbp|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  602  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction r13|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: vstack:1|QWORD[.] vstack:0|QWORD[.] vstack:3|DWORD vstack:4|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r13|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  676  <|@ instruction rbp|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  678  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  680  <|@ instruction rdi|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  682  <|@ instruction rbx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  684  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  686  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  688  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  690  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  692  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  694  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  696  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  698  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  700  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:5|QWORD[.] vstack:11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:6|QWORD[.] vstack:11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:7|QWORD[.] vstack:11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:8|QWORD[.] vstack:11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:9|QWORD[.] vstack:11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:10|QWORD[.] vstack:11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: vstack:1|QWORD[.] vstack:0|QWORD[.] vstack:3|DWORD vstack:4|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
      nr  710  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B10" "B17" "B29" "B41" "B44" "B35" "B23" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  774  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: r10|DWORD 
locals: rsi|QWORD[.] vstack:0|QWORD[.] vstack:3|DWORD vstack:4|QWORD[.] 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 8] size: DWORD state [bci:24] <|@ <|@
      nr  776  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  778  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  780  <|@ instruction rbx|QWORD = MOV input: [rcx|QWORD + 496] size: QWORD <|@ <|@
      nr  782  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  784  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  786  <|@ instruction rcx|DWORD = INC value: vstack:3|DWORD size: DWORD <|@ <|@
      nr  788  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36] <|@ <|@
      nr  804  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-122899|0xfffffffffffe1fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  846  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-123923|0xfffffffffffe1bed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-125971|0xfffffffffffe13ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-128019|0xfffffffffffe0bed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr  896  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  898  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction MOV x: [r15|QWORD + 1156] y: -129043 size: DWORD <|@ <|@
      nr  918  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr  920  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rbp|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rax|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rdi|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rbx|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: rsi|QWORD[.] vstack:0|QWORD[.] vstack:3|DWORD vstack:4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-126995|0xfffffffffffe0fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-44595|0xffffffffffff51cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-118803|0xfffffffffffe2fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  950  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-124947|0xfffffffffffe17ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-39731|0xffffffffffff64cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-34867|0xffffffffffff77cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  980  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25139|0xffffffffffff9dcd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  990  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-67611|0xfffffffffffef7e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-120851|0xfffffffffffe27ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30003|0xffffffffffff8acd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-117779|0xfffffffffffe33ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-119827|0xfffffffffffe2bed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-58163|0xffffffffffff1ccd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-61724|0xffffffffffff0ee4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1070  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1072  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-121875|0xfffffffffffe23ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1080  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-18483|0xffffffffffffb7cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1090  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B56" "B55" "B54" "B14" "B11" "B53" "B16" "B20" "B52" "B22" "B26" "B51" "B28" "B32" "B50" "B34" "B38" "B49" "B40" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1110  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1112  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #1          // java.util.regex.Matcher.to:int
     5: if_icmpge     48
     8: aload_0       
     9: getfield      #2          // java.util.regex.Pattern$CharProperty.predicate:java.util.regex.Pattern$CharPredicate
    12: aload_3       
    13: iload_2       
    14: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    19: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    24: ifeq          46
    27: aload_0       
    28: getfield      #5          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    31: aload_1       
    32: iload_2       
    33: iconst_1      
    34: iadd          
    35: aload_3       
    36: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    39: ifeq          46
    42: iconst_1      
    43: goto          47
    46: iconst_0      
    47: ireturn       
    48: aload_1       
    49: iconst_1      
    50: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    53: iconst_0      
    54: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B58" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29c8cc50 slotKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction r11|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r11|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B57 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" "B12" "B54" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction r10|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction r10|DWORD = MOVSXB input: [r10|QWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  126  <|@ instruction r11|DWORD = MOVZXB value: r10|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  130  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  132  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B4 -> B5, B4 -> B6, B4 -> B12] defaultTarget: B4 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4603213171198275611
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction r10|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  152  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  154  <|@ instruction r10|DWORD = SETCC condition: = <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r9|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction r10|QWORD = MOVZXB value: r10|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction r10|DWORD = MOVZXB input: [r10|QWORD + r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605197970982784543
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6409319995231739 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602673832159898576
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4598714910550929518
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" "B18" "B53" 
    xhandlers
    flags 
    probability 4597105811559466883
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction r10|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  258  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  260  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  262  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  264  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B52" 
    xhandlers
    flags 
    probability 4592602197851765433
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction rbx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  336  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  338  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  340  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdi|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B45" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B51" 
    xhandlers
    flags 
    probability 4588098584144088959
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction rdi|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  412  <|@ instruction rbp|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  414  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rbp|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  416  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B51 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdi|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B36" "B50" 
    xhandlers
    flags 
    probability 4583594970436437461
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction rax|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rax|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  488  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  490  <|@ instruction rbp|QWORD = UNCOMPRESSPOINTER (input: rbp|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  492  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbp|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B30 -> B31, B30 -> B36] defaultTarget: B30 -> B50 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B42" "B49" 
    xhandlers
    flags 
    probability 4579091356728810939
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction rbp|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction r13|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  564  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  566  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  568  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B36 -> B37, B36 -> B42] defaultTarget: B36 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbp|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  602  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction r13|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: vstack:1|QWORD[.] vstack:0|QWORD[.] vstack:3|DWORD vstack:4|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r13|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  676  <|@ instruction rbp|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  678  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  680  <|@ instruction rdi|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  682  <|@ instruction rbx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  684  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  686  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  688  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  690  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  692  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  694  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  696  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  698  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  700  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:5|QWORD[.] vstack:11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:6|QWORD[.] vstack:11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:7|QWORD[.] vstack:11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:8|QWORD[.] vstack:11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:9|QWORD[.] vstack:11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:10|QWORD[.] vstack:11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: vstack:1|QWORD[.] vstack:0|QWORD[.] vstack:3|DWORD vstack:4|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
      nr  710  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B10" "B17" "B29" "B41" "B44" "B35" "B23" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  774  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: r10|DWORD 
locals: rsi|QWORD[.] vstack:0|QWORD[.] vstack:3|DWORD vstack:4|QWORD[.] 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 8] size: DWORD state [bci:24] <|@ <|@
      nr  776  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  778  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  780  <|@ instruction rbx|QWORD = MOV input: [rcx|QWORD + 496] size: QWORD <|@ <|@
      nr  782  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  784  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr  786  <|@ instruction rcx|DWORD = INC value: vstack:3|DWORD size: DWORD <|@ <|@
      nr  788  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36] <|@ <|@
      nr  804  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-122899|0xfffffffffffe1fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  846  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-123923|0xfffffffffffe1bed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-125971|0xfffffffffffe13ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-128019|0xfffffffffffe0bed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr  896  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  898  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction MOV x: [r15|QWORD + 1156] y: -129043 size: DWORD <|@ <|@
      nr  918  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr  920  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rbp|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rax|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rdi|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rbx|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: rsi|QWORD[.] vstack:0|QWORD[.] vstack:3|DWORD vstack:4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-126995|0xfffffffffffe0fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-44595|0xffffffffffff51cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-118803|0xfffffffffffe2fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  950  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-124947|0xfffffffffffe17ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-39731|0xffffffffffff64cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-34867|0xffffffffffff77cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  980  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25139|0xffffffffffff9dcd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  990  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-67611|0xfffffffffffef7e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-120851|0xfffffffffffe27ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30003|0xffffffffffff8acd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-117779|0xfffffffffffe33ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-119827|0xfffffffffffe2bed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-58163|0xffffffffffff1ccd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-61724|0xffffffffffff0ee4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1070  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1072  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-121875|0xfffffffffffe23ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1080  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-18483|0xffffffffffffb7cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1090  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B56" "B55" "B54" "B14" "B11" "B53" "B16" "B20" "B52" "B22" "B26" "B51" "B28" "B32" "B50" "B34" "B38" "B49" "B40" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1110  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1112  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #1          // java.util.regex.Matcher.to:int
     5: if_icmpge     48
     8: aload_0       
     9: getfield      #2          // java.util.regex.Pattern$CharProperty.predicate:java.util.regex.Pattern$CharPredicate
    12: aload_3       
    13: iload_2       
    14: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    19: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    24: ifeq          46
    27: aload_0       
    28: getfield      #5          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    31: aload_1       
    32: iload_2       
    33: iconst_1      
    34: iadd          
    35: aload_3       
    36: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    39: ifeq          46
    42: iconst_1      
    43: goto          47
    46: iconst_0      
    47: ireturn       
    48: aload_1       
    49: iconst_1      
    50: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    53: iconst_0      
    54: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B58" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29c8cc50 slotKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r11|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r11|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B57 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" "B12" "B54" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r10|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction r10|DWORD = MOVSXB input: [r10|QWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = MOVZXB value: r10|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  122  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  124  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B4 -> B5, B4 -> B6, B4 -> B12] defaultTarget: B4 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4603213171198275611
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction r10|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  144  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction r10|DWORD = SETCC condition: = <|@ <|@
      nr  148  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r9|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction r10|QWORD = MOVZXB value: r10|DWORD size: DWORD <|@ <|@
      nr  180  <|@ instruction r10|DWORD = MOVZXB input: [r10|QWORD + r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605197970982784543
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6409319995231739 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602673832159898576
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  206  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4598714910550929518
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" "B18" "B53" 
    xhandlers
    flags 
    probability 4597105811559466883
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction r10|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  286  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  288  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  290  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  378  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B52" 
    xhandlers
    flags 
    probability 4592602197851765433
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction rbx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  422  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  426  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdi|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B45" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  514  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B51" 
    xhandlers
    flags 
    probability 4588098584144088959
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction rdi|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  556  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  558  <|@ instruction rbp|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  560  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rbp|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  562  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B51 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdi|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  650  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B36" "B50" 
    xhandlers
    flags 
    probability 4583594970436437461
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction rax|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  692  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rax|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  694  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  696  <|@ instruction rbp|QWORD = UNCOMPRESSPOINTER (input: rbp|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  698  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbp|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B30 -> B31, B30 -> B36] defaultTarget: B30 -> B50 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  786  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B42" "B49" 
    xhandlers
    flags 
    probability 4579091356728810939
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction rbp|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  828  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction r13|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  830  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  832  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  834  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B36 -> B37, B36 -> B42] defaultTarget: B36 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbp|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  922  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction vstack:1|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction r13|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1008  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: vstack:1|QWORD[.] vstack:0|QWORD[.] vstack:3|DWORD vstack:4|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r13|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr 1010  <|@ instruction rbp|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1012  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction rdi|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1016  <|@ instruction rbx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1018  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1020  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1022  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1024  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1026  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1028  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1030  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1032  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1034  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction vstack:11|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction vstack:10|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction vstack:9|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction vstack:8|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction vstack:7|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction vstack:6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction vstack:5|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:5|QWORD[.] vstack:11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:6|QWORD[.] vstack:11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:7|QWORD[.] vstack:11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:8|QWORD[.] vstack:11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:9|QWORD[.] vstack:11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:10|QWORD[.] vstack:11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: vstack:1|QWORD[.] vstack:0|QWORD[.] vstack:3|DWORD vstack:4|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
      nr 1056  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1106  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1108  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B10" "B17" "B29" "B41" "B44" "B35" "B23" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1162  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: r10|DWORD 
locals: rsi|QWORD[.] vstack:0|QWORD[.] vstack:3|DWORD vstack:4|QWORD[.] 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 8] size: DWORD state [bci:24] <|@ <|@
      nr 1164  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1166  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1168  <|@ instruction rbx|QWORD = MOV input: [rcx|QWORD + 496] size: QWORD <|@ <|@
      nr 1170  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1172  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1174  <|@ instruction rcx|DWORD = INC value: vstack:3|DWORD size: DWORD <|@ <|@
      nr 1176  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1182  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36] <|@ <|@
      nr 1184  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr 1208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1218  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  582  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  592  <|@ instruction r10|DWORD = MOVE input: int[-122899|0xfffffffffffe1fed] <|@ <|@
      nr  594  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  620  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  630  <|@ instruction r10|DWORD = MOVE input: int[-123923|0xfffffffffffe1bed] <|@ <|@
      nr  632  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  766  <|@ instruction r10|DWORD = MOVE input: int[-125971|0xfffffffffffe13ed] <|@ <|@
      nr  768  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  902  <|@ instruction r10|DWORD = MOVE input: int[-128019|0xfffffffffffe0bed] <|@ <|@
      nr  904  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1206  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction rax|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ instruction rdi|QWORD[.] = MOVE input: vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction r10|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1070  <|@ instruction r9|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction r11|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction MOV x: [r15|QWORD + 1156] y: -129043 size: DWORD <|@ <|@
      nr 1092  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr 1094  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rbp|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rax|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rdi|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rbx|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: rsi|QWORD[.] vstack:0|QWORD[.] vstack:3|DWORD vstack:4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  864  <|@ instruction r10|DWORD = MOVE input: int[-126995|0xfffffffffffe0fed] <|@ <|@
      nr  866  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1242  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1256  <|@ instruction r10|DWORD = MOVE input: int[-44595|0xffffffffffff51cd] <|@ <|@
      nr 1258  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1260  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr 1262  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  320  <|@ instruction r10|DWORD = MOVE input: int[-118803|0xfffffffffffe2fed] <|@ <|@
      nr  322  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-124947|0xfffffffffffe17ed] <|@ <|@
      nr  730  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr  734  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1272  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1282  <|@ instruction r10|DWORD = MOVE input: int[-39731|0xffffffffffff64cd] <|@ <|@
      nr 1284  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1286  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr 1288  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1290  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1294  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1296  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1298  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1308  <|@ instruction r10|DWORD = MOVE input: int[-34867|0xffffffffffff77cd] <|@ <|@
      nr 1310  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1312  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr 1314  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1346  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1348  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1350  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1360  <|@ instruction r10|DWORD = MOVE input: int[-25139|0xffffffffffff9dcd] <|@ <|@
      nr 1362  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1364  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr 1366  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1368  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  240  <|@ instruction r10|DWORD = MOVE input: int[-67611|0xfffffffffffef7e5] <|@ <|@
      nr  242  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  456  <|@ instruction r10|DWORD = MOVE input: int[-120851|0xfffffffffffe27ed] <|@ <|@
      nr  458  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1320  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1322  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1324  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1334  <|@ instruction r10|DWORD = MOVE input: int[-30003|0xffffffffffff8acd] <|@ <|@
      nr 1336  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1338  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr 1340  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1342  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1400  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1402  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1412  <|@ instruction r10|DWORD = MOVE input: int[-117779|0xfffffffffffe33ed] <|@ <|@
      nr 1414  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1416  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr 1418  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1420  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1424  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1426  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1428  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1438  <|@ instruction r10|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed] <|@ <|@
      nr 1440  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1442  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr 1444  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1446  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  358  <|@ instruction r10|DWORD = MOVE input: int[-119827|0xfffffffffffe2bed] <|@ <|@
      nr  360  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1476  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1478  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1480  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr 1490  <|@ instruction r10|DWORD = MOVE input: int[-58163|0xffffffffffff1ccd] <|@ <|@
      nr 1492  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1494  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr 1496  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1498  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1450  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1454  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1464  <|@ instruction r10|DWORD = MOVE input: int[-61724|0xffffffffffff0ee4] <|@ <|@
      nr 1466  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1468  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr 1470  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1472  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  494  <|@ instruction r10|DWORD = MOVE input: int[-121875|0xfffffffffffe23ed] <|@ <|@
      nr  496  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1372  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1374  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1376  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1386  <|@ instruction r10|DWORD = MOVE input: int[-18483|0xffffffffffffb7cd] <|@ <|@
      nr 1388  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1390  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr 1392  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B56" "B55" "B54" "B14" "B11" "B53" "B16" "B20" "B52" "B22" "B26" "B51" "B28" "B32" "B50" "B34" "B38" "B49" "B40" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1518  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1520  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #1          // java.util.regex.Matcher.to:int
     5: if_icmpge     48
     8: aload_0       
     9: getfield      #2          // java.util.regex.Pattern$CharProperty.predicate:java.util.regex.Pattern$CharPredicate
    12: aload_3       
    13: iload_2       
    14: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    19: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    24: ifeq          46
    27: aload_0       
    28: getfield      #5          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    31: aload_1       
    32: iload_2       
    33: iconst_1      
    34: iadd          
    35: aload_3       
    36: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    39: ifeq          46
    42: iconst_1      
    43: goto          47
    46: iconst_0      
    47: ireturn       
    48: aload_1       
    49: iconst_1      
    50: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    53: iconst_0      
    54: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [220, 1496[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [938, 1106[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[vstack:3|d]" vstack:3|d -1 [218, 1494[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[vstack:4|q]" vstack:4|q -1 [216, 1492[ "NOT_SUPPORTED"
  vstack:5|q QWORD "[vstack:5|q]" vstack:5|q -1 [1052, 1060[ "NOT_SUPPORTED"
  vstack:6|q QWORD "[vstack:6|q]" vstack:6|q -1 [1050, 1062[ "NOT_SUPPORTED"
  vstack:7|q QWORD "[vstack:7|q]" vstack:7|q -1 [1048, 1064[ "NOT_SUPPORTED"
  vstack:8|q QWORD "[vstack:8|q]" vstack:8|q -1 [1046, 1066[ "NOT_SUPPORTED"
  vstack:9|q QWORD "[vstack:9|q]" vstack:9|q -1 [1044, 1068[ "NOT_SUPPORTED"
  vstack:10|q QWORD "[vstack:10|q]" vstack:10|q -1 [1042, 1070[ "NOT_SUPPORTED"
  vstack:11|d DWORD "[vstack:11|d]" vstack:11|d -1 [1040, 1072[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:48|q]" vstack:0|q -1 [220, 1496[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:56|q]" vstack:1|q -1 [938, 1106[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[stack:28|d]" vstack:3|d -1 [218, 1494[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[stack:40|q]" vstack:4|q -1 [216, 1492[ "NOT_SUPPORTED"
  vstack:5|q QWORD "[stack:104|q]" vstack:5|q -1 [1052, 1060[ "NOT_SUPPORTED"
  vstack:6|q QWORD "[stack:96|q]" vstack:6|q -1 [1050, 1062[ "NOT_SUPPORTED"
  vstack:7|q QWORD "[stack:88|q]" vstack:7|q -1 [1048, 1064[ "NOT_SUPPORTED"
  vstack:8|q QWORD "[stack:80|q]" vstack:8|q -1 [1046, 1066[ "NOT_SUPPORTED"
  vstack:9|q QWORD "[stack:72|q]" vstack:9|q -1 [1044, 1068[ "NOT_SUPPORTED"
  vstack:10|q QWORD "[stack:64|q]" vstack:10|q -1 [1042, 1070[ "NOT_SUPPORTED"
  vstack:11|d DWORD "[stack:32|d]" vstack:11|d -1 [1040, 1072[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B58" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29c8cc50 slotKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r11|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r11|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B57 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" "B12" "B54" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r10|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction r10|DWORD = MOVSXB input: [r10|QWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = MOVZXB value: r10|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  122  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  124  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B4 -> B5, B4 -> B6, B4 -> B12] defaultTarget: B4 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4603213171198275611
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction r10|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  144  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction r10|DWORD = SETCC condition: = <|@ <|@
      nr  148  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r9|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction r10|QWORD = MOVZXB value: r10|DWORD size: DWORD <|@ <|@
      nr  180  <|@ instruction r10|DWORD = MOVZXB input: [r10|QWORD + r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605197970982784543
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6409319995231739 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602673832159898576
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  206  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4598714910550929518
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" "B18" "B53" 
    xhandlers
    flags 
    probability 4597105811559466883
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction r10|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  286  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  288  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  290  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  378  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B52" 
    xhandlers
    flags 
    probability 4592602197851765433
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction rbx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  422  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  426  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdi|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B45" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  514  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B51" 
    xhandlers
    flags 
    probability 4588098584144088959
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction rdi|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  556  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  558  <|@ instruction rbp|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  560  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rbp|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  562  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B51 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdi|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  650  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B36" "B50" 
    xhandlers
    flags 
    probability 4583594970436437461
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction rax|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  692  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rax|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  694  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  696  <|@ instruction rbp|QWORD = UNCOMPRESSPOINTER (input: rbp|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  698  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbp|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B30 -> B31, B30 -> B36] defaultTarget: B30 -> B50 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  786  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B42" "B49" 
    xhandlers
    flags 
    probability 4579091356728810939
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction rbp|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  828  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction r13|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  830  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  832  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  834  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B36 -> B37, B36 -> B42] defaultTarget: B36 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbp|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  922  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction r13|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1008  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: stack:56|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r13|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr 1010  <|@ instruction rbp|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1012  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction rdi|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1016  <|@ instruction rbx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1018  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1020  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1022  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1024  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1026  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1028  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1030  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1032  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1034  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction stack:64|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction stack:72|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction stack:80|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction stack:88|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction stack:96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction stack:104|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:104|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:96|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:88|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:80|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:72|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:64|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: stack:56|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
      nr 1056  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1106  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1108  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B10" "B17" "B29" "B41" "B44" "B35" "B23" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1162  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: r10|DWORD 
locals: rsi|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 8] size: DWORD state [bci:24] <|@ <|@
      nr 1164  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1166  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1168  <|@ instruction rbx|QWORD = MOV input: [rcx|QWORD + 496] size: QWORD <|@ <|@
      nr 1170  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1172  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1174  <|@ instruction rcx|DWORD = INC value: stack:28|DWORD size: DWORD <|@ <|@
      nr 1176  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1182  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36] <|@ <|@
      nr 1184  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr 1208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1218  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  582  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  592  <|@ instruction r10|DWORD = MOVE input: int[-122899|0xfffffffffffe1fed] <|@ <|@
      nr  594  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  620  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  630  <|@ instruction r10|DWORD = MOVE input: int[-123923|0xfffffffffffe1bed] <|@ <|@
      nr  632  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  766  <|@ instruction r10|DWORD = MOVE input: int[-125971|0xfffffffffffe13ed] <|@ <|@
      nr  768  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  902  <|@ instruction r10|DWORD = MOVE input: int[-128019|0xfffffffffffe0bed] <|@ <|@
      nr  904  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1206  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction rbp|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction rax|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ instruction rdi|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1070  <|@ instruction r9|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction MOV x: [r15|QWORD + 1156] y: -129043 size: DWORD <|@ <|@
      nr 1092  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr 1094  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rbp|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rax|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rdi|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rbx|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  864  <|@ instruction r10|DWORD = MOVE input: int[-126995|0xfffffffffffe0fed] <|@ <|@
      nr  866  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1242  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1256  <|@ instruction r10|DWORD = MOVE input: int[-44595|0xffffffffffff51cd] <|@ <|@
      nr 1258  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1260  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1262  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  320  <|@ instruction r10|DWORD = MOVE input: int[-118803|0xfffffffffffe2fed] <|@ <|@
      nr  322  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-124947|0xfffffffffffe17ed] <|@ <|@
      nr  730  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  734  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1272  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1282  <|@ instruction r10|DWORD = MOVE input: int[-39731|0xffffffffffff64cd] <|@ <|@
      nr 1284  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1286  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1288  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1290  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1294  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1296  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1298  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1308  <|@ instruction r10|DWORD = MOVE input: int[-34867|0xffffffffffff77cd] <|@ <|@
      nr 1310  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1312  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1314  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1346  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1348  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1350  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1360  <|@ instruction r10|DWORD = MOVE input: int[-25139|0xffffffffffff9dcd] <|@ <|@
      nr 1362  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1364  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1366  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1368  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  240  <|@ instruction r10|DWORD = MOVE input: int[-67611|0xfffffffffffef7e5] <|@ <|@
      nr  242  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  456  <|@ instruction r10|DWORD = MOVE input: int[-120851|0xfffffffffffe27ed] <|@ <|@
      nr  458  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1320  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1322  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1324  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1334  <|@ instruction r10|DWORD = MOVE input: int[-30003|0xffffffffffff8acd] <|@ <|@
      nr 1336  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1338  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1340  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1342  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1400  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1402  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1412  <|@ instruction r10|DWORD = MOVE input: int[-117779|0xfffffffffffe33ed] <|@ <|@
      nr 1414  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1416  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1418  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1420  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1424  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1426  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1428  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1438  <|@ instruction r10|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed] <|@ <|@
      nr 1440  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1442  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1444  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1446  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  358  <|@ instruction r10|DWORD = MOVE input: int[-119827|0xfffffffffffe2bed] <|@ <|@
      nr  360  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1476  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1478  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1480  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr 1490  <|@ instruction r10|DWORD = MOVE input: int[-58163|0xffffffffffff1ccd] <|@ <|@
      nr 1492  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1494  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1496  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1498  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1450  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1454  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1464  <|@ instruction r10|DWORD = MOVE input: int[-61724|0xffffffffffff0ee4] <|@ <|@
      nr 1466  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1468  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1470  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1472  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  494  <|@ instruction r10|DWORD = MOVE input: int[-121875|0xfffffffffffe23ed] <|@ <|@
      nr  496  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1372  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1374  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1376  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1386  <|@ instruction r10|DWORD = MOVE input: int[-18483|0xffffffffffffb7cd] <|@ <|@
      nr 1388  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1390  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1392  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B56" "B55" "B54" "B14" "B11" "B53" "B16" "B20" "B52" "B22" "B26" "B51" "B28" "B32" "B50" "B34" "B38" "B49" "B40" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1518  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1520  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #1          // java.util.regex.Matcher.to:int
     5: if_icmpge     48
     8: aload_0       
     9: getfield      #2          // java.util.regex.Pattern$CharProperty.predicate:java.util.regex.Pattern$CharPredicate
    12: aload_3       
    13: iload_2       
    14: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    19: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    24: ifeq          46
    27: aload_0       
    28: getfield      #5          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    31: aload_1       
    32: iload_2       
    33: iconst_1      
    34: iadd          
    35: aload_3       
    36: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    39: ifeq          46
    42: iconst_1      
    43: goto          47
    46: iconst_0      
    47: ireturn       
    48: aload_1       
    49: iconst_1      
    50: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    53: iconst_0      
    54: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B58" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29c8cc50 slotKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r11|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r11|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B57 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" "B12" "B54" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r10|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction r10|DWORD = MOVSXB input: [r10|QWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = MOVZXB value: r10|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  122  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  124  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B4 -> B5, B4 -> B6, B4 -> B12] defaultTarget: B4 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4603213171198275611
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction r10|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  144  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction r10|DWORD = SETCC condition: = <|@ <|@
      nr  148  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r9|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction r10|QWORD = MOVZXB value: r10|DWORD size: DWORD <|@ <|@
      nr  180  <|@ instruction r10|DWORD = MOVZXB input: [r10|QWORD + r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605197970982784543
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6409319995231739 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602673832159898576
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  206  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4598714910550929518
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" "B18" "B53" 
    xhandlers
    flags 
    probability 4597105811559466883
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction r10|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  286  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  288  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  290  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  378  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B52" 
    xhandlers
    flags 
    probability 4592602197851765433
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction rbx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  422  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  426  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdi|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B45" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  514  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B51" 
    xhandlers
    flags 
    probability 4588098584144088959
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction rdi|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  556  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  558  <|@ instruction rbp|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  560  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rbp|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  562  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B51 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdi|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  650  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B36" "B50" 
    xhandlers
    flags 
    probability 4583594970436437461
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction rax|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  692  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rax|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  694  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  696  <|@ instruction rbp|QWORD = UNCOMPRESSPOINTER (input: rbp|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  698  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbp|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B30 -> B31, B30 -> B36] defaultTarget: B30 -> B50 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  786  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B42" "B49" 
    xhandlers
    flags 
    probability 4579091356728810939
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction rbp|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  828  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction r13|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  830  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  832  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  834  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B36 -> B37, B36 -> B42] defaultTarget: B36 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbp|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  922  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction r13|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1008  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: stack:56|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r13|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr 1010  <|@ instruction rbp|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1012  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction rdi|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1016  <|@ instruction rbx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1018  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1020  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1022  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1024  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1026  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1028  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1030  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1032  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1034  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction stack:64|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction stack:72|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction stack:80|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction stack:88|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction stack:96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction stack:104|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:104|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:96|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:88|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:80|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:72|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:64|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: stack:56|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
      nr 1056  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1106  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1108  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B10" "B17" "B29" "B41" "B44" "B35" "B23" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1162  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: r10|DWORD 
locals: rsi|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 8] size: DWORD state [bci:24] <|@ <|@
      nr 1164  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1166  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1168  <|@ instruction rbx|QWORD = MOV input: [rcx|QWORD + 496] size: QWORD <|@ <|@
      nr 1170  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1172  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1174  <|@ instruction rcx|DWORD = INC value: stack:28|DWORD size: DWORD <|@ <|@
      nr 1176  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1182  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36] <|@ <|@
      nr 1184  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr 1208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1218  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  582  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  592  <|@ instruction r10|DWORD = MOVE input: int[-122899|0xfffffffffffe1fed] <|@ <|@
      nr  594  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  620  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  630  <|@ instruction r10|DWORD = MOVE input: int[-123923|0xfffffffffffe1bed] <|@ <|@
      nr  632  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  766  <|@ instruction r10|DWORD = MOVE input: int[-125971|0xfffffffffffe13ed] <|@ <|@
      nr  768  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  902  <|@ instruction r10|DWORD = MOVE input: int[-128019|0xfffffffffffe0bed] <|@ <|@
      nr  904  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1206  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction rbp|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction rax|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ instruction rdi|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1070  <|@ instruction r9|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction MOV x: [r15|QWORD + 1156] y: -129043 size: DWORD <|@ <|@
      nr 1092  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr 1094  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rbp|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rax|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rdi|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rbx|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  864  <|@ instruction r10|DWORD = MOVE input: int[-126995|0xfffffffffffe0fed] <|@ <|@
      nr  866  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1242  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1256  <|@ instruction r10|DWORD = MOVE input: int[-44595|0xffffffffffff51cd] <|@ <|@
      nr 1258  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1260  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1262  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  320  <|@ instruction r10|DWORD = MOVE input: int[-118803|0xfffffffffffe2fed] <|@ <|@
      nr  322  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-124947|0xfffffffffffe17ed] <|@ <|@
      nr  730  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  734  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1272  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1282  <|@ instruction r10|DWORD = MOVE input: int[-39731|0xffffffffffff64cd] <|@ <|@
      nr 1284  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1286  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1288  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1290  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1294  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1296  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1298  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1308  <|@ instruction r10|DWORD = MOVE input: int[-34867|0xffffffffffff77cd] <|@ <|@
      nr 1310  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1312  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1314  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1346  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1348  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1350  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1360  <|@ instruction r10|DWORD = MOVE input: int[-25139|0xffffffffffff9dcd] <|@ <|@
      nr 1362  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1364  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1366  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1368  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  240  <|@ instruction r10|DWORD = MOVE input: int[-67611|0xfffffffffffef7e5] <|@ <|@
      nr  242  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  456  <|@ instruction r10|DWORD = MOVE input: int[-120851|0xfffffffffffe27ed] <|@ <|@
      nr  458  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1320  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1322  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1324  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1334  <|@ instruction r10|DWORD = MOVE input: int[-30003|0xffffffffffff8acd] <|@ <|@
      nr 1336  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1338  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1340  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1342  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1400  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1402  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1412  <|@ instruction r10|DWORD = MOVE input: int[-117779|0xfffffffffffe33ed] <|@ <|@
      nr 1414  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1416  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1418  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1420  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1424  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1426  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1428  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1438  <|@ instruction r10|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed] <|@ <|@
      nr 1440  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1442  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1444  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1446  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  358  <|@ instruction r10|DWORD = MOVE input: int[-119827|0xfffffffffffe2bed] <|@ <|@
      nr  360  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1476  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1478  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1480  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr 1490  <|@ instruction r10|DWORD = MOVE input: int[-58163|0xffffffffffff1ccd] <|@ <|@
      nr 1492  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1494  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1496  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1498  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1450  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1454  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1464  <|@ instruction r10|DWORD = MOVE input: int[-61724|0xffffffffffff0ee4] <|@ <|@
      nr 1466  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1468  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1470  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1472  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  494  <|@ instruction r10|DWORD = MOVE input: int[-121875|0xfffffffffffe23ed] <|@ <|@
      nr  496  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1372  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1374  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1376  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1386  <|@ instruction r10|DWORD = MOVE input: int[-18483|0xffffffffffffb7cd] <|@ <|@
      nr 1388  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1390  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1392  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B56" "B55" "B54" "B14" "B11" "B53" "B16" "B20" "B52" "B22" "B26" "B51" "B28" "B32" "B50" "B34" "B38" "B49" "B40" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1518  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1520  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #1          // java.util.regex.Matcher.to:int
     5: if_icmpge     48
     8: aload_0       
     9: getfield      #2          // java.util.regex.Pattern$CharProperty.predicate:java.util.regex.Pattern$CharPredicate
    12: aload_3       
    13: iload_2       
    14: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    19: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    24: ifeq          46
    27: aload_0       
    28: getfield      #5          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    31: aload_1       
    32: iload_2       
    33: iconst_1      
    34: iadd          
    35: aload_3       
    36: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    39: ifeq          46
    42: iconst_1      
    43: goto          47
    46: iconst_0      
    47: ireturn       
    48: aload_1       
    49: iconst_1      
    50: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    53: iconst_0      
    54: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B58" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29c8cc50 slotKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r11|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r11|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B57 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" "B12" "B54" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r10|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction r10|DWORD = MOVSXB input: [r10|QWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = MOVZXB value: r10|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  122  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  124  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B4 -> B5, B4 -> B6, B4 -> B12] defaultTarget: B4 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4603213171198275611
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction r10|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  144  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction r10|DWORD = SETCC condition: = <|@ <|@
      nr  148  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r9|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction r10|QWORD = MOVZXB value: r10|DWORD size: DWORD <|@ <|@
      nr  180  <|@ instruction r10|DWORD = MOVZXB input: [r10|QWORD + r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605197970982784543
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6409319995231739 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602673832159898576
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  206  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4598714910550929518
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" "B18" "B53" 
    xhandlers
    flags 
    probability 4597105811559466883
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction r10|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  286  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  288  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  290  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  378  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B52" 
    xhandlers
    flags 
    probability 4592602197851765433
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction rbx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  422  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  426  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdi|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B45" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  514  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B51" 
    xhandlers
    flags 
    probability 4588098584144088959
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction rdi|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  556  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  558  <|@ instruction rbp|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  560  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rbp|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  562  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B51 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdi|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  650  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B36" "B50" 
    xhandlers
    flags 
    probability 4583594970436437461
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction rax|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  692  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rax|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  694  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  696  <|@ instruction rbp|QWORD = UNCOMPRESSPOINTER (input: rbp|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  698  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbp|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B30 -> B31, B30 -> B36] defaultTarget: B30 -> B50 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  786  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B42" "B49" 
    xhandlers
    flags 
    probability 4579091356728810939
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction rbp|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  828  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction r13|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  830  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  832  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  834  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B36 -> B37, B36 -> B42] defaultTarget: B36 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbp|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  922  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction r13|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1008  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: stack:56|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r13|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr 1010  <|@ instruction rbp|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1012  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction rdi|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1016  <|@ instruction rbx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1018  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1020  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1022  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1024  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1026  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1028  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1030  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1032  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1034  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction stack:64|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction stack:72|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction stack:80|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction stack:88|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction stack:96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction stack:104|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:104|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:96|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:88|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:80|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:72|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:64|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: stack:56|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
      nr 1056  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1106  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1108  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B10" "B17" "B29" "B41" "B44" "B35" "B23" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1162  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: r10|DWORD 
locals: rsi|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 8] size: DWORD state [bci:24] <|@ <|@
      nr 1164  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1166  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1168  <|@ instruction rbx|QWORD = MOV input: [rcx|QWORD + 496] size: QWORD <|@ <|@
      nr 1170  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1172  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1174  <|@ instruction rcx|DWORD = INC value: stack:28|DWORD size: DWORD <|@ <|@
      nr 1176  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1182  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36] <|@ <|@
      nr 1184  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr 1208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1218  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  582  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  592  <|@ instruction r10|DWORD = MOVE input: int[-122899|0xfffffffffffe1fed] <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  620  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  630  <|@ instruction r10|DWORD = MOVE input: int[-123923|0xfffffffffffe1bed] <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  766  <|@ instruction r10|DWORD = MOVE input: int[-125971|0xfffffffffffe13ed] <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  902  <|@ instruction r10|DWORD = MOVE input: int[-128019|0xfffffffffffe0bed] <|@ <|@
      nr  910  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1206  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction rbp|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction rax|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ instruction rdi|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1070  <|@ instruction r9|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction MOV x: [r15|QWORD + 1156] y: -129043 size: DWORD <|@ <|@
      nr 1092  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr 1094  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rbp|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rax|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rdi|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rbx|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  864  <|@ instruction r10|DWORD = MOVE input: int[-126995|0xfffffffffffe0fed] <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1242  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1256  <|@ instruction r10|DWORD = MOVE input: int[-44595|0xffffffffffff51cd] <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  320  <|@ instruction r10|DWORD = MOVE input: int[-118803|0xfffffffffffe2fed] <|@ <|@
      nr  328  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-124947|0xfffffffffffe17ed] <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1272  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1282  <|@ instruction r10|DWORD = MOVE input: int[-39731|0xffffffffffff64cd] <|@ <|@
      nr 1290  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1294  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1296  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1298  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1308  <|@ instruction r10|DWORD = MOVE input: int[-34867|0xffffffffffff77cd] <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1346  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1348  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1350  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1360  <|@ instruction r10|DWORD = MOVE input: int[-25139|0xffffffffffff9dcd] <|@ <|@
      nr 1368  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  240  <|@ instruction r10|DWORD = MOVE input: int[-67611|0xfffffffffffef7e5] <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  456  <|@ instruction r10|DWORD = MOVE input: int[-120851|0xfffffffffffe27ed] <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1320  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1322  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1324  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1334  <|@ instruction r10|DWORD = MOVE input: int[-30003|0xffffffffffff8acd] <|@ <|@
      nr 1342  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1400  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1402  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1412  <|@ instruction r10|DWORD = MOVE input: int[-117779|0xfffffffffffe33ed] <|@ <|@
      nr 1420  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1424  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1426  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1428  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1438  <|@ instruction r10|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed] <|@ <|@
      nr 1446  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  358  <|@ instruction r10|DWORD = MOVE input: int[-119827|0xfffffffffffe2bed] <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1476  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1478  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1480  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr 1490  <|@ instruction r10|DWORD = MOVE input: int[-58163|0xffffffffffff1ccd] <|@ <|@
      nr 1498  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1450  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1454  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1464  <|@ instruction r10|DWORD = MOVE input: int[-61724|0xffffffffffff0ee4] <|@ <|@
      nr 1472  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  494  <|@ instruction r10|DWORD = MOVE input: int[-121875|0xfffffffffffe23ed] <|@ <|@
      nr  502  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1372  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1374  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1376  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1386  <|@ instruction r10|DWORD = MOVE input: int[-18483|0xffffffffffffb7cd] <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B56" "B55" "B54" "B14" "B11" "B53" "B16" "B20" "B52" "B22" "B26" "B51" "B28" "B32" "B50" "B34" "B38" "B49" "B40" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1492  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1494  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1496  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1518  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1520  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #1          // java.util.regex.Matcher.to:int
     5: if_icmpge     48
     8: aload_0       
     9: getfield      #2          // java.util.regex.Pattern$CharProperty.predicate:java.util.regex.Pattern$CharPredicate
    12: aload_3       
    13: iload_2       
    14: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    19: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    24: ifeq          46
    27: aload_0       
    28: getfield      #5          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    31: aload_1       
    32: iload_2       
    33: iconst_1      
    34: iadd          
    35: aload_3       
    36: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    39: ifeq          46
    42: iconst_1      
    43: goto          47
    46: iconst_0      
    47: ireturn       
    48: aload_1       
    49: iconst_1      
    50: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    53: iconst_0      
    54: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B58" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29c8cc50 slotKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r11|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r11|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B57 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" "B12" "B54" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r10|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction r10|DWORD = MOVSXB input: [r10|QWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = MOVZXB value: r10|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  122  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  124  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B4 -> B5, B4 -> B6, B4 -> B12] defaultTarget: B4 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4603213171198275611
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction r10|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  144  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction r10|DWORD = SETCC condition: = <|@ <|@
      nr  148  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r9|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction r10|QWORD = MOVZXB value: r10|DWORD size: DWORD <|@ <|@
      nr  180  <|@ instruction r10|DWORD = MOVZXB input: [r10|QWORD + r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605197970982784543
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6409319995231739 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602673832159898576
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  206  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4598714910550929518
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" "B18" "B53" 
    xhandlers
    flags 
    probability 4597105811559466883
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction r10|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  286  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  288  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  290  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  378  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B52" 
    xhandlers
    flags 
    probability 4592602197851765433
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction rbx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  422  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  426  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdi|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B45" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  514  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B51" 
    xhandlers
    flags 
    probability 4588098584144088959
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction rdi|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  556  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  558  <|@ instruction rbp|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  560  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rbp|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  562  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B51 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdi|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  650  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B36" "B50" 
    xhandlers
    flags 
    probability 4583594970436437461
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction rax|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  692  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rax|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  694  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  696  <|@ instruction rbp|QWORD = UNCOMPRESSPOINTER (input: rbp|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  698  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbp|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B30 -> B31, B30 -> B36] defaultTarget: B30 -> B50 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  786  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B42" "B49" 
    xhandlers
    flags 
    probability 4579091356728810939
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction rbp|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  828  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction r13|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  830  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  832  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  834  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B36 -> B37, B36 -> B42] defaultTarget: B36 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbp|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  922  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction r13|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1008  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: stack:56|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r13|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr 1010  <|@ instruction rbp|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1012  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction rdi|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1016  <|@ instruction rbx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1018  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1020  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1022  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1024  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1026  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1028  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1030  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1032  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1034  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction stack:64|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction stack:72|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction stack:80|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction stack:88|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction stack:96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction stack:104|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:104|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:96|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:88|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:80|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:72|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:64|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: stack:56|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
      nr 1056  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1106  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1108  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B10" "B17" "B29" "B41" "B44" "B35" "B23" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1162  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: r10|DWORD 
locals: rsi|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 8] size: DWORD state [bci:24] <|@ <|@
      nr 1164  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1166  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1168  <|@ instruction rbx|QWORD = MOV input: [rcx|QWORD + 496] size: QWORD <|@ <|@
      nr 1170  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1172  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1174  <|@ instruction rcx|DWORD = INC value: stack:28|DWORD size: DWORD <|@ <|@
      nr 1176  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1182  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36] <|@ <|@
      nr 1184  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr 1208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1218  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  582  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  592  <|@ instruction r10|DWORD = MOVE input: int[-122899|0xfffffffffffe1fed] <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  620  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  630  <|@ instruction r10|DWORD = MOVE input: int[-123923|0xfffffffffffe1bed] <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  766  <|@ instruction r10|DWORD = MOVE input: int[-125971|0xfffffffffffe13ed] <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  902  <|@ instruction r10|DWORD = MOVE input: int[-128019|0xfffffffffffe0bed] <|@ <|@
      nr  910  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1206  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction rbp|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction rax|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ instruction rdi|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1070  <|@ instruction r9|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction MOV x: [r15|QWORD + 1156] y: -129043 size: DWORD <|@ <|@
      nr 1092  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr 1094  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rbp|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rax|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rdi|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rbx|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  864  <|@ instruction r10|DWORD = MOVE input: int[-126995|0xfffffffffffe0fed] <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1242  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1256  <|@ instruction r10|DWORD = MOVE input: int[-44595|0xffffffffffff51cd] <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  320  <|@ instruction r10|DWORD = MOVE input: int[-118803|0xfffffffffffe2fed] <|@ <|@
      nr  328  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-124947|0xfffffffffffe17ed] <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1272  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1282  <|@ instruction r10|DWORD = MOVE input: int[-39731|0xffffffffffff64cd] <|@ <|@
      nr 1290  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1294  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1296  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1298  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1308  <|@ instruction r10|DWORD = MOVE input: int[-34867|0xffffffffffff77cd] <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1346  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1348  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1350  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1360  <|@ instruction r10|DWORD = MOVE input: int[-25139|0xffffffffffff9dcd] <|@ <|@
      nr 1368  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  240  <|@ instruction r10|DWORD = MOVE input: int[-67611|0xfffffffffffef7e5] <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  456  <|@ instruction r10|DWORD = MOVE input: int[-120851|0xfffffffffffe27ed] <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1320  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1322  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1324  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1334  <|@ instruction r10|DWORD = MOVE input: int[-30003|0xffffffffffff8acd] <|@ <|@
      nr 1342  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1400  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1402  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1412  <|@ instruction r10|DWORD = MOVE input: int[-117779|0xfffffffffffe33ed] <|@ <|@
      nr 1420  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1424  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1426  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1428  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1438  <|@ instruction r10|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed] <|@ <|@
      nr 1446  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  358  <|@ instruction r10|DWORD = MOVE input: int[-119827|0xfffffffffffe2bed] <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1476  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1478  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1480  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr 1490  <|@ instruction r10|DWORD = MOVE input: int[-58163|0xffffffffffff1ccd] <|@ <|@
      nr 1498  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1450  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1454  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1464  <|@ instruction r10|DWORD = MOVE input: int[-61724|0xffffffffffff0ee4] <|@ <|@
      nr 1472  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  494  <|@ instruction r10|DWORD = MOVE input: int[-121875|0xfffffffffffe23ed] <|@ <|@
      nr  502  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1372  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1374  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1376  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1386  <|@ instruction r10|DWORD = MOVE input: int[-18483|0xffffffffffffb7cd] <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B56" "B55" "B54" "B14" "B11" "B53" "B16" "B20" "B52" "B22" "B26" "B51" "B28" "B32" "B50" "B34" "B38" "B49" "B40" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1492  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1496  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1518  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1520  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #1          // java.util.regex.Matcher.to:int
     5: if_icmpge     48
     8: aload_0       
     9: getfield      #2          // java.util.regex.Pattern$CharProperty.predicate:java.util.regex.Pattern$CharPredicate
    12: aload_3       
    13: iload_2       
    14: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    19: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    24: ifeq          46
    27: aload_0       
    28: getfield      #5          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    31: aload_1       
    32: iload_2       
    33: iconst_1      
    34: iadd          
    35: aload_3       
    36: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    39: ifeq          46
    42: iconst_1      
    43: goto          47
    46: iconst_0      
    47: ireturn       
    48: aload_1       
    49: iconst_1      
    50: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    53: iconst_0      
    54: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B58" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29c8cc50 slotKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r11|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r11|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B57 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" "B12" "B54" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r10|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction r10|DWORD = MOVSXB input: [r10|QWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = MOVZXB value: r10|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  122  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  124  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B4 -> B5, B4 -> B6, B4 -> B12] defaultTarget: B4 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4603213171198275611
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction r10|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  144  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction r10|DWORD = SETCC condition: = <|@ <|@
      nr  148  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r9|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction r10|QWORD = MOVZXB value: r10|DWORD size: DWORD <|@ <|@
      nr  180  <|@ instruction r10|DWORD = MOVZXB input: [r10|QWORD + r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605197970982784543
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6409319995231739 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602673832159898576
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  206  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4598714910550929518
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" "B18" "B53" 
    xhandlers
    flags 
    probability 4597105811559466883
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction r10|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  286  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  288  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  290  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  378  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B52" 
    xhandlers
    flags 
    probability 4592602197851765433
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction rbx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  422  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  426  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdi|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B45" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  514  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B51" 
    xhandlers
    flags 
    probability 4588098584144088959
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction rdi|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  556  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  558  <|@ instruction rbp|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  560  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rbp|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  562  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B51 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdi|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  650  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B36" "B50" 
    xhandlers
    flags 
    probability 4583594970436437461
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction rax|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  692  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rax|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  694  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  696  <|@ instruction rbp|QWORD = UNCOMPRESSPOINTER (input: rbp|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  698  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbp|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B30 -> B31, B30 -> B36] defaultTarget: B30 -> B50 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  786  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B42" "B49" 
    xhandlers
    flags 
    probability 4579091356728810939
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction rbp|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  828  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction r13|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  830  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  832  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  834  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B36 -> B37, B36 -> B42] defaultTarget: B36 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbp|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  922  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction r13|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1008  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: stack:56|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r13|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr 1010  <|@ instruction rbp|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1012  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction rdi|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1016  <|@ instruction rbx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1018  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1020  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1022  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1024  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1026  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1028  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1030  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1032  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1034  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction stack:64|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction stack:72|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction stack:80|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction stack:88|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction stack:96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction stack:104|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:104|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:96|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:88|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:80|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:72|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:64|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: stack:56|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
      nr 1056  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1106  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1108  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B10" "B17" "B29" "B41" "B44" "B35" "B23" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1162  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: r10|DWORD 
locals: rsi|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 8] size: DWORD state [bci:24] <|@ <|@
      nr 1164  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1166  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1168  <|@ instruction rbx|QWORD = MOV input: [rcx|QWORD + 496] size: QWORD <|@ <|@
      nr 1170  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1172  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1174  <|@ instruction rcx|DWORD = INC value: stack:28|DWORD size: DWORD <|@ <|@
      nr 1176  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1182  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36] <|@ <|@
      nr 1184  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr 1208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1218  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  582  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  592  <|@ instruction r10|DWORD = MOVE input: int[-122899|0xfffffffffffe1fed] <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  620  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  630  <|@ instruction r10|DWORD = MOVE input: int[-123923|0xfffffffffffe1bed] <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  766  <|@ instruction r10|DWORD = MOVE input: int[-125971|0xfffffffffffe13ed] <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  902  <|@ instruction r10|DWORD = MOVE input: int[-128019|0xfffffffffffe0bed] <|@ <|@
      nr  910  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1206  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction rbp|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction rax|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ instruction rdi|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1070  <|@ instruction r9|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction MOV x: [r15|QWORD + 1156] y: -129043 size: DWORD <|@ <|@
      nr 1092  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr 1094  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rbp|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rax|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rdi|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rbx|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  864  <|@ instruction r10|DWORD = MOVE input: int[-126995|0xfffffffffffe0fed] <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1242  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1256  <|@ instruction r10|DWORD = MOVE input: int[-44595|0xffffffffffff51cd] <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  320  <|@ instruction r10|DWORD = MOVE input: int[-118803|0xfffffffffffe2fed] <|@ <|@
      nr  328  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-124947|0xfffffffffffe17ed] <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1272  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1282  <|@ instruction r10|DWORD = MOVE input: int[-39731|0xffffffffffff64cd] <|@ <|@
      nr 1290  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1294  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1296  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1298  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1308  <|@ instruction r10|DWORD = MOVE input: int[-34867|0xffffffffffff77cd] <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1346  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1348  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1350  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1360  <|@ instruction r10|DWORD = MOVE input: int[-25139|0xffffffffffff9dcd] <|@ <|@
      nr 1368  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  240  <|@ instruction r10|DWORD = MOVE input: int[-67611|0xfffffffffffef7e5] <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  456  <|@ instruction r10|DWORD = MOVE input: int[-120851|0xfffffffffffe27ed] <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1320  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1322  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1324  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1334  <|@ instruction r10|DWORD = MOVE input: int[-30003|0xffffffffffff8acd] <|@ <|@
      nr 1342  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1400  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1402  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1412  <|@ instruction r10|DWORD = MOVE input: int[-117779|0xfffffffffffe33ed] <|@ <|@
      nr 1420  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1424  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1426  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1428  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1438  <|@ instruction r10|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed] <|@ <|@
      nr 1446  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  358  <|@ instruction r10|DWORD = MOVE input: int[-119827|0xfffffffffffe2bed] <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1476  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1478  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1480  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr 1490  <|@ instruction r10|DWORD = MOVE input: int[-58163|0xffffffffffff1ccd] <|@ <|@
      nr 1498  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1450  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1454  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1464  <|@ instruction r10|DWORD = MOVE input: int[-61724|0xffffffffffff0ee4] <|@ <|@
      nr 1472  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  494  <|@ instruction r10|DWORD = MOVE input: int[-121875|0xfffffffffffe23ed] <|@ <|@
      nr  502  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1372  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1374  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1376  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1386  <|@ instruction r10|DWORD = MOVE input: int[-18483|0xffffffffffffb7cd] <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B56" "B55" "B54" "B14" "B11" "B53" "B16" "B20" "B52" "B22" "B26" "B51" "B28" "B32" "B50" "B34" "B38" "B49" "B40" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1492  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1496  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1518  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1520  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #1          // java.util.regex.Matcher.to:int
     5: if_icmpge     48
     8: aload_0       
     9: getfield      #2          // java.util.regex.Pattern$CharProperty.predicate:java.util.regex.Pattern$CharPredicate
    12: aload_3       
    13: iload_2       
    14: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    19: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    24: ifeq          46
    27: aload_0       
    28: getfield      #5          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    31: aload_1       
    32: iload_2       
    33: iconst_1      
    34: iadd          
    35: aload_3       
    36: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    39: ifeq          46
    42: iconst_1      
    43: goto          47
    46: iconst_0      
    47: ireturn       
    48: aload_1       
    49: iconst_1      
    50: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    53: iconst_0      
    54: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B58" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29c8cc50 slotKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r11|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r11|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B57 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" "B12" "B54" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r10|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction r10|DWORD = MOVSXB input: [r10|QWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = MOVZXB value: r10|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  122  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  124  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B4 -> B5, B4 -> B6, B4 -> B12] defaultTarget: B4 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4603213171198275611
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction r10|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  144  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction r10|DWORD = SETCC condition: = <|@ <|@
      nr  148  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r9|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction r10|QWORD = MOVZXB value: r10|DWORD size: DWORD <|@ <|@
      nr  180  <|@ instruction r10|DWORD = MOVZXB input: [r10|QWORD + r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605197970982784543
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6409319995231739 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602673832159898576
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  206  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4598714910550929518
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" "B18" "B53" 
    xhandlers
    flags 
    probability 4597105811559466883
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction r10|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  286  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  288  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  290  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  378  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B52" 
    xhandlers
    flags 
    probability 4592602197851765433
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction rbx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  422  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  426  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdi|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B45" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  514  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B51" 
    xhandlers
    flags 
    probability 4588098584144088959
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction rdi|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  556  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  558  <|@ instruction rbp|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  560  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rbp|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  562  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B51 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdi|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  650  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B36" "B50" 
    xhandlers
    flags 
    probability 4583594970436437461
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction rax|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  692  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rax|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  694  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  696  <|@ instruction rbp|QWORD = UNCOMPRESSPOINTER (input: rbp|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  698  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbp|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B30 -> B31, B30 -> B36] defaultTarget: B30 -> B50 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  786  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B42" "B49" 
    xhandlers
    flags 
    probability 4579091356728810939
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction rbp|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  828  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction r13|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  830  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  832  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  834  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B36 -> B37, B36 -> B42] defaultTarget: B36 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbp|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  922  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction r13|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1008  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: stack:56|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r13|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr 1010  <|@ instruction rbp|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1012  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction rdi|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1016  <|@ instruction rbx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1018  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1020  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1022  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1024  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1026  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1028  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1030  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1032  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1034  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction stack:64|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction stack:72|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction stack:80|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction stack:88|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction stack:96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction stack:104|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:104|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:96|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:88|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:80|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:72|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:64|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: stack:56|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
      nr 1056  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1106  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1108  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B10" "B17" "B29" "B41" "B44" "B35" "B23" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1162  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: r10|DWORD 
locals: rsi|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 8] size: DWORD state [bci:24] <|@ <|@
      nr 1164  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1166  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1168  <|@ instruction rbx|QWORD = MOV input: [rcx|QWORD + 496] size: QWORD <|@ <|@
      nr 1170  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1172  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1174  <|@ instruction rcx|DWORD = INC value: stack:28|DWORD size: DWORD <|@ <|@
      nr 1176  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1182  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36] <|@ <|@
      nr 1184  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr 1208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1218  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  582  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  592  <|@ instruction r10|DWORD = MOVE input: int[-122899|0xfffffffffffe1fed] <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  620  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  630  <|@ instruction r10|DWORD = MOVE input: int[-123923|0xfffffffffffe1bed] <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  766  <|@ instruction r10|DWORD = MOVE input: int[-125971|0xfffffffffffe13ed] <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  902  <|@ instruction r10|DWORD = MOVE input: int[-128019|0xfffffffffffe0bed] <|@ <|@
      nr  910  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1206  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction rbp|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction rax|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ instruction rdi|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1070  <|@ instruction r9|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction MOV x: [r15|QWORD + 1156] y: -129043 size: DWORD <|@ <|@
      nr 1092  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr 1094  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rbp|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rax|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rdi|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rbx|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  864  <|@ instruction r10|DWORD = MOVE input: int[-126995|0xfffffffffffe0fed] <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1242  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1256  <|@ instruction r10|DWORD = MOVE input: int[-44595|0xffffffffffff51cd] <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  320  <|@ instruction r10|DWORD = MOVE input: int[-118803|0xfffffffffffe2fed] <|@ <|@
      nr  328  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-124947|0xfffffffffffe17ed] <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1272  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1282  <|@ instruction r10|DWORD = MOVE input: int[-39731|0xffffffffffff64cd] <|@ <|@
      nr 1290  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1294  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1296  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1298  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1308  <|@ instruction r10|DWORD = MOVE input: int[-34867|0xffffffffffff77cd] <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1346  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1348  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1350  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1360  <|@ instruction r10|DWORD = MOVE input: int[-25139|0xffffffffffff9dcd] <|@ <|@
      nr 1368  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  240  <|@ instruction r10|DWORD = MOVE input: int[-67611|0xfffffffffffef7e5] <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  456  <|@ instruction r10|DWORD = MOVE input: int[-120851|0xfffffffffffe27ed] <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1320  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1322  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1324  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1334  <|@ instruction r10|DWORD = MOVE input: int[-30003|0xffffffffffff8acd] <|@ <|@
      nr 1342  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1400  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1402  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1412  <|@ instruction r10|DWORD = MOVE input: int[-117779|0xfffffffffffe33ed] <|@ <|@
      nr 1420  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1424  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1426  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1428  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1438  <|@ instruction r10|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed] <|@ <|@
      nr 1446  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  358  <|@ instruction r10|DWORD = MOVE input: int[-119827|0xfffffffffffe2bed] <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1476  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1478  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1480  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr 1490  <|@ instruction r10|DWORD = MOVE input: int[-58163|0xffffffffffff1ccd] <|@ <|@
      nr 1498  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1450  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1454  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1464  <|@ instruction r10|DWORD = MOVE input: int[-61724|0xffffffffffff0ee4] <|@ <|@
      nr 1472  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  494  <|@ instruction r10|DWORD = MOVE input: int[-121875|0xfffffffffffe23ed] <|@ <|@
      nr  502  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1372  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1374  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1376  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1386  <|@ instruction r10|DWORD = MOVE input: int[-18483|0xffffffffffffb7cd] <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B56" "B55" "B54" "B14" "B11" "B53" "B16" "B20" "B52" "B22" "B26" "B51" "B28" "B32" "B50" "B34" "B38" "B49" "B40" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1492  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1496  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1518  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1520  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #1          // java.util.regex.Matcher.to:int
     5: if_icmpge     48
     8: aload_0       
     9: getfield      #2          // java.util.regex.Pattern$CharProperty.predicate:java.util.regex.Pattern$CharPredicate
    12: aload_3       
    13: iload_2       
    14: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    19: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    24: ifeq          46
    27: aload_0       
    28: getfield      #5          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    31: aload_1       
    32: iload_2       
    33: iconst_1      
    34: iadd          
    35: aload_3       
    36: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    39: ifeq          46
    42: iconst_1      
    43: goto          47
    46: iconst_0      
    47: ireturn       
    48: aload_1       
    49: iconst_1      
    50: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    53: iconst_0      
    54: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B58" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29c8cc50 slotKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r11|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r11|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B57 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" "B12" "B54" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r10|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction r10|DWORD = MOVSXB input: [r10|QWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = MOVZXB value: r10|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  122  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  124  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B4 -> B5, B4 -> B6, B4 -> B12] defaultTarget: B4 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4603213171198275611
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction r10|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  144  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction r10|DWORD = SETCC condition: = <|@ <|@
      nr  148  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605197970982784543
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6409319995231739 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602673832159898576
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  206  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4598714910550929518
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B10" "B17" "B29" "B41" "B44" "B35" "B23" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1162  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: r10|DWORD 
locals: rsi|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 8] size: DWORD state [bci:24] <|@ <|@
      nr 1164  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1166  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1168  <|@ instruction rbx|QWORD = MOV input: [rcx|QWORD + 496] size: QWORD <|@ <|@
      nr 1170  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1172  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1174  <|@ instruction rcx|DWORD = INC value: stack:28|DWORD size: DWORD <|@ <|@
      nr 1176  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1182  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36] <|@ <|@
      nr 1184  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr 1208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1218  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r9|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction r10|QWORD = MOVZXB value: r10|DWORD size: DWORD <|@ <|@
      nr  180  <|@ instruction r10|DWORD = MOVZXB input: [r10|QWORD + r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" "B18" "B53" 
    xhandlers
    flags 
    probability 4597105811559466883
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction r10|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  286  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  288  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  290  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  378  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B52" 
    xhandlers
    flags 
    probability 4592602197851765433
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction rbx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  422  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  426  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdi|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B45" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  514  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B51" 
    xhandlers
    flags 
    probability 4588098584144088959
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction rdi|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  556  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  558  <|@ instruction rbp|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  560  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rbp|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  562  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B51 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdi|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  650  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B36" "B50" 
    xhandlers
    flags 
    probability 4583594970436437461
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction rax|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  692  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rax|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  694  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  696  <|@ instruction rbp|QWORD = UNCOMPRESSPOINTER (input: rbp|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  698  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbp|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B30 -> B31, B30 -> B36] defaultTarget: B30 -> B50 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  786  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B42" "B49" 
    xhandlers
    flags 
    probability 4579091356728810939
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction rbp|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  828  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction r13|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  830  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  832  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  834  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B36 -> B37, B36 -> B42] defaultTarget: B36 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbp|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  922  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction r13|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1008  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: stack:56|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r13|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr 1010  <|@ instruction rbp|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1012  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction rdi|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1016  <|@ instruction rbx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1018  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1020  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1022  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1024  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1026  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1028  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1030  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1032  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1034  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction stack:64|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction stack:72|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction stack:80|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction stack:88|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction stack:96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction stack:104|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:104|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:96|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:88|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:80|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:72|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:64|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: stack:56|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
      nr 1056  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1106  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1108  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1294  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1296  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1298  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1308  <|@ instruction r10|DWORD = MOVE input: int[-34867|0xffffffffffff77cd] <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B56" "B55" "B54" "B14" "B11" "B53" "B16" "B20" "B52" "B22" "B26" "B51" "B28" "B32" "B50" "B34" "B38" "B49" "B40" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1492  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1496  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1518  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1520  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  620  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  630  <|@ instruction r10|DWORD = MOVE input: int[-123923|0xfffffffffffe1bed] <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  766  <|@ instruction r10|DWORD = MOVE input: int[-125971|0xfffffffffffe13ed] <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  902  <|@ instruction r10|DWORD = MOVE input: int[-128019|0xfffffffffffe0bed] <|@ <|@
      nr  910  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction rbp|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction rax|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ instruction rdi|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1070  <|@ instruction r9|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction MOV x: [r15|QWORD + 1156] y: -129043 size: DWORD <|@ <|@
      nr 1092  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr 1094  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rbp|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rax|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rdi|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rbx|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  864  <|@ instruction r10|DWORD = MOVE input: int[-126995|0xfffffffffffe0fed] <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1242  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1256  <|@ instruction r10|DWORD = MOVE input: int[-44595|0xffffffffffff51cd] <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  320  <|@ instruction r10|DWORD = MOVE input: int[-118803|0xfffffffffffe2fed] <|@ <|@
      nr  328  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-124947|0xfffffffffffe17ed] <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1272  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1282  <|@ instruction r10|DWORD = MOVE input: int[-39731|0xffffffffffff64cd] <|@ <|@
      nr 1290  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1476  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1478  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1480  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr 1490  <|@ instruction r10|DWORD = MOVE input: int[-58163|0xffffffffffff1ccd] <|@ <|@
      nr 1498  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  494  <|@ instruction r10|DWORD = MOVE input: int[-121875|0xfffffffffffe23ed] <|@ <|@
      nr  502  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  582  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  592  <|@ instruction r10|DWORD = MOVE input: int[-122899|0xfffffffffffe1fed] <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  456  <|@ instruction r10|DWORD = MOVE input: int[-120851|0xfffffffffffe27ed] <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1320  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1322  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1324  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1334  <|@ instruction r10|DWORD = MOVE input: int[-30003|0xffffffffffff8acd] <|@ <|@
      nr 1342  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1400  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1402  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1412  <|@ instruction r10|DWORD = MOVE input: int[-117779|0xfffffffffffe33ed] <|@ <|@
      nr 1420  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1372  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1374  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1376  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1386  <|@ instruction r10|DWORD = MOVE input: int[-18483|0xffffffffffffb7cd] <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1346  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1348  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1350  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1360  <|@ instruction r10|DWORD = MOVE input: int[-25139|0xffffffffffff9dcd] <|@ <|@
      nr 1368  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1424  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1426  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1428  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1438  <|@ instruction r10|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed] <|@ <|@
      nr 1446  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1450  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1454  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1464  <|@ instruction r10|DWORD = MOVE input: int[-61724|0xffffffffffff0ee4] <|@ <|@
      nr 1472  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  240  <|@ instruction r10|DWORD = MOVE input: int[-67611|0xfffffffffffef7e5] <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  358  <|@ instruction r10|DWORD = MOVE input: int[-119827|0xfffffffffffe2bed] <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1206  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #1          // java.util.regex.Matcher.to:int
     5: if_icmpge     48
     8: aload_0       
     9: getfield      #2          // java.util.regex.Pattern$CharProperty.predicate:java.util.regex.Pattern$CharPredicate
    12: aload_3       
    13: iload_2       
    14: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    19: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    24: ifeq          46
    27: aload_0       
    28: getfield      #5          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    31: aload_1       
    32: iload_2       
    33: iconst_1      
    34: iadd          
    35: aload_3       
    36: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    39: ifeq          46
    42: iconst_1      
    43: goto          47
    46: iconst_0      
    47: ireturn       
    48: aload_1       
    49: iconst_1      
    50: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    53: iconst_0      
    54: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B58" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29c8cc50 slotKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r11|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r11|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B57 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" "B12" "B54" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r10|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction r10|DWORD = MOVSXB input: [r10|QWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = MOVZXB value: r10|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  122  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  124  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B4 -> B5, B4 -> B6, B4 -> B12] defaultTarget: B4 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4603213171198275611
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction r10|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  144  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction r10|DWORD = SETCC condition: = <|@ <|@
      nr  148  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605197970982784543
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6409319995231739 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602673832159898576
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  206  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4598714910550929518
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B10" "B17" "B29" "B41" "B44" "B35" "B23" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1162  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: r10|DWORD 
locals: rsi|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 8] size: DWORD state [bci:24] <|@ <|@
      nr 1164  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1166  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1168  <|@ instruction rbx|QWORD = MOV input: [rcx|QWORD + 496] size: QWORD <|@ <|@
      nr 1170  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1172  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1174  <|@ instruction rcx|DWORD = INC value: stack:28|DWORD size: DWORD <|@ <|@
      nr 1176  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1182  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36] <|@ <|@
      nr 1184  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr 1208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1218  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r9|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction r10|QWORD = MOVZXB value: r10|DWORD size: DWORD <|@ <|@
      nr  180  <|@ instruction r10|DWORD = MOVZXB input: [r10|QWORD + r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" "B18" "B53" 
    xhandlers
    flags 
    probability 4597105811559466883
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction r10|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  286  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  288  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  290  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  378  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B52" 
    xhandlers
    flags 
    probability 4592602197851765433
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction rbx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  422  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  426  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdi|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B45" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  514  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B51" 
    xhandlers
    flags 
    probability 4588098584144088959
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction rdi|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  556  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  558  <|@ instruction rbp|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  560  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rbp|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  562  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B51 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdi|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  650  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B36" "B50" 
    xhandlers
    flags 
    probability 4583594970436437461
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction rax|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  692  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rax|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  694  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  696  <|@ instruction rbp|QWORD = UNCOMPRESSPOINTER (input: rbp|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  698  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbp|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B30 -> B31, B30 -> B36] defaultTarget: B30 -> B50 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  786  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B42" "B49" 
    xhandlers
    flags 
    probability 4579091356728810939
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction rbp|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  828  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction r13|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  830  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  832  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  834  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B36 -> B37, B36 -> B42] defaultTarget: B36 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbp|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  922  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction r13|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1008  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: stack:56|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r13|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr 1010  <|@ instruction rbp|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1012  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction rdi|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1016  <|@ instruction rbx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1018  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1020  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1022  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1024  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1026  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1028  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1030  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1032  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1034  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction stack:64|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction stack:72|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction stack:80|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction stack:88|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction stack:96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction stack:104|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:104|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:96|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:88|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:80|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:72|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:64|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: stack:56|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
      nr 1056  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1106  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1108  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1294  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1296  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1298  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1308  <|@ instruction r10|DWORD = MOVE input: int[-34867|0xffffffffffff77cd] <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B56" "B55" "B54" "B14" "B11" "B53" "B16" "B20" "B52" "B22" "B26" "B51" "B28" "B32" "B50" "B34" "B38" "B49" "B40" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1492  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1496  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1518  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1520  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  620  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  630  <|@ instruction r10|DWORD = MOVE input: int[-123923|0xfffffffffffe1bed] <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  766  <|@ instruction r10|DWORD = MOVE input: int[-125971|0xfffffffffffe13ed] <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  902  <|@ instruction r10|DWORD = MOVE input: int[-128019|0xfffffffffffe0bed] <|@ <|@
      nr  910  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction rbp|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction rax|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ instruction rdi|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1070  <|@ instruction r9|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction MOV x: [r15|QWORD + 1156] y: -129043 size: DWORD <|@ <|@
      nr 1092  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr 1094  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rbp|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rax|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rdi|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rbx|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  864  <|@ instruction r10|DWORD = MOVE input: int[-126995|0xfffffffffffe0fed] <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1242  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1256  <|@ instruction r10|DWORD = MOVE input: int[-44595|0xffffffffffff51cd] <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  320  <|@ instruction r10|DWORD = MOVE input: int[-118803|0xfffffffffffe2fed] <|@ <|@
      nr  328  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-124947|0xfffffffffffe17ed] <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1272  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1282  <|@ instruction r10|DWORD = MOVE input: int[-39731|0xffffffffffff64cd] <|@ <|@
      nr 1290  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1476  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1478  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1480  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr 1490  <|@ instruction r10|DWORD = MOVE input: int[-58163|0xffffffffffff1ccd] <|@ <|@
      nr 1498  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  494  <|@ instruction r10|DWORD = MOVE input: int[-121875|0xfffffffffffe23ed] <|@ <|@
      nr  502  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  582  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  592  <|@ instruction r10|DWORD = MOVE input: int[-122899|0xfffffffffffe1fed] <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  456  <|@ instruction r10|DWORD = MOVE input: int[-120851|0xfffffffffffe27ed] <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1320  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1322  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1324  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1334  <|@ instruction r10|DWORD = MOVE input: int[-30003|0xffffffffffff8acd] <|@ <|@
      nr 1342  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1400  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1402  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1412  <|@ instruction r10|DWORD = MOVE input: int[-117779|0xfffffffffffe33ed] <|@ <|@
      nr 1420  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1372  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1374  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1376  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1386  <|@ instruction r10|DWORD = MOVE input: int[-18483|0xffffffffffffb7cd] <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1346  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1348  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1350  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1360  <|@ instruction r10|DWORD = MOVE input: int[-25139|0xffffffffffff9dcd] <|@ <|@
      nr 1368  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1424  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1426  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1428  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1438  <|@ instruction r10|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed] <|@ <|@
      nr 1446  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1450  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1454  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1464  <|@ instruction r10|DWORD = MOVE input: int[-61724|0xffffffffffff0ee4] <|@ <|@
      nr 1472  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  240  <|@ instruction r10|DWORD = MOVE input: int[-67611|0xfffffffffffef7e5] <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  358  <|@ instruction r10|DWORD = MOVE input: int[-119827|0xfffffffffffe2bed] <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1206  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #1          // java.util.regex.Matcher.to:int
     5: if_icmpge     48
     8: aload_0       
     9: getfield      #2          // java.util.regex.Pattern$CharProperty.predicate:java.util.regex.Pattern$CharPredicate
    12: aload_3       
    13: iload_2       
    14: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    19: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    24: ifeq          46
    27: aload_0       
    28: getfield      #5          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    31: aload_1       
    32: iload_2       
    33: iconst_1      
    34: iadd          
    35: aload_3       
    36: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    39: ifeq          46
    42: iconst_1      
    43: goto          47
    46: iconst_0      
    47: ireturn       
    48: aload_1       
    49: iconst_1      
    50: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    53: iconst_0      
    54: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B58" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29c8cc50 slotKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r11|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r11|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B57 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" "B12" "B54" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r10|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction r10|DWORD = MOVSXB input: [r10|QWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = MOVZXB value: r10|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  122  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  124  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B4 -> B5, B4 -> B6, B4 -> B12] defaultTarget: B4 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4603213171198275611
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction r10|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  144  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction r10|DWORD = SETCC condition: = <|@ <|@
      nr  148  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605197970982784543
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6409319995231739 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602673832159898576
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  206  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4598714910550929518
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B10" "B17" "B29" "B41" "B44" "B35" "B23" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1162  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: r10|DWORD 
locals: rsi|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 8] size: DWORD state [bci:24] <|@ <|@
      nr 1164  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1166  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1168  <|@ instruction rbx|QWORD = MOV input: [rcx|QWORD + 496] size: QWORD <|@ <|@
      nr 1170  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1172  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1174  <|@ instruction rcx|DWORD = INC value: stack:28|DWORD size: DWORD <|@ <|@
      nr 1176  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1182  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36] <|@ <|@
      nr 1184  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr 1208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1218  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r9|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction r10|QWORD = MOVZXB value: r10|DWORD size: DWORD <|@ <|@
      nr  180  <|@ instruction r10|DWORD = MOVZXB input: [r10|QWORD + r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" "B18" "B53" 
    xhandlers
    flags 
    probability 4597105811559466883
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction r10|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  286  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  288  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  290  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  378  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B52" 
    xhandlers
    flags 
    probability 4592602197851765433
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction rbx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  422  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  426  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdi|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B45" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  514  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B51" 
    xhandlers
    flags 
    probability 4588098584144088959
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction rdi|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  556  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  558  <|@ instruction rbp|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  560  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rbp|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  562  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B51 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdi|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  650  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B36" "B50" 
    xhandlers
    flags 
    probability 4583594970436437461
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction rax|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  692  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rax|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  694  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  696  <|@ instruction rbp|QWORD = UNCOMPRESSPOINTER (input: rbp|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  698  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbp|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B30 -> B31, B30 -> B36] defaultTarget: B30 -> B50 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  786  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B42" "B49" 
    xhandlers
    flags 
    probability 4579091356728810939
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction rbp|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  828  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction r13|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  830  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  832  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  834  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B36 -> B37, B36 -> B42] defaultTarget: B36 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbp|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  922  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction r13|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1008  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: stack:56|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r13|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr 1010  <|@ instruction rbp|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1012  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction rdi|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1016  <|@ instruction rbx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1018  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1020  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1022  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1024  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1026  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1028  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1030  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1032  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1034  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction stack:64|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction stack:72|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction stack:80|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction stack:88|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction stack:96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction stack:104|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:104|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:96|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:88|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:80|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:72|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:64|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: stack:56|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
      nr 1056  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1106  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1108  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1294  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1296  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1298  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1308  <|@ instruction r10|DWORD = MOVE input: int[-34867|0xffffffffffff77cd] <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B56" "B55" "B54" "B14" "B11" "B53" "B16" "B20" "B52" "B22" "B26" "B51" "B28" "B32" "B50" "B34" "B38" "B49" "B40" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1492  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1496  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1518  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1520  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  620  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  630  <|@ instruction r10|DWORD = MOVE input: int[-123923|0xfffffffffffe1bed] <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  766  <|@ instruction r10|DWORD = MOVE input: int[-125971|0xfffffffffffe13ed] <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  902  <|@ instruction r10|DWORD = MOVE input: int[-128019|0xfffffffffffe0bed] <|@ <|@
      nr  910  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction rbp|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction rax|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ instruction rdi|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1070  <|@ instruction r9|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction MOV x: [r15|QWORD + 1156] y: -129043 size: DWORD <|@ <|@
      nr 1092  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr 1094  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rbp|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rax|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rdi|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rbx|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  864  <|@ instruction r10|DWORD = MOVE input: int[-126995|0xfffffffffffe0fed] <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1242  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1256  <|@ instruction r10|DWORD = MOVE input: int[-44595|0xffffffffffff51cd] <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  320  <|@ instruction r10|DWORD = MOVE input: int[-118803|0xfffffffffffe2fed] <|@ <|@
      nr  328  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-124947|0xfffffffffffe17ed] <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1272  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1282  <|@ instruction r10|DWORD = MOVE input: int[-39731|0xffffffffffff64cd] <|@ <|@
      nr 1290  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1476  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1478  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1480  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr 1490  <|@ instruction r10|DWORD = MOVE input: int[-58163|0xffffffffffff1ccd] <|@ <|@
      nr 1498  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  494  <|@ instruction r10|DWORD = MOVE input: int[-121875|0xfffffffffffe23ed] <|@ <|@
      nr  502  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  582  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  592  <|@ instruction r10|DWORD = MOVE input: int[-122899|0xfffffffffffe1fed] <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  456  <|@ instruction r10|DWORD = MOVE input: int[-120851|0xfffffffffffe27ed] <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1320  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1322  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1324  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1334  <|@ instruction r10|DWORD = MOVE input: int[-30003|0xffffffffffff8acd] <|@ <|@
      nr 1342  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1400  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1402  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1412  <|@ instruction r10|DWORD = MOVE input: int[-117779|0xfffffffffffe33ed] <|@ <|@
      nr 1420  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1372  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1374  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1376  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1386  <|@ instruction r10|DWORD = MOVE input: int[-18483|0xffffffffffffb7cd] <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1346  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1348  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1350  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1360  <|@ instruction r10|DWORD = MOVE input: int[-25139|0xffffffffffff9dcd] <|@ <|@
      nr 1368  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1424  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1426  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1428  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1438  <|@ instruction r10|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed] <|@ <|@
      nr 1446  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1450  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1454  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1464  <|@ instruction r10|DWORD = MOVE input: int[-61724|0xffffffffffff0ee4] <|@ <|@
      nr 1472  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  240  <|@ instruction r10|DWORD = MOVE input: int[-67611|0xfffffffffffef7e5] <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  358  <|@ instruction r10|DWORD = MOVE input: int[-119827|0xfffffffffffe2bed] <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1206  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #1          // java.util.regex.Matcher.to:int
     5: if_icmpge     48
     8: aload_0       
     9: getfield      #2          // java.util.regex.Pattern$CharProperty.predicate:java.util.regex.Pattern$CharPredicate
    12: aload_3       
    13: iload_2       
    14: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    19: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    24: ifeq          46
    27: aload_0       
    28: getfield      #5          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    31: aload_1       
    32: iload_2       
    33: iconst_1      
    34: iadd          
    35: aload_3       
    36: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    39: ifeq          46
    42: iconst_1      
    43: goto          47
    46: iconst_0      
    47: ireturn       
    48: aload_1       
    49: iconst_1      
    50: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    53: iconst_0      
    54: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B58" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29c8cc50 slotKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r11|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r11|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B57 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r9:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" "B12" "B54" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r10|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction r10|DWORD = MOVSXB input: [r10|QWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = MOVZXB value: r10|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  122  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  124  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B4 -> B5, B4 -> B6, B4 -> B12] defaultTarget: B4 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4603213171198275611
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction r10|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  144  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction r10|DWORD = SETCC condition: = <|@ <|@
      nr  148  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605197970982784543
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6409319995231739 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602673832159898576
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  206  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4598714910550929518
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B10" "B17" "B29" "B41" "B44" "B35" "B23" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1162  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:64, stack:72]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: r10|DWORD 
locals: rsi|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 8] size: DWORD state [bci:24] <|@ <|@
      nr 1164  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1166  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1168  <|@ instruction rbx|QWORD = MOV input: [rcx|QWORD + 496] size: QWORD <|@ <|@
      nr 1170  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1172  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1174  <|@ instruction rcx|DWORD = INC value: stack:28|DWORD size: DWORD <|@ <|@
      nr 1176  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1182  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36] <|@ <|@
      nr 1184  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr 1208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1218  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  164  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r9:0]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r9|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction r10|QWORD = MOVZXB value: r10|DWORD size: DWORD <|@ <|@
      nr  180  <|@ instruction r10|DWORD = MOVZXB input: [r10|QWORD + r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" "B18" "B53" 
    xhandlers
    flags 
    probability 4597105811559466883
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction r10|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  284  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r9:0, r10:0]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  286  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  288  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  290  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  378  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B52" 
    xhandlers
    flags 
    probability 4592602197851765433
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction rbx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  420  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, r9:0, r10:0]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  422  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  426  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdi|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B45" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  514  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B51" 
    xhandlers
    flags 
    probability 4588098584144088959
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction rdi|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  556  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  558  <|@ instruction rbp|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  560  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rbp|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  562  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B51 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdi|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  650  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B36" "B50" 
    xhandlers
    flags 
    probability 4583594970436437461
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction rax|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  692  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rax|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  694  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  696  <|@ instruction rbp|QWORD = UNCOMPRESSPOINTER (input: rbp|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  698  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbp|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B30 -> B31, B30 -> B36] defaultTarget: B30 -> B50 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  786  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B42" "B49" 
    xhandlers
    flags 
    probability 4579091356728810939
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction rbp|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  828  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, rbp:0, rsi:0, rdi:0, r8:0, r9:0, r10:0]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction r13|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  830  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  832  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  834  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B36 -> B37, B36 -> B42] defaultTarget: B36 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbp|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  922  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction r13|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1008  <|@ st <@st|@reference-map: [rax:0, rbx:0, rbp:0, rdi:0, r9:0, r10:0, r13:0, stack:56, stack:64, stack:72]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: stack:56|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r13|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr 1010  <|@ instruction rbp|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1012  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction rdi|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1016  <|@ instruction rbx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1018  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1020  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1022  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1024  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1026  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1028  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1030  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1032  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1034  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction stack:64|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction stack:72|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction stack:80|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction stack:88|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction stack:96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction stack:104|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56, stack:64, stack:72]
live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:104|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:96|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:88|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:80|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:72|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:64|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: stack:56|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
      nr 1056  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1106  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1108  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1294  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1296  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1298  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1308  <|@ instruction r10|DWORD = MOVE input: int[-34867|0xffffffffffff77cd] <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B56" "B55" "B54" "B14" "B11" "B53" "B16" "B20" "B52" "B22" "B26" "B51" "B28" "B32" "B50" "B34" "B38" "B49" "B40" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1492  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1496  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1518  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1520  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  620  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  630  <|@ instruction r10|DWORD = MOVE input: int[-123923|0xfffffffffffe1bed] <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  766  <|@ instruction r10|DWORD = MOVE input: int[-125971|0xfffffffffffe13ed] <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  902  <|@ instruction r10|DWORD = MOVE input: int[-128019|0xfffffffffffe0bed] <|@ <|@
      nr  910  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction rbp|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction rax|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ instruction rdi|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1070  <|@ instruction r9|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction MOV x: [r15|QWORD + 1156] y: -129043 size: DWORD <|@ <|@
      nr 1092  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr 1094  <|@ st <@st|@reference-map: [rax:0, rbx:0, rbp:0, rsi:0, rdi:0, r9:0, r10:0, stack:64, stack:72]
live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rbp|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rax|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rdi|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rbx|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  864  <|@ instruction r10|DWORD = MOVE input: int[-126995|0xfffffffffffe0fed] <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1242  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1256  <|@ instruction r10|DWORD = MOVE input: int[-44595|0xffffffffffff51cd] <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  320  <|@ instruction r10|DWORD = MOVE input: int[-118803|0xfffffffffffe2fed] <|@ <|@
      nr  328  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-124947|0xfffffffffffe17ed] <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1272  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1282  <|@ instruction r10|DWORD = MOVE input: int[-39731|0xffffffffffff64cd] <|@ <|@
      nr 1290  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1476  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1478  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1480  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr 1490  <|@ instruction r10|DWORD = MOVE input: int[-58163|0xffffffffffff1ccd] <|@ <|@
      nr 1498  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  494  <|@ instruction r10|DWORD = MOVE input: int[-121875|0xfffffffffffe23ed] <|@ <|@
      nr  502  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  582  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  592  <|@ instruction r10|DWORD = MOVE input: int[-122899|0xfffffffffffe1fed] <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  456  <|@ instruction r10|DWORD = MOVE input: int[-120851|0xfffffffffffe27ed] <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1320  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1322  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1324  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1334  <|@ instruction r10|DWORD = MOVE input: int[-30003|0xffffffffffff8acd] <|@ <|@
      nr 1342  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1400  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1402  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1412  <|@ instruction r10|DWORD = MOVE input: int[-117779|0xfffffffffffe33ed] <|@ <|@
      nr 1420  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1372  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1374  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1376  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1386  <|@ instruction r10|DWORD = MOVE input: int[-18483|0xffffffffffffb7cd] <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1346  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1348  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1350  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1360  <|@ instruction r10|DWORD = MOVE input: int[-25139|0xffffffffffff9dcd] <|@ <|@
      nr 1368  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1424  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1426  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1428  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1438  <|@ instruction r10|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed] <|@ <|@
      nr 1446  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1450  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1454  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1464  <|@ instruction r10|DWORD = MOVE input: int[-61724|0xffffffffffff0ee4] <|@ <|@
      nr 1472  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  240  <|@ instruction r10|DWORD = MOVE input: int[-67611|0xfffffffffffef7e5] <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  358  <|@ instruction r10|DWORD = MOVE input: int[-119827|0xfffffffffffe2bed] <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1206  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #1          // java.util.regex.Matcher.to:int
     5: if_icmpge     48
     8: aload_0       
     9: getfield      #2          // java.util.regex.Pattern$CharProperty.predicate:java.util.regex.Pattern$CharPredicate
    12: aload_3       
    13: iload_2       
    14: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    19: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    24: ifeq          46
    27: aload_0       
    28: getfield      #5          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    31: aload_1       
    32: iload_2       
    33: iconst_1      
    34: iadd          
    35: aload_3       
    36: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    39: ifeq          46
    42: iconst_1      
    43: goto          47
    46: iconst_0      
    47: ireturn       
    48: aload_1       
    49: iconst_1      
    50: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    53: iconst_0      
    54: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B58" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29c8cc50 slotKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r11|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r11|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B57 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r9:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" "B12" "B54" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r10|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction r10|DWORD = MOVSXB input: [r10|QWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = MOVZXB value: r10|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  122  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  124  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B4 -> B5, B4 -> B6, B4 -> B12] defaultTarget: B4 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4603213171198275611
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction r10|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  144  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction r10|DWORD = SETCC condition: = <|@ <|@
      nr  148  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605197970982784543
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6409319995231739 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602673832159898576
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  206  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4598714910550929518
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B10" "B17" "B29" "B41" "B44" "B35" "B23" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1162  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:64, stack:72]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: r10|DWORD 
locals: rsi|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 8] size: DWORD state [bci:24] <|@ <|@
      nr 1164  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1166  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1168  <|@ instruction rbx|QWORD = MOV input: [rcx|QWORD + 496] size: QWORD <|@ <|@
      nr 1170  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1172  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1174  <|@ instruction rcx|DWORD = INC value: stack:28|DWORD size: DWORD <|@ <|@
      nr 1176  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1182  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36] <|@ <|@
      nr 1184  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4602681312679021080
    begin_IR
      LIR
      nr 1208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1218  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  164  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r9:0]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r9|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4597107219428571153
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction r10|QWORD = MOVZXB value: r10|DWORD size: DWORD <|@ <|@
      nr  180  <|@ instruction r10|DWORD = MOVZXB input: [r10|QWORD + r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" "B18" "B53" 
    xhandlers
    flags 
    probability 4597105811559466883
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction r10|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  284  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r9:0, r10:0]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  286  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  288  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  290  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592602226012427342
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  378  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B24" "B52" 
    xhandlers
    flags 
    probability 4592602197851765433
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction rbx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  420  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, r9:0, r10:0]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  422  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  426  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdi|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B45" 
    xhandlers
    flags 
    probability 4588098612304700916
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  514  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B30" "B51" 
    xhandlers
    flags 
    probability 4588098584144088959
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction rdi|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  556  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  558  <|@ instruction rbp|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  560  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rbp|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  562  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B51 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdi|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4583594998596999466
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  650  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B31" "B36" "B50" 
    xhandlers
    flags 
    probability 4583594970436437461
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction rax|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  692  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rax|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  694  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  696  <|@ instruction rbp|QWORD = UNCOMPRESSPOINTER (input: rbp|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  698  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbp|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B30 -> B31, B30 -> B36] defaultTarget: B30 -> B50 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4579091384889322992
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  786  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B42" "B49" 
    xhandlers
    flags 
    probability 4579091356728810939
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction rbp|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  828  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, rbp:0, rsi:0, rdi:0, r8:0, r9:0, r10:0]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction r13|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  830  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  832  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  834  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B36 -> B37, B36 -> B42] defaultTarget: B36 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbp|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587771181671494
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  922  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction r13|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1008  <|@ st <@st|@reference-map: [rax:0, rbx:0, rbp:0, rdi:0, r9:0, r10:0, r13:0, stack:56, stack:64, stack:72]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: stack:56|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r13|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr 1010  <|@ instruction rbp|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1012  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction rdi|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1016  <|@ instruction rbx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1018  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1020  <|@ instruction r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1022  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1024  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1026  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1028  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1030  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1032  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1034  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3 <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction stack:64|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction stack:72|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction stack:80|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction stack:88|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction stack:96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction stack:104|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56, stack:64, stack:72]
live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:104|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:96|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:88|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:80|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:72|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:64|QWORD[.] stack:32|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: stack:56|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
      nr 1056  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574587743021209393
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1106  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1108  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1294  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1296  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1298  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1308  <|@ instruction r10|DWORD = MOVE input: int[-34867|0xffffffffffff77cd] <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B56" "B55" "B54" "B14" "B11" "B53" "B16" "B20" "B52" "B22" "B26" "B51" "B28" "B32" "B50" "B34" "B38" "B49" "B40" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1492  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1496  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1518  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1520  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  620  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  630  <|@ instruction r10|DWORD = MOVE input: int[-123923|0xfffffffffffe1bed] <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  766  <|@ instruction r10|DWORD = MOVE input: int[-125971|0xfffffffffffe13ed] <|@ <|@
      nr  774  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  902  <|@ instruction r10|DWORD = MOVE input: int[-128019|0xfffffffffffe0bed] <|@ <|@
      nr  910  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction rbp|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction rax|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ instruction rdi|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1070  <|@ instruction r9|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction MOV x: [r15|QWORD + 1156] y: -129043 size: DWORD <|@ <|@
      nr 1092  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr 1094  <|@ st <@st|@reference-map: [rax:0, rbx:0, rbp:0, rsi:0, rdi:0, r9:0, r10:0, stack:64, stack:72]
live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rbp|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rax|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rdi|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rbx|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] r11|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] stack:28|DWORD stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  864  <|@ instruction r10|DWORD = MOVE input: int[-126995|0xfffffffffffe0fed] <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1242  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1256  <|@ instruction r10|DWORD = MOVE input: int[-44595|0xffffffffffff51cd] <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  320  <|@ instruction r10|DWORD = MOVE input: int[-118803|0xfffffffffffe2fed] <|@ <|@
      nr  328  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-124947|0xfffffffffffe17ed] <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1272  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1282  <|@ instruction r10|DWORD = MOVE input: int[-39731|0xffffffffffff64cd] <|@ <|@
      nr 1290  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1476  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1478  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1480  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr 1490  <|@ instruction r10|DWORD = MOVE input: int[-58163|0xffffffffffff1ccd] <|@ <|@
      nr 1498  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  494  <|@ instruction r10|DWORD = MOVE input: int[-121875|0xfffffffffffe23ed] <|@ <|@
      nr  502  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  582  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  592  <|@ instruction r10|DWORD = MOVE input: int[-122899|0xfffffffffffe1fed] <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  456  <|@ instruction r10|DWORD = MOVE input: int[-120851|0xfffffffffffe27ed] <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1320  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1322  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1324  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1334  <|@ instruction r10|DWORD = MOVE input: int[-30003|0xffffffffffff8acd] <|@ <|@
      nr 1342  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1400  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1402  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1412  <|@ instruction r10|DWORD = MOVE input: int[-117779|0xfffffffffffe33ed] <|@ <|@
      nr 1420  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1372  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1374  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1376  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1386  <|@ instruction r10|DWORD = MOVE input: int[-18483|0xffffffffffffb7cd] <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1346  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1348  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1350  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1360  <|@ instruction r10|DWORD = MOVE input: int[-25139|0xffffffffffff9dcd] <|@ <|@
      nr 1368  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1424  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1426  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1428  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1438  <|@ instruction r10|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed] <|@ <|@
      nr 1446  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1450  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1454  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1464  <|@ instruction r10|DWORD = MOVE input: int[-61724|0xffffffffffff0ee4] <|@ <|@
      nr 1472  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  240  <|@ instruction r10|DWORD = MOVE input: int[-67611|0xfffffffffffef7e5] <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr  358  <|@ instruction r10|DWORD = MOVE input: int[-119827|0xfffffffffffe2bed] <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1206  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #1          // java.util.regex.Matcher.to:int
     5: if_icmpge     48
     8: aload_0       
     9: getfield      #2          // java.util.regex.Pattern$CharProperty.predicate:java.util.regex.Pattern$CharPredicate
    12: aload_3       
    13: iload_2       
    14: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    19: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    24: ifeq          46
    27: aload_0       
    28: getfield      #5          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    31: aload_1       
    32: iload_2       
    33: iconst_1      
    34: iadd          
    35: aload_3       
    36: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    39: ifeq          46
    42: iconst_1      
    43: goto          47
    46: iconst_0      
    47: ireturn       
    48: aload_1       
    49: iconst_1      
    50: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    53: iconst_0      
    54: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec689041817f20000000000f85d50800009090909090909090909048896c246041817808addeadde0f85ea060000909090909090448b5210458b5814423b0cdd0c0000000f8309080000909090909090448b4e10428b1ccd08000000443bd10f8ecb0700009090909041807810000f855307000090909090909090909090909090909090448bd1470fbe54da10450fb6da48bf0000002b787f0000488d1c1f483b1d000000000f841f000000483b1d000000000f84e2000000483b1d000000000f8404010000e91f07000090909090909090468b14cd0c000000453bd3410f94c2450fb6d2909090904585d20f8527000000909090b8000000009090909090909090488b6c24604883c468493ba7500400000f87de070000c39090904c89442448894c245448895424409090909090909090909090909090909090909090909090908b560c8b0cd50800000048be0000002b787f0000488d0c0e488b99f0010000488b434048c1e2038b4c2454ffc1488bf2488b5424404c8b442448ffd00f1f84000000000085c00f842e070000909090b801000000e95fffffff9090909090468b0ccd0c000000463b1ccd0c0000000f83c00600009090909090450fb6d2470fb654ca10e91bffffff909090909090909090909090909090468b14cd0c000000428b1cd50800000048bf0000002b787f0000488d1c1f483b1d000000000f8412000000483b1d000000000f8445000000e9f705000090909090463b1cd50c0000000f8c8704000090909090463b1cd5100000000f8f5f06000090909041ba010000004c89442448894c24544889542440e9d4feffff909090909090909090909090909090428b1cd50c0000008b3cdd0800000048b80000002b787f0000488d3c38483b3d000000000f8412000000483b3d000000000f8445000000e90305000090909090443b1cdd0c0000000f8cce04000090909090443b1cdd100000000f8f7604000090909041ba010000004c89442448894c24544889542440e949feffff9090909090909090909090909090908b3cdd0c0000008b04fd0800000048bd0000002b787f0000488d440500483b05000000000f8412000000483b05000000000f8445000000e93e02000090909090443b1cfd0c0000000f8c2004000090909090443b1cfd100000000f8f6402000090909041ba010000004c89442448894c24544889542440e9befdffff9090909090909090909090909090908b04fd0c0000008b2cc50800000049bd0000002b787f0000498d6c2d00483b2d000000000f8412000000483b2d000000000f8445000000e93e03000090909090443b1cc50c0000000f8c0903000090909090443b1cc5100000000f8ff901000090909041ba010000004c89442448894c24544889542440e933fdffff9090909090909090909090909090908b2cc50c000000448b2ced0800000049be0000002b787f00004f8d2c2e4c3b2d000000000f84120000004c3b2d000000000f8445000000e94a02000090909090443b1ced0c0000000f8c1502000090909090443b1ced100000000f8f8e01000090909041ba010000004c89442448894c24544889542440e9a8fcffff4c89442448894c245448895424404889742438909090909090909090909090909090909090909090909090909090909090909090448b2ced0c000000428504ed000000008b2ced100000008b04c5100000008b3cfd100000008b1cdd10000000468b14d510000000468b0ccd1000000049c1e50349c1e10349c1e20348c1e30348c1e70348c1e00348c1e503498bf5418bd344895c24504c894c24304c8954242848895c242048897c2418488944241048896c24089048b8ffffffffffffffffe8000000000f1f84000000000085c00f84c000000090909041ba01000000488b742438e9c0fbffff4c89442448894c2454488954244090909049c7c39411000041bacd77ffff4c8b442448488b54244090909090909090458997840400004d899f90040000e8000000000f1f8400000000004c89442448894c2454488954244090909049c7c31414000041baed1bfeffebb44c89442448894c2454488954244090909049c7c31414000041baed13feffeb944c89442448894c2454488954244090909049c7c31414000041baed0bfeffe971ffffff488b6c2408488b442410488b7c2418488b5c24204c8b5424284c8b4c2430448b5c2450488b7424389090909090909041c78784040000ed07feff49c78790040000140f0000e8000000000f1f8400000000004c89442448894c2454488954244090909049c7c31414000041baed0ffeffe9fcfeffff4c89442448894c2454488954244090909049c7c39411000041bacd51ffffe9d9feffff4c89442448894c2454488954244090909049c7c31414000041baed2ffeffe9b6feffff4c89442448894c2454488954244090909049c7c31414000041baed17feffe993feffff4c89442448894c2454488954244090909049c7c39411000041bacd64ffffe970feffff4c89442448894c2454488954244090909049c7c31405000041bacd1cffffe94dfeffff4c89442448894c2454488954244090909049c7c31414000041baed23feffe92afeffff4c89442448894c2454488954244090909049c7c31414000041baed1ffeffe907feffff4c89442448894c2454488954244090909049c7c31414000041baed27feffe9e4fdffff4c89442448894c2454488954244090909049c7c39411000041bacd8affffe9c1fdffff4c89442448894c2454488954244090909049c7c39407000041baed33feffe99efdffff4c89442448894c2454488954244090909049c7c3140a000041bacdb7ffffe97bfdffff4c89442448894c2454488954244090909049c7c39411000041bacd9dffffe958fdffff4c89442448894c2454488954244090909049c7c31400000041baed37feffe935fdffff4c89442448894c2454488954244090909049c7c30000000041bae40effffe912fdffff4c89442448894c2454488954244090909049c7c30000000041bae5f7feffe9effcffff4c89442448894c2454488954244090909049c7c31414000041baed2bfeffe9ccfcffff9090909090909041c78784040000ed03feff49c7879004000094020000e8000000000f1f84000000000048896c2460e800000000e91cf7fffff4488d0d0ef8ffff49898f68040000e9cef6fffff441c78784040000f51dffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f525ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f513ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f503ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5abfeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5fcfeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5eafeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5dffeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5d4feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5c9feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5befeff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 73 24 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29c8cc50 slotKind: QWORD  <||@
  Comment 73 26 CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0]  <||@
  Comment 73 [rdx:0, rsi:0, r8:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 73 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 73 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 87 block B1 null  <||@
  Comment 87 28 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 87 30 NOP  <||@
  Comment 88 32 NOP  <||@
  Comment 89 34 NOP  <||@
  Comment 90 36 NOP  <||@
  Comment 91 38 NOP  <||@
  Comment 92 40 NOP  <||@
  Comment 93 42 r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0]  <||@
  Comment 93 [rdx:0, rsi:0, r8:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 93 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 97 44 r11|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD  <||@
  Comment 101 46 CMPBRANCH (x: rcx|DWORD, y: [r11|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B57 size: DWORD state [bci:0]  <||@
  Comment 101 [rdx:0, rsi:0, r8:0, r11:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 101 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 115 block B2 null  <||@
  Comment 115 48 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 115 50 NOP  <||@
  Comment 116 52 NOP  <||@
  Comment 117 54 NOP  <||@
  Comment 118 56 NOP  <||@
  Comment 119 58 NOP  <||@
  Comment 120 60 NOP  <||@
  Comment 121 62 r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 125 64 rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 125 [rdx:0, rsi:0, r8:0, r9:0, r11:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 125 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 133 66 CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B56 size: DWORD  <||@
  Comment 142 block B3 null  <||@
  Comment 142 68 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 142 70 NOP  <||@
  Comment 143 72 NOP  <||@
  Comment 144 74 NOP  <||@
  Comment 145 76 NOP  <||@
  Comment 146 78 CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B55 y: 0 size: BYTE inlinedY: null  <||@
  Comment 157 block B4 null  <||@
  Comment 157 80 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 157 82 NOP  <||@
  Comment 158 84 NOP  <||@
  Comment 159 86 NOP  <||@
  Comment 160 88 NOP  <||@
  Comment 161 90 NOP  <||@
  Comment 162 92 NOP  <||@
  Comment 163 94 NOP  <||@
  Comment 164 96 NOP  <||@
  Comment 165 98 NOP  <||@
  Comment 166 100 NOP  <||@
  Comment 167 102 NOP  <||@
  Comment 168 104 NOP  <||@
  Comment 169 106 NOP  <||@
  Comment 170 108 NOP  <||@
  Comment 171 110 NOP  <||@
  Comment 172 112 NOP  <||@
  Comment 173 114 r10|QWORD = MOV value: rcx|DWORD size: DWORD  <||@
  Comment 176 116 r10|DWORD = MOVSXB input: [r10|QWORD + r11|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 182 118 r11|DWORD = MOVZXB value: r10|DWORD size: DWORD  <||@
  Comment 186 120 rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 196 122 rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0  <||@
  Comment 200 124 AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B4 -> B5, B4 -> B6, B4 -> B12] defaultTarget: B4 -> B54 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 200 {DataSection[0x0]}  <||@
  Comment 213 {DataSection[0x8]}  <||@
  Comment 226 {DataSection[0x10]}  <||@
  Comment 244 block B5 null  <||@
  Comment 244 126 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 244 128 NOP  <||@
  Comment 245 130 NOP  <||@
  Comment 246 132 NOP  <||@
  Comment 247 134 NOP  <||@
  Comment 248 136 NOP  <||@
  Comment 249 138 NOP  <||@
  Comment 250 140 NOP  <||@
  Comment 251 142 r10|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 259 144 CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 262 146 r10|DWORD = SETCC condition: =  <||@
  Comment 270 148 JUMP ~outgoingValues: [] destination: B5 -> B8  <||@
  Comment 270 block B8 null  <||@
  Comment 270 184 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 270 186 NOP  <||@
  Comment 271 188 NOP  <||@
  Comment 272 190 NOP  <||@
  Comment 273 192 NOP  <||@
  Comment 274 194 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6409319995231739 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD  <||@
  Comment 283 block B9 null  <||@
  Comment 283 196 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 283 198 NOP  <||@
  Comment 284 200 NOP  <||@
  Comment 285 202 NOP  <||@
  Comment 286 204 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 291 206 JUMP ~outgoingValues: [] destination: B9 -> B48  <||@
  Comment 291 block B48 null  <||@
  Comment 291 1220 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 291 1222 NOP  <||@
  Comment 292 1224 NOP  <||@
  Comment 293 1226 NOP  <||@
  Comment 294 1228 NOP  <||@
  Comment 295 1230 NOP  <||@
  Comment 296 1232 NOP  <||@
  Comment 297 1234 NOP  <||@
  Comment 298 1236 NOP  <||@
  Comment 299 1238 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 308 POLL_RETURN_FAR  <||@
  Comment 322 block B10 null  <||@
  Comment 322 208 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 322 210 NOP  <||@
  Comment 323 212 NOP  <||@
  Comment 324 214 NOP  <||@
  Comment 325 216 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 330 218 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 334 220 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 339 222 JUMP ~outgoingValues: [] destination: B10 -> B45  <||@
  Comment 339 block B45 null  <||@
  Comment 339 1110 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 339 1112 NOP  <||@
  Comment 340 1114 NOP  <||@
  Comment 341 1116 NOP  <||@
  Comment 342 1118 NOP  <||@
  Comment 343 1120 NOP  <||@
  Comment 344 1122 NOP  <||@
  Comment 345 1124 NOP  <||@
  Comment 346 1126 NOP  <||@
  Comment 347 1128 NOP  <||@
  Comment 348 1130 NOP  <||@
  Comment 349 1132 NOP  <||@
  Comment 350 1134 NOP  <||@
  Comment 351 1136 NOP  <||@
  Comment 352 1138 NOP  <||@
  Comment 353 1140 NOP  <||@
  Comment 354 1142 NOP  <||@
  Comment 355 1144 NOP  <||@
  Comment 356 1146 NOP  <||@
  Comment 357 1148 NOP  <||@
  Comment 358 1150 NOP  <||@
  Comment 359 1152 NOP  <||@
  Comment 360 1154 NOP  <||@
  Comment 361 1156 NOP  <||@
  Comment 362 1158 NOP  <||@
  Comment 363 1160 rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 366 1162 rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 8] size: DWORD state [bci:24]  <||@
  Comment 366 [rdx:0, rsi:0, stack:64, stack:72]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24, duringCall: false, rethrow: false]
              |0             |1                  |2               |3                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]  |stack:28|DWORD  |stack:40|QWORD[.] 
     stack:   |r10|DWORD     |                   |                |                    <||@
  Comment 366 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 373 1164 rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 383 1166 rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0  <||@
  Comment 387 1168 rbx|QWORD = MOV input: [rcx|QWORD + 496] size: QWORD  <||@
  Comment 394 1170 rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD  <||@
  Comment 398 1172 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3  <||@
  Comment 402 1174 rcx|DWORD = INC value: stack:28|DWORD size: DWORD  <||@
  Comment 408 1176 rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 411 1178 rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 416 1180 r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 421 1182 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36]  <||@
  Comment 421 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 421 INLINE_INVOKE  <||@
  Comment 423 []at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 431 1184 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD  <||@
  Comment 439 block B47 null  <||@
  Comment 439 1208 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 439 1210 NOP  <||@
  Comment 440 1212 NOP  <||@
  Comment 441 1214 NOP  <||@
  Comment 442 1216 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 447 1218 JUMP ~outgoingValues: [] destination: B47 -> B48  <||@
  Comment 452 block B6 null  <||@
  Comment 452 150 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 452 152 NOP  <||@
  Comment 453 154 NOP  <||@
  Comment 454 156 NOP  <||@
  Comment 455 158 NOP  <||@
  Comment 456 160 NOP  <||@
  Comment 457 162 r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 465 164 CMPBRANCH (x: r11|DWORD, y: [r9|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 size: DWORD state [bci:0]  <||@
  Comment 465 [rdx:0, rsi:0, r8:0, r9:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 465 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 479 block B7 null  <||@
  Comment 479 166 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 479 168 NOP  <||@
  Comment 480 170 NOP  <||@
  Comment 481 172 NOP  <||@
  Comment 482 174 NOP  <||@
  Comment 483 176 NOP  <||@
  Comment 484 178 r10|QWORD = MOVZXB value: r10|DWORD size: DWORD  <||@
  Comment 488 180 r10|DWORD = MOVZXB input: [r10|QWORD + r9|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 494 182 JUMP ~outgoingValues: [] destination: B7 -> B8  <||@
  Comment 499 block B12 null  <||@
  Comment 499 250 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 499 252 NOP  <||@
  Comment 500 254 NOP  <||@
  Comment 501 256 NOP  <||@
  Comment 502 258 NOP  <||@
  Comment 503 260 NOP  <||@
  Comment 504 262 NOP  <||@
  Comment 505 264 NOP  <||@
  Comment 506 266 NOP  <||@
  Comment 507 268 NOP  <||@
  Comment 508 270 NOP  <||@
  Comment 509 272 NOP  <||@
  Comment 510 274 NOP  <||@
  Comment 511 276 NOP  <||@
  Comment 512 278 NOP  <||@
  Comment 513 280 NOP  <||@
  Comment 514 282 r10|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 522 284 rbx|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 522 [rdx:0, rsi:0, r8:0, r9:0, r10:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 522 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 530 286 rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 540 288 rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0  <||@
  Comment 544 290 AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B53 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 544 {DataSection[0x18]}  <||@
  Comment 557 {DataSection[0x10]}  <||@
  Comment 575 block B13 null  <||@
  Comment 575 292 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 575 294 NOP  <||@
  Comment 576 296 NOP  <||@
  Comment 577 298 NOP  <||@
  Comment 578 300 NOP  <||@
  Comment 579 302 CMPBRANCH (x: r11|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD  <||@
  Comment 593 block B15 null  <||@
  Comment 593 330 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 593 332 NOP  <||@
  Comment 594 334 NOP  <||@
  Comment 595 336 NOP  <||@
  Comment 596 338 NOP  <||@
  Comment 597 340 CMPBRANCH (x: r11|DWORD, y: [r10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD  <||@
  Comment 611 block B17 null  <||@
  Comment 611 368 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 611 370 NOP  <||@
  Comment 612 372 NOP  <||@
  Comment 613 374 NOP  <||@
  Comment 614 376 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 620 378 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 625 380 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 629 382 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 634 384 JUMP ~outgoingValues: [] destination: B17 -> B45  <||@
  Comment 639 block B18 null  <||@
  Comment 639 386 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 639 388 NOP  <||@
  Comment 640 390 NOP  <||@
  Comment 641 392 NOP  <||@
  Comment 642 394 NOP  <||@
  Comment 643 396 NOP  <||@
  Comment 644 398 NOP  <||@
  Comment 645 400 NOP  <||@
  Comment 646 402 NOP  <||@
  Comment 647 404 NOP  <||@
  Comment 648 406 NOP  <||@
  Comment 649 408 NOP  <||@
  Comment 650 410 NOP  <||@
  Comment 651 412 NOP  <||@
  Comment 652 414 NOP  <||@
  Comment 653 416 NOP  <||@
  Comment 654 418 rbx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 662 420 rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 662 [rdx:0, rbx:0, rsi:0, r8:0, r9:0, r10:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 662 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 669 422 rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 679 424 rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0  <||@
  Comment 683 426 AMD64HOTSPOTSTRATEGYSWITCH ~key: rdi|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B52 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 683 {DataSection[0x18]}  <||@
  Comment 696 {DataSection[0x10]}  <||@
  Comment 714 block B19 null  <||@
  Comment 714 428 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 714 430 NOP  <||@
  Comment 715 432 NOP  <||@
  Comment 716 434 NOP  <||@
  Comment 717 436 NOP  <||@
  Comment 718 438 CMPBRANCH (x: r11|DWORD, y: [rbx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD  <||@
  Comment 732 block B21 null  <||@
  Comment 732 466 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 732 468 NOP  <||@
  Comment 733 470 NOP  <||@
  Comment 734 472 NOP  <||@
  Comment 735 474 NOP  <||@
  Comment 736 476 CMPBRANCH (x: r11|DWORD, y: [rbx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD  <||@
  Comment 750 block B23 null  <||@
  Comment 750 504 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 750 506 NOP  <||@
  Comment 751 508 NOP  <||@
  Comment 752 510 NOP  <||@
  Comment 753 512 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 759 514 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 764 516 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 768 518 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 773 520 JUMP ~outgoingValues: [] destination: B23 -> B45  <||@
  Comment 778 block B24 null  <||@
  Comment 778 522 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 778 524 NOP  <||@
  Comment 779 526 NOP  <||@
  Comment 780 528 NOP  <||@
  Comment 781 530 NOP  <||@
  Comment 782 532 NOP  <||@
  Comment 783 534 NOP  <||@
  Comment 784 536 NOP  <||@
  Comment 785 538 NOP  <||@
  Comment 786 540 NOP  <||@
  Comment 787 542 NOP  <||@
  Comment 788 544 NOP  <||@
  Comment 789 546 NOP  <||@
  Comment 790 548 NOP  <||@
  Comment 791 550 NOP  <||@
  Comment 792 552 NOP  <||@
  Comment 793 554 rdi|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 800 556 rax|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 800 [rdx:0, rbx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 800 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 807 558 rbp|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 817 560 rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rbp|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0  <||@
  Comment 822 562 AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B51 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 822 {DataSection[0x18]}  <||@
  Comment 835 {DataSection[0x10]}  <||@
  Comment 853 block B25 null  <||@
  Comment 853 564 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 853 566 NOP  <||@
  Comment 854 568 NOP  <||@
  Comment 855 570 NOP  <||@
  Comment 856 572 NOP  <||@
  Comment 857 574 CMPBRANCH (x: r11|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD  <||@
  Comment 871 block B27 null  <||@
  Comment 871 602 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 871 604 NOP  <||@
  Comment 872 606 NOP  <||@
  Comment 873 608 NOP  <||@
  Comment 874 610 NOP  <||@
  Comment 875 612 CMPBRANCH (x: r11|DWORD, y: [rdi|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD  <||@
  Comment 889 block B29 null  <||@
  Comment 889 640 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 889 642 NOP  <||@
  Comment 890 644 NOP  <||@
  Comment 891 646 NOP  <||@
  Comment 892 648 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 898 650 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 903 652 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 907 654 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 912 656 JUMP ~outgoingValues: [] destination: B29 -> B45  <||@
  Comment 917 block B30 null  <||@
  Comment 917 658 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 917 660 NOP  <||@
  Comment 918 662 NOP  <||@
  Comment 919 664 NOP  <||@
  Comment 920 666 NOP  <||@
  Comment 921 668 NOP  <||@
  Comment 922 670 NOP  <||@
  Comment 923 672 NOP  <||@
  Comment 924 674 NOP  <||@
  Comment 925 676 NOP  <||@
  Comment 926 678 NOP  <||@
  Comment 927 680 NOP  <||@
  Comment 928 682 NOP  <||@
  Comment 929 684 NOP  <||@
  Comment 930 686 NOP  <||@
  Comment 931 688 NOP  <||@
  Comment 932 690 rax|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 939 692 rbp|DWORD = MOV input: [rax|DWORD[_] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 939 [rax:0, rdx:0, rbx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 939 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 946 694 r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 956 696 rbp|QWORD = UNCOMPRESSPOINTER (input: rbp|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0  <||@
  Comment 961 698 AMD64HOTSPOTSTRATEGYSWITCH ~key: rbp|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B30 -> B31, B30 -> B36] defaultTarget: B30 -> B50 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 961 {DataSection[0x18]}  <||@
  Comment 974 {DataSection[0x10]}  <||@
  Comment 992 block B31 null  <||@
  Comment 992 700 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 992 702 NOP  <||@
  Comment 993 704 NOP  <||@
  Comment 994 706 NOP  <||@
  Comment 995 708 NOP  <||@
  Comment 996 710 CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD  <||@
  Comment 1010 block B33 null  <||@
  Comment 1010 738 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1010 740 NOP  <||@
  Comment 1011 742 NOP  <||@
  Comment 1012 744 NOP  <||@
  Comment 1013 746 NOP  <||@
  Comment 1014 748 CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD  <||@
  Comment 1028 block B35 null  <||@
  Comment 1028 776 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1028 778 NOP  <||@
  Comment 1029 780 NOP  <||@
  Comment 1030 782 NOP  <||@
  Comment 1031 784 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1037 786 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1042 788 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1046 790 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1051 792 JUMP ~outgoingValues: [] destination: B35 -> B45  <||@
  Comment 1056 block B36 null  <||@
  Comment 1056 794 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1056 796 NOP  <||@
  Comment 1057 798 NOP  <||@
  Comment 1058 800 NOP  <||@
  Comment 1059 802 NOP  <||@
  Comment 1060 804 NOP  <||@
  Comment 1061 806 NOP  <||@
  Comment 1062 808 NOP  <||@
  Comment 1063 810 NOP  <||@
  Comment 1064 812 NOP  <||@
  Comment 1065 814 NOP  <||@
  Comment 1066 816 NOP  <||@
  Comment 1067 818 NOP  <||@
  Comment 1068 820 NOP  <||@
  Comment 1069 822 NOP  <||@
  Comment 1070 824 NOP  <||@
  Comment 1071 826 rbp|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1078 828 r13|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 1078 [rax:0, rdx:0, rbx:0, rbp:0, rsi:0, rdi:0, r8:0, r9:0, r10:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 1078 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1086 830 r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 1096 832 r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0  <||@
  Comment 1100 834 AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B36 -> B37, B36 -> B42] defaultTarget: B36 -> B49 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 1100 {DataSection[0x18]}  <||@
  Comment 1113 {DataSection[0x10]}  <||@
  Comment 1131 block B37 null  <||@
  Comment 1131 836 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1131 838 NOP  <||@
  Comment 1132 840 NOP  <||@
  Comment 1133 842 NOP  <||@
  Comment 1134 844 NOP  <||@
  Comment 1135 846 CMPBRANCH (x: r11|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD  <||@
  Comment 1149 block B39 null  <||@
  Comment 1149 874 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1149 876 NOP  <||@
  Comment 1150 878 NOP  <||@
  Comment 1151 880 NOP  <||@
  Comment 1152 882 NOP  <||@
  Comment 1153 884 CMPBRANCH (x: r11|DWORD, y: [rbp|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD  <||@
  Comment 1167 block B41 null  <||@
  Comment 1167 912 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1167 914 NOP  <||@
  Comment 1168 916 NOP  <||@
  Comment 1169 918 NOP  <||@
  Comment 1170 920 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1176 922 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1181 924 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1185 926 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1190 928 JUMP ~outgoingValues: [] destination: B41 -> B45  <||@
  Comment 1195 block B42 null  <||@
  Comment 1195 930 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1195 932 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1200 934 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1204 936 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1209 938 stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1214 940 NOP  <||@
  Comment 1215 942 NOP  <||@
  Comment 1216 944 NOP  <||@
  Comment 1217 946 NOP  <||@
  Comment 1218 948 NOP  <||@
  Comment 1219 950 NOP  <||@
  Comment 1220 952 NOP  <||@
  Comment 1221 954 NOP  <||@
  Comment 1222 956 NOP  <||@
  Comment 1223 958 NOP  <||@
  Comment 1224 960 NOP  <||@
  Comment 1225 962 NOP  <||@
  Comment 1226 964 NOP  <||@
  Comment 1227 966 NOP  <||@
  Comment 1228 968 NOP  <||@
  Comment 1229 970 NOP  <||@
  Comment 1230 972 NOP  <||@
  Comment 1231 974 NOP  <||@
  Comment 1232 976 NOP  <||@
  Comment 1233 978 NOP  <||@
  Comment 1234 980 NOP  <||@
  Comment 1235 982 NOP  <||@
  Comment 1236 984 NOP  <||@
  Comment 1237 986 NOP  <||@
  Comment 1238 988 NOP  <||@
  Comment 1239 990 NOP  <||@
  Comment 1240 992 NOP  <||@
  Comment 1241 994 NOP  <||@
  Comment 1242 996 NOP  <||@
  Comment 1243 998 NOP  <||@
  Comment 1244 1000 NOP  <||@
  Comment 1245 1002 NOP  <||@
  Comment 1246 1004 NOP  <||@
  Comment 1247 1006 r13|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1255 1008 NULLCHECK address: [r13|DWORD[_] * 8] state [bci:0]  <||@
  Comment 1255 [rax:0, rbx:0, rbp:0, rdi:0, r9:0, r10:0, r13:0, stack:56, stack:64, stack:72]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3                 
     locals:  |stack:56|QWORD[.]  |stack:48|QWORD[.]  |stack:28|DWORD  |stack:40|QWORD[.]   <||@
  Comment 1255 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1263 1010 rbp|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1270 1012 rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1277 1014 rdi|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1284 1016 rbx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1291 1018 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1299 1020 r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1307 1022 r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3  <||@
  Comment 1311 1024 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3  <||@
  Comment 1315 1026 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3  <||@
  Comment 1319 1028 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3  <||@
  Comment 1323 1030 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3  <||@
  Comment 1327 1032 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3  <||@
  Comment 1331 1034 rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3  <||@
  Comment 1335 1036 rsi|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1338 1038 rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1341 1040 stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1346 1042 stack:64|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1351 1044 stack:72|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1356 1046 stack:80|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1361 1048 stack:88|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1366 1050 stack:96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1371 1052 stack:104|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1376 1054 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19]  <||@
  Comment 1377 INVOKEINTERFACE  <||@
  Comment 1387 {HotSpotMethod<Pattern$CharPredicate.is(int)>}  <||@
  Comment 1392 [stack:8, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56, stack:64, stack:72]at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1                   |2              
     locals:  |-  |stack:104|QWORD[.]  |stack:32|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1                  |2              
     locals:  |-  |stack:96|QWORD[.]  |stack:32|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1                  |2              
     locals:  |-  |stack:88|QWORD[.]  |stack:32|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1                  |2              
     locals:  |-  |stack:80|QWORD[.]  |stack:32|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1                  |2              
     locals:  |-  |stack:72|QWORD[.]  |stack:32|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1                  |2              
     locals:  |-  |stack:64|QWORD[.]  |stack:32|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                 
     locals:  |stack:56|QWORD[.]  |stack:48|QWORD[.]  |stack:28|DWORD  |stack:40|QWORD[.]   <||@
  Comment 1400 1056 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD  <||@
  Comment 1408 block B44 null  <||@
  Comment 1408 1096 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1408 1098 NOP  <||@
  Comment 1409 1100 NOP  <||@
  Comment 1410 1102 NOP  <||@
  Comment 1411 1104 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1417 1106 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1422 1108 JUMP ~outgoingValues: [] destination: B44 -> B45  <||@
  Comment 1427 block B51 null  <||@
  Comment 1427 1292 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1427 1294 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1432 1296 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1436 1298 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1441 1300 NOP  <||@
  Comment 1442 1302 NOP  <||@
  Comment 1443 1304 NOP  <||@
  Comment 1444 1306 r11|QWORD = MOVE input: long[4500|0x1194]  <||@
  Comment 1451 1308 r10|DWORD = MOVE input: int[-34867|0xffffffffffff77cd]  <||@
  Comment 1457 1316 JUMP ~outgoingValues: [] destination: B51 -> B59  <||@
  Comment 1457 block B59 null  <||@
  Comment 1457 1500 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1457 1492 r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1462 1496 rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1467 1502 NOP  <||@
  Comment 1468 1504 NOP  <||@
  Comment 1469 1506 NOP  <||@
  Comment 1470 1508 NOP  <||@
  Comment 1471 1510 NOP  <||@
  Comment 1472 1512 NOP  <||@
  Comment 1473 1514 NOP  <||@
  Comment 1474 1516 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1481 1518 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 1488 1520 DEOPT info [bci:0]  <||@
  Comment 1488 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1493 [rdx:0, rsi:0, r8:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 1501 block B28 null  <||@
  Comment 1501 614 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1501 616 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1506 618 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1510 620 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1515 622 NOP  <||@
  Comment 1516 624 NOP  <||@
  Comment 1517 626 NOP  <||@
  Comment 1518 628 r11|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 1525 630 r10|DWORD = MOVE input: int[-123923|0xfffffffffffe1bed]  <||@
  Comment 1531 638 JUMP ~outgoingValues: [] destination: B28 -> B59  <||@
  Comment 1533 block B34 null  <||@
  Comment 1533 750 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1533 752 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1538 754 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1542 756 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1547 758 NOP  <||@
  Comment 1548 760 NOP  <||@
  Comment 1549 762 NOP  <||@
  Comment 1550 764 r11|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 1557 766 r10|DWORD = MOVE input: int[-125971|0xfffffffffffe13ed]  <||@
  Comment 1563 774 JUMP ~outgoingValues: [] destination: B34 -> B59  <||@
  Comment 1565 block B40 null  <||@
  Comment 1565 886 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1565 888 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1570 890 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1574 892 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1579 894 NOP  <||@
  Comment 1580 896 NOP  <||@
  Comment 1581 898 NOP  <||@
  Comment 1582 900 r11|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 1589 902 r10|DWORD = MOVE input: int[-128019|0xfffffffffffe0bed]  <||@
  Comment 1595 910 JUMP ~outgoingValues: [] destination: B40 -> B59  <||@
  Comment 1600 block B43 null  <||@
  Comment 1600 1058 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1600 1060 rbp|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1605 1062 rax|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1610 1064 rdi|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1615 1066 rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1620 1068 r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1625 1070 r9|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1630 1072 r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1635 1074 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1640 1076 NOP  <||@
  Comment 1641 1078 NOP  <||@
  Comment 1642 1080 NOP  <||@
  Comment 1643 1082 NOP  <||@
  Comment 1644 1084 NOP  <||@
  Comment 1645 1086 NOP  <||@
  Comment 1646 1088 NOP  <||@
  Comment 1647 1090 MOV x: [r15|QWORD + 1156] y: -129043 size: DWORD  <||@
  Comment 1658 1092 MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD  <||@
  Comment 1669 1094 DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19]  <||@
  Comment 1669 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1674 [rax:0, rbx:0, rbp:0, rsi:0, rdi:0, r9:0, r10:0, stack:64, stack:72]at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7, duringCall: false, rethrow: false]
              |0           |1             |2         
     locals:  |-           |rbp|QWORD[.]  |r11|DWORD 
     stack:   |int[0|0x0]  |              |          
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1             |2         
     locals:  |-  |rax|QWORD[.]  |r11|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1             |2         
     locals:  |-  |rdi|QWORD[.]  |r11|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1             |2         
     locals:  |-  |rbx|QWORD[.]  |r11|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1             |2         
     locals:  |-  |r10|QWORD[.]  |r11|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1            |2         
     locals:  |-  |r9|QWORD[.]  |r11|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19, duringCall: true, rethrow: false]
              |0             |1                  |2               |3                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]  |stack:28|DWORD  |stack:40|QWORD[.]   <||@
  Comment 1682 block B38 null  <||@
  Comment 1682 848 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1682 850 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1687 852 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1691 854 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1696 856 NOP  <||@
  Comment 1697 858 NOP  <||@
  Comment 1698 860 NOP  <||@
  Comment 1699 862 r11|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 1706 864 r10|DWORD = MOVE input: int[-126995|0xfffffffffffe0fed]  <||@
  Comment 1712 872 JUMP ~outgoingValues: [] destination: B38 -> B59  <||@
  Comment 1717 block B49 null  <||@
  Comment 1717 1240 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1717 1242 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1722 1244 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1726 1246 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1731 1248 NOP  <||@
  Comment 1732 1250 NOP  <||@
  Comment 1733 1252 NOP  <||@
  Comment 1734 1254 r11|QWORD = MOVE input: long[4500|0x1194]  <||@
  Comment 1741 1256 r10|DWORD = MOVE input: int[-44595|0xffffffffffff51cd]  <||@
  Comment 1747 1264 JUMP ~outgoingValues: [] destination: B49 -> B59  <||@
  Comment 1752 block B14 null  <||@
  Comment 1752 304 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1752 306 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1757 308 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1761 310 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1766 312 NOP  <||@
  Comment 1767 314 NOP  <||@
  Comment 1768 316 NOP  <||@
  Comment 1769 318 r11|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 1776 320 r10|DWORD = MOVE input: int[-118803|0xfffffffffffe2fed]  <||@
  Comment 1782 328 JUMP ~outgoingValues: [] destination: B14 -> B59  <||@
  Comment 1787 block B32 null  <||@
  Comment 1787 712 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1787 714 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1792 716 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1796 718 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1801 720 NOP  <||@
  Comment 1802 722 NOP  <||@
  Comment 1803 724 NOP  <||@
  Comment 1804 726 r11|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 1811 728 r10|DWORD = MOVE input: int[-124947|0xfffffffffffe17ed]  <||@
  Comment 1817 736 JUMP ~outgoingValues: [] destination: B32 -> B59  <||@
  Comment 1822 block B50 null  <||@
  Comment 1822 1266 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1822 1268 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1827 1270 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1831 1272 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1836 1274 NOP  <||@
  Comment 1837 1276 NOP  <||@
  Comment 1838 1278 NOP  <||@
  Comment 1839 1280 r11|QWORD = MOVE input: long[4500|0x1194]  <||@
  Comment 1846 1282 r10|DWORD = MOVE input: int[-39731|0xffffffffffff64cd]  <||@
  Comment 1852 1290 JUMP ~outgoingValues: [] destination: B50 -> B59  <||@
  Comment 1857 block B58 null  <||@
  Comment 1857 1474 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1857 1476 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1862 1478 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1866 1480 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1871 1482 NOP  <||@
  Comment 1872 1484 NOP  <||@
  Comment 1873 1486 NOP  <||@
  Comment 1874 1488 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 1881 1490 r10|DWORD = MOVE input: int[-58163|0xffffffffffff1ccd]  <||@
  Comment 1887 1498 JUMP ~outgoingValues: [] destination: B58 -> B59  <||@
  Comment 1892 block B22 null  <||@
  Comment 1892 478 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1892 480 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1897 482 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1901 484 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1906 486 NOP  <||@
  Comment 1907 488 NOP  <||@
  Comment 1908 490 NOP  <||@
  Comment 1909 492 r11|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 1916 494 r10|DWORD = MOVE input: int[-121875|0xfffffffffffe23ed]  <||@
  Comment 1922 502 JUMP ~outgoingValues: [] destination: B22 -> B59  <||@
  Comment 1927 block B26 null  <||@
  Comment 1927 576 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1927 578 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1932 580 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1936 582 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1941 584 NOP  <||@
  Comment 1942 586 NOP  <||@
  Comment 1943 588 NOP  <||@
  Comment 1944 590 r11|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 1951 592 r10|DWORD = MOVE input: int[-122899|0xfffffffffffe1fed]  <||@
  Comment 1957 600 JUMP ~outgoingValues: [] destination: B26 -> B59  <||@
  Comment 1962 block B20 null  <||@
  Comment 1962 440 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1962 442 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1967 444 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1971 446 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1976 448 NOP  <||@
  Comment 1977 450 NOP  <||@
  Comment 1978 452 NOP  <||@
  Comment 1979 454 r11|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 1986 456 r10|DWORD = MOVE input: int[-120851|0xfffffffffffe27ed]  <||@
  Comment 1992 464 JUMP ~outgoingValues: [] destination: B20 -> B59  <||@
  Comment 1997 block B52 null  <||@
  Comment 1997 1318 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1997 1320 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2002 1322 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 2006 1324 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2011 1326 NOP  <||@
  Comment 2012 1328 NOP  <||@
  Comment 2013 1330 NOP  <||@
  Comment 2014 1332 r11|QWORD = MOVE input: long[4500|0x1194]  <||@
  Comment 2021 1334 r10|DWORD = MOVE input: int[-30003|0xffffffffffff8acd]  <||@
  Comment 2027 1342 JUMP ~outgoingValues: [] destination: B52 -> B59  <||@
  Comment 2032 block B55 null  <||@
  Comment 2032 1396 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2032 1398 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2037 1400 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 2041 1402 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2046 1404 NOP  <||@
  Comment 2047 1406 NOP  <||@
  Comment 2048 1408 NOP  <||@
  Comment 2049 1410 r11|QWORD = MOVE input: long[1940|0x794]  <||@
  Comment 2056 1412 r10|DWORD = MOVE input: int[-117779|0xfffffffffffe33ed]  <||@
  Comment 2062 1420 JUMP ~outgoingValues: [] destination: B55 -> B59  <||@
  Comment 2067 block B54 null  <||@
  Comment 2067 1370 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2067 1372 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2072 1374 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 2076 1376 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2081 1378 NOP  <||@
  Comment 2082 1380 NOP  <||@
  Comment 2083 1382 NOP  <||@
  Comment 2084 1384 r11|QWORD = MOVE input: long[2580|0xa14]  <||@
  Comment 2091 1386 r10|DWORD = MOVE input: int[-18483|0xffffffffffffb7cd]  <||@
  Comment 2097 1394 JUMP ~outgoingValues: [] destination: B54 -> B59  <||@
  Comment 2102 block B53 null  <||@
  Comment 2102 1344 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2102 1346 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2107 1348 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 2111 1350 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2116 1352 NOP  <||@
  Comment 2117 1354 NOP  <||@
  Comment 2118 1356 NOP  <||@
  Comment 2119 1358 r11|QWORD = MOVE input: long[4500|0x1194]  <||@
  Comment 2126 1360 r10|DWORD = MOVE input: int[-25139|0xffffffffffff9dcd]  <||@
  Comment 2132 1368 JUMP ~outgoingValues: [] destination: B53 -> B59  <||@
  Comment 2137 block B56 null  <||@
  Comment 2137 1422 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2137 1424 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2142 1426 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 2146 1428 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2151 1430 NOP  <||@
  Comment 2152 1432 NOP  <||@
  Comment 2153 1434 NOP  <||@
  Comment 2154 1436 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 2161 1438 r10|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed]  <||@
  Comment 2167 1446 JUMP ~outgoingValues: [] destination: B56 -> B59  <||@
  Comment 2172 block B57 null  <||@
  Comment 2172 1448 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2172 1450 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2177 1452 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 2181 1454 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2186 1456 NOP  <||@
  Comment 2187 1458 NOP  <||@
  Comment 2188 1460 NOP  <||@
  Comment 2189 1462 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2196 1464 r10|DWORD = MOVE input: int[-61724|0xffffffffffff0ee4]  <||@
  Comment 2202 1472 JUMP ~outgoingValues: [] destination: B57 -> B59  <||@
  Comment 2207 block B11 null  <||@
  Comment 2207 224 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2207 226 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2212 228 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 2216 230 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2221 232 NOP  <||@
  Comment 2222 234 NOP  <||@
  Comment 2223 236 NOP  <||@
  Comment 2224 238 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2231 240 r10|DWORD = MOVE input: int[-67611|0xfffffffffffef7e5]  <||@
  Comment 2237 248 JUMP ~outgoingValues: [] destination: B11 -> B59  <||@
  Comment 2242 block B16 null  <||@
  Comment 2242 342 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2242 344 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2247 346 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 2251 348 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2256 350 NOP  <||@
  Comment 2257 352 NOP  <||@
  Comment 2258 354 NOP  <||@
  Comment 2259 356 r11|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 2266 358 r10|DWORD = MOVE input: int[-119827|0xfffffffffffe2bed]  <||@
  Comment 2272 366 JUMP ~outgoingValues: [] destination: B16 -> B59  <||@
  Comment 2277 block B46 null  <||@
  Comment 2277 1186 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2277 1188 NOP  <||@
  Comment 2278 1190 NOP  <||@
  Comment 2279 1192 NOP  <||@
  Comment 2280 1194 NOP  <||@
  Comment 2281 1196 NOP  <||@
  Comment 2282 1198 NOP  <||@
  Comment 2283 1200 NOP  <||@
  Comment 2284 1202 MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD  <||@
  Comment 2295 1204 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 2306 1206 DEOPT info [bci:39]  <||@
  Comment 2306 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2311 []at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39, duringCall: false, rethrow: false]
              |0           |1  |2  |3 
     locals:  |-           |-  |-  |- 
     stack:   |int[0|0x0]  |   |   |    <||@
  Comment 2324 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 2349 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 2377 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2382 [rdx:0, rsi:0, r8:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 2412 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2417 [rdx:0, rsi:0, r8:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 2447 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2452 [rdx:0, rsi:0, r8:0, r11:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 2482 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2487 [rdx:0, rsi:0, r8:0, r9:0, r11:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 2517 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2522 [rdx:0, rsi:0, stack:64, stack:72]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24, duringCall: false, rethrow: false]
              |0             |1                  |2               |3                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]  |stack:28|DWORD  |stack:40|QWORD[.] 
     stack:   |r10|DWORD     |                   |                |                    <||@
  Comment 2552 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2557 [rdx:0, rsi:0, r8:0, r9:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 2587 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2592 [rdx:0, rsi:0, r8:0, r9:0, r10:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 2622 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2627 [rdx:0, rbx:0, rsi:0, r8:0, r9:0, r10:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 2657 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2662 [rdx:0, rbx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 2692 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2697 [rax:0, rdx:0, rbx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 2727 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2732 [rax:0, rdx:0, rbx:0, rbp:0, rsi:0, rdi:0, r8:0, r9:0, r10:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 2740 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2740 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2746 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 2746 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-4127[java.util.regex.Pattern$BmpCharProperty.match(Matcher, int, CharSequence)]"
  method "HotSpotCompilation-4127[java.util.regex.Pattern$BmpCharProperty.match(Matcher, int, CharSequence)]"
  date 1724269729986
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789ad82720 448b560849bc0000002b787f00004d03d44d33e4493bc20f854329a0fe66669089842400c0feff4883ec689041817f20030000000f85d50800009090909090909090909048896c246041817808d8e800000f85ea060000909090909090448b5210458b5814423b0cdd0c0000000f8309080000909090909090448b4e10428b1ccd08000000443bd10f8ecb0700009090909041807810000f855307000090909090909090909090909090909090448bd1470fbe54da10450fb6da48bf0000002b787f0000488d1c1f483b1d11ffffff0f841f000000483b1d0cffffff0f84e2000000483b1d07ffffff0f8404010000e91f07000090909090909090468b14cd0c000000453bd3410f94c2450fb6d2909090904585d20f8527000000909090b8000000009090909090909090488b6c24604883c468493ba7500400000f87de070000c39090904c89442448894c245448895424409090909090909090909090909090909090909090909090908b560c8b0cd50800000048be0000002b787f0000488d0c0e488b99f0010000488b434048c1e2038b4c2454ffc1488bf2488b5424404c8b442448ffd00f1f84000000000085c00f842e070000909090b801000000e95fffffff9090909090468b0ccd0c000000463b1ccd0c0000000f83c00600009090909090450fb6d2470fb654ca10e91bffffff909090909090909090909090909090468b14cd0c000000428b1cd50800000048bf0000002b787f0000488d1c1f483b1dd1fdffff0f8412000000483b1dbcfdffff0f8445000000e9f705000090909090463b1cd50c0000000f8c8704000090909090463b1cd5100000000f8f5f06000090909041ba010000004c89442448894c24544889542440e9d4feffff909090909090909090909090909090428b1cd50c0000008b3cdd0800000048b80000002b787f0000488d3c38483b3d46fdffff0f8412000000483b3d31fdffff0f8445000000e90305000090909090443b1cdd0c0000000f8cce04000090909090443b1cdd100000000f8f7604000090909041ba010000004c89442448894c24544889542440e949feffff9090909090909090909090909090908b3cdd0c0000008b04fd0800000048bd0000002b787f0000488d440500483b05bbfcffff0f8412000000483b05a6fcffff0f8445000000e93e02000090909090443b1cfd0c0000000f8c2004000090909090443b1cfd100000000f8f6402000090909041ba010000004c89442448894c24544889542440e9befdffff9090909090909090909090909090908b04fd0c0000008b2cc50800000049bd0000002b787f0000498d6c2d00483b2d30fcffff0f8412000000483b2d1bfcffff0f8445000000e93e03000090909090443b1cc50c0000000f8c0903000090909090443b1cc5100000000f8ff901000090909041ba010000004c89442448894c24544889542440e933fdffff9090909090909090909090909090908b2cc50c000000448b2ced0800000049be0000002b787f00004f8d2c2e4c3b2da5fbffff0f84120000004c3b2d90fbffff0f8445000000e94a02000090909090443b1ced0c0000000f8c1502000090909090443b1ced100000000f8f8e01000090909041ba010000004c89442448894c24544889542440e9a8fcffff4c89442448894c245448895424404889742438909090909090909090909090909090909090909090909090909090909090909090448b2ced0c000000428504ed000000008b2ced100000008b04c5100000008b3cfd100000008b1cdd10000000468b14d510000000468b0ccd1000000049c1e50349c1e10349c1e20348c1e30348c1e70348c1e00348c1e503498bf5418bd344895c24504c894c24304c8954242848895c242048897c2418488944241048896c24089048b8ffffffffffffffffe8f029a0fe0f1f84008007000d85c00f84c000000090909041ba01000000488b742438e9c0fbffff4c89442448894c2454488954244090909049c7c39411000041bacd77ffff4c8b442448488b54244090909090909090458997840400004d899f90040000e88584a0fe0f1f8400000000004c89442448894c2454488954244090909049c7c31414000041baed1bfeffebb44c89442448894c2454488954244090909049c7c31414000041baed13feffeb944c89442448894c2454488954244090909049c7c31414000041baed0bfeffe971ffffff488b6c2408488b442410488b7c2418488b5c24204c8b5424284c8b4c2430448b5c2450488b7424389090909090909041c78784040000ed07feff49c78790040000140f0000e8d083a0fe0f1f8400000000004c89442448894c2454488954244090909049c7c31414000041baed0ffeffe9fcfeffff4c89442448894c2454488954244090909049c7c39411000041bacd51ffffe9d9feffff4c89442448894c2454488954244090909049c7c31414000041baed2ffeffe9b6feffff4c89442448894c2454488954244090909049c7c31414000041baed17feffe993feffff4c89442448894c2454488954244090909049c7c39411000041bacd64ffffe970feffff4c89442448894c2454488954244090909049c7c31405000041bacd1cffffe94dfeffff4c89442448894c2454488954244090909049c7c31414000041baed23feffe92afeffff4c89442448894c2454488954244090909049c7c31414000041baed1ffeffe907feffff4c89442448894c2454488954244090909049c7c31414000041baed27feffe9e4fdffff4c89442448894c2454488954244090909049c7c39411000041bacd8affffe9c1fdffff4c89442448894c2454488954244090909049c7c39407000041baed33feffe99efdffff4c89442448894c2454488954244090909049c7c3140a000041bacdb7ffffe97bfdffff4c89442448894c2454488954244090909049c7c39411000041bacd9dffffe958fdffff4c89442448894c2454488954244090909049c7c31400000041baed37feffe935fdffff4c89442448894c2454488954244090909049c7c30000000041bae40effffe912fdffff4c89442448894c2454488954244090909049c7c30000000041bae5f7feffe9effcffff4c89442448894c2454488954244090909049c7c31414000041baed2bfeffe9ccfcffff9090909090909041c78784040000ed03feff49c7879004000094020000e85381a0fe0f1f84000000000048896c2460e8e7819efee91cf7fffff4488d0d0ef8ffff49898f68040000e9ae8fa0fef441c78784040000f51dffff49c7879004000000000000e80c81a0fe0f1f84000000000041c78784040000f525ffff49c7879004000000000000e8e980a0fe0f1f84000000000041c78784040000f513ffff49c7879004000000000000e8c680a0fe0f1f84000000000041c78784040000f503ffff49c7879004000000000000e8a380a0fe0f1f84000000000041c78784040000f5abfeff49c7879004000000000000e88080a0fe0f1f84000000000041c78784040000f5fcfeff49c7879004000000000000e85d80a0fe0f1f84000000000041c78784040000f5eafeff49c7879004000000000000e83a80a0fe0f1f84000000000041c78784040000f5dffeff49c7879004000000000000e81780a0fe0f1f84000000000041c78784040000f5d4feff49c7879004000000000000e8f47fa0fe0f1f84000000000041c78784040000f5c9feff49c7879004000000000000e8d17fa0fe0f1f84000000000041c78784040000f5befeff49c7879004000000000000e8ae7fa0fe0f1f840000000000e82721b4fef4e8417da0fef4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 73 24 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29c8cc50 slotKind: QWORD  <||@
  Comment 73 26 CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B58 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0]  <||@
  Comment 73 [rdx:0, rsi:0, r8:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 73 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 73 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 87 block B1 null  <||@
  Comment 87 28 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 87 30 NOP  <||@
  Comment 88 32 NOP  <||@
  Comment 89 34 NOP  <||@
  Comment 90 36 NOP  <||@
  Comment 91 38 NOP  <||@
  Comment 92 40 NOP  <||@
  Comment 93 42 r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0]  <||@
  Comment 93 [rdx:0, rsi:0, r8:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 93 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 97 44 r11|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD  <||@
  Comment 101 46 CMPBRANCH (x: rcx|DWORD, y: [r11|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B57 size: DWORD state [bci:0]  <||@
  Comment 101 [rdx:0, rsi:0, r8:0, r11:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 101 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 115 block B2 null  <||@
  Comment 115 48 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 115 50 NOP  <||@
  Comment 116 52 NOP  <||@
  Comment 117 54 NOP  <||@
  Comment 118 56 NOP  <||@
  Comment 119 58 NOP  <||@
  Comment 120 60 NOP  <||@
  Comment 121 62 r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 125 64 rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 125 [rdx:0, rsi:0, r8:0, r9:0, r11:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 125 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 133 66 CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B56 size: DWORD  <||@
  Comment 142 block B3 null  <||@
  Comment 142 68 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 142 70 NOP  <||@
  Comment 143 72 NOP  <||@
  Comment 144 74 NOP  <||@
  Comment 145 76 NOP  <||@
  Comment 146 78 CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B55 y: 0 size: BYTE inlinedY: null  <||@
  Comment 157 block B4 null  <||@
  Comment 157 80 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 157 82 NOP  <||@
  Comment 158 84 NOP  <||@
  Comment 159 86 NOP  <||@
  Comment 160 88 NOP  <||@
  Comment 161 90 NOP  <||@
  Comment 162 92 NOP  <||@
  Comment 163 94 NOP  <||@
  Comment 164 96 NOP  <||@
  Comment 165 98 NOP  <||@
  Comment 166 100 NOP  <||@
  Comment 167 102 NOP  <||@
  Comment 168 104 NOP  <||@
  Comment 169 106 NOP  <||@
  Comment 170 108 NOP  <||@
  Comment 171 110 NOP  <||@
  Comment 172 112 NOP  <||@
  Comment 173 114 r10|QWORD = MOV value: rcx|DWORD size: DWORD  <||@
  Comment 176 116 r10|DWORD = MOVSXB input: [r10|QWORD + r11|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 182 118 r11|DWORD = MOVZXB value: r10|DWORD size: DWORD  <||@
  Comment 186 120 rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 196 122 rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0  <||@
  Comment 200 124 AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B4 -> B5, B4 -> B6, B4 -> B12] defaultTarget: B4 -> B54 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 200 {DataSection[0x0]}  <||@
  Comment 213 {DataSection[0x8]}  <||@
  Comment 226 {DataSection[0x10]}  <||@
  Comment 244 block B5 null  <||@
  Comment 244 126 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 244 128 NOP  <||@
  Comment 245 130 NOP  <||@
  Comment 246 132 NOP  <||@
  Comment 247 134 NOP  <||@
  Comment 248 136 NOP  <||@
  Comment 249 138 NOP  <||@
  Comment 250 140 NOP  <||@
  Comment 251 142 r10|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 259 144 CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 262 146 r10|DWORD = SETCC condition: =  <||@
  Comment 270 148 JUMP ~outgoingValues: [] destination: B5 -> B8  <||@
  Comment 270 block B8 null  <||@
  Comment 270 184 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 270 186 NOP  <||@
  Comment 271 188 NOP  <||@
  Comment 272 190 NOP  <||@
  Comment 273 192 NOP  <||@
  Comment 274 194 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6409319995231739 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD  <||@
  Comment 283 block B9 null  <||@
  Comment 283 196 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 283 198 NOP  <||@
  Comment 284 200 NOP  <||@
  Comment 285 202 NOP  <||@
  Comment 286 204 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 291 206 JUMP ~outgoingValues: [] destination: B9 -> B48  <||@
  Comment 291 block B48 null  <||@
  Comment 291 1220 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 291 1222 NOP  <||@
  Comment 292 1224 NOP  <||@
  Comment 293 1226 NOP  <||@
  Comment 294 1228 NOP  <||@
  Comment 295 1230 NOP  <||@
  Comment 296 1232 NOP  <||@
  Comment 297 1234 NOP  <||@
  Comment 298 1236 NOP  <||@
  Comment 299 1238 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 308 POLL_RETURN_FAR  <||@
  Comment 322 block B10 null  <||@
  Comment 322 208 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 322 210 NOP  <||@
  Comment 323 212 NOP  <||@
  Comment 324 214 NOP  <||@
  Comment 325 216 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 330 218 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 334 220 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 339 222 JUMP ~outgoingValues: [] destination: B10 -> B45  <||@
  Comment 339 block B45 null  <||@
  Comment 339 1110 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 339 1112 NOP  <||@
  Comment 340 1114 NOP  <||@
  Comment 341 1116 NOP  <||@
  Comment 342 1118 NOP  <||@
  Comment 343 1120 NOP  <||@
  Comment 344 1122 NOP  <||@
  Comment 345 1124 NOP  <||@
  Comment 346 1126 NOP  <||@
  Comment 347 1128 NOP  <||@
  Comment 348 1130 NOP  <||@
  Comment 349 1132 NOP  <||@
  Comment 350 1134 NOP  <||@
  Comment 351 1136 NOP  <||@
  Comment 352 1138 NOP  <||@
  Comment 353 1140 NOP  <||@
  Comment 354 1142 NOP  <||@
  Comment 355 1144 NOP  <||@
  Comment 356 1146 NOP  <||@
  Comment 357 1148 NOP  <||@
  Comment 358 1150 NOP  <||@
  Comment 359 1152 NOP  <||@
  Comment 360 1154 NOP  <||@
  Comment 361 1156 NOP  <||@
  Comment 362 1158 NOP  <||@
  Comment 363 1160 rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 366 1162 rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 8] size: DWORD state [bci:24]  <||@
  Comment 366 [rdx:0, rsi:0, stack:64, stack:72]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24, duringCall: false, rethrow: false]
              |0             |1                  |2               |3                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]  |stack:28|DWORD  |stack:40|QWORD[.] 
     stack:   |r10|DWORD     |                   |                |                    <||@
  Comment 366 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 373 1164 rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 383 1166 rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0  <||@
  Comment 387 1168 rbx|QWORD = MOV input: [rcx|QWORD + 496] size: QWORD  <||@
  Comment 394 1170 rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD  <||@
  Comment 398 1172 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3  <||@
  Comment 402 1174 rcx|DWORD = INC value: stack:28|DWORD size: DWORD  <||@
  Comment 408 1176 rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 411 1178 rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 416 1180 r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 421 1182 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36]  <||@
  Comment 421 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 421 INLINE_INVOKE  <||@
  Comment 423 []at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 431 1184 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD  <||@
  Comment 439 block B47 null  <||@
  Comment 439 1208 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 439 1210 NOP  <||@
  Comment 440 1212 NOP  <||@
  Comment 441 1214 NOP  <||@
  Comment 442 1216 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 447 1218 JUMP ~outgoingValues: [] destination: B47 -> B48  <||@
  Comment 452 block B6 null  <||@
  Comment 452 150 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 452 152 NOP  <||@
  Comment 453 154 NOP  <||@
  Comment 454 156 NOP  <||@
  Comment 455 158 NOP  <||@
  Comment 456 160 NOP  <||@
  Comment 457 162 r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 465 164 CMPBRANCH (x: r11|DWORD, y: [r9|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 size: DWORD state [bci:0]  <||@
  Comment 465 [rdx:0, rsi:0, r8:0, r9:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 465 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 479 block B7 null  <||@
  Comment 479 166 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 479 168 NOP  <||@
  Comment 480 170 NOP  <||@
  Comment 481 172 NOP  <||@
  Comment 482 174 NOP  <||@
  Comment 483 176 NOP  <||@
  Comment 484 178 r10|QWORD = MOVZXB value: r10|DWORD size: DWORD  <||@
  Comment 488 180 r10|DWORD = MOVZXB input: [r10|QWORD + r9|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 494 182 JUMP ~outgoingValues: [] destination: B7 -> B8  <||@
  Comment 499 block B12 null  <||@
  Comment 499 250 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 499 252 NOP  <||@
  Comment 500 254 NOP  <||@
  Comment 501 256 NOP  <||@
  Comment 502 258 NOP  <||@
  Comment 503 260 NOP  <||@
  Comment 504 262 NOP  <||@
  Comment 505 264 NOP  <||@
  Comment 506 266 NOP  <||@
  Comment 507 268 NOP  <||@
  Comment 508 270 NOP  <||@
  Comment 509 272 NOP  <||@
  Comment 510 274 NOP  <||@
  Comment 511 276 NOP  <||@
  Comment 512 278 NOP  <||@
  Comment 513 280 NOP  <||@
  Comment 514 282 r10|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 522 284 rbx|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 522 [rdx:0, rsi:0, r8:0, r9:0, r10:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 522 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 530 286 rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 540 288 rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0  <||@
  Comment 544 290 AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B12 -> B13, B12 -> B18] defaultTarget: B12 -> B53 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 544 {DataSection[0x18]}  <||@
  Comment 557 {DataSection[0x10]}  <||@
  Comment 575 block B13 null  <||@
  Comment 575 292 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 575 294 NOP  <||@
  Comment 576 296 NOP  <||@
  Comment 577 298 NOP  <||@
  Comment 578 300 NOP  <||@
  Comment 579 302 CMPBRANCH (x: r11|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD  <||@
  Comment 593 block B15 null  <||@
  Comment 593 330 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 593 332 NOP  <||@
  Comment 594 334 NOP  <||@
  Comment 595 336 NOP  <||@
  Comment 596 338 NOP  <||@
  Comment 597 340 CMPBRANCH (x: r11|DWORD, y: [r10|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD  <||@
  Comment 611 block B17 null  <||@
  Comment 611 368 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 611 370 NOP  <||@
  Comment 612 372 NOP  <||@
  Comment 613 374 NOP  <||@
  Comment 614 376 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 620 378 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 625 380 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 629 382 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 634 384 JUMP ~outgoingValues: [] destination: B17 -> B45  <||@
  Comment 639 block B18 null  <||@
  Comment 639 386 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 639 388 NOP  <||@
  Comment 640 390 NOP  <||@
  Comment 641 392 NOP  <||@
  Comment 642 394 NOP  <||@
  Comment 643 396 NOP  <||@
  Comment 644 398 NOP  <||@
  Comment 645 400 NOP  <||@
  Comment 646 402 NOP  <||@
  Comment 647 404 NOP  <||@
  Comment 648 406 NOP  <||@
  Comment 649 408 NOP  <||@
  Comment 650 410 NOP  <||@
  Comment 651 412 NOP  <||@
  Comment 652 414 NOP  <||@
  Comment 653 416 NOP  <||@
  Comment 654 418 rbx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 662 420 rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 662 [rdx:0, rbx:0, rsi:0, r8:0, r9:0, r10:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 662 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 669 422 rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 679 424 rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0  <||@
  Comment 683 426 AMD64HOTSPOTSTRATEGYSWITCH ~key: rdi|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B18 -> B19, B18 -> B24] defaultTarget: B18 -> B52 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 683 {DataSection[0x18]}  <||@
  Comment 696 {DataSection[0x10]}  <||@
  Comment 714 block B19 null  <||@
  Comment 714 428 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 714 430 NOP  <||@
  Comment 715 432 NOP  <||@
  Comment 716 434 NOP  <||@
  Comment 717 436 NOP  <||@
  Comment 718 438 CMPBRANCH (x: r11|DWORD, y: [rbx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD  <||@
  Comment 732 block B21 null  <||@
  Comment 732 466 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 732 468 NOP  <||@
  Comment 733 470 NOP  <||@
  Comment 734 472 NOP  <||@
  Comment 735 474 NOP  <||@
  Comment 736 476 CMPBRANCH (x: r11|DWORD, y: [rbx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD  <||@
  Comment 750 block B23 null  <||@
  Comment 750 504 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 750 506 NOP  <||@
  Comment 751 508 NOP  <||@
  Comment 752 510 NOP  <||@
  Comment 753 512 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 759 514 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 764 516 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 768 518 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 773 520 JUMP ~outgoingValues: [] destination: B23 -> B45  <||@
  Comment 778 block B24 null  <||@
  Comment 778 522 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 778 524 NOP  <||@
  Comment 779 526 NOP  <||@
  Comment 780 528 NOP  <||@
  Comment 781 530 NOP  <||@
  Comment 782 532 NOP  <||@
  Comment 783 534 NOP  <||@
  Comment 784 536 NOP  <||@
  Comment 785 538 NOP  <||@
  Comment 786 540 NOP  <||@
  Comment 787 542 NOP  <||@
  Comment 788 544 NOP  <||@
  Comment 789 546 NOP  <||@
  Comment 790 548 NOP  <||@
  Comment 791 550 NOP  <||@
  Comment 792 552 NOP  <||@
  Comment 793 554 rdi|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 800 556 rax|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 800 [rdx:0, rbx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 800 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 807 558 rbp|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 817 560 rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rbp|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0  <||@
  Comment 822 562 AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B24 -> B25, B24 -> B30] defaultTarget: B24 -> B51 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 822 {DataSection[0x18]}  <||@
  Comment 835 {DataSection[0x10]}  <||@
  Comment 853 block B25 null  <||@
  Comment 853 564 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 853 566 NOP  <||@
  Comment 854 568 NOP  <||@
  Comment 855 570 NOP  <||@
  Comment 856 572 NOP  <||@
  Comment 857 574 CMPBRANCH (x: r11|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD  <||@
  Comment 871 block B27 null  <||@
  Comment 871 602 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 871 604 NOP  <||@
  Comment 872 606 NOP  <||@
  Comment 873 608 NOP  <||@
  Comment 874 610 NOP  <||@
  Comment 875 612 CMPBRANCH (x: r11|DWORD, y: [rdi|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD  <||@
  Comment 889 block B29 null  <||@
  Comment 889 640 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 889 642 NOP  <||@
  Comment 890 644 NOP  <||@
  Comment 891 646 NOP  <||@
  Comment 892 648 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 898 650 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 903 652 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 907 654 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 912 656 JUMP ~outgoingValues: [] destination: B29 -> B45  <||@
  Comment 917 block B30 null  <||@
  Comment 917 658 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 917 660 NOP  <||@
  Comment 918 662 NOP  <||@
  Comment 919 664 NOP  <||@
  Comment 920 666 NOP  <||@
  Comment 921 668 NOP  <||@
  Comment 922 670 NOP  <||@
  Comment 923 672 NOP  <||@
  Comment 924 674 NOP  <||@
  Comment 925 676 NOP  <||@
  Comment 926 678 NOP  <||@
  Comment 927 680 NOP  <||@
  Comment 928 682 NOP  <||@
  Comment 929 684 NOP  <||@
  Comment 930 686 NOP  <||@
  Comment 931 688 NOP  <||@
  Comment 932 690 rax|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 939 692 rbp|DWORD = MOV input: [rax|DWORD[_] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 939 [rax:0, rdx:0, rbx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 939 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 946 694 r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 956 696 rbp|QWORD = UNCOMPRESSPOINTER (input: rbp|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0  <||@
  Comment 961 698 AMD64HOTSPOTSTRATEGYSWITCH ~key: rbp|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B30 -> B31, B30 -> B36] defaultTarget: B30 -> B50 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 961 {DataSection[0x18]}  <||@
  Comment 974 {DataSection[0x10]}  <||@
  Comment 992 block B31 null  <||@
  Comment 992 700 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 992 702 NOP  <||@
  Comment 993 704 NOP  <||@
  Comment 994 706 NOP  <||@
  Comment 995 708 NOP  <||@
  Comment 996 710 CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD  <||@
  Comment 1010 block B33 null  <||@
  Comment 1010 738 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1010 740 NOP  <||@
  Comment 1011 742 NOP  <||@
  Comment 1012 744 NOP  <||@
  Comment 1013 746 NOP  <||@
  Comment 1014 748 CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD  <||@
  Comment 1028 block B35 null  <||@
  Comment 1028 776 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1028 778 NOP  <||@
  Comment 1029 780 NOP  <||@
  Comment 1030 782 NOP  <||@
  Comment 1031 784 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1037 786 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1042 788 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1046 790 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1051 792 JUMP ~outgoingValues: [] destination: B35 -> B45  <||@
  Comment 1056 block B36 null  <||@
  Comment 1056 794 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1056 796 NOP  <||@
  Comment 1057 798 NOP  <||@
  Comment 1058 800 NOP  <||@
  Comment 1059 802 NOP  <||@
  Comment 1060 804 NOP  <||@
  Comment 1061 806 NOP  <||@
  Comment 1062 808 NOP  <||@
  Comment 1063 810 NOP  <||@
  Comment 1064 812 NOP  <||@
  Comment 1065 814 NOP  <||@
  Comment 1066 816 NOP  <||@
  Comment 1067 818 NOP  <||@
  Comment 1068 820 NOP  <||@
  Comment 1069 822 NOP  <||@
  Comment 1070 824 NOP  <||@
  Comment 1071 826 rbp|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1078 828 r13|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 1078 [rax:0, rdx:0, rbx:0, rbp:0, rsi:0, rdi:0, r8:0, r9:0, r10:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 1078 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1086 830 r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 1096 832 r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 140154094223360 shift: 0  <||@
  Comment 1100 834 AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B36 -> B37, B36 -> B42] defaultTarget: B36 -> B49 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 1100 {DataSection[0x18]}  <||@
  Comment 1113 {DataSection[0x10]}  <||@
  Comment 1131 block B37 null  <||@
  Comment 1131 836 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1131 838 NOP  <||@
  Comment 1132 840 NOP  <||@
  Comment 1133 842 NOP  <||@
  Comment 1134 844 NOP  <||@
  Comment 1135 846 CMPBRANCH (x: r11|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD  <||@
  Comment 1149 block B39 null  <||@
  Comment 1149 874 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1149 876 NOP  <||@
  Comment 1150 878 NOP  <||@
  Comment 1151 880 NOP  <||@
  Comment 1152 882 NOP  <||@
  Comment 1153 884 CMPBRANCH (x: r11|DWORD, y: [rbp|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD  <||@
  Comment 1167 block B41 null  <||@
  Comment 1167 912 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1167 914 NOP  <||@
  Comment 1168 916 NOP  <||@
  Comment 1169 918 NOP  <||@
  Comment 1170 920 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1176 922 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1181 924 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1185 926 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1190 928 JUMP ~outgoingValues: [] destination: B41 -> B45  <||@
  Comment 1195 block B42 null  <||@
  Comment 1195 930 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1195 932 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1200 934 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1204 936 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1209 938 stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1214 940 NOP  <||@
  Comment 1215 942 NOP  <||@
  Comment 1216 944 NOP  <||@
  Comment 1217 946 NOP  <||@
  Comment 1218 948 NOP  <||@
  Comment 1219 950 NOP  <||@
  Comment 1220 952 NOP  <||@
  Comment 1221 954 NOP  <||@
  Comment 1222 956 NOP  <||@
  Comment 1223 958 NOP  <||@
  Comment 1224 960 NOP  <||@
  Comment 1225 962 NOP  <||@
  Comment 1226 964 NOP  <||@
  Comment 1227 966 NOP  <||@
  Comment 1228 968 NOP  <||@
  Comment 1229 970 NOP  <||@
  Comment 1230 972 NOP  <||@
  Comment 1231 974 NOP  <||@
  Comment 1232 976 NOP  <||@
  Comment 1233 978 NOP  <||@
  Comment 1234 980 NOP  <||@
  Comment 1235 982 NOP  <||@
  Comment 1236 984 NOP  <||@
  Comment 1237 986 NOP  <||@
  Comment 1238 988 NOP  <||@
  Comment 1239 990 NOP  <||@
  Comment 1240 992 NOP  <||@
  Comment 1241 994 NOP  <||@
  Comment 1242 996 NOP  <||@
  Comment 1243 998 NOP  <||@
  Comment 1244 1000 NOP  <||@
  Comment 1245 1002 NOP  <||@
  Comment 1246 1004 NOP  <||@
  Comment 1247 1006 r13|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1255 1008 NULLCHECK address: [r13|DWORD[_] * 8] state [bci:0]  <||@
  Comment 1255 [rax:0, rbx:0, rbp:0, rdi:0, r9:0, r10:0, r13:0, stack:56, stack:64, stack:72]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3                 
     locals:  |stack:56|QWORD[.]  |stack:48|QWORD[.]  |stack:28|DWORD  |stack:40|QWORD[.]   <||@
  Comment 1255 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1263 1010 rbp|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1270 1012 rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1277 1014 rdi|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1284 1016 rbx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1291 1018 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1299 1020 r9|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1307 1022 r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3  <||@
  Comment 1311 1024 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3  <||@
  Comment 1315 1026 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3  <||@
  Comment 1319 1028 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3  <||@
  Comment 1323 1030 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3  <||@
  Comment 1327 1032 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3  <||@
  Comment 1331 1034 rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5ea98148 encoding: base: 0 shift: 3  <||@
  Comment 1335 1036 rsi|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1338 1038 rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1341 1040 stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1346 1042 stack:64|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1351 1044 stack:72|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1356 1046 stack:80|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1361 1048 stack:88|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1366 1050 stack:96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1371 1052 stack:104|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1376 1054 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19]  <||@
  Comment 1377 INVOKEINTERFACE  <||@
  Comment 1387 {HotSpotMethod<Pattern$CharPredicate.is(int)>}  <||@
  Comment 1392 [stack:8, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56, stack:64, stack:72]at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1                   |2              
     locals:  |-  |stack:104|QWORD[.]  |stack:32|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1                  |2              
     locals:  |-  |stack:96|QWORD[.]  |stack:32|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1                  |2              
     locals:  |-  |stack:88|QWORD[.]  |stack:32|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1                  |2              
     locals:  |-  |stack:80|QWORD[.]  |stack:32|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1                  |2              
     locals:  |-  |stack:72|QWORD[.]  |stack:32|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1                  |2              
     locals:  |-  |stack:64|QWORD[.]  |stack:32|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                 
     locals:  |stack:56|QWORD[.]  |stack:48|QWORD[.]  |stack:28|DWORD  |stack:40|QWORD[.]   <||@
  Comment 1400 1056 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD  <||@
  Comment 1408 block B44 null  <||@
  Comment 1408 1096 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1408 1098 NOP  <||@
  Comment 1409 1100 NOP  <||@
  Comment 1410 1102 NOP  <||@
  Comment 1411 1104 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1417 1106 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1422 1108 JUMP ~outgoingValues: [] destination: B44 -> B45  <||@
  Comment 1427 block B51 null  <||@
  Comment 1427 1292 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1427 1294 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1432 1296 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1436 1298 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1441 1300 NOP  <||@
  Comment 1442 1302 NOP  <||@
  Comment 1443 1304 NOP  <||@
  Comment 1444 1306 r11|QWORD = MOVE input: long[4500|0x1194]  <||@
  Comment 1451 1308 r10|DWORD = MOVE input: int[-34867|0xffffffffffff77cd]  <||@
  Comment 1457 1316 JUMP ~outgoingValues: [] destination: B51 -> B59  <||@
  Comment 1457 block B59 null  <||@
  Comment 1457 1500 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1457 1492 r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1462 1496 rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1467 1502 NOP  <||@
  Comment 1468 1504 NOP  <||@
  Comment 1469 1506 NOP  <||@
  Comment 1470 1508 NOP  <||@
  Comment 1471 1510 NOP  <||@
  Comment 1472 1512 NOP  <||@
  Comment 1473 1514 NOP  <||@
  Comment 1474 1516 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1481 1518 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 1488 1520 DEOPT info [bci:0]  <||@
  Comment 1488 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1493 [rdx:0, rsi:0, r8:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 1501 block B28 null  <||@
  Comment 1501 614 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1501 616 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1506 618 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1510 620 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1515 622 NOP  <||@
  Comment 1516 624 NOP  <||@
  Comment 1517 626 NOP  <||@
  Comment 1518 628 r11|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 1525 630 r10|DWORD = MOVE input: int[-123923|0xfffffffffffe1bed]  <||@
  Comment 1531 638 JUMP ~outgoingValues: [] destination: B28 -> B59  <||@
  Comment 1533 block B34 null  <||@
  Comment 1533 750 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1533 752 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1538 754 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1542 756 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1547 758 NOP  <||@
  Comment 1548 760 NOP  <||@
  Comment 1549 762 NOP  <||@
  Comment 1550 764 r11|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 1557 766 r10|DWORD = MOVE input: int[-125971|0xfffffffffffe13ed]  <||@
  Comment 1563 774 JUMP ~outgoingValues: [] destination: B34 -> B59  <||@
  Comment 1565 block B40 null  <||@
  Comment 1565 886 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1565 888 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1570 890 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1574 892 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1579 894 NOP  <||@
  Comment 1580 896 NOP  <||@
  Comment 1581 898 NOP  <||@
  Comment 1582 900 r11|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 1589 902 r10|DWORD = MOVE input: int[-128019|0xfffffffffffe0bed]  <||@
  Comment 1595 910 JUMP ~outgoingValues: [] destination: B40 -> B59  <||@
  Comment 1600 block B43 null  <||@
  Comment 1600 1058 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1600 1060 rbp|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1605 1062 rax|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1610 1064 rdi|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1615 1066 rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1620 1068 r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1625 1070 r9|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1630 1072 r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1635 1074 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1640 1076 NOP  <||@
  Comment 1641 1078 NOP  <||@
  Comment 1642 1080 NOP  <||@
  Comment 1643 1082 NOP  <||@
  Comment 1644 1084 NOP  <||@
  Comment 1645 1086 NOP  <||@
  Comment 1646 1088 NOP  <||@
  Comment 1647 1090 MOV x: [r15|QWORD + 1156] y: -129043 size: DWORD  <||@
  Comment 1658 1092 MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD  <||@
  Comment 1669 1094 DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19]  <||@
  Comment 1669 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1674 [rax:0, rbx:0, rbp:0, rsi:0, rdi:0, r9:0, r10:0, stack:64, stack:72]at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7, duringCall: false, rethrow: false]
              |0           |1             |2         
     locals:  |-           |rbp|QWORD[.]  |r11|DWORD 
     stack:   |int[0|0x0]  |              |          
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1             |2         
     locals:  |-  |rax|QWORD[.]  |r11|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1             |2         
     locals:  |-  |rdi|QWORD[.]  |r11|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1             |2         
     locals:  |-  |rbx|QWORD[.]  |r11|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1             |2         
     locals:  |-  |r10|QWORD[.]  |r11|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1            |2         
     locals:  |-  |r9|QWORD[.]  |r11|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19, duringCall: true, rethrow: false]
              |0             |1                  |2               |3                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]  |stack:28|DWORD  |stack:40|QWORD[.]   <||@
  Comment 1682 block B38 null  <||@
  Comment 1682 848 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1682 850 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1687 852 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1691 854 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1696 856 NOP  <||@
  Comment 1697 858 NOP  <||@
  Comment 1698 860 NOP  <||@
  Comment 1699 862 r11|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 1706 864 r10|DWORD = MOVE input: int[-126995|0xfffffffffffe0fed]  <||@
  Comment 1712 872 JUMP ~outgoingValues: [] destination: B38 -> B59  <||@
  Comment 1717 block B49 null  <||@
  Comment 1717 1240 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1717 1242 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1722 1244 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1726 1246 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1731 1248 NOP  <||@
  Comment 1732 1250 NOP  <||@
  Comment 1733 1252 NOP  <||@
  Comment 1734 1254 r11|QWORD = MOVE input: long[4500|0x1194]  <||@
  Comment 1741 1256 r10|DWORD = MOVE input: int[-44595|0xffffffffffff51cd]  <||@
  Comment 1747 1264 JUMP ~outgoingValues: [] destination: B49 -> B59  <||@
  Comment 1752 block B14 null  <||@
  Comment 1752 304 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1752 306 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1757 308 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1761 310 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1766 312 NOP  <||@
  Comment 1767 314 NOP  <||@
  Comment 1768 316 NOP  <||@
  Comment 1769 318 r11|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 1776 320 r10|DWORD = MOVE input: int[-118803|0xfffffffffffe2fed]  <||@
  Comment 1782 328 JUMP ~outgoingValues: [] destination: B14 -> B59  <||@
  Comment 1787 block B32 null  <||@
  Comment 1787 712 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1787 714 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1792 716 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1796 718 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1801 720 NOP  <||@
  Comment 1802 722 NOP  <||@
  Comment 1803 724 NOP  <||@
  Comment 1804 726 r11|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 1811 728 r10|DWORD = MOVE input: int[-124947|0xfffffffffffe17ed]  <||@
  Comment 1817 736 JUMP ~outgoingValues: [] destination: B32 -> B59  <||@
  Comment 1822 block B50 null  <||@
  Comment 1822 1266 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1822 1268 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1827 1270 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1831 1272 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1836 1274 NOP  <||@
  Comment 1837 1276 NOP  <||@
  Comment 1838 1278 NOP  <||@
  Comment 1839 1280 r11|QWORD = MOVE input: long[4500|0x1194]  <||@
  Comment 1846 1282 r10|DWORD = MOVE input: int[-39731|0xffffffffffff64cd]  <||@
  Comment 1852 1290 JUMP ~outgoingValues: [] destination: B50 -> B59  <||@
  Comment 1857 block B58 null  <||@
  Comment 1857 1474 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1857 1476 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1862 1478 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1866 1480 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1871 1482 NOP  <||@
  Comment 1872 1484 NOP  <||@
  Comment 1873 1486 NOP  <||@
  Comment 1874 1488 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 1881 1490 r10|DWORD = MOVE input: int[-58163|0xffffffffffff1ccd]  <||@
  Comment 1887 1498 JUMP ~outgoingValues: [] destination: B58 -> B59  <||@
  Comment 1892 block B22 null  <||@
  Comment 1892 478 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1892 480 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1897 482 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1901 484 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1906 486 NOP  <||@
  Comment 1907 488 NOP  <||@
  Comment 1908 490 NOP  <||@
  Comment 1909 492 r11|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 1916 494 r10|DWORD = MOVE input: int[-121875|0xfffffffffffe23ed]  <||@
  Comment 1922 502 JUMP ~outgoingValues: [] destination: B22 -> B59  <||@
  Comment 1927 block B26 null  <||@
  Comment 1927 576 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1927 578 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1932 580 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1936 582 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1941 584 NOP  <||@
  Comment 1942 586 NOP  <||@
  Comment 1943 588 NOP  <||@
  Comment 1944 590 r11|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 1951 592 r10|DWORD = MOVE input: int[-122899|0xfffffffffffe1fed]  <||@
  Comment 1957 600 JUMP ~outgoingValues: [] destination: B26 -> B59  <||@
  Comment 1962 block B20 null  <||@
  Comment 1962 440 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1962 442 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1967 444 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1971 446 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1976 448 NOP  <||@
  Comment 1977 450 NOP  <||@
  Comment 1978 452 NOP  <||@
  Comment 1979 454 r11|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 1986 456 r10|DWORD = MOVE input: int[-120851|0xfffffffffffe27ed]  <||@
  Comment 1992 464 JUMP ~outgoingValues: [] destination: B20 -> B59  <||@
  Comment 1997 block B52 null  <||@
  Comment 1997 1318 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1997 1320 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2002 1322 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 2006 1324 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2011 1326 NOP  <||@
  Comment 2012 1328 NOP  <||@
  Comment 2013 1330 NOP  <||@
  Comment 2014 1332 r11|QWORD = MOVE input: long[4500|0x1194]  <||@
  Comment 2021 1334 r10|DWORD = MOVE input: int[-30003|0xffffffffffff8acd]  <||@
  Comment 2027 1342 JUMP ~outgoingValues: [] destination: B52 -> B59  <||@
  Comment 2032 block B55 null  <||@
  Comment 2032 1396 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2032 1398 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2037 1400 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 2041 1402 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2046 1404 NOP  <||@
  Comment 2047 1406 NOP  <||@
  Comment 2048 1408 NOP  <||@
  Comment 2049 1410 r11|QWORD = MOVE input: long[1940|0x794]  <||@
  Comment 2056 1412 r10|DWORD = MOVE input: int[-117779|0xfffffffffffe33ed]  <||@
  Comment 2062 1420 JUMP ~outgoingValues: [] destination: B55 -> B59  <||@
  Comment 2067 block B54 null  <||@
  Comment 2067 1370 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2067 1372 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2072 1374 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 2076 1376 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2081 1378 NOP  <||@
  Comment 2082 1380 NOP  <||@
  Comment 2083 1382 NOP  <||@
  Comment 2084 1384 r11|QWORD = MOVE input: long[2580|0xa14]  <||@
  Comment 2091 1386 r10|DWORD = MOVE input: int[-18483|0xffffffffffffb7cd]  <||@
  Comment 2097 1394 JUMP ~outgoingValues: [] destination: B54 -> B59  <||@
  Comment 2102 block B53 null  <||@
  Comment 2102 1344 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2102 1346 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2107 1348 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 2111 1350 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2116 1352 NOP  <||@
  Comment 2117 1354 NOP  <||@
  Comment 2118 1356 NOP  <||@
  Comment 2119 1358 r11|QWORD = MOVE input: long[4500|0x1194]  <||@
  Comment 2126 1360 r10|DWORD = MOVE input: int[-25139|0xffffffffffff9dcd]  <||@
  Comment 2132 1368 JUMP ~outgoingValues: [] destination: B53 -> B59  <||@
  Comment 2137 block B56 null  <||@
  Comment 2137 1422 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2137 1424 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2142 1426 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 2146 1428 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2151 1430 NOP  <||@
  Comment 2152 1432 NOP  <||@
  Comment 2153 1434 NOP  <||@
  Comment 2154 1436 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 2161 1438 r10|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed]  <||@
  Comment 2167 1446 JUMP ~outgoingValues: [] destination: B56 -> B59  <||@
  Comment 2172 block B57 null  <||@
  Comment 2172 1448 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2172 1450 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2177 1452 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 2181 1454 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2186 1456 NOP  <||@
  Comment 2187 1458 NOP  <||@
  Comment 2188 1460 NOP  <||@
  Comment 2189 1462 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2196 1464 r10|DWORD = MOVE input: int[-61724|0xffffffffffff0ee4]  <||@
  Comment 2202 1472 JUMP ~outgoingValues: [] destination: B57 -> B59  <||@
  Comment 2207 block B11 null  <||@
  Comment 2207 224 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2207 226 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2212 228 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 2216 230 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2221 232 NOP  <||@
  Comment 2222 234 NOP  <||@
  Comment 2223 236 NOP  <||@
  Comment 2224 238 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2231 240 r10|DWORD = MOVE input: int[-67611|0xfffffffffffef7e5]  <||@
  Comment 2237 248 JUMP ~outgoingValues: [] destination: B11 -> B59  <||@
  Comment 2242 block B16 null  <||@
  Comment 2242 342 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2242 344 stack:40|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2247 346 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 2251 348 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2256 350 NOP  <||@
  Comment 2257 352 NOP  <||@
  Comment 2258 354 NOP  <||@
  Comment 2259 356 r11|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 2266 358 r10|DWORD = MOVE input: int[-119827|0xfffffffffffe2bed]  <||@
  Comment 2272 366 JUMP ~outgoingValues: [] destination: B16 -> B59  <||@
  Comment 2277 block B46 null  <||@
  Comment 2277 1186 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2277 1188 NOP  <||@
  Comment 2278 1190 NOP  <||@
  Comment 2279 1192 NOP  <||@
  Comment 2280 1194 NOP  <||@
  Comment 2281 1196 NOP  <||@
  Comment 2282 1198 NOP  <||@
  Comment 2283 1200 NOP  <||@
  Comment 2284 1202 MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD  <||@
  Comment 2295 1204 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 2306 1206 DEOPT info [bci:39]  <||@
  Comment 2306 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2311 []at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39, duringCall: false, rethrow: false]
              |0           |1  |2  |3 
     locals:  |-           |-  |-  |- 
     stack:   |int[0|0x0]  |   |   |    <||@
  Comment 2324 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 2349 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 2377 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2382 [rdx:0, rsi:0, r8:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 2412 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2417 [rdx:0, rsi:0, r8:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 2447 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2452 [rdx:0, rsi:0, r8:0, r11:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 2482 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2487 [rdx:0, rsi:0, r8:0, r9:0, r11:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 2517 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2522 [rdx:0, rsi:0, stack:64, stack:72]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24, duringCall: false, rethrow: false]
              |0             |1                  |2               |3                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]  |stack:28|DWORD  |stack:40|QWORD[.] 
     stack:   |r10|DWORD     |                   |                |                    <||@
  Comment 2552 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2557 [rdx:0, rsi:0, r8:0, r9:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 2587 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2592 [rdx:0, rsi:0, r8:0, r9:0, r10:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 2622 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2627 [rdx:0, rbx:0, rsi:0, r8:0, r9:0, r10:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 2657 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2662 [rdx:0, rbx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 2692 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2697 [rax:0, rdx:0, rbx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 2727 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2732 [rax:0, rdx:0, rbx:0, rbp:0, rsi:0, rdi:0, r8:0, r9:0, r10:0]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 2740 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2740 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2746 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 2746 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
